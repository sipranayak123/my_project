{"ast":null,"code":"/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { animate, state, style, transition, trigger } from '@angular/animations';\nimport { FocusMonitor, FocusTrapFactory } from '@angular/cdk/a11y';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { coerceBooleanProperty, coerceNumberProperty } from '@angular/cdk/coercion';\nimport { ESCAPE } from '@angular/cdk/keycodes';\nimport { Platform, PlatformModule } from '@angular/cdk/platform';\nimport { CdkScrollable, ScrollDispatcher, ViewportRuler, ScrollingModule } from '@angular/cdk/scrolling';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport { ChangeDetectionStrategy, ChangeDetectorRef, Component, ContentChild, ContentChildren, ElementRef, EventEmitter, forwardRef, Inject, InjectionToken, Input, NgZone, Optional, Output, ViewChild, ViewEncapsulation, NgModule } from '@angular/core';\nimport { fromEvent, merge, Subject } from 'rxjs';\nimport { debounceTime, filter, map, startWith, take, takeUntil, distinctUntilChanged } from 'rxjs/operators';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\nimport { MatCommonModule } from '@angular/material/core';\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Animations used by the Material drawers.\n * \\@docs-private\n * @type {?}\n */\n\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/scrolling';\nimport * as ɵngcc2 from '@angular/cdk/a11y';\nimport * as ɵngcc3 from '@angular/cdk/platform';\nimport * as ɵngcc4 from '@angular/cdk/bidi';\nimport * as ɵngcc5 from '@angular/common';\nconst _c0 = [\"*\"];\n\nfunction MatDrawerContainer_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"div\", 2);\n    ɵngcc0.ɵɵlistener(\"click\", function MatDrawerContainer_div_0_Template_div_click_0_listener() {\n      ɵngcc0.ɵɵrestoreView(_r3);\n      const ctx_r2 = ɵngcc0.ɵɵnextContext();\n      return ɵngcc0.ɵɵresetView(ctx_r2._onBackdropClicked());\n    });\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵclassProp(\"mat-drawer-shown\", ctx_r0._isShowingBackdrop());\n  }\n}\n\nfunction MatDrawerContainer_mat_drawer_content_3_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"mat-drawer-content\");\n    ɵngcc0.ɵɵprojection(1, 2);\n    ɵngcc0.ɵɵelementEnd();\n  }\n}\n\nconst _c1 = [[[\"mat-drawer\"]], [[\"mat-drawer-content\"]], \"*\"];\nconst _c2 = [\"mat-drawer\", \"mat-drawer-content\", \"*\"];\n\nfunction MatSidenavContainer_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"div\", 2);\n    ɵngcc0.ɵɵlistener(\"click\", function MatSidenavContainer_div_0_Template_div_click_0_listener() {\n      ɵngcc0.ɵɵrestoreView(_r3);\n      const ctx_r2 = ɵngcc0.ɵɵnextContext();\n      return ɵngcc0.ɵɵresetView(ctx_r2._onBackdropClicked());\n    });\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵclassProp(\"mat-drawer-shown\", ctx_r0._isShowingBackdrop());\n  }\n}\n\nfunction MatSidenavContainer_mat_sidenav_content_3_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"mat-sidenav-content\", 3);\n    ɵngcc0.ɵɵprojection(1, 2);\n    ɵngcc0.ɵɵelementEnd();\n  }\n}\n\nconst _c3 = [[[\"mat-sidenav\"]], [[\"mat-sidenav-content\"]], \"*\"];\nconst _c4 = [\"mat-sidenav\", \"mat-sidenav-content\", \"*\"];\nconst _c5 = \".mat-drawer-container{position:relative;z-index:1;box-sizing:border-box;-webkit-overflow-scrolling:touch;display:block;overflow:hidden}.mat-drawer-container[fullscreen]{top:0;left:0;right:0;bottom:0;position:absolute}.mat-drawer-container[fullscreen].mat-drawer-opened{overflow:hidden}.mat-drawer-container.mat-drawer-container-explicit-backdrop .mat-drawer-side{z-index:3}.mat-drawer-container.ng-animate-disabled .mat-drawer-backdrop,.mat-drawer-container.ng-animate-disabled .mat-drawer-content,.ng-animate-disabled .mat-drawer-container .mat-drawer-backdrop,.ng-animate-disabled .mat-drawer-container .mat-drawer-content{transition:none}.mat-drawer-backdrop{top:0;left:0;right:0;bottom:0;position:absolute;display:block;z-index:3;visibility:hidden}.mat-drawer-backdrop.mat-drawer-shown{visibility:visible}.mat-drawer-transition .mat-drawer-backdrop{transition-duration:.4s;transition-timing-function:cubic-bezier(.25,.8,.25,1);transition-property:background-color,visibility}@media (-ms-high-contrast:active){.mat-drawer-backdrop{opacity:.5}}.mat-drawer-content{position:relative;z-index:1;display:block;height:100%;overflow:auto}.mat-drawer-transition .mat-drawer-content{transition-duration:.4s;transition-timing-function:cubic-bezier(.25,.8,.25,1);transition-property:transform,margin-left,margin-right}.mat-drawer{position:relative;z-index:4;display:block;position:absolute;top:0;bottom:0;z-index:3;outline:0;box-sizing:border-box;overflow-y:auto;transform:translate3d(-100%,0,0)}@media (-ms-high-contrast:active){.mat-drawer,[dir=rtl] .mat-drawer.mat-drawer-end{border-right:solid 1px currentColor}}@media (-ms-high-contrast:active){.mat-drawer.mat-drawer-end,[dir=rtl] .mat-drawer{border-left:solid 1px currentColor;border-right:none}}.mat-drawer.mat-drawer-side{z-index:2}.mat-drawer.mat-drawer-end{right:0;transform:translate3d(100%,0,0)}[dir=rtl] .mat-drawer{transform:translate3d(100%,0,0)}[dir=rtl] .mat-drawer.mat-drawer-end{left:0;right:auto;transform:translate3d(-100%,0,0)}.mat-drawer-inner-container{width:100%;height:100%;overflow:auto;-webkit-overflow-scrolling:touch}.mat-sidenav-fixed{position:fixed}\";\nconst matDrawerAnimations = {\n  /**\n   * Animation that slides a drawer in and out.\n   */\n  transformDrawer: trigger('transform', [// We remove the `transform` here completely, rather than setting it to zero, because:\n  // 1. Having a transform can cause elements with ripples or an animated\n  //    transform to shift around in Chrome with an RTL layout (see #10023).\n  // 2. 3d transforms causes text to appear blurry on IE and Edge.\n  state('open, open-instant', style({\n    'transform': 'none',\n    'visibility': 'visible'\n  })), state('void', style({\n    // Avoids the shadow showing up when closed in SSR.\n    'box-shadow': 'none',\n    'visibility': 'hidden'\n  })), transition('void => open-instant', animate('0ms')), transition('void <=> open, open-instant => void', animate('400ms cubic-bezier(0.25, 0.8, 0.25, 1)'))])\n};\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Throws an exception when two MatDrawer are matching the same position.\n * \\@docs-private\n * @param {?} position\n * @return {?}\n */\n\nfunction throwMatDuplicatedDrawerError(position) {\n  throw Error(`A drawer was already declared for 'position=\"${position}\"'`);\n}\n/**\n * Configures whether drawers should use auto sizing by default.\n * @type {?}\n */\n\n\nconst MAT_DRAWER_DEFAULT_AUTOSIZE = new InjectionToken('MAT_DRAWER_DEFAULT_AUTOSIZE', {\n  providedIn: 'root',\n  factory: MAT_DRAWER_DEFAULT_AUTOSIZE_FACTORY\n});\n/**\n * \\@docs-private\n * @return {?}\n */\n\nfunction MAT_DRAWER_DEFAULT_AUTOSIZE_FACTORY() {\n  return false;\n}\n\nclass MatDrawerContent extends CdkScrollable {\n  /**\n   * @param {?} _changeDetectorRef\n   * @param {?} _container\n   * @param {?} elementRef\n   * @param {?} scrollDispatcher\n   * @param {?} ngZone\n   */\n  constructor(_changeDetectorRef, _container, elementRef, scrollDispatcher, ngZone) {\n    super(elementRef, scrollDispatcher, ngZone);\n    this._changeDetectorRef = _changeDetectorRef;\n    this._container = _container;\n  }\n  /**\n   * @return {?}\n   */\n\n\n  ngAfterContentInit() {\n    this._container._contentMarginChanges.subscribe(() => {\n      this._changeDetectorRef.markForCheck();\n    });\n  }\n\n}\n\nMatDrawerContent.ɵfac = function MatDrawerContent_Factory(t) {\n  return new (t || MatDrawerContent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(forwardRef(() => MatDrawerContainer)), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.ScrollDispatcher), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone));\n};\n\nMatDrawerContent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n  type: MatDrawerContent,\n  selectors: [[\"mat-drawer-content\"]],\n  hostAttrs: [1, \"mat-drawer-content\"],\n  hostVars: 4,\n  hostBindings: function MatDrawerContent_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      ɵngcc0.ɵɵstyleProp(\"margin-left\", ctx._container._contentMargins.left, \"px\")(\"margin-right\", ctx._container._contentMargins.right, \"px\");\n    }\n  },\n  features: [ɵngcc0.ɵɵInheritDefinitionFeature],\n  ngContentSelectors: _c0,\n  decls: 1,\n  vars: 0,\n  template: function MatDrawerContent_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵprojectionDef();\n      ɵngcc0.ɵɵprojection(0);\n    }\n  },\n  encapsulation: 2,\n  changeDetection: 0\n});\n/** @nocollapse */\n\nMatDrawerContent.ctorParameters = () => [{\n  type: ChangeDetectorRef\n}, {\n  type: MatDrawerContainer,\n  decorators: [{\n    type: Inject,\n    args: [forwardRef(() => MatDrawerContainer)]\n  }]\n}, {\n  type: ElementRef\n}, {\n  type: ScrollDispatcher\n}, {\n  type: NgZone\n}];\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatDrawerContent, [{\n    type: Component,\n    args: [{\n      selector: 'mat-drawer-content',\n      template: '<ng-content></ng-content>',\n      host: {\n        'class': 'mat-drawer-content',\n        '[style.margin-left.px]': '_container._contentMargins.left',\n        '[style.margin-right.px]': '_container._contentMargins.right'\n      },\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.ChangeDetectorRef\n    }, {\n      type: MatDrawerContainer,\n      decorators: [{\n        type: Inject,\n        args: [forwardRef(() => MatDrawerContainer)]\n      }]\n    }, {\n      type: ɵngcc0.ElementRef\n    }, {\n      type: ɵngcc1.ScrollDispatcher\n    }, {\n      type: ɵngcc0.NgZone\n    }];\n  }, null);\n})();\n/**\n * This component corresponds to a drawer that can be opened on the drawer container.\n */\n\n\nclass MatDrawer {\n  /**\n   * @param {?} _elementRef\n   * @param {?} _focusTrapFactory\n   * @param {?} _focusMonitor\n   * @param {?} _platform\n   * @param {?} _ngZone\n   * @param {?} _doc\n   */\n  constructor(_elementRef, _focusTrapFactory, _focusMonitor, _platform, _ngZone, _doc) {\n    this._elementRef = _elementRef;\n    this._focusTrapFactory = _focusTrapFactory;\n    this._focusMonitor = _focusMonitor;\n    this._platform = _platform;\n    this._ngZone = _ngZone;\n    this._doc = _doc;\n    this._elementFocusedBeforeDrawerWasOpened = null;\n    /**\n     * Whether the drawer is initialized. Used for disabling the initial animation.\n     */\n\n    this._enableAnimations = false;\n    this._position = 'start';\n    this._mode = 'over';\n    this._disableClose = false;\n    this._autoFocus = true;\n    /**\n     * Emits whenever the drawer has started animating.\n     */\n\n    this._animationStarted = new Subject();\n    /**\n     * Emits whenever the drawer is done animating.\n     */\n\n    this._animationEnd = new Subject();\n    /**\n     * Current state of the sidenav animation.\n     */\n\n    this._animationState = 'void';\n    /**\n     * Event emitted when the drawer open state is changed.\n     */\n\n    this.openedChange = // Note this has to be async in order to avoid some issues with two-bindings (see #8872).\n    new EventEmitter(\n    /* isAsync */\n    true);\n    /**\n     * Emits when the component is destroyed.\n     */\n\n    this._destroyed = new Subject();\n    /**\n     * Event emitted when the drawer's position changes.\n     */\n    // tslint:disable-next-line:no-output-on-prefix\n\n    this.onPositionChanged = new EventEmitter();\n    /**\n     * An observable that emits when the drawer mode changes. This is used by the drawer container to\n     * to know when to when the mode changes so it can adapt the margins on the content.\n     */\n\n    this._modeChanged = new Subject();\n    this._opened = false;\n    this.openedChange.subscribe(opened => {\n      if (opened) {\n        if (this._doc) {\n          this._elementFocusedBeforeDrawerWasOpened =\n          /** @type {?} */\n          this._doc.activeElement;\n        }\n\n        if (this._isFocusTrapEnabled && this._focusTrap) {\n          this._trapFocus();\n        }\n      } else {\n        this._restoreFocus();\n      }\n    });\n    /**\n     * Listen to `keydown` events outside the zone so that change detection is not run every\n     * time a key is pressed. Instead we re-enter the zone only if the `ESC` key is pressed\n     * and we don't have close disabled.\n     */\n\n    this._ngZone.runOutsideAngular(() => {\n      fromEvent(this._elementRef.nativeElement, 'keydown').pipe(filter(event => event.keyCode === ESCAPE && !this.disableClose), takeUntil(this._destroyed)).subscribe(event => this._ngZone.run(() => {\n        this.close();\n        event.stopPropagation();\n      }));\n    }); // We need a Subject with distinctUntilChanged, because the `done` event\n    // fires twice on some browsers. See https://github.com/angular/angular/issues/24084\n\n\n    this._animationEnd.pipe(distinctUntilChanged((x, y) => {\n      return x.fromState === y.fromState && x.toState === y.toState;\n    })).subscribe(event => {\n      const {\n        fromState,\n        toState\n      } = event;\n\n      if (toState.indexOf('open') === 0 && fromState === 'void' || toState === 'void' && fromState.indexOf('open') === 0) {\n        this.openedChange.emit(this._opened);\n      }\n    });\n  }\n  /**\n   * The side that the drawer is attached to.\n   * @return {?}\n   */\n\n\n  get position() {\n    return this._position;\n  }\n  /**\n   * @param {?} value\n   * @return {?}\n   */\n\n\n  set position(value) {\n    // Make sure we have a valid value.\n    value = value === 'end' ? 'end' : 'start';\n\n    if (value != this._position) {\n      this._position = value;\n      this.onPositionChanged.emit();\n    }\n  }\n  /**\n   * Mode of the drawer; one of 'over', 'push' or 'side'.\n   * @return {?}\n   */\n\n\n  get mode() {\n    return this._mode;\n  }\n  /**\n   * @param {?} value\n   * @return {?}\n   */\n\n\n  set mode(value) {\n    this._mode = value;\n\n    this._modeChanged.next();\n  }\n  /**\n   * Whether the drawer can be closed with the escape key or by clicking on the backdrop.\n   * @return {?}\n   */\n\n\n  get disableClose() {\n    return this._disableClose;\n  }\n  /**\n   * @param {?} value\n   * @return {?}\n   */\n\n\n  set disableClose(value) {\n    this._disableClose = coerceBooleanProperty(value);\n  }\n  /**\n   * Whether the drawer should focus the first focusable element automatically when opened.\n   * @return {?}\n   */\n\n\n  get autoFocus() {\n    return this._autoFocus;\n  }\n  /**\n   * @param {?} value\n   * @return {?}\n   */\n\n\n  set autoFocus(value) {\n    this._autoFocus = coerceBooleanProperty(value);\n  }\n  /**\n   * Event emitted when the drawer has been opened.\n   * @return {?}\n   */\n\n\n  get _openedStream() {\n    return this.openedChange.pipe(filter(o => o), map(() => {}));\n  }\n  /**\n   * Event emitted when the drawer has started opening.\n   * @return {?}\n   */\n\n\n  get openedStart() {\n    return this._animationStarted.pipe(filter(e => e.fromState !== e.toState && e.toState.indexOf('open') === 0), map(() => {}));\n  }\n  /**\n   * Event emitted when the drawer has been closed.\n   * @return {?}\n   */\n\n\n  get _closedStream() {\n    return this.openedChange.pipe(filter(o => !o), map(() => {}));\n  }\n  /**\n   * Event emitted when the drawer has started closing.\n   * @return {?}\n   */\n\n\n  get closedStart() {\n    return this._animationStarted.pipe(filter(e => e.fromState !== e.toState && e.toState === 'void'), map(() => {}));\n  }\n  /**\n   * @return {?}\n   */\n\n\n  get _isFocusTrapEnabled() {\n    // The focus trap is only enabled when the drawer is open in any mode other than side.\n    return this.opened && this.mode !== 'side';\n  }\n  /**\n   * Traps focus inside the drawer.\n   * @private\n   * @return {?}\n   */\n\n\n  _trapFocus() {\n    if (!this.autoFocus) {\n      return;\n    }\n\n    this._focusTrap.focusInitialElementWhenReady().then(hasMovedFocus => {\n      // If there were no focusable elements, focus the sidenav itself so the keyboard navigation\n      // still works. We need to check that `focus` is a function due to Universal.\n      if (!hasMovedFocus && typeof this._elementRef.nativeElement.focus === 'function') {\n        this._elementRef.nativeElement.focus();\n      }\n    });\n  }\n  /**\n   * If focus is currently inside the drawer, restores it to where it was before the drawer\n   * opened.\n   * @private\n   * @return {?}\n   */\n\n\n  _restoreFocus() {\n    if (!this.autoFocus) {\n      return;\n    }\n    /** @type {?} */\n\n\n    const activeEl = this._doc && this._doc.activeElement;\n\n    if (activeEl && this._elementRef.nativeElement.contains(activeEl)) {\n      if (this._elementFocusedBeforeDrawerWasOpened instanceof HTMLElement) {\n        this._focusMonitor.focusVia(this._elementFocusedBeforeDrawerWasOpened, this._openedVia);\n      } else {\n        this._elementRef.nativeElement.blur();\n      }\n    }\n\n    this._elementFocusedBeforeDrawerWasOpened = null;\n    this._openedVia = null;\n  }\n  /**\n   * @return {?}\n   */\n\n\n  ngAfterContentInit() {\n    this._focusTrap = this._focusTrapFactory.create(this._elementRef.nativeElement);\n    this._focusTrap.enabled = this._isFocusTrapEnabled;\n  }\n  /**\n   * @return {?}\n   */\n\n\n  ngAfterContentChecked() {\n    // Enable the animations after the lifecycle hooks have run, in order to avoid animating\n    // drawers that are open by default. When we're on the server, we shouldn't enable the\n    // animations, because we don't want the drawer to animate the first time the user sees\n    // the page.\n    if (this._platform.isBrowser) {\n      this._enableAnimations = true;\n    }\n  }\n  /**\n   * @return {?}\n   */\n\n\n  ngOnDestroy() {\n    if (this._focusTrap) {\n      this._focusTrap.destroy();\n    }\n\n    this._animationStarted.complete();\n\n    this._animationEnd.complete();\n\n    this._modeChanged.complete();\n\n    this._destroyed.next();\n\n    this._destroyed.complete();\n  }\n  /**\n   * Whether the drawer is opened. We overload this because we trigger an event when it\n   * starts or end.\n   * @return {?}\n   */\n\n\n  get opened() {\n    return this._opened;\n  }\n  /**\n   * @param {?} value\n   * @return {?}\n   */\n\n\n  set opened(value) {\n    this.toggle(coerceBooleanProperty(value));\n  }\n  /**\n   * Open the drawer.\n   * @param {?=} openedVia Whether the drawer was opened by a key press, mouse click or programmatically.\n   * Used for focus management after the sidenav is closed.\n   * @return {?}\n   */\n\n\n  open(openedVia) {\n    return this.toggle(true, openedVia);\n  }\n  /**\n   * Close the drawer.\n   * @return {?}\n   */\n\n\n  close() {\n    return this.toggle(false);\n  }\n  /**\n   * Toggle this drawer.\n   * @param {?=} isOpen Whether the drawer should be open.\n   * @param {?=} openedVia Whether the drawer was opened by a key press, mouse click or programmatically.\n   * Used for focus management after the sidenav is closed.\n   * @return {?}\n   */\n\n\n  toggle(isOpen = !this.opened, openedVia = 'program') {\n    this._opened = isOpen;\n\n    if (isOpen) {\n      this._animationState = this._enableAnimations ? 'open' : 'open-instant';\n      this._openedVia = openedVia;\n    } else {\n      this._animationState = 'void';\n\n      this._restoreFocus();\n    }\n\n    if (this._focusTrap) {\n      this._focusTrap.enabled = this._isFocusTrapEnabled;\n    }\n\n    return new Promise(resolve => {\n      this.openedChange.pipe(take(1)).subscribe(open => resolve(open ? 'open' : 'close'));\n    });\n  }\n  /**\n   * @return {?}\n   */\n\n\n  get _width() {\n    return this._elementRef.nativeElement ? this._elementRef.nativeElement.offsetWidth || 0 : 0;\n  }\n\n}\n\nMatDrawer.ɵfac = function MatDrawer_Factory(t) {\n  return new (t || MatDrawer)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.FocusTrapFactory), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.FocusMonitor), ɵngcc0.ɵɵdirectiveInject(ɵngcc3.Platform), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(DOCUMENT, 8));\n};\n\nMatDrawer.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n  type: MatDrawer,\n  selectors: [[\"mat-drawer\"]],\n  hostAttrs: [\"tabIndex\", \"-1\", 1, \"mat-drawer\"],\n  hostVars: 10,\n  hostBindings: function MatDrawer_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵsyntheticHostListener(\"@transform.start\", function MatDrawer_animation_transform_start_HostBindingHandler($event) {\n        return ctx._animationStarted.next($event);\n      })(\"@transform.done\", function MatDrawer_animation_transform_done_HostBindingHandler($event) {\n        return ctx._animationEnd.next($event);\n      });\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵattribute(\"align\", null);\n      ɵngcc0.ɵɵsyntheticHostProperty(\"@transform\", ctx._animationState);\n      ɵngcc0.ɵɵclassProp(\"mat-drawer-end\", ctx.position === \"end\")(\"mat-drawer-over\", ctx.mode === \"over\")(\"mat-drawer-push\", ctx.mode === \"push\")(\"mat-drawer-side\", ctx.mode === \"side\");\n    }\n  },\n  inputs: {\n    position: \"position\",\n    mode: \"mode\",\n    disableClose: \"disableClose\",\n    autoFocus: \"autoFocus\",\n    opened: \"opened\"\n  },\n  outputs: {\n    openedChange: \"openedChange\",\n    onPositionChanged: \"positionChanged\",\n    _openedStream: \"opened\",\n    openedStart: \"openedStart\",\n    _closedStream: \"closed\",\n    closedStart: \"closedStart\"\n  },\n  exportAs: [\"matDrawer\"],\n  ngContentSelectors: _c0,\n  decls: 2,\n  vars: 0,\n  consts: [[1, \"mat-drawer-inner-container\"]],\n  template: function MatDrawer_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵprojectionDef();\n      ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n      ɵngcc0.ɵɵprojection(1);\n      ɵngcc0.ɵɵelementEnd();\n    }\n  },\n  encapsulation: 2,\n  data: {\n    animation: [matDrawerAnimations.transformDrawer]\n  },\n  changeDetection: 0\n});\n/** @nocollapse */\n\nMatDrawer.ctorParameters = () => [{\n  type: ElementRef\n}, {\n  type: FocusTrapFactory\n}, {\n  type: FocusMonitor\n}, {\n  type: Platform\n}, {\n  type: NgZone\n}, {\n  type: undefined,\n  decorators: [{\n    type: Optional\n  }, {\n    type: Inject,\n    args: [DOCUMENT]\n  }]\n}];\n\nMatDrawer.propDecorators = {\n  position: [{\n    type: Input\n  }],\n  mode: [{\n    type: Input\n  }],\n  disableClose: [{\n    type: Input\n  }],\n  autoFocus: [{\n    type: Input\n  }],\n  openedChange: [{\n    type: Output\n  }],\n  _openedStream: [{\n    type: Output,\n    args: ['opened']\n  }],\n  openedStart: [{\n    type: Output\n  }],\n  _closedStream: [{\n    type: Output,\n    args: ['closed']\n  }],\n  closedStart: [{\n    type: Output\n  }],\n  onPositionChanged: [{\n    type: Output,\n    args: ['positionChanged']\n  }],\n  opened: [{\n    type: Input\n  }]\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatDrawer, [{\n    type: Component,\n    args: [{\n      selector: 'mat-drawer',\n      exportAs: 'matDrawer',\n      template: \"<div class=\\\"mat-drawer-inner-container\\\"><ng-content></ng-content></div>\",\n      animations: [matDrawerAnimations.transformDrawer],\n      host: {\n        'class': 'mat-drawer',\n        '[@transform]': '_animationState',\n        '(@transform.start)': '_animationStarted.next($event)',\n        '(@transform.done)': '_animationEnd.next($event)',\n        // must prevent the browser from aligning text based on value\n        '[attr.align]': 'null',\n        '[class.mat-drawer-end]': 'position === \"end\"',\n        '[class.mat-drawer-over]': 'mode === \"over\"',\n        '[class.mat-drawer-push]': 'mode === \"push\"',\n        '[class.mat-drawer-side]': 'mode === \"side\"',\n        'tabIndex': '-1'\n      },\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.ElementRef\n    }, {\n      type: ɵngcc2.FocusTrapFactory\n    }, {\n      type: ɵngcc2.FocusMonitor\n    }, {\n      type: ɵngcc3.Platform\n    }, {\n      type: ɵngcc0.NgZone\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [DOCUMENT]\n      }]\n    }];\n  }, {\n    openedChange: [{\n      type: Output\n    }],\n    onPositionChanged: [{\n      type: Output,\n      args: ['positionChanged']\n    }],\n    position: [{\n      type: Input\n    }],\n    mode: [{\n      type: Input\n    }],\n    disableClose: [{\n      type: Input\n    }],\n    autoFocus: [{\n      type: Input\n    }],\n    _openedStream: [{\n      type: Output,\n      args: ['opened']\n    }],\n    openedStart: [{\n      type: Output\n    }],\n    _closedStream: [{\n      type: Output,\n      args: ['closed']\n    }],\n    closedStart: [{\n      type: Output\n    }],\n    opened: [{\n      type: Input\n    }]\n  });\n})();\n/**\n * `<mat-drawer-container>` component.\n *\n * This is the parent component to one or two `<mat-drawer>`s that validates the state internally\n * and coordinates the backdrop and content styling.\n */\n\n\nclass MatDrawerContainer {\n  /**\n   * @param {?} _dir\n   * @param {?} _element\n   * @param {?} _ngZone\n   * @param {?} _changeDetectorRef\n   * @param {?=} defaultAutosize\n   * @param {?=} _animationMode\n   * @param {?=} viewportRuler\n   */\n  constructor(_dir, _element, _ngZone, _changeDetectorRef, defaultAutosize = false, _animationMode,\n  /**\n   * @deprecated viewportRuler to become a required parameter.\n   * @breaking-change 8.0.0\n   */\n  viewportRuler) {\n    this._dir = _dir;\n    this._element = _element;\n    this._ngZone = _ngZone;\n    this._changeDetectorRef = _changeDetectorRef;\n    this._animationMode = _animationMode;\n    /**\n     * Event emitted when the drawer backdrop is clicked.\n     */\n\n    this.backdropClick = new EventEmitter();\n    /**\n     * Emits when the component is destroyed.\n     */\n\n    this._destroyed = new Subject();\n    /**\n     * Emits on every ngDoCheck. Used for debouncing reflows.\n     */\n\n    this._doCheckSubject = new Subject();\n    /**\n     * Margins to be applied to the content. These are used to push / shrink the drawer content when a\n     * drawer is open. We use margin rather than transform even for push mode because transform breaks\n     * fixed position elements inside of the transformed element.\n     */\n\n    this._contentMargins = {\n      left: null,\n      right: null\n    };\n    this._contentMarginChanges = new Subject(); // If a `Dir` directive exists up the tree, listen direction changes\n    // and update the left/right properties to point to the proper start/end.\n\n    if (_dir) {\n      _dir.change.pipe(takeUntil(this._destroyed)).subscribe(() => {\n        this._validateDrawers();\n\n        this._updateContentMargins();\n      });\n    } // Since the minimum width of the sidenav depends on the viewport width,\n    // we need to recompute the margins if the viewport changes.\n\n\n    if (viewportRuler) {\n      viewportRuler.change().pipe(takeUntil(this._destroyed)).subscribe(() => this._updateContentMargins());\n    }\n\n    this._autosize = defaultAutosize;\n  }\n  /**\n   * The drawer child with the `start` position.\n   * @return {?}\n   */\n\n\n  get start() {\n    return this._start;\n  }\n  /**\n   * The drawer child with the `end` position.\n   * @return {?}\n   */\n\n\n  get end() {\n    return this._end;\n  }\n  /**\n   * Whether to automatically resize the container whenever\n   * the size of any of its drawers changes.\n   *\n   * **Use at your own risk!** Enabling this option can cause layout thrashing by measuring\n   * the drawers on every change detection cycle. Can be configured globally via the\n   * `MAT_DRAWER_DEFAULT_AUTOSIZE` token.\n   * @return {?}\n   */\n\n\n  get autosize() {\n    return this._autosize;\n  }\n  /**\n   * @param {?} value\n   * @return {?}\n   */\n\n\n  set autosize(value) {\n    this._autosize = coerceBooleanProperty(value);\n  }\n  /**\n   * Whether the drawer container should have a backdrop while one of the sidenavs is open.\n   * If explicitly set to `true`, the backdrop will be enabled for drawers in the `side`\n   * mode as well.\n   * @return {?}\n   */\n\n\n  get hasBackdrop() {\n    if (this._backdropOverride == null) {\n      return !this._start || this._start.mode !== 'side' || !this._end || this._end.mode !== 'side';\n    }\n\n    return this._backdropOverride;\n  }\n  /**\n   * @param {?} value\n   * @return {?}\n   */\n\n\n  set hasBackdrop(value) {\n    this._backdropOverride = value == null ? null : coerceBooleanProperty(value);\n  }\n  /**\n   * Reference to the CdkScrollable instance that wraps the scrollable content.\n   * @return {?}\n   */\n\n\n  get scrollable() {\n    return this._userContent || this._content;\n  }\n  /**\n   * @return {?}\n   */\n\n\n  ngAfterContentInit() {\n    this._drawers.changes.pipe(startWith(null)).subscribe(() => {\n      this._validateDrawers();\n\n      this._drawers.forEach(drawer => {\n        this._watchDrawerToggle(drawer);\n\n        this._watchDrawerPosition(drawer);\n\n        this._watchDrawerMode(drawer);\n      });\n\n      if (!this._drawers.length || this._isDrawerOpen(this._start) || this._isDrawerOpen(this._end)) {\n        this._updateContentMargins();\n      }\n\n      this._changeDetectorRef.markForCheck();\n    });\n\n    this._doCheckSubject.pipe(debounceTime(10), // Arbitrary debounce time, less than a frame at 60fps\n    takeUntil(this._destroyed)).subscribe(() => this._updateContentMargins());\n  }\n  /**\n   * @return {?}\n   */\n\n\n  ngOnDestroy() {\n    this._contentMarginChanges.complete();\n\n    this._doCheckSubject.complete();\n\n    this._destroyed.next();\n\n    this._destroyed.complete();\n  }\n  /**\n   * Calls `open` of both start and end drawers\n   * @return {?}\n   */\n\n\n  open() {\n    this._drawers.forEach(drawer => drawer.open());\n  }\n  /**\n   * Calls `close` of both start and end drawers\n   * @return {?}\n   */\n\n\n  close() {\n    this._drawers.forEach(drawer => drawer.close());\n  }\n  /**\n   * @return {?}\n   */\n\n\n  ngDoCheck() {\n    // If users opted into autosizing, do a check every change detection cycle.\n    if (this._autosize && this._isPushed()) {\n      // Run outside the NgZone, otherwise the debouncer will throw us into an infinite loop.\n      this._ngZone.runOutsideAngular(() => this._doCheckSubject.next());\n    }\n  }\n  /**\n   * Subscribes to drawer events in order to set a class on the main container element when the\n   * drawer is open and the backdrop is visible. This ensures any overflow on the container element\n   * is properly hidden.\n   * @private\n   * @param {?} drawer\n   * @return {?}\n   */\n\n\n  _watchDrawerToggle(drawer) {\n    drawer._animationStarted.pipe(filter(event => event.fromState !== event.toState), takeUntil(this._drawers.changes)).subscribe(event => {\n      // Set the transition class on the container so that the animations occur. This should not\n      // be set initially because animations should only be triggered via a change in state.\n      if (event.toState !== 'open-instant' && this._animationMode !== 'NoopAnimations') {\n        this._element.nativeElement.classList.add('mat-drawer-transition');\n      }\n\n      this._updateContentMargins();\n\n      this._changeDetectorRef.markForCheck();\n    });\n\n    if (drawer.mode !== 'side') {\n      drawer.openedChange.pipe(takeUntil(this._drawers.changes)).subscribe(() => this._setContainerClass(drawer.opened));\n    }\n  }\n  /**\n   * Subscribes to drawer onPositionChanged event in order to\n   * re-validate drawers when the position changes.\n   * @private\n   * @param {?} drawer\n   * @return {?}\n   */\n\n\n  _watchDrawerPosition(drawer) {\n    if (!drawer) {\n      return;\n    } // NOTE: We need to wait for the microtask queue to be empty before validating,\n    // since both drawers may be swapping positions at the same time.\n\n\n    drawer.onPositionChanged.pipe(takeUntil(this._drawers.changes)).subscribe(() => {\n      this._ngZone.onMicrotaskEmpty.asObservable().pipe(take(1)).subscribe(() => {\n        this._validateDrawers();\n      });\n    });\n  }\n  /**\n   * Subscribes to changes in drawer mode so we can run change detection.\n   * @private\n   * @param {?} drawer\n   * @return {?}\n   */\n\n\n  _watchDrawerMode(drawer) {\n    if (drawer) {\n      drawer._modeChanged.pipe(takeUntil(merge(this._drawers.changes, this._destroyed))).subscribe(() => {\n        this._updateContentMargins();\n\n        this._changeDetectorRef.markForCheck();\n      });\n    }\n  }\n  /**\n   * Toggles the 'mat-drawer-opened' class on the main 'mat-drawer-container' element.\n   * @private\n   * @param {?} isAdd\n   * @return {?}\n   */\n\n\n  _setContainerClass(isAdd) {\n    if (isAdd) {\n      this._element.nativeElement.classList.add('mat-drawer-opened');\n    } else {\n      this._element.nativeElement.classList.remove('mat-drawer-opened');\n    }\n  }\n  /**\n   * Validate the state of the drawer children components.\n   * @private\n   * @return {?}\n   */\n\n\n  _validateDrawers() {\n    this._start = this._end = null; // Ensure that we have at most one start and one end drawer.\n\n    this._drawers.forEach(drawer => {\n      if (drawer.position == 'end') {\n        if (this._end != null) {\n          throwMatDuplicatedDrawerError('end');\n        }\n\n        this._end = drawer;\n      } else {\n        if (this._start != null) {\n          throwMatDuplicatedDrawerError('start');\n        }\n\n        this._start = drawer;\n      }\n    });\n\n    this._right = this._left = null; // Detect if we're LTR or RTL.\n\n    if (this._dir && this._dir.value === 'rtl') {\n      this._left = this._end;\n      this._right = this._start;\n    } else {\n      this._left = this._start;\n      this._right = this._end;\n    }\n  }\n  /**\n   * Whether the container is being pushed to the side by one of the drawers.\n   * @private\n   * @return {?}\n   */\n\n\n  _isPushed() {\n    return this._isDrawerOpen(this._start) && this._start.mode != 'over' || this._isDrawerOpen(this._end) && this._end.mode != 'over';\n  }\n  /**\n   * @return {?}\n   */\n\n\n  _onBackdropClicked() {\n    this.backdropClick.emit();\n\n    this._closeModalDrawer();\n  }\n  /**\n   * @return {?}\n   */\n\n\n  _closeModalDrawer() {\n    // Close all open drawers where closing is not disabled and the mode is not `side`.\n    [this._start, this._end].filter(drawer => drawer && !drawer.disableClose && this._canHaveBackdrop(drawer)).forEach(drawer =>\n    /** @type {?} */\n    drawer.close());\n  }\n  /**\n   * @return {?}\n   */\n\n\n  _isShowingBackdrop() {\n    return this._isDrawerOpen(this._start) && this._canHaveBackdrop(this._start) || this._isDrawerOpen(this._end) && this._canHaveBackdrop(this._end);\n  }\n  /**\n   * @private\n   * @param {?} drawer\n   * @return {?}\n   */\n\n\n  _canHaveBackdrop(drawer) {\n    return drawer.mode !== 'side' || !!this._backdropOverride;\n  }\n  /**\n   * @private\n   * @param {?} drawer\n   * @return {?}\n   */\n\n\n  _isDrawerOpen(drawer) {\n    return drawer != null && drawer.opened;\n  }\n  /**\n   * Recalculates and updates the inline styles for the content. Note that this should be used\n   * sparingly, because it causes a reflow.\n   * @private\n   * @return {?}\n   */\n\n\n  _updateContentMargins() {\n    // 1. For drawers in `over` mode, they don't affect the content.\n    // 2. For drawers in `side` mode they should shrink the content. We do this by adding to the\n    //    left margin (for left drawer) or right margin (for right the drawer).\n    // 3. For drawers in `push` mode the should shift the content without resizing it. We do this by\n    //    adding to the left or right margin and simultaneously subtracting the same amount of\n    //    margin from the other side.\n    // 1. For drawers in `over` mode, they don't affect the content.\n    // 2. For drawers in `side` mode they should shrink the content. We do this by adding to the\n    //    left margin (for left drawer) or right margin (for right the drawer).\n    // 3. For drawers in `push` mode the should shift the content without resizing it. We do this by\n    //    adding to the left or right margin and simultaneously subtracting the same amount of\n    //    margin from the other side.\n\n    /** @type {?} */\n    let left = 0;\n    /** @type {?} */\n\n    let right = 0;\n\n    if (this._left && this._left.opened) {\n      if (this._left.mode == 'side') {\n        left += this._left._width;\n      } else if (this._left.mode == 'push') {\n        /** @type {?} */\n        let width = this._left._width;\n        left += width;\n        right -= width;\n      }\n    }\n\n    if (this._right && this._right.opened) {\n      if (this._right.mode == 'side') {\n        right += this._right._width;\n      } else if (this._right.mode == 'push') {\n        /** @type {?} */\n        let width = this._right._width;\n        right += width;\n        left -= width;\n      }\n    } // If either `right` or `left` is zero, don't set a style to the element. This\n    // allows users to specify a custom size via CSS class in SSR scenarios where the\n    // measured widths will always be zero. Note that we reset to `null` here, rather\n    // than below, in order to ensure that the types in the `if` below are consistent.\n\n\n    left = left ||\n    /** @type {?} */\n    null;\n    right = right ||\n    /** @type {?} */\n    null;\n\n    if (left !== this._contentMargins.left || right !== this._contentMargins.right) {\n      this._contentMargins = {\n        left,\n        right\n      }; // Pull back into the NgZone since in some cases we could be outside. We need to be careful\n      // to do it only when something changed, otherwise we can end up hitting the zone too often.\n\n      this._ngZone.run(() => this._contentMarginChanges.next(this._contentMargins));\n    }\n  }\n\n}\n\nMatDrawerContainer.ɵfac = function MatDrawerContainer_Factory(t) {\n  return new (t || MatDrawerContainer)(ɵngcc0.ɵɵdirectiveInject(ɵngcc4.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(MAT_DRAWER_DEFAULT_AUTOSIZE), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.ViewportRuler, 8));\n};\n\nMatDrawerContainer.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n  type: MatDrawerContainer,\n  selectors: [[\"mat-drawer-container\"]],\n  contentQueries: function MatDrawerContainer_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵcontentQuery(dirIndex, MatDrawerContent, 5);\n      ɵngcc0.ɵɵcontentQuery(dirIndex, MatDrawer, 4);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._content = _t.first);\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._drawers = _t);\n    }\n  },\n  viewQuery: function MatDrawerContainer_Query(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵviewQuery(MatDrawerContent, 5);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._userContent = _t.first);\n    }\n  },\n  hostAttrs: [1, \"mat-drawer-container\"],\n  hostVars: 2,\n  hostBindings: function MatDrawerContainer_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      ɵngcc0.ɵɵclassProp(\"mat-drawer-container-explicit-backdrop\", ctx._backdropOverride);\n    }\n  },\n  inputs: {\n    autosize: \"autosize\",\n    hasBackdrop: \"hasBackdrop\"\n  },\n  outputs: {\n    backdropClick: \"backdropClick\"\n  },\n  exportAs: [\"matDrawerContainer\"],\n  ngContentSelectors: _c2,\n  decls: 4,\n  vars: 2,\n  consts: [[\"class\", \"mat-drawer-backdrop\", 3, \"mat-drawer-shown\", \"click\", 4, \"ngIf\"], [4, \"ngIf\"], [1, \"mat-drawer-backdrop\", 3, \"click\"]],\n  template: function MatDrawerContainer_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵprojectionDef(_c1);\n      ɵngcc0.ɵɵtemplate(0, MatDrawerContainer_div_0_Template, 1, 2, \"div\", 0);\n      ɵngcc0.ɵɵprojection(1);\n      ɵngcc0.ɵɵprojection(2, 1);\n      ɵngcc0.ɵɵtemplate(3, MatDrawerContainer_mat_drawer_content_3_Template, 2, 0, \"mat-drawer-content\", 1);\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵproperty(\"ngIf\", ctx.hasBackdrop);\n      ɵngcc0.ɵɵadvance(3);\n      ɵngcc0.ɵɵproperty(\"ngIf\", !ctx._content);\n    }\n  },\n  dependencies: [ɵngcc5.NgIf, MatDrawerContent],\n  styles: [_c5],\n  encapsulation: 2,\n  changeDetection: 0\n});\n/** @nocollapse */\n\nMatDrawerContainer.ctorParameters = () => [{\n  type: Directionality,\n  decorators: [{\n    type: Optional\n  }]\n}, {\n  type: ElementRef\n}, {\n  type: NgZone\n}, {\n  type: ChangeDetectorRef\n}, {\n  type: undefined,\n  decorators: [{\n    type: Inject,\n    args: [MAT_DRAWER_DEFAULT_AUTOSIZE]\n  }]\n}, {\n  type: String,\n  decorators: [{\n    type: Optional\n  }, {\n    type: Inject,\n    args: [ANIMATION_MODULE_TYPE]\n  }]\n}, {\n  type: ViewportRuler,\n  decorators: [{\n    type: Optional\n  }]\n}];\n\nMatDrawerContainer.propDecorators = {\n  _drawers: [{\n    type: ContentChildren,\n    args: [MatDrawer]\n  }],\n  _content: [{\n    type: ContentChild,\n    args: [MatDrawerContent]\n  }],\n  _userContent: [{\n    type: ViewChild,\n    args: [MatDrawerContent]\n  }],\n  autosize: [{\n    type: Input\n  }],\n  hasBackdrop: [{\n    type: Input\n  }],\n  backdropClick: [{\n    type: Output\n  }]\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatDrawerContainer, [{\n    type: Component,\n    args: [{\n      selector: 'mat-drawer-container',\n      exportAs: 'matDrawerContainer',\n      template: \"<div class=\\\"mat-drawer-backdrop\\\" (click)=\\\"_onBackdropClicked()\\\" *ngIf=\\\"hasBackdrop\\\" [class.mat-drawer-shown]=\\\"_isShowingBackdrop()\\\"></div><ng-content select=\\\"mat-drawer\\\"></ng-content><ng-content select=\\\"mat-drawer-content\\\"></ng-content><mat-drawer-content *ngIf=\\\"!_content\\\"><ng-content></ng-content></mat-drawer-content>\",\n      host: {\n        'class': 'mat-drawer-container',\n        '[class.mat-drawer-container-explicit-backdrop]': '_backdropOverride'\n      },\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      styles: [\".mat-drawer-container{position:relative;z-index:1;box-sizing:border-box;-webkit-overflow-scrolling:touch;display:block;overflow:hidden}.mat-drawer-container[fullscreen]{top:0;left:0;right:0;bottom:0;position:absolute}.mat-drawer-container[fullscreen].mat-drawer-opened{overflow:hidden}.mat-drawer-container.mat-drawer-container-explicit-backdrop .mat-drawer-side{z-index:3}.mat-drawer-container.ng-animate-disabled .mat-drawer-backdrop,.mat-drawer-container.ng-animate-disabled .mat-drawer-content,.ng-animate-disabled .mat-drawer-container .mat-drawer-backdrop,.ng-animate-disabled .mat-drawer-container .mat-drawer-content{transition:none}.mat-drawer-backdrop{top:0;left:0;right:0;bottom:0;position:absolute;display:block;z-index:3;visibility:hidden}.mat-drawer-backdrop.mat-drawer-shown{visibility:visible}.mat-drawer-transition .mat-drawer-backdrop{transition-duration:.4s;transition-timing-function:cubic-bezier(.25,.8,.25,1);transition-property:background-color,visibility}@media (-ms-high-contrast:active){.mat-drawer-backdrop{opacity:.5}}.mat-drawer-content{position:relative;z-index:1;display:block;height:100%;overflow:auto}.mat-drawer-transition .mat-drawer-content{transition-duration:.4s;transition-timing-function:cubic-bezier(.25,.8,.25,1);transition-property:transform,margin-left,margin-right}.mat-drawer{position:relative;z-index:4;display:block;position:absolute;top:0;bottom:0;z-index:3;outline:0;box-sizing:border-box;overflow-y:auto;transform:translate3d(-100%,0,0)}@media (-ms-high-contrast:active){.mat-drawer,[dir=rtl] .mat-drawer.mat-drawer-end{border-right:solid 1px currentColor}}@media (-ms-high-contrast:active){.mat-drawer.mat-drawer-end,[dir=rtl] .mat-drawer{border-left:solid 1px currentColor;border-right:none}}.mat-drawer.mat-drawer-side{z-index:2}.mat-drawer.mat-drawer-end{right:0;transform:translate3d(100%,0,0)}[dir=rtl] .mat-drawer{transform:translate3d(100%,0,0)}[dir=rtl] .mat-drawer.mat-drawer-end{left:0;right:auto;transform:translate3d(-100%,0,0)}.mat-drawer-inner-container{width:100%;height:100%;overflow:auto;-webkit-overflow-scrolling:touch}.mat-sidenav-fixed{position:fixed}\"]\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc4.Directionality,\n      decorators: [{\n        type: Optional\n      }]\n    }, {\n      type: ɵngcc0.ElementRef\n    }, {\n      type: ɵngcc0.NgZone\n    }, {\n      type: ɵngcc0.ChangeDetectorRef\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [MAT_DRAWER_DEFAULT_AUTOSIZE]\n      }]\n    }, {\n      type: String,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [ANIMATION_MODULE_TYPE]\n      }]\n    }, {\n      type: ɵngcc1.ViewportRuler,\n      decorators: [{\n        type: Optional\n      }]\n    }];\n  }, {\n    backdropClick: [{\n      type: Output\n    }],\n    autosize: [{\n      type: Input\n    }],\n    hasBackdrop: [{\n      type: Input\n    }],\n    _drawers: [{\n      type: ContentChildren,\n      args: [MatDrawer]\n    }],\n    _content: [{\n      type: ContentChild,\n      args: [MatDrawerContent]\n    }],\n    _userContent: [{\n      type: ViewChild,\n      args: [MatDrawerContent]\n    }]\n  });\n})();\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n\nclass MatSidenavContent extends MatDrawerContent {\n  /**\n   * @param {?} changeDetectorRef\n   * @param {?} container\n   * @param {?} elementRef\n   * @param {?} scrollDispatcher\n   * @param {?} ngZone\n   */\n  constructor(changeDetectorRef, container, elementRef, scrollDispatcher, ngZone) {\n    super(changeDetectorRef, container, elementRef, scrollDispatcher, ngZone);\n  }\n\n}\n\nMatSidenavContent.ɵfac = function MatSidenavContent_Factory(t) {\n  return new (t || MatSidenavContent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(forwardRef(() => MatSidenavContainer)), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.ScrollDispatcher), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone));\n};\n\nMatSidenavContent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n  type: MatSidenavContent,\n  selectors: [[\"mat-sidenav-content\"]],\n  hostAttrs: [1, \"mat-drawer-content\", \"mat-sidenav-content\"],\n  hostVars: 4,\n  hostBindings: function MatSidenavContent_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      ɵngcc0.ɵɵstyleProp(\"margin-left\", ctx._container._contentMargins.left, \"px\")(\"margin-right\", ctx._container._contentMargins.right, \"px\");\n    }\n  },\n  features: [ɵngcc0.ɵɵInheritDefinitionFeature],\n  ngContentSelectors: _c0,\n  decls: 1,\n  vars: 0,\n  template: function MatSidenavContent_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵprojectionDef();\n      ɵngcc0.ɵɵprojection(0);\n    }\n  },\n  encapsulation: 2,\n  changeDetection: 0\n});\n/** @nocollapse */\n\nMatSidenavContent.ctorParameters = () => [{\n  type: ChangeDetectorRef\n}, {\n  type: MatSidenavContainer,\n  decorators: [{\n    type: Inject,\n    args: [forwardRef(() => MatSidenavContainer)]\n  }]\n}, {\n  type: ElementRef\n}, {\n  type: ScrollDispatcher\n}, {\n  type: NgZone\n}];\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatSidenavContent, [{\n    type: Component,\n    args: [{\n      selector: 'mat-sidenav-content',\n      template: '<ng-content></ng-content>',\n      host: {\n        'class': 'mat-drawer-content mat-sidenav-content',\n        '[style.margin-left.px]': '_container._contentMargins.left',\n        '[style.margin-right.px]': '_container._contentMargins.right'\n      },\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.ChangeDetectorRef\n    }, {\n      type: MatSidenavContainer,\n      decorators: [{\n        type: Inject,\n        args: [forwardRef(() => MatSidenavContainer)]\n      }]\n    }, {\n      type: ɵngcc0.ElementRef\n    }, {\n      type: ɵngcc1.ScrollDispatcher\n    }, {\n      type: ɵngcc0.NgZone\n    }];\n  }, null);\n})();\n\nclass MatSidenav extends MatDrawer {\n  constructor() {\n    super(...arguments);\n    this._fixedInViewport = false;\n    this._fixedTopGap = 0;\n    this._fixedBottomGap = 0;\n  }\n  /**\n   * Whether the sidenav is fixed in the viewport.\n   * @return {?}\n   */\n\n\n  get fixedInViewport() {\n    return this._fixedInViewport;\n  }\n  /**\n   * @param {?} value\n   * @return {?}\n   */\n\n\n  set fixedInViewport(value) {\n    this._fixedInViewport = coerceBooleanProperty(value);\n  }\n  /**\n   * The gap between the top of the sidenav and the top of the viewport when the sidenav is in fixed\n   * mode.\n   * @return {?}\n   */\n\n\n  get fixedTopGap() {\n    return this._fixedTopGap;\n  }\n  /**\n   * @param {?} value\n   * @return {?}\n   */\n\n\n  set fixedTopGap(value) {\n    this._fixedTopGap = coerceNumberProperty(value);\n  }\n  /**\n   * The gap between the bottom of the sidenav and the bottom of the viewport when the sidenav is in\n   * fixed mode.\n   * @return {?}\n   */\n\n\n  get fixedBottomGap() {\n    return this._fixedBottomGap;\n  }\n  /**\n   * @param {?} value\n   * @return {?}\n   */\n\n\n  set fixedBottomGap(value) {\n    this._fixedBottomGap = coerceNumberProperty(value);\n  }\n\n}\n\nMatSidenav.ɵfac = /*@__PURE__*/function () {\n  let ɵMatSidenav_BaseFactory;\n  return function MatSidenav_Factory(t) {\n    return (ɵMatSidenav_BaseFactory || (ɵMatSidenav_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatSidenav)))(t || MatSidenav);\n  };\n}();\n\nMatSidenav.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n  type: MatSidenav,\n  selectors: [[\"mat-sidenav\"]],\n  hostAttrs: [\"tabIndex\", \"-1\", 1, \"mat-drawer\", \"mat-sidenav\"],\n  hostVars: 16,\n  hostBindings: function MatSidenav_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵsyntheticHostListener(\"@transform.start\", function MatSidenav_animation_transform_start_HostBindingHandler($event) {\n        return ctx._animationStarted.next($event);\n      })(\"@transform.done\", function MatSidenav_animation_transform_done_HostBindingHandler($event) {\n        return ctx._animationEnd.next($event);\n      });\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵattribute(\"align\", null);\n      ɵngcc0.ɵɵsyntheticHostProperty(\"@transform\", ctx._animationState);\n      ɵngcc0.ɵɵstyleProp(\"top\", ctx.fixedInViewport ? ctx.fixedTopGap : null, \"px\")(\"bottom\", ctx.fixedInViewport ? ctx.fixedBottomGap : null, \"px\");\n      ɵngcc0.ɵɵclassProp(\"mat-drawer-end\", ctx.position === \"end\")(\"mat-drawer-over\", ctx.mode === \"over\")(\"mat-drawer-push\", ctx.mode === \"push\")(\"mat-drawer-side\", ctx.mode === \"side\")(\"mat-sidenav-fixed\", ctx.fixedInViewport);\n    }\n  },\n  inputs: {\n    fixedInViewport: \"fixedInViewport\",\n    fixedTopGap: \"fixedTopGap\",\n    fixedBottomGap: \"fixedBottomGap\"\n  },\n  exportAs: [\"matSidenav\"],\n  features: [ɵngcc0.ɵɵInheritDefinitionFeature],\n  ngContentSelectors: _c0,\n  decls: 2,\n  vars: 0,\n  consts: [[1, \"mat-drawer-inner-container\"]],\n  template: function MatSidenav_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵprojectionDef();\n      ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n      ɵngcc0.ɵɵprojection(1);\n      ɵngcc0.ɵɵelementEnd();\n    }\n  },\n  encapsulation: 2,\n  data: {\n    animation: [matDrawerAnimations.transformDrawer]\n  },\n  changeDetection: 0\n});\nMatSidenav.propDecorators = {\n  fixedInViewport: [{\n    type: Input\n  }],\n  fixedTopGap: [{\n    type: Input\n  }],\n  fixedBottomGap: [{\n    type: Input\n  }]\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatSidenav, [{\n    type: Component,\n    args: [{\n      selector: 'mat-sidenav',\n      exportAs: 'matSidenav',\n      template: \"<div class=\\\"mat-drawer-inner-container\\\"><ng-content></ng-content></div>\",\n      animations: [matDrawerAnimations.transformDrawer],\n      host: {\n        'class': 'mat-drawer mat-sidenav',\n        'tabIndex': '-1',\n        '[@transform]': '_animationState',\n        '(@transform.start)': '_animationStarted.next($event)',\n        '(@transform.done)': '_animationEnd.next($event)',\n        // must prevent the browser from aligning text based on value\n        '[attr.align]': 'null',\n        '[class.mat-drawer-end]': 'position === \"end\"',\n        '[class.mat-drawer-over]': 'mode === \"over\"',\n        '[class.mat-drawer-push]': 'mode === \"push\"',\n        '[class.mat-drawer-side]': 'mode === \"side\"',\n        '[class.mat-sidenav-fixed]': 'fixedInViewport',\n        '[style.top.px]': 'fixedInViewport ? fixedTopGap : null',\n        '[style.bottom.px]': 'fixedInViewport ? fixedBottomGap : null'\n      },\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None\n    }]\n  }], null, {\n    fixedInViewport: [{\n      type: Input\n    }],\n    fixedTopGap: [{\n      type: Input\n    }],\n    fixedBottomGap: [{\n      type: Input\n    }]\n  });\n})();\n\nclass MatSidenavContainer extends MatDrawerContainer {}\n\nMatSidenavContainer.ɵfac = /*@__PURE__*/function () {\n  let ɵMatSidenavContainer_BaseFactory;\n  return function MatSidenavContainer_Factory(t) {\n    return (ɵMatSidenavContainer_BaseFactory || (ɵMatSidenavContainer_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatSidenavContainer)))(t || MatSidenavContainer);\n  };\n}();\n\nMatSidenavContainer.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n  type: MatSidenavContainer,\n  selectors: [[\"mat-sidenav-container\"]],\n  contentQueries: function MatSidenavContainer_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵcontentQuery(dirIndex, MatSidenavContent, 5);\n      ɵngcc0.ɵɵcontentQuery(dirIndex, MatSidenav, 4);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._content = _t.first);\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._drawers = _t);\n    }\n  },\n  hostAttrs: [1, \"mat-drawer-container\", \"mat-sidenav-container\"],\n  hostVars: 2,\n  hostBindings: function MatSidenavContainer_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      ɵngcc0.ɵɵclassProp(\"mat-drawer-container-explicit-backdrop\", ctx._backdropOverride);\n    }\n  },\n  exportAs: [\"matSidenavContainer\"],\n  features: [ɵngcc0.ɵɵInheritDefinitionFeature],\n  ngContentSelectors: _c4,\n  decls: 4,\n  vars: 2,\n  consts: [[\"class\", \"mat-drawer-backdrop\", 3, \"mat-drawer-shown\", \"click\", 4, \"ngIf\"], [\"cdkScrollable\", \"\", 4, \"ngIf\"], [1, \"mat-drawer-backdrop\", 3, \"click\"], [\"cdkScrollable\", \"\"]],\n  template: function MatSidenavContainer_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵprojectionDef(_c3);\n      ɵngcc0.ɵɵtemplate(0, MatSidenavContainer_div_0_Template, 1, 2, \"div\", 0);\n      ɵngcc0.ɵɵprojection(1);\n      ɵngcc0.ɵɵprojection(2, 1);\n      ɵngcc0.ɵɵtemplate(3, MatSidenavContainer_mat_sidenav_content_3_Template, 2, 0, \"mat-sidenav-content\", 1);\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵproperty(\"ngIf\", ctx.hasBackdrop);\n      ɵngcc0.ɵɵadvance(3);\n      ɵngcc0.ɵɵproperty(\"ngIf\", !ctx._content);\n    }\n  },\n  dependencies: [ɵngcc5.NgIf, ɵngcc1.CdkScrollable, MatSidenavContent],\n  styles: [_c5],\n  encapsulation: 2,\n  changeDetection: 0\n});\nMatSidenavContainer.propDecorators = {\n  _drawers: [{\n    type: ContentChildren,\n    args: [MatSidenav]\n  }],\n  _content: [{\n    type: ContentChild,\n    args: [MatSidenavContent]\n  }]\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatSidenavContainer, [{\n    type: Component,\n    args: [{\n      selector: 'mat-sidenav-container',\n      exportAs: 'matSidenavContainer',\n      template: \"<div class=\\\"mat-drawer-backdrop\\\" (click)=\\\"_onBackdropClicked()\\\" *ngIf=\\\"hasBackdrop\\\" [class.mat-drawer-shown]=\\\"_isShowingBackdrop()\\\"></div><ng-content select=\\\"mat-sidenav\\\"></ng-content><ng-content select=\\\"mat-sidenav-content\\\"></ng-content><mat-sidenav-content *ngIf=\\\"!_content\\\" cdkScrollable><ng-content></ng-content></mat-sidenav-content>\",\n      host: {\n        'class': 'mat-drawer-container mat-sidenav-container',\n        '[class.mat-drawer-container-explicit-backdrop]': '_backdropOverride'\n      },\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      styles: [\".mat-drawer-container{position:relative;z-index:1;box-sizing:border-box;-webkit-overflow-scrolling:touch;display:block;overflow:hidden}.mat-drawer-container[fullscreen]{top:0;left:0;right:0;bottom:0;position:absolute}.mat-drawer-container[fullscreen].mat-drawer-opened{overflow:hidden}.mat-drawer-container.mat-drawer-container-explicit-backdrop .mat-drawer-side{z-index:3}.mat-drawer-container.ng-animate-disabled .mat-drawer-backdrop,.mat-drawer-container.ng-animate-disabled .mat-drawer-content,.ng-animate-disabled .mat-drawer-container .mat-drawer-backdrop,.ng-animate-disabled .mat-drawer-container .mat-drawer-content{transition:none}.mat-drawer-backdrop{top:0;left:0;right:0;bottom:0;position:absolute;display:block;z-index:3;visibility:hidden}.mat-drawer-backdrop.mat-drawer-shown{visibility:visible}.mat-drawer-transition .mat-drawer-backdrop{transition-duration:.4s;transition-timing-function:cubic-bezier(.25,.8,.25,1);transition-property:background-color,visibility}@media (-ms-high-contrast:active){.mat-drawer-backdrop{opacity:.5}}.mat-drawer-content{position:relative;z-index:1;display:block;height:100%;overflow:auto}.mat-drawer-transition .mat-drawer-content{transition-duration:.4s;transition-timing-function:cubic-bezier(.25,.8,.25,1);transition-property:transform,margin-left,margin-right}.mat-drawer{position:relative;z-index:4;display:block;position:absolute;top:0;bottom:0;z-index:3;outline:0;box-sizing:border-box;overflow-y:auto;transform:translate3d(-100%,0,0)}@media (-ms-high-contrast:active){.mat-drawer,[dir=rtl] .mat-drawer.mat-drawer-end{border-right:solid 1px currentColor}}@media (-ms-high-contrast:active){.mat-drawer.mat-drawer-end,[dir=rtl] .mat-drawer{border-left:solid 1px currentColor;border-right:none}}.mat-drawer.mat-drawer-side{z-index:2}.mat-drawer.mat-drawer-end{right:0;transform:translate3d(100%,0,0)}[dir=rtl] .mat-drawer{transform:translate3d(100%,0,0)}[dir=rtl] .mat-drawer.mat-drawer-end{left:0;right:auto;transform:translate3d(-100%,0,0)}.mat-drawer-inner-container{width:100%;height:100%;overflow:auto;-webkit-overflow-scrolling:touch}.mat-sidenav-fixed{position:fixed}\"]\n    }]\n  }], null, {\n    _drawers: [{\n      type: ContentChildren,\n      args: [MatSidenav]\n    }],\n    _content: [{\n      type: ContentChild,\n      args: [MatSidenavContent]\n    }]\n  });\n})();\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n\nclass MatSidenavModule {}\n\nMatSidenavModule.ɵfac = function MatSidenavModule_Factory(t) {\n  return new (t || MatSidenavModule)();\n};\n\nMatSidenavModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n  type: MatSidenavModule\n});\nMatSidenavModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n  imports: [CommonModule, MatCommonModule, ScrollingModule, PlatformModule, MatCommonModule]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatSidenavModule, [{\n    type: NgModule,\n    args: [{\n      imports: [CommonModule, MatCommonModule, ScrollingModule, PlatformModule],\n      exports: [MatCommonModule, MatDrawer, MatDrawerContainer, MatDrawerContent, MatSidenav, MatSidenavContainer, MatSidenavContent],\n      declarations: [MatDrawer, MatDrawerContainer, MatDrawerContent, MatSidenav, MatSidenavContainer, MatSidenavContent]\n    }]\n  }], null, null);\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatSidenavModule, {\n    declarations: function () {\n      return [MatDrawer, MatDrawerContainer, MatDrawerContent, MatSidenav, MatSidenavContainer, MatSidenavContent];\n    },\n    imports: function () {\n      return [CommonModule, MatCommonModule, ScrollingModule, PlatformModule];\n    },\n    exports: function () {\n      return [MatCommonModule, MatDrawer, MatDrawerContainer, MatDrawerContent, MatSidenav, MatSidenavContainer, MatSidenavContent];\n    }\n  });\n})();\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n\nexport { MatSidenavModule, throwMatDuplicatedDrawerError, MAT_DRAWER_DEFAULT_AUTOSIZE_FACTORY, MAT_DRAWER_DEFAULT_AUTOSIZE, MatDrawerContent, MatDrawer, MatDrawerContainer, MatSidenavContent, MatSidenav, MatSidenavContainer, matDrawerAnimations };","map":{"version":3,"names":["animate","state","style","transition","trigger","FocusMonitor","FocusTrapFactory","Directionality","coerceBooleanProperty","coerceNumberProperty","ESCAPE","Platform","PlatformModule","CdkScrollable","ScrollDispatcher","ViewportRuler","ScrollingModule","DOCUMENT","CommonModule","ChangeDetectionStrategy","ChangeDetectorRef","Component","ContentChild","ContentChildren","ElementRef","EventEmitter","forwardRef","Inject","InjectionToken","Input","NgZone","Optional","Output","ViewChild","ViewEncapsulation","NgModule","fromEvent","merge","Subject","debounceTime","filter","map","startWith","take","takeUntil","distinctUntilChanged","ANIMATION_MODULE_TYPE","MatCommonModule","ɵngcc0","ɵngcc1","ɵngcc2","ɵngcc3","ɵngcc4","ɵngcc5","_c0","MatDrawerContainer_div_0_Template","rf","ctx","_r3","ɵɵgetCurrentView","ɵɵelementStart","ɵɵlistener","MatDrawerContainer_div_0_Template_div_click_0_listener","ɵɵrestoreView","ctx_r2","ɵɵnextContext","ɵɵresetView","_onBackdropClicked","ɵɵelementEnd","ctx_r0","ɵɵclassProp","_isShowingBackdrop","MatDrawerContainer_mat_drawer_content_3_Template","ɵɵprojection","_c1","_c2","MatSidenavContainer_div_0_Template","MatSidenavContainer_div_0_Template_div_click_0_listener","MatSidenavContainer_mat_sidenav_content_3_Template","_c3","_c4","_c5","matDrawerAnimations","transformDrawer","throwMatDuplicatedDrawerError","position","Error","MAT_DRAWER_DEFAULT_AUTOSIZE","providedIn","factory","MAT_DRAWER_DEFAULT_AUTOSIZE_FACTORY","MatDrawerContent","constructor","_changeDetectorRef","_container","elementRef","scrollDispatcher","ngZone","ngAfterContentInit","_contentMarginChanges","subscribe","markForCheck","ɵfac","MatDrawerContent_Factory","t","ɵɵdirectiveInject","MatDrawerContainer","ɵcmp","ɵɵdefineComponent","type","selectors","hostAttrs","hostVars","hostBindings","MatDrawerContent_HostBindings","ɵɵstyleProp","_contentMargins","left","right","features","ɵɵInheritDefinitionFeature","ngContentSelectors","decls","vars","template","MatDrawerContent_Template","ɵɵprojectionDef","encapsulation","changeDetection","ctorParameters","decorators","args","ngDevMode","ɵsetClassMetadata","selector","host","OnPush","None","MatDrawer","_elementRef","_focusTrapFactory","_focusMonitor","_platform","_ngZone","_doc","_elementFocusedBeforeDrawerWasOpened","_enableAnimations","_position","_mode","_disableClose","_autoFocus","_animationStarted","_animationEnd","_animationState","openedChange","_destroyed","onPositionChanged","_modeChanged","_opened","opened","activeElement","_isFocusTrapEnabled","_focusTrap","_trapFocus","_restoreFocus","runOutsideAngular","nativeElement","pipe","event","keyCode","disableClose","run","close","stopPropagation","x","y","fromState","toState","indexOf","emit","value","mode","next","autoFocus","_openedStream","o","openedStart","e","_closedStream","closedStart","focusInitialElementWhenReady","then","hasMovedFocus","focus","activeEl","contains","HTMLElement","focusVia","_openedVia","blur","create","enabled","ngAfterContentChecked","isBrowser","ngOnDestroy","destroy","complete","toggle","open","openedVia","isOpen","Promise","resolve","_width","offsetWidth","MatDrawer_Factory","MatDrawer_HostBindings","ɵɵsyntheticHostListener","MatDrawer_animation_transform_start_HostBindingHandler","$event","MatDrawer_animation_transform_done_HostBindingHandler","ɵɵattribute","ɵɵsyntheticHostProperty","inputs","outputs","exportAs","consts","MatDrawer_Template","data","animation","undefined","propDecorators","animations","_dir","_element","defaultAutosize","_animationMode","viewportRuler","backdropClick","_doCheckSubject","change","_validateDrawers","_updateContentMargins","_autosize","start","_start","end","_end","autosize","hasBackdrop","_backdropOverride","scrollable","_userContent","_content","_drawers","changes","forEach","drawer","_watchDrawerToggle","_watchDrawerPosition","_watchDrawerMode","length","_isDrawerOpen","ngDoCheck","_isPushed","classList","add","_setContainerClass","onMicrotaskEmpty","asObservable","isAdd","remove","_right","_left","_closeModalDrawer","_canHaveBackdrop","width","MatDrawerContainer_Factory","contentQueries","MatDrawerContainer_ContentQueries","dirIndex","ɵɵcontentQuery","_t","ɵɵqueryRefresh","ɵɵloadQuery","first","viewQuery","MatDrawerContainer_Query","ɵɵviewQuery","MatDrawerContainer_HostBindings","MatDrawerContainer_Template","ɵɵtemplate","ɵɵproperty","ɵɵadvance","dependencies","NgIf","styles","String","MatSidenavContent","changeDetectorRef","container","MatSidenavContent_Factory","MatSidenavContainer","MatSidenavContent_HostBindings","MatSidenavContent_Template","MatSidenav","arguments","_fixedInViewport","_fixedTopGap","_fixedBottomGap","fixedInViewport","fixedTopGap","fixedBottomGap","ɵMatSidenav_BaseFactory","MatSidenav_Factory","ɵɵgetInheritedFactory","MatSidenav_HostBindings","MatSidenav_animation_transform_start_HostBindingHandler","MatSidenav_animation_transform_done_HostBindingHandler","MatSidenav_Template","ɵMatSidenavContainer_BaseFactory","MatSidenavContainer_Factory","MatSidenavContainer_ContentQueries","MatSidenavContainer_HostBindings","MatSidenavContainer_Template","MatSidenavModule","MatSidenavModule_Factory","ɵmod","ɵɵdefineNgModule","ɵinj","ɵɵdefineInjector","imports","exports","declarations","ngJitMode","ɵɵsetNgModuleScope"],"sources":["/Users/apple/Desktop/zepto/my_project/node_modules/@angular/material/__ivy_ngcc__/esm2015/sidenav.js"],"sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { animate, state, style, transition, trigger } from '@angular/animations';\nimport { FocusMonitor, FocusTrapFactory } from '@angular/cdk/a11y';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { coerceBooleanProperty, coerceNumberProperty } from '@angular/cdk/coercion';\nimport { ESCAPE } from '@angular/cdk/keycodes';\nimport { Platform, PlatformModule } from '@angular/cdk/platform';\nimport { CdkScrollable, ScrollDispatcher, ViewportRuler, ScrollingModule } from '@angular/cdk/scrolling';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport { ChangeDetectionStrategy, ChangeDetectorRef, Component, ContentChild, ContentChildren, ElementRef, EventEmitter, forwardRef, Inject, InjectionToken, Input, NgZone, Optional, Output, ViewChild, ViewEncapsulation, NgModule } from '@angular/core';\nimport { fromEvent, merge, Subject } from 'rxjs';\nimport { debounceTime, filter, map, startWith, take, takeUntil, distinctUntilChanged } from 'rxjs/operators';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\nimport { MatCommonModule } from '@angular/material/core';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Animations used by the Material drawers.\n * \\@docs-private\n * @type {?}\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/scrolling';\nimport * as ɵngcc2 from '@angular/cdk/a11y';\nimport * as ɵngcc3 from '@angular/cdk/platform';\nimport * as ɵngcc4 from '@angular/cdk/bidi';\nimport * as ɵngcc5 from '@angular/common';\n\nconst _c0 = [\"*\"];\nfunction MatDrawerContainer_div_0_Template(rf, ctx) { if (rf & 1) {\n    const _r3 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"div\", 2);\n    ɵngcc0.ɵɵlistener(\"click\", function MatDrawerContainer_div_0_Template_div_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r3); const ctx_r2 = ɵngcc0.ɵɵnextContext(); return ɵngcc0.ɵɵresetView(ctx_r2._onBackdropClicked()); });\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵclassProp(\"mat-drawer-shown\", ctx_r0._isShowingBackdrop());\n} }\nfunction MatDrawerContainer_mat_drawer_content_3_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"mat-drawer-content\");\n    ɵngcc0.ɵɵprojection(1, 2);\n    ɵngcc0.ɵɵelementEnd();\n} }\nconst _c1 = [[[\"mat-drawer\"]], [[\"mat-drawer-content\"]], \"*\"];\nconst _c2 = [\"mat-drawer\", \"mat-drawer-content\", \"*\"];\nfunction MatSidenavContainer_div_0_Template(rf, ctx) { if (rf & 1) {\n    const _r3 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"div\", 2);\n    ɵngcc0.ɵɵlistener(\"click\", function MatSidenavContainer_div_0_Template_div_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r3); const ctx_r2 = ɵngcc0.ɵɵnextContext(); return ɵngcc0.ɵɵresetView(ctx_r2._onBackdropClicked()); });\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵclassProp(\"mat-drawer-shown\", ctx_r0._isShowingBackdrop());\n} }\nfunction MatSidenavContainer_mat_sidenav_content_3_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"mat-sidenav-content\", 3);\n    ɵngcc0.ɵɵprojection(1, 2);\n    ɵngcc0.ɵɵelementEnd();\n} }\nconst _c3 = [[[\"mat-sidenav\"]], [[\"mat-sidenav-content\"]], \"*\"];\nconst _c4 = [\"mat-sidenav\", \"mat-sidenav-content\", \"*\"];\nconst _c5 = \".mat-drawer-container{position:relative;z-index:1;box-sizing:border-box;-webkit-overflow-scrolling:touch;display:block;overflow:hidden}.mat-drawer-container[fullscreen]{top:0;left:0;right:0;bottom:0;position:absolute}.mat-drawer-container[fullscreen].mat-drawer-opened{overflow:hidden}.mat-drawer-container.mat-drawer-container-explicit-backdrop .mat-drawer-side{z-index:3}.mat-drawer-container.ng-animate-disabled .mat-drawer-backdrop,.mat-drawer-container.ng-animate-disabled .mat-drawer-content,.ng-animate-disabled .mat-drawer-container .mat-drawer-backdrop,.ng-animate-disabled .mat-drawer-container .mat-drawer-content{transition:none}.mat-drawer-backdrop{top:0;left:0;right:0;bottom:0;position:absolute;display:block;z-index:3;visibility:hidden}.mat-drawer-backdrop.mat-drawer-shown{visibility:visible}.mat-drawer-transition .mat-drawer-backdrop{transition-duration:.4s;transition-timing-function:cubic-bezier(.25,.8,.25,1);transition-property:background-color,visibility}@media (-ms-high-contrast:active){.mat-drawer-backdrop{opacity:.5}}.mat-drawer-content{position:relative;z-index:1;display:block;height:100%;overflow:auto}.mat-drawer-transition .mat-drawer-content{transition-duration:.4s;transition-timing-function:cubic-bezier(.25,.8,.25,1);transition-property:transform,margin-left,margin-right}.mat-drawer{position:relative;z-index:4;display:block;position:absolute;top:0;bottom:0;z-index:3;outline:0;box-sizing:border-box;overflow-y:auto;transform:translate3d(-100%,0,0)}@media (-ms-high-contrast:active){.mat-drawer,[dir=rtl] .mat-drawer.mat-drawer-end{border-right:solid 1px currentColor}}@media (-ms-high-contrast:active){.mat-drawer.mat-drawer-end,[dir=rtl] .mat-drawer{border-left:solid 1px currentColor;border-right:none}}.mat-drawer.mat-drawer-side{z-index:2}.mat-drawer.mat-drawer-end{right:0;transform:translate3d(100%,0,0)}[dir=rtl] .mat-drawer{transform:translate3d(100%,0,0)}[dir=rtl] .mat-drawer.mat-drawer-end{left:0;right:auto;transform:translate3d(-100%,0,0)}.mat-drawer-inner-container{width:100%;height:100%;overflow:auto;-webkit-overflow-scrolling:touch}.mat-sidenav-fixed{position:fixed}\";\nconst matDrawerAnimations = {\n    /**\n     * Animation that slides a drawer in and out.\n     */\n    transformDrawer: trigger('transform', [\n        // We remove the `transform` here completely, rather than setting it to zero, because:\n        // 1. Having a transform can cause elements with ripples or an animated\n        //    transform to shift around in Chrome with an RTL layout (see #10023).\n        // 2. 3d transforms causes text to appear blurry on IE and Edge.\n        state('open, open-instant', style({\n            'transform': 'none',\n            'visibility': 'visible',\n        })),\n        state('void', style({\n            // Avoids the shadow showing up when closed in SSR.\n            'box-shadow': 'none',\n            'visibility': 'hidden',\n        })),\n        transition('void => open-instant', animate('0ms')),\n        transition('void <=> open, open-instant => void', animate('400ms cubic-bezier(0.25, 0.8, 0.25, 1)'))\n    ])\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Throws an exception when two MatDrawer are matching the same position.\n * \\@docs-private\n * @param {?} position\n * @return {?}\n */\nfunction throwMatDuplicatedDrawerError(position) {\n    throw Error(`A drawer was already declared for 'position=\"${position}\"'`);\n}\n/**\n * Configures whether drawers should use auto sizing by default.\n * @type {?}\n */\nconst MAT_DRAWER_DEFAULT_AUTOSIZE = new InjectionToken('MAT_DRAWER_DEFAULT_AUTOSIZE', {\n    providedIn: 'root',\n    factory: MAT_DRAWER_DEFAULT_AUTOSIZE_FACTORY,\n});\n/**\n * \\@docs-private\n * @return {?}\n */\nfunction MAT_DRAWER_DEFAULT_AUTOSIZE_FACTORY() {\n    return false;\n}\nclass MatDrawerContent extends CdkScrollable {\n    /**\n     * @param {?} _changeDetectorRef\n     * @param {?} _container\n     * @param {?} elementRef\n     * @param {?} scrollDispatcher\n     * @param {?} ngZone\n     */\n    constructor(_changeDetectorRef, _container, elementRef, scrollDispatcher, ngZone) {\n        super(elementRef, scrollDispatcher, ngZone);\n        this._changeDetectorRef = _changeDetectorRef;\n        this._container = _container;\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        this._container._contentMarginChanges.subscribe(() => {\n            this._changeDetectorRef.markForCheck();\n        });\n    }\n}\nMatDrawerContent.ɵfac = function MatDrawerContent_Factory(t) { return new (t || MatDrawerContent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(forwardRef(() => MatDrawerContainer)), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.ScrollDispatcher), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };\nMatDrawerContent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: MatDrawerContent, selectors: [[\"mat-drawer-content\"]], hostAttrs: [1, \"mat-drawer-content\"], hostVars: 4, hostBindings: function MatDrawerContent_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵstyleProp(\"margin-left\", ctx._container._contentMargins.left, \"px\")(\"margin-right\", ctx._container._contentMargins.right, \"px\");\n    } }, features: [ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c0, decls: 1, vars: 0, template: function MatDrawerContent_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵprojection(0);\n    } }, encapsulation: 2, changeDetection: 0 });\n/** @nocollapse */\nMatDrawerContent.ctorParameters = () => [\n    { type: ChangeDetectorRef },\n    { type: MatDrawerContainer, decorators: [{ type: Inject, args: [forwardRef(() => MatDrawerContainer),] }] },\n    { type: ElementRef },\n    { type: ScrollDispatcher },\n    { type: NgZone }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatDrawerContent, [{\n        type: Component,\n        args: [{ selector: 'mat-drawer-content',\n                template: '<ng-content></ng-content>',\n                host: {\n                    'class': 'mat-drawer-content',\n                    '[style.margin-left.px]': '_container._contentMargins.left',\n                    '[style.margin-right.px]': '_container._contentMargins.right'\n                },\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                encapsulation: ViewEncapsulation.None\n            }]\n    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: MatDrawerContainer, decorators: [{\n                type: Inject,\n                args: [forwardRef(() => MatDrawerContainer)]\n            }] }, { type: ɵngcc0.ElementRef }, { type: ɵngcc1.ScrollDispatcher }, { type: ɵngcc0.NgZone }]; }, null); })();\n/**\n * This component corresponds to a drawer that can be opened on the drawer container.\n */\nclass MatDrawer {\n    /**\n     * @param {?} _elementRef\n     * @param {?} _focusTrapFactory\n     * @param {?} _focusMonitor\n     * @param {?} _platform\n     * @param {?} _ngZone\n     * @param {?} _doc\n     */\n    constructor(_elementRef, _focusTrapFactory, _focusMonitor, _platform, _ngZone, _doc) {\n        this._elementRef = _elementRef;\n        this._focusTrapFactory = _focusTrapFactory;\n        this._focusMonitor = _focusMonitor;\n        this._platform = _platform;\n        this._ngZone = _ngZone;\n        this._doc = _doc;\n        this._elementFocusedBeforeDrawerWasOpened = null;\n        /**\n         * Whether the drawer is initialized. Used for disabling the initial animation.\n         */\n        this._enableAnimations = false;\n        this._position = 'start';\n        this._mode = 'over';\n        this._disableClose = false;\n        this._autoFocus = true;\n        /**\n         * Emits whenever the drawer has started animating.\n         */\n        this._animationStarted = new Subject();\n        /**\n         * Emits whenever the drawer is done animating.\n         */\n        this._animationEnd = new Subject();\n        /**\n         * Current state of the sidenav animation.\n         */\n        this._animationState = 'void';\n        /**\n         * Event emitted when the drawer open state is changed.\n         */\n        this.openedChange = \n        // Note this has to be async in order to avoid some issues with two-bindings (see #8872).\n        new EventEmitter(/* isAsync */ true);\n        /**\n         * Emits when the component is destroyed.\n         */\n        this._destroyed = new Subject();\n        /**\n         * Event emitted when the drawer's position changes.\n         */\n        // tslint:disable-next-line:no-output-on-prefix\n        this.onPositionChanged = new EventEmitter();\n        /**\n         * An observable that emits when the drawer mode changes. This is used by the drawer container to\n         * to know when to when the mode changes so it can adapt the margins on the content.\n         */\n        this._modeChanged = new Subject();\n        this._opened = false;\n        this.openedChange.subscribe((opened) => {\n            if (opened) {\n                if (this._doc) {\n                    this._elementFocusedBeforeDrawerWasOpened = (/** @type {?} */ (this._doc.activeElement));\n                }\n                if (this._isFocusTrapEnabled && this._focusTrap) {\n                    this._trapFocus();\n                }\n            }\n            else {\n                this._restoreFocus();\n            }\n        });\n        /**\n         * Listen to `keydown` events outside the zone so that change detection is not run every\n         * time a key is pressed. Instead we re-enter the zone only if the `ESC` key is pressed\n         * and we don't have close disabled.\n         */\n        this._ngZone.runOutsideAngular(() => {\n            fromEvent(this._elementRef.nativeElement, 'keydown').pipe(filter(event => event.keyCode === ESCAPE && !this.disableClose), takeUntil(this._destroyed)).subscribe(event => this._ngZone.run(() => {\n                this.close();\n                event.stopPropagation();\n            }));\n        });\n        // We need a Subject with distinctUntilChanged, because the `done` event\n        // fires twice on some browsers. See https://github.com/angular/angular/issues/24084\n        this._animationEnd.pipe(distinctUntilChanged((x, y) => {\n            return x.fromState === y.fromState && x.toState === y.toState;\n        })).subscribe((event) => {\n            const { fromState, toState } = event;\n            if ((toState.indexOf('open') === 0 && fromState === 'void') ||\n                (toState === 'void' && fromState.indexOf('open') === 0)) {\n                this.openedChange.emit(this._opened);\n            }\n        });\n    }\n    /**\n     * The side that the drawer is attached to.\n     * @return {?}\n     */\n    get position() { return this._position; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set position(value) {\n        // Make sure we have a valid value.\n        value = value === 'end' ? 'end' : 'start';\n        if (value != this._position) {\n            this._position = value;\n            this.onPositionChanged.emit();\n        }\n    }\n    /**\n     * Mode of the drawer; one of 'over', 'push' or 'side'.\n     * @return {?}\n     */\n    get mode() { return this._mode; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set mode(value) {\n        this._mode = value;\n        this._modeChanged.next();\n    }\n    /**\n     * Whether the drawer can be closed with the escape key or by clicking on the backdrop.\n     * @return {?}\n     */\n    get disableClose() { return this._disableClose; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set disableClose(value) { this._disableClose = coerceBooleanProperty(value); }\n    /**\n     * Whether the drawer should focus the first focusable element automatically when opened.\n     * @return {?}\n     */\n    get autoFocus() { return this._autoFocus; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set autoFocus(value) { this._autoFocus = coerceBooleanProperty(value); }\n    /**\n     * Event emitted when the drawer has been opened.\n     * @return {?}\n     */\n    get _openedStream() {\n        return this.openedChange.pipe(filter(o => o), map(() => { }));\n    }\n    /**\n     * Event emitted when the drawer has started opening.\n     * @return {?}\n     */\n    get openedStart() {\n        return this._animationStarted.pipe(filter(e => e.fromState !== e.toState && e.toState.indexOf('open') === 0), map(() => { }));\n    }\n    /**\n     * Event emitted when the drawer has been closed.\n     * @return {?}\n     */\n    get _closedStream() {\n        return this.openedChange.pipe(filter(o => !o), map(() => { }));\n    }\n    /**\n     * Event emitted when the drawer has started closing.\n     * @return {?}\n     */\n    get closedStart() {\n        return this._animationStarted.pipe(filter(e => e.fromState !== e.toState && e.toState === 'void'), map(() => { }));\n    }\n    /**\n     * @return {?}\n     */\n    get _isFocusTrapEnabled() {\n        // The focus trap is only enabled when the drawer is open in any mode other than side.\n        return this.opened && this.mode !== 'side';\n    }\n    /**\n     * Traps focus inside the drawer.\n     * @private\n     * @return {?}\n     */\n    _trapFocus() {\n        if (!this.autoFocus) {\n            return;\n        }\n        this._focusTrap.focusInitialElementWhenReady().then(hasMovedFocus => {\n            // If there were no focusable elements, focus the sidenav itself so the keyboard navigation\n            // still works. We need to check that `focus` is a function due to Universal.\n            if (!hasMovedFocus && typeof this._elementRef.nativeElement.focus === 'function') {\n                this._elementRef.nativeElement.focus();\n            }\n        });\n    }\n    /**\n     * If focus is currently inside the drawer, restores it to where it was before the drawer\n     * opened.\n     * @private\n     * @return {?}\n     */\n    _restoreFocus() {\n        if (!this.autoFocus) {\n            return;\n        }\n        /** @type {?} */\n        const activeEl = this._doc && this._doc.activeElement;\n        if (activeEl && this._elementRef.nativeElement.contains(activeEl)) {\n            if (this._elementFocusedBeforeDrawerWasOpened instanceof HTMLElement) {\n                this._focusMonitor.focusVia(this._elementFocusedBeforeDrawerWasOpened, this._openedVia);\n            }\n            else {\n                this._elementRef.nativeElement.blur();\n            }\n        }\n        this._elementFocusedBeforeDrawerWasOpened = null;\n        this._openedVia = null;\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        this._focusTrap = this._focusTrapFactory.create(this._elementRef.nativeElement);\n        this._focusTrap.enabled = this._isFocusTrapEnabled;\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentChecked() {\n        // Enable the animations after the lifecycle hooks have run, in order to avoid animating\n        // drawers that are open by default. When we're on the server, we shouldn't enable the\n        // animations, because we don't want the drawer to animate the first time the user sees\n        // the page.\n        if (this._platform.isBrowser) {\n            this._enableAnimations = true;\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        if (this._focusTrap) {\n            this._focusTrap.destroy();\n        }\n        this._animationStarted.complete();\n        this._animationEnd.complete();\n        this._modeChanged.complete();\n        this._destroyed.next();\n        this._destroyed.complete();\n    }\n    /**\n     * Whether the drawer is opened. We overload this because we trigger an event when it\n     * starts or end.\n     * @return {?}\n     */\n    get opened() { return this._opened; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set opened(value) { this.toggle(coerceBooleanProperty(value)); }\n    /**\n     * Open the drawer.\n     * @param {?=} openedVia Whether the drawer was opened by a key press, mouse click or programmatically.\n     * Used for focus management after the sidenav is closed.\n     * @return {?}\n     */\n    open(openedVia) {\n        return this.toggle(true, openedVia);\n    }\n    /**\n     * Close the drawer.\n     * @return {?}\n     */\n    close() {\n        return this.toggle(false);\n    }\n    /**\n     * Toggle this drawer.\n     * @param {?=} isOpen Whether the drawer should be open.\n     * @param {?=} openedVia Whether the drawer was opened by a key press, mouse click or programmatically.\n     * Used for focus management after the sidenav is closed.\n     * @return {?}\n     */\n    toggle(isOpen = !this.opened, openedVia = 'program') {\n        this._opened = isOpen;\n        if (isOpen) {\n            this._animationState = this._enableAnimations ? 'open' : 'open-instant';\n            this._openedVia = openedVia;\n        }\n        else {\n            this._animationState = 'void';\n            this._restoreFocus();\n        }\n        if (this._focusTrap) {\n            this._focusTrap.enabled = this._isFocusTrapEnabled;\n        }\n        return new Promise(resolve => {\n            this.openedChange.pipe(take(1)).subscribe(open => resolve(open ? 'open' : 'close'));\n        });\n    }\n    /**\n     * @return {?}\n     */\n    get _width() {\n        return this._elementRef.nativeElement ? (this._elementRef.nativeElement.offsetWidth || 0) : 0;\n    }\n}\nMatDrawer.ɵfac = function MatDrawer_Factory(t) { return new (t || MatDrawer)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.FocusTrapFactory), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.FocusMonitor), ɵngcc0.ɵɵdirectiveInject(ɵngcc3.Platform), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(DOCUMENT, 8)); };\nMatDrawer.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: MatDrawer, selectors: [[\"mat-drawer\"]], hostAttrs: [\"tabIndex\", \"-1\", 1, \"mat-drawer\"], hostVars: 10, hostBindings: function MatDrawer_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵsyntheticHostListener(\"@transform.start\", function MatDrawer_animation_transform_start_HostBindingHandler($event) { return ctx._animationStarted.next($event); })(\"@transform.done\", function MatDrawer_animation_transform_done_HostBindingHandler($event) { return ctx._animationEnd.next($event); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"align\", null);\n        ɵngcc0.ɵɵsyntheticHostProperty(\"@transform\", ctx._animationState);\n        ɵngcc0.ɵɵclassProp(\"mat-drawer-end\", ctx.position === \"end\")(\"mat-drawer-over\", ctx.mode === \"over\")(\"mat-drawer-push\", ctx.mode === \"push\")(\"mat-drawer-side\", ctx.mode === \"side\");\n    } }, inputs: { position: \"position\", mode: \"mode\", disableClose: \"disableClose\", autoFocus: \"autoFocus\", opened: \"opened\" }, outputs: { openedChange: \"openedChange\", onPositionChanged: \"positionChanged\", _openedStream: \"opened\", openedStart: \"openedStart\", _closedStream: \"closed\", closedStart: \"closedStart\" }, exportAs: [\"matDrawer\"], ngContentSelectors: _c0, decls: 2, vars: 0, consts: [[1, \"mat-drawer-inner-container\"]], template: function MatDrawer_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n        ɵngcc0.ɵɵprojection(1);\n        ɵngcc0.ɵɵelementEnd();\n    } }, encapsulation: 2, data: { animation: [matDrawerAnimations.transformDrawer] }, changeDetection: 0 });\n/** @nocollapse */\nMatDrawer.ctorParameters = () => [\n    { type: ElementRef },\n    { type: FocusTrapFactory },\n    { type: FocusMonitor },\n    { type: Platform },\n    { type: NgZone },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [DOCUMENT,] }] }\n];\nMatDrawer.propDecorators = {\n    position: [{ type: Input }],\n    mode: [{ type: Input }],\n    disableClose: [{ type: Input }],\n    autoFocus: [{ type: Input }],\n    openedChange: [{ type: Output }],\n    _openedStream: [{ type: Output, args: ['opened',] }],\n    openedStart: [{ type: Output }],\n    _closedStream: [{ type: Output, args: ['closed',] }],\n    closedStart: [{ type: Output }],\n    onPositionChanged: [{ type: Output, args: ['positionChanged',] }],\n    opened: [{ type: Input }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatDrawer, [{\n        type: Component,\n        args: [{ selector: 'mat-drawer',\n                exportAs: 'matDrawer',\n                template: \"<div class=\\\"mat-drawer-inner-container\\\"><ng-content></ng-content></div>\",\n                animations: [matDrawerAnimations.transformDrawer],\n                host: {\n                    'class': 'mat-drawer',\n                    '[@transform]': '_animationState',\n                    '(@transform.start)': '_animationStarted.next($event)',\n                    '(@transform.done)': '_animationEnd.next($event)',\n                    // must prevent the browser from aligning text based on value\n                    '[attr.align]': 'null',\n                    '[class.mat-drawer-end]': 'position === \"end\"',\n                    '[class.mat-drawer-over]': 'mode === \"over\"',\n                    '[class.mat-drawer-push]': 'mode === \"push\"',\n                    '[class.mat-drawer-side]': 'mode === \"side\"',\n                    'tabIndex': '-1'\n                },\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                encapsulation: ViewEncapsulation.None\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc2.FocusTrapFactory }, { type: ɵngcc2.FocusMonitor }, { type: ɵngcc3.Platform }, { type: ɵngcc0.NgZone }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [DOCUMENT]\n            }] }]; }, { openedChange: [{\n            type: Output\n        }], onPositionChanged: [{\n            type: Output,\n            args: ['positionChanged']\n        }], position: [{\n            type: Input\n        }], mode: [{\n            type: Input\n        }], disableClose: [{\n            type: Input\n        }], autoFocus: [{\n            type: Input\n        }], _openedStream: [{\n            type: Output,\n            args: ['opened']\n        }], openedStart: [{\n            type: Output\n        }], _closedStream: [{\n            type: Output,\n            args: ['closed']\n        }], closedStart: [{\n            type: Output\n        }], opened: [{\n            type: Input\n        }] }); })();\n/**\n * `<mat-drawer-container>` component.\n *\n * This is the parent component to one or two `<mat-drawer>`s that validates the state internally\n * and coordinates the backdrop and content styling.\n */\nclass MatDrawerContainer {\n    /**\n     * @param {?} _dir\n     * @param {?} _element\n     * @param {?} _ngZone\n     * @param {?} _changeDetectorRef\n     * @param {?=} defaultAutosize\n     * @param {?=} _animationMode\n     * @param {?=} viewportRuler\n     */\n    constructor(_dir, _element, _ngZone, _changeDetectorRef, defaultAutosize = false, _animationMode, \n    /**\n     * @deprecated viewportRuler to become a required parameter.\n     * @breaking-change 8.0.0\n     */\n    viewportRuler) {\n        this._dir = _dir;\n        this._element = _element;\n        this._ngZone = _ngZone;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._animationMode = _animationMode;\n        /**\n         * Event emitted when the drawer backdrop is clicked.\n         */\n        this.backdropClick = new EventEmitter();\n        /**\n         * Emits when the component is destroyed.\n         */\n        this._destroyed = new Subject();\n        /**\n         * Emits on every ngDoCheck. Used for debouncing reflows.\n         */\n        this._doCheckSubject = new Subject();\n        /**\n         * Margins to be applied to the content. These are used to push / shrink the drawer content when a\n         * drawer is open. We use margin rather than transform even for push mode because transform breaks\n         * fixed position elements inside of the transformed element.\n         */\n        this._contentMargins = { left: null, right: null };\n        this._contentMarginChanges = new Subject();\n        // If a `Dir` directive exists up the tree, listen direction changes\n        // and update the left/right properties to point to the proper start/end.\n        if (_dir) {\n            _dir.change.pipe(takeUntil(this._destroyed)).subscribe(() => {\n                this._validateDrawers();\n                this._updateContentMargins();\n            });\n        }\n        // Since the minimum width of the sidenav depends on the viewport width,\n        // we need to recompute the margins if the viewport changes.\n        if (viewportRuler) {\n            viewportRuler.change()\n                .pipe(takeUntil(this._destroyed))\n                .subscribe(() => this._updateContentMargins());\n        }\n        this._autosize = defaultAutosize;\n    }\n    /**\n     * The drawer child with the `start` position.\n     * @return {?}\n     */\n    get start() { return this._start; }\n    /**\n     * The drawer child with the `end` position.\n     * @return {?}\n     */\n    get end() { return this._end; }\n    /**\n     * Whether to automatically resize the container whenever\n     * the size of any of its drawers changes.\n     *\n     * **Use at your own risk!** Enabling this option can cause layout thrashing by measuring\n     * the drawers on every change detection cycle. Can be configured globally via the\n     * `MAT_DRAWER_DEFAULT_AUTOSIZE` token.\n     * @return {?}\n     */\n    get autosize() { return this._autosize; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set autosize(value) { this._autosize = coerceBooleanProperty(value); }\n    /**\n     * Whether the drawer container should have a backdrop while one of the sidenavs is open.\n     * If explicitly set to `true`, the backdrop will be enabled for drawers in the `side`\n     * mode as well.\n     * @return {?}\n     */\n    get hasBackdrop() {\n        if (this._backdropOverride == null) {\n            return !this._start || this._start.mode !== 'side' || !this._end || this._end.mode !== 'side';\n        }\n        return this._backdropOverride;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set hasBackdrop(value) {\n        this._backdropOverride = value == null ? null : coerceBooleanProperty(value);\n    }\n    /**\n     * Reference to the CdkScrollable instance that wraps the scrollable content.\n     * @return {?}\n     */\n    get scrollable() {\n        return this._userContent || this._content;\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        this._drawers.changes.pipe(startWith(null)).subscribe(() => {\n            this._validateDrawers();\n            this._drawers.forEach((drawer) => {\n                this._watchDrawerToggle(drawer);\n                this._watchDrawerPosition(drawer);\n                this._watchDrawerMode(drawer);\n            });\n            if (!this._drawers.length ||\n                this._isDrawerOpen(this._start) ||\n                this._isDrawerOpen(this._end)) {\n                this._updateContentMargins();\n            }\n            this._changeDetectorRef.markForCheck();\n        });\n        this._doCheckSubject.pipe(debounceTime(10), // Arbitrary debounce time, less than a frame at 60fps\n        takeUntil(this._destroyed)).subscribe(() => this._updateContentMargins());\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._contentMarginChanges.complete();\n        this._doCheckSubject.complete();\n        this._destroyed.next();\n        this._destroyed.complete();\n    }\n    /**\n     * Calls `open` of both start and end drawers\n     * @return {?}\n     */\n    open() {\n        this._drawers.forEach(drawer => drawer.open());\n    }\n    /**\n     * Calls `close` of both start and end drawers\n     * @return {?}\n     */\n    close() {\n        this._drawers.forEach(drawer => drawer.close());\n    }\n    /**\n     * @return {?}\n     */\n    ngDoCheck() {\n        // If users opted into autosizing, do a check every change detection cycle.\n        if (this._autosize && this._isPushed()) {\n            // Run outside the NgZone, otherwise the debouncer will throw us into an infinite loop.\n            this._ngZone.runOutsideAngular(() => this._doCheckSubject.next());\n        }\n    }\n    /**\n     * Subscribes to drawer events in order to set a class on the main container element when the\n     * drawer is open and the backdrop is visible. This ensures any overflow on the container element\n     * is properly hidden.\n     * @private\n     * @param {?} drawer\n     * @return {?}\n     */\n    _watchDrawerToggle(drawer) {\n        drawer._animationStarted.pipe(filter((event) => event.fromState !== event.toState), takeUntil(this._drawers.changes))\n            .subscribe((event) => {\n            // Set the transition class on the container so that the animations occur. This should not\n            // be set initially because animations should only be triggered via a change in state.\n            if (event.toState !== 'open-instant' && this._animationMode !== 'NoopAnimations') {\n                this._element.nativeElement.classList.add('mat-drawer-transition');\n            }\n            this._updateContentMargins();\n            this._changeDetectorRef.markForCheck();\n        });\n        if (drawer.mode !== 'side') {\n            drawer.openedChange.pipe(takeUntil(this._drawers.changes)).subscribe(() => this._setContainerClass(drawer.opened));\n        }\n    }\n    /**\n     * Subscribes to drawer onPositionChanged event in order to\n     * re-validate drawers when the position changes.\n     * @private\n     * @param {?} drawer\n     * @return {?}\n     */\n    _watchDrawerPosition(drawer) {\n        if (!drawer) {\n            return;\n        }\n        // NOTE: We need to wait for the microtask queue to be empty before validating,\n        // since both drawers may be swapping positions at the same time.\n        drawer.onPositionChanged.pipe(takeUntil(this._drawers.changes)).subscribe(() => {\n            this._ngZone.onMicrotaskEmpty.asObservable().pipe(take(1)).subscribe(() => {\n                this._validateDrawers();\n            });\n        });\n    }\n    /**\n     * Subscribes to changes in drawer mode so we can run change detection.\n     * @private\n     * @param {?} drawer\n     * @return {?}\n     */\n    _watchDrawerMode(drawer) {\n        if (drawer) {\n            drawer._modeChanged.pipe(takeUntil(merge(this._drawers.changes, this._destroyed)))\n                .subscribe(() => {\n                this._updateContentMargins();\n                this._changeDetectorRef.markForCheck();\n            });\n        }\n    }\n    /**\n     * Toggles the 'mat-drawer-opened' class on the main 'mat-drawer-container' element.\n     * @private\n     * @param {?} isAdd\n     * @return {?}\n     */\n    _setContainerClass(isAdd) {\n        if (isAdd) {\n            this._element.nativeElement.classList.add('mat-drawer-opened');\n        }\n        else {\n            this._element.nativeElement.classList.remove('mat-drawer-opened');\n        }\n    }\n    /**\n     * Validate the state of the drawer children components.\n     * @private\n     * @return {?}\n     */\n    _validateDrawers() {\n        this._start = this._end = null;\n        // Ensure that we have at most one start and one end drawer.\n        this._drawers.forEach(drawer => {\n            if (drawer.position == 'end') {\n                if (this._end != null) {\n                    throwMatDuplicatedDrawerError('end');\n                }\n                this._end = drawer;\n            }\n            else {\n                if (this._start != null) {\n                    throwMatDuplicatedDrawerError('start');\n                }\n                this._start = drawer;\n            }\n        });\n        this._right = this._left = null;\n        // Detect if we're LTR or RTL.\n        if (this._dir && this._dir.value === 'rtl') {\n            this._left = this._end;\n            this._right = this._start;\n        }\n        else {\n            this._left = this._start;\n            this._right = this._end;\n        }\n    }\n    /**\n     * Whether the container is being pushed to the side by one of the drawers.\n     * @private\n     * @return {?}\n     */\n    _isPushed() {\n        return (this._isDrawerOpen(this._start) && this._start.mode != 'over') ||\n            (this._isDrawerOpen(this._end) && this._end.mode != 'over');\n    }\n    /**\n     * @return {?}\n     */\n    _onBackdropClicked() {\n        this.backdropClick.emit();\n        this._closeModalDrawer();\n    }\n    /**\n     * @return {?}\n     */\n    _closeModalDrawer() {\n        // Close all open drawers where closing is not disabled and the mode is not `side`.\n        [this._start, this._end]\n            .filter(drawer => drawer && !drawer.disableClose && this._canHaveBackdrop(drawer))\n            .forEach(drawer => (/** @type {?} */ (drawer)).close());\n    }\n    /**\n     * @return {?}\n     */\n    _isShowingBackdrop() {\n        return (this._isDrawerOpen(this._start) && this._canHaveBackdrop(this._start)) ||\n            (this._isDrawerOpen(this._end) && this._canHaveBackdrop(this._end));\n    }\n    /**\n     * @private\n     * @param {?} drawer\n     * @return {?}\n     */\n    _canHaveBackdrop(drawer) {\n        return drawer.mode !== 'side' || !!this._backdropOverride;\n    }\n    /**\n     * @private\n     * @param {?} drawer\n     * @return {?}\n     */\n    _isDrawerOpen(drawer) {\n        return drawer != null && drawer.opened;\n    }\n    /**\n     * Recalculates and updates the inline styles for the content. Note that this should be used\n     * sparingly, because it causes a reflow.\n     * @private\n     * @return {?}\n     */\n    _updateContentMargins() {\n        // 1. For drawers in `over` mode, they don't affect the content.\n        // 2. For drawers in `side` mode they should shrink the content. We do this by adding to the\n        //    left margin (for left drawer) or right margin (for right the drawer).\n        // 3. For drawers in `push` mode the should shift the content without resizing it. We do this by\n        //    adding to the left or right margin and simultaneously subtracting the same amount of\n        //    margin from the other side.\n        // 1. For drawers in `over` mode, they don't affect the content.\n        // 2. For drawers in `side` mode they should shrink the content. We do this by adding to the\n        //    left margin (for left drawer) or right margin (for right the drawer).\n        // 3. For drawers in `push` mode the should shift the content without resizing it. We do this by\n        //    adding to the left or right margin and simultaneously subtracting the same amount of\n        //    margin from the other side.\n        /** @type {?} */\n        let left = 0;\n        /** @type {?} */\n        let right = 0;\n        if (this._left && this._left.opened) {\n            if (this._left.mode == 'side') {\n                left += this._left._width;\n            }\n            else if (this._left.mode == 'push') {\n                /** @type {?} */\n                let width = this._left._width;\n                left += width;\n                right -= width;\n            }\n        }\n        if (this._right && this._right.opened) {\n            if (this._right.mode == 'side') {\n                right += this._right._width;\n            }\n            else if (this._right.mode == 'push') {\n                /** @type {?} */\n                let width = this._right._width;\n                right += width;\n                left -= width;\n            }\n        }\n        // If either `right` or `left` is zero, don't set a style to the element. This\n        // allows users to specify a custom size via CSS class in SSR scenarios where the\n        // measured widths will always be zero. Note that we reset to `null` here, rather\n        // than below, in order to ensure that the types in the `if` below are consistent.\n        left = left || (/** @type {?} */ (null));\n        right = right || (/** @type {?} */ (null));\n        if (left !== this._contentMargins.left || right !== this._contentMargins.right) {\n            this._contentMargins = { left, right };\n            // Pull back into the NgZone since in some cases we could be outside. We need to be careful\n            // to do it only when something changed, otherwise we can end up hitting the zone too often.\n            this._ngZone.run(() => this._contentMarginChanges.next(this._contentMargins));\n        }\n    }\n}\nMatDrawerContainer.ɵfac = function MatDrawerContainer_Factory(t) { return new (t || MatDrawerContainer)(ɵngcc0.ɵɵdirectiveInject(ɵngcc4.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(MAT_DRAWER_DEFAULT_AUTOSIZE), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.ViewportRuler, 8)); };\nMatDrawerContainer.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: MatDrawerContainer, selectors: [[\"mat-drawer-container\"]], contentQueries: function MatDrawerContainer_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatDrawerContent, 5);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatDrawer, 4);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._content = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._drawers = _t);\n    } }, viewQuery: function MatDrawerContainer_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(MatDrawerContent, 5);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._userContent = _t.first);\n    } }, hostAttrs: [1, \"mat-drawer-container\"], hostVars: 2, hostBindings: function MatDrawerContainer_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mat-drawer-container-explicit-backdrop\", ctx._backdropOverride);\n    } }, inputs: { autosize: \"autosize\", hasBackdrop: \"hasBackdrop\" }, outputs: { backdropClick: \"backdropClick\" }, exportAs: [\"matDrawerContainer\"], ngContentSelectors: _c2, decls: 4, vars: 2, consts: [[\"class\", \"mat-drawer-backdrop\", 3, \"mat-drawer-shown\", \"click\", 4, \"ngIf\"], [4, \"ngIf\"], [1, \"mat-drawer-backdrop\", 3, \"click\"]], template: function MatDrawerContainer_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c1);\n        ɵngcc0.ɵɵtemplate(0, MatDrawerContainer_div_0_Template, 1, 2, \"div\", 0);\n        ɵngcc0.ɵɵprojection(1);\n        ɵngcc0.ɵɵprojection(2, 1);\n        ɵngcc0.ɵɵtemplate(3, MatDrawerContainer_mat_drawer_content_3_Template, 2, 0, \"mat-drawer-content\", 1);\n    } if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.hasBackdrop);\n        ɵngcc0.ɵɵadvance(3);\n        ɵngcc0.ɵɵproperty(\"ngIf\", !ctx._content);\n    } }, dependencies: [ɵngcc5.NgIf, MatDrawerContent], styles: [_c5], encapsulation: 2, changeDetection: 0 });\n/** @nocollapse */\nMatDrawerContainer.ctorParameters = () => [\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: ElementRef },\n    { type: NgZone },\n    { type: ChangeDetectorRef },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_DRAWER_DEFAULT_AUTOSIZE,] }] },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] },\n    { type: ViewportRuler, decorators: [{ type: Optional }] }\n];\nMatDrawerContainer.propDecorators = {\n    _drawers: [{ type: ContentChildren, args: [MatDrawer,] }],\n    _content: [{ type: ContentChild, args: [MatDrawerContent,] }],\n    _userContent: [{ type: ViewChild, args: [MatDrawerContent,] }],\n    autosize: [{ type: Input }],\n    hasBackdrop: [{ type: Input }],\n    backdropClick: [{ type: Output }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatDrawerContainer, [{\n        type: Component,\n        args: [{ selector: 'mat-drawer-container', exportAs: 'matDrawerContainer', template: \"<div class=\\\"mat-drawer-backdrop\\\" (click)=\\\"_onBackdropClicked()\\\" *ngIf=\\\"hasBackdrop\\\" [class.mat-drawer-shown]=\\\"_isShowingBackdrop()\\\"></div><ng-content select=\\\"mat-drawer\\\"></ng-content><ng-content select=\\\"mat-drawer-content\\\"></ng-content><mat-drawer-content *ngIf=\\\"!_content\\\"><ng-content></ng-content></mat-drawer-content>\", host: {\n                    'class': 'mat-drawer-container',\n                    '[class.mat-drawer-container-explicit-backdrop]': '_backdropOverride'\n                }, changeDetection: ChangeDetectionStrategy.OnPush, encapsulation: ViewEncapsulation.None, styles: [\".mat-drawer-container{position:relative;z-index:1;box-sizing:border-box;-webkit-overflow-scrolling:touch;display:block;overflow:hidden}.mat-drawer-container[fullscreen]{top:0;left:0;right:0;bottom:0;position:absolute}.mat-drawer-container[fullscreen].mat-drawer-opened{overflow:hidden}.mat-drawer-container.mat-drawer-container-explicit-backdrop .mat-drawer-side{z-index:3}.mat-drawer-container.ng-animate-disabled .mat-drawer-backdrop,.mat-drawer-container.ng-animate-disabled .mat-drawer-content,.ng-animate-disabled .mat-drawer-container .mat-drawer-backdrop,.ng-animate-disabled .mat-drawer-container .mat-drawer-content{transition:none}.mat-drawer-backdrop{top:0;left:0;right:0;bottom:0;position:absolute;display:block;z-index:3;visibility:hidden}.mat-drawer-backdrop.mat-drawer-shown{visibility:visible}.mat-drawer-transition .mat-drawer-backdrop{transition-duration:.4s;transition-timing-function:cubic-bezier(.25,.8,.25,1);transition-property:background-color,visibility}@media (-ms-high-contrast:active){.mat-drawer-backdrop{opacity:.5}}.mat-drawer-content{position:relative;z-index:1;display:block;height:100%;overflow:auto}.mat-drawer-transition .mat-drawer-content{transition-duration:.4s;transition-timing-function:cubic-bezier(.25,.8,.25,1);transition-property:transform,margin-left,margin-right}.mat-drawer{position:relative;z-index:4;display:block;position:absolute;top:0;bottom:0;z-index:3;outline:0;box-sizing:border-box;overflow-y:auto;transform:translate3d(-100%,0,0)}@media (-ms-high-contrast:active){.mat-drawer,[dir=rtl] .mat-drawer.mat-drawer-end{border-right:solid 1px currentColor}}@media (-ms-high-contrast:active){.mat-drawer.mat-drawer-end,[dir=rtl] .mat-drawer{border-left:solid 1px currentColor;border-right:none}}.mat-drawer.mat-drawer-side{z-index:2}.mat-drawer.mat-drawer-end{right:0;transform:translate3d(100%,0,0)}[dir=rtl] .mat-drawer{transform:translate3d(100%,0,0)}[dir=rtl] .mat-drawer.mat-drawer-end{left:0;right:auto;transform:translate3d(-100%,0,0)}.mat-drawer-inner-container{width:100%;height:100%;overflow:auto;-webkit-overflow-scrolling:touch}.mat-sidenav-fixed{position:fixed}\"] }]\n    }], function () { return [{ type: ɵngcc4.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }, { type: ɵngcc0.ChangeDetectorRef }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_DRAWER_DEFAULT_AUTOSIZE]\n            }] }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }, { type: ɵngcc1.ViewportRuler, decorators: [{\n                type: Optional\n            }] }]; }, { backdropClick: [{\n            type: Output\n        }], autosize: [{\n            type: Input\n        }], hasBackdrop: [{\n            type: Input\n        }], _drawers: [{\n            type: ContentChildren,\n            args: [MatDrawer]\n        }], _content: [{\n            type: ContentChild,\n            args: [MatDrawerContent]\n        }], _userContent: [{\n            type: ViewChild,\n            args: [MatDrawerContent]\n        }] }); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass MatSidenavContent extends MatDrawerContent {\n    /**\n     * @param {?} changeDetectorRef\n     * @param {?} container\n     * @param {?} elementRef\n     * @param {?} scrollDispatcher\n     * @param {?} ngZone\n     */\n    constructor(changeDetectorRef, container, elementRef, scrollDispatcher, ngZone) {\n        super(changeDetectorRef, container, elementRef, scrollDispatcher, ngZone);\n    }\n}\nMatSidenavContent.ɵfac = function MatSidenavContent_Factory(t) { return new (t || MatSidenavContent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(forwardRef(() => MatSidenavContainer)), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.ScrollDispatcher), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };\nMatSidenavContent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: MatSidenavContent, selectors: [[\"mat-sidenav-content\"]], hostAttrs: [1, \"mat-drawer-content\", \"mat-sidenav-content\"], hostVars: 4, hostBindings: function MatSidenavContent_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵstyleProp(\"margin-left\", ctx._container._contentMargins.left, \"px\")(\"margin-right\", ctx._container._contentMargins.right, \"px\");\n    } }, features: [ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c0, decls: 1, vars: 0, template: function MatSidenavContent_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵprojection(0);\n    } }, encapsulation: 2, changeDetection: 0 });\n/** @nocollapse */\nMatSidenavContent.ctorParameters = () => [\n    { type: ChangeDetectorRef },\n    { type: MatSidenavContainer, decorators: [{ type: Inject, args: [forwardRef(() => MatSidenavContainer),] }] },\n    { type: ElementRef },\n    { type: ScrollDispatcher },\n    { type: NgZone }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatSidenavContent, [{\n        type: Component,\n        args: [{ selector: 'mat-sidenav-content',\n                template: '<ng-content></ng-content>',\n                host: {\n                    'class': 'mat-drawer-content mat-sidenav-content',\n                    '[style.margin-left.px]': '_container._contentMargins.left',\n                    '[style.margin-right.px]': '_container._contentMargins.right'\n                },\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                encapsulation: ViewEncapsulation.None\n            }]\n    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: MatSidenavContainer, decorators: [{\n                type: Inject,\n                args: [forwardRef(() => MatSidenavContainer)]\n            }] }, { type: ɵngcc0.ElementRef }, { type: ɵngcc1.ScrollDispatcher }, { type: ɵngcc0.NgZone }]; }, null); })();\nclass MatSidenav extends MatDrawer {\n    constructor() {\n        super(...arguments);\n        this._fixedInViewport = false;\n        this._fixedTopGap = 0;\n        this._fixedBottomGap = 0;\n    }\n    /**\n     * Whether the sidenav is fixed in the viewport.\n     * @return {?}\n     */\n    get fixedInViewport() { return this._fixedInViewport; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set fixedInViewport(value) { this._fixedInViewport = coerceBooleanProperty(value); }\n    /**\n     * The gap between the top of the sidenav and the top of the viewport when the sidenav is in fixed\n     * mode.\n     * @return {?}\n     */\n    get fixedTopGap() { return this._fixedTopGap; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set fixedTopGap(value) { this._fixedTopGap = coerceNumberProperty(value); }\n    /**\n     * The gap between the bottom of the sidenav and the bottom of the viewport when the sidenav is in\n     * fixed mode.\n     * @return {?}\n     */\n    get fixedBottomGap() { return this._fixedBottomGap; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set fixedBottomGap(value) { this._fixedBottomGap = coerceNumberProperty(value); }\n}\nMatSidenav.ɵfac = /*@__PURE__*/ function () { let ɵMatSidenav_BaseFactory; return function MatSidenav_Factory(t) { return (ɵMatSidenav_BaseFactory || (ɵMatSidenav_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatSidenav)))(t || MatSidenav); }; }();\nMatSidenav.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: MatSidenav, selectors: [[\"mat-sidenav\"]], hostAttrs: [\"tabIndex\", \"-1\", 1, \"mat-drawer\", \"mat-sidenav\"], hostVars: 16, hostBindings: function MatSidenav_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵsyntheticHostListener(\"@transform.start\", function MatSidenav_animation_transform_start_HostBindingHandler($event) { return ctx._animationStarted.next($event); })(\"@transform.done\", function MatSidenav_animation_transform_done_HostBindingHandler($event) { return ctx._animationEnd.next($event); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"align\", null);\n        ɵngcc0.ɵɵsyntheticHostProperty(\"@transform\", ctx._animationState);\n        ɵngcc0.ɵɵstyleProp(\"top\", ctx.fixedInViewport ? ctx.fixedTopGap : null, \"px\")(\"bottom\", ctx.fixedInViewport ? ctx.fixedBottomGap : null, \"px\");\n        ɵngcc0.ɵɵclassProp(\"mat-drawer-end\", ctx.position === \"end\")(\"mat-drawer-over\", ctx.mode === \"over\")(\"mat-drawer-push\", ctx.mode === \"push\")(\"mat-drawer-side\", ctx.mode === \"side\")(\"mat-sidenav-fixed\", ctx.fixedInViewport);\n    } }, inputs: { fixedInViewport: \"fixedInViewport\", fixedTopGap: \"fixedTopGap\", fixedBottomGap: \"fixedBottomGap\" }, exportAs: [\"matSidenav\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c0, decls: 2, vars: 0, consts: [[1, \"mat-drawer-inner-container\"]], template: function MatSidenav_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n        ɵngcc0.ɵɵprojection(1);\n        ɵngcc0.ɵɵelementEnd();\n    } }, encapsulation: 2, data: { animation: [matDrawerAnimations.transformDrawer] }, changeDetection: 0 });\nMatSidenav.propDecorators = {\n    fixedInViewport: [{ type: Input }],\n    fixedTopGap: [{ type: Input }],\n    fixedBottomGap: [{ type: Input }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatSidenav, [{\n        type: Component,\n        args: [{ selector: 'mat-sidenav',\n                exportAs: 'matSidenav',\n                template: \"<div class=\\\"mat-drawer-inner-container\\\"><ng-content></ng-content></div>\",\n                animations: [matDrawerAnimations.transformDrawer],\n                host: {\n                    'class': 'mat-drawer mat-sidenav',\n                    'tabIndex': '-1',\n                    '[@transform]': '_animationState',\n                    '(@transform.start)': '_animationStarted.next($event)',\n                    '(@transform.done)': '_animationEnd.next($event)',\n                    // must prevent the browser from aligning text based on value\n                    '[attr.align]': 'null',\n                    '[class.mat-drawer-end]': 'position === \"end\"',\n                    '[class.mat-drawer-over]': 'mode === \"over\"',\n                    '[class.mat-drawer-push]': 'mode === \"push\"',\n                    '[class.mat-drawer-side]': 'mode === \"side\"',\n                    '[class.mat-sidenav-fixed]': 'fixedInViewport',\n                    '[style.top.px]': 'fixedInViewport ? fixedTopGap : null',\n                    '[style.bottom.px]': 'fixedInViewport ? fixedBottomGap : null'\n                },\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                encapsulation: ViewEncapsulation.None\n            }]\n    }], null, { fixedInViewport: [{\n            type: Input\n        }], fixedTopGap: [{\n            type: Input\n        }], fixedBottomGap: [{\n            type: Input\n        }] }); })();\nclass MatSidenavContainer extends MatDrawerContainer {\n}\nMatSidenavContainer.ɵfac = /*@__PURE__*/ function () { let ɵMatSidenavContainer_BaseFactory; return function MatSidenavContainer_Factory(t) { return (ɵMatSidenavContainer_BaseFactory || (ɵMatSidenavContainer_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatSidenavContainer)))(t || MatSidenavContainer); }; }();\nMatSidenavContainer.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: MatSidenavContainer, selectors: [[\"mat-sidenav-container\"]], contentQueries: function MatSidenavContainer_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatSidenavContent, 5);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatSidenav, 4);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._content = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._drawers = _t);\n    } }, hostAttrs: [1, \"mat-drawer-container\", \"mat-sidenav-container\"], hostVars: 2, hostBindings: function MatSidenavContainer_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mat-drawer-container-explicit-backdrop\", ctx._backdropOverride);\n    } }, exportAs: [\"matSidenavContainer\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c4, decls: 4, vars: 2, consts: [[\"class\", \"mat-drawer-backdrop\", 3, \"mat-drawer-shown\", \"click\", 4, \"ngIf\"], [\"cdkScrollable\", \"\", 4, \"ngIf\"], [1, \"mat-drawer-backdrop\", 3, \"click\"], [\"cdkScrollable\", \"\"]], template: function MatSidenavContainer_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c3);\n        ɵngcc0.ɵɵtemplate(0, MatSidenavContainer_div_0_Template, 1, 2, \"div\", 0);\n        ɵngcc0.ɵɵprojection(1);\n        ɵngcc0.ɵɵprojection(2, 1);\n        ɵngcc0.ɵɵtemplate(3, MatSidenavContainer_mat_sidenav_content_3_Template, 2, 0, \"mat-sidenav-content\", 1);\n    } if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.hasBackdrop);\n        ɵngcc0.ɵɵadvance(3);\n        ɵngcc0.ɵɵproperty(\"ngIf\", !ctx._content);\n    } }, dependencies: [ɵngcc5.NgIf, ɵngcc1.CdkScrollable, MatSidenavContent], styles: [_c5], encapsulation: 2, changeDetection: 0 });\nMatSidenavContainer.propDecorators = {\n    _drawers: [{ type: ContentChildren, args: [MatSidenav,] }],\n    _content: [{ type: ContentChild, args: [MatSidenavContent,] }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatSidenavContainer, [{\n        type: Component,\n        args: [{ selector: 'mat-sidenav-container', exportAs: 'matSidenavContainer', template: \"<div class=\\\"mat-drawer-backdrop\\\" (click)=\\\"_onBackdropClicked()\\\" *ngIf=\\\"hasBackdrop\\\" [class.mat-drawer-shown]=\\\"_isShowingBackdrop()\\\"></div><ng-content select=\\\"mat-sidenav\\\"></ng-content><ng-content select=\\\"mat-sidenav-content\\\"></ng-content><mat-sidenav-content *ngIf=\\\"!_content\\\" cdkScrollable><ng-content></ng-content></mat-sidenav-content>\", host: {\n                    'class': 'mat-drawer-container mat-sidenav-container',\n                    '[class.mat-drawer-container-explicit-backdrop]': '_backdropOverride'\n                }, changeDetection: ChangeDetectionStrategy.OnPush, encapsulation: ViewEncapsulation.None, styles: [\".mat-drawer-container{position:relative;z-index:1;box-sizing:border-box;-webkit-overflow-scrolling:touch;display:block;overflow:hidden}.mat-drawer-container[fullscreen]{top:0;left:0;right:0;bottom:0;position:absolute}.mat-drawer-container[fullscreen].mat-drawer-opened{overflow:hidden}.mat-drawer-container.mat-drawer-container-explicit-backdrop .mat-drawer-side{z-index:3}.mat-drawer-container.ng-animate-disabled .mat-drawer-backdrop,.mat-drawer-container.ng-animate-disabled .mat-drawer-content,.ng-animate-disabled .mat-drawer-container .mat-drawer-backdrop,.ng-animate-disabled .mat-drawer-container .mat-drawer-content{transition:none}.mat-drawer-backdrop{top:0;left:0;right:0;bottom:0;position:absolute;display:block;z-index:3;visibility:hidden}.mat-drawer-backdrop.mat-drawer-shown{visibility:visible}.mat-drawer-transition .mat-drawer-backdrop{transition-duration:.4s;transition-timing-function:cubic-bezier(.25,.8,.25,1);transition-property:background-color,visibility}@media (-ms-high-contrast:active){.mat-drawer-backdrop{opacity:.5}}.mat-drawer-content{position:relative;z-index:1;display:block;height:100%;overflow:auto}.mat-drawer-transition .mat-drawer-content{transition-duration:.4s;transition-timing-function:cubic-bezier(.25,.8,.25,1);transition-property:transform,margin-left,margin-right}.mat-drawer{position:relative;z-index:4;display:block;position:absolute;top:0;bottom:0;z-index:3;outline:0;box-sizing:border-box;overflow-y:auto;transform:translate3d(-100%,0,0)}@media (-ms-high-contrast:active){.mat-drawer,[dir=rtl] .mat-drawer.mat-drawer-end{border-right:solid 1px currentColor}}@media (-ms-high-contrast:active){.mat-drawer.mat-drawer-end,[dir=rtl] .mat-drawer{border-left:solid 1px currentColor;border-right:none}}.mat-drawer.mat-drawer-side{z-index:2}.mat-drawer.mat-drawer-end{right:0;transform:translate3d(100%,0,0)}[dir=rtl] .mat-drawer{transform:translate3d(100%,0,0)}[dir=rtl] .mat-drawer.mat-drawer-end{left:0;right:auto;transform:translate3d(-100%,0,0)}.mat-drawer-inner-container{width:100%;height:100%;overflow:auto;-webkit-overflow-scrolling:touch}.mat-sidenav-fixed{position:fixed}\"] }]\n    }], null, { _drawers: [{\n            type: ContentChildren,\n            args: [MatSidenav]\n        }], _content: [{\n            type: ContentChild,\n            args: [MatSidenavContent]\n        }] }); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass MatSidenavModule {\n}\nMatSidenavModule.ɵfac = function MatSidenavModule_Factory(t) { return new (t || MatSidenavModule)(); };\nMatSidenavModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: MatSidenavModule });\nMatSidenavModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ imports: [CommonModule,\n        MatCommonModule,\n        ScrollingModule,\n        PlatformModule, MatCommonModule] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatSidenavModule, [{\n        type: NgModule,\n        args: [{\n                imports: [\n                    CommonModule,\n                    MatCommonModule,\n                    ScrollingModule,\n                    PlatformModule,\n                ],\n                exports: [\n                    MatCommonModule,\n                    MatDrawer,\n                    MatDrawerContainer,\n                    MatDrawerContent,\n                    MatSidenav,\n                    MatSidenavContainer,\n                    MatSidenavContent,\n                ],\n                declarations: [\n                    MatDrawer,\n                    MatDrawerContainer,\n                    MatDrawerContent,\n                    MatSidenav,\n                    MatSidenavContainer,\n                    MatSidenavContent,\n                ]\n            }]\n    }], null, null); })();\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatSidenavModule, { declarations: function () { return [MatDrawer, MatDrawerContainer, MatDrawerContent, MatSidenav, MatSidenavContainer, MatSidenavContent]; }, imports: function () { return [CommonModule,\n        MatCommonModule,\n        ScrollingModule,\n        PlatformModule]; }, exports: function () { return [MatCommonModule, MatDrawer, MatDrawerContainer, MatDrawerContent, MatSidenav, MatSidenavContainer, MatSidenavContent]; } }); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\nexport { MatSidenavModule, throwMatDuplicatedDrawerError, MAT_DRAWER_DEFAULT_AUTOSIZE_FACTORY, MAT_DRAWER_DEFAULT_AUTOSIZE, MatDrawerContent, MatDrawer, MatDrawerContainer, MatSidenavContent, MatSidenav, MatSidenavContainer, matDrawerAnimations };\n\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,OAAT,EAAkBC,KAAlB,EAAyBC,KAAzB,EAAgCC,UAAhC,EAA4CC,OAA5C,QAA2D,qBAA3D;AACA,SAASC,YAAT,EAAuBC,gBAAvB,QAA+C,mBAA/C;AACA,SAASC,cAAT,QAA+B,mBAA/B;AACA,SAASC,qBAAT,EAAgCC,oBAAhC,QAA4D,uBAA5D;AACA,SAASC,MAAT,QAAuB,uBAAvB;AACA,SAASC,QAAT,EAAmBC,cAAnB,QAAyC,uBAAzC;AACA,SAASC,aAAT,EAAwBC,gBAAxB,EAA0CC,aAA1C,EAAyDC,eAAzD,QAAgF,wBAAhF;AACA,SAASC,QAAT,EAAmBC,YAAnB,QAAuC,iBAAvC;AACA,SAASC,uBAAT,EAAkCC,iBAAlC,EAAqDC,SAArD,EAAgEC,YAAhE,EAA8EC,eAA9E,EAA+FC,UAA/F,EAA2GC,YAA3G,EAAyHC,UAAzH,EAAqIC,MAArI,EAA6IC,cAA7I,EAA6JC,KAA7J,EAAoKC,MAApK,EAA4KC,QAA5K,EAAsLC,MAAtL,EAA8LC,SAA9L,EAAyMC,iBAAzM,EAA4NC,QAA5N,QAA4O,eAA5O;AACA,SAASC,SAAT,EAAoBC,KAApB,EAA2BC,OAA3B,QAA0C,MAA1C;AACA,SAASC,YAAT,EAAuBC,MAAvB,EAA+BC,GAA/B,EAAoCC,SAApC,EAA+CC,IAA/C,EAAqDC,SAArD,EAAgEC,oBAAhE,QAA4F,gBAA5F;AACA,SAASC,qBAAT,QAAsC,sCAAtC;AACA,SAASC,eAAT,QAAgC,wBAAhC;AAEA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,KAAKC,MAAZ,MAAwB,eAAxB;AACA,OAAO,KAAKC,MAAZ,MAAwB,wBAAxB;AACA,OAAO,KAAKC,MAAZ,MAAwB,mBAAxB;AACA,OAAO,KAAKC,MAAZ,MAAwB,uBAAxB;AACA,OAAO,KAAKC,MAAZ,MAAwB,mBAAxB;AACA,OAAO,KAAKC,MAAZ,MAAwB,iBAAxB;AAEA,MAAMC,GAAG,GAAG,CAAC,GAAD,CAAZ;;AACA,SAASC,iCAAT,CAA2CC,EAA3C,EAA+CC,GAA/C,EAAoD;EAAE,IAAID,EAAE,GAAG,CAAT,EAAY;IAC9D,MAAME,GAAG,GAAGV,MAAM,CAACW,gBAAP,EAAZ;;IACAX,MAAM,CAACY,cAAP,CAAsB,CAAtB,EAAyB,KAAzB,EAAgC,CAAhC;IACAZ,MAAM,CAACa,UAAP,CAAkB,OAAlB,EAA2B,SAASC,sDAAT,GAAkE;MAAEd,MAAM,CAACe,aAAP,CAAqBL,GAArB;MAA2B,MAAMM,MAAM,GAAGhB,MAAM,CAACiB,aAAP,EAAf;MAAuC,OAAOjB,MAAM,CAACkB,WAAP,CAAmBF,MAAM,CAACG,kBAAP,EAAnB,CAAP;IAAyD,CAA1N;IACAnB,MAAM,CAACoB,YAAP;EACH;;EAAC,IAAIZ,EAAE,GAAG,CAAT,EAAY;IACV,MAAMa,MAAM,GAAGrB,MAAM,CAACiB,aAAP,EAAf;IACAjB,MAAM,CAACsB,WAAP,CAAmB,kBAAnB,EAAuCD,MAAM,CAACE,kBAAP,EAAvC;EACH;AAAE;;AACH,SAASC,gDAAT,CAA0DhB,EAA1D,EAA8DC,GAA9D,EAAmE;EAAE,IAAID,EAAE,GAAG,CAAT,EAAY;IAC7ER,MAAM,CAACY,cAAP,CAAsB,CAAtB,EAAyB,oBAAzB;IACAZ,MAAM,CAACyB,YAAP,CAAoB,CAApB,EAAuB,CAAvB;IACAzB,MAAM,CAACoB,YAAP;EACH;AAAE;;AACH,MAAMM,GAAG,GAAG,CAAC,CAAC,CAAC,YAAD,CAAD,CAAD,EAAmB,CAAC,CAAC,oBAAD,CAAD,CAAnB,EAA6C,GAA7C,CAAZ;AACA,MAAMC,GAAG,GAAG,CAAC,YAAD,EAAe,oBAAf,EAAqC,GAArC,CAAZ;;AACA,SAASC,kCAAT,CAA4CpB,EAA5C,EAAgDC,GAAhD,EAAqD;EAAE,IAAID,EAAE,GAAG,CAAT,EAAY;IAC/D,MAAME,GAAG,GAAGV,MAAM,CAACW,gBAAP,EAAZ;;IACAX,MAAM,CAACY,cAAP,CAAsB,CAAtB,EAAyB,KAAzB,EAAgC,CAAhC;IACAZ,MAAM,CAACa,UAAP,CAAkB,OAAlB,EAA2B,SAASgB,uDAAT,GAAmE;MAAE7B,MAAM,CAACe,aAAP,CAAqBL,GAArB;MAA2B,MAAMM,MAAM,GAAGhB,MAAM,CAACiB,aAAP,EAAf;MAAuC,OAAOjB,MAAM,CAACkB,WAAP,CAAmBF,MAAM,CAACG,kBAAP,EAAnB,CAAP;IAAyD,CAA3N;IACAnB,MAAM,CAACoB,YAAP;EACH;;EAAC,IAAIZ,EAAE,GAAG,CAAT,EAAY;IACV,MAAMa,MAAM,GAAGrB,MAAM,CAACiB,aAAP,EAAf;IACAjB,MAAM,CAACsB,WAAP,CAAmB,kBAAnB,EAAuCD,MAAM,CAACE,kBAAP,EAAvC;EACH;AAAE;;AACH,SAASO,kDAAT,CAA4DtB,EAA5D,EAAgEC,GAAhE,EAAqE;EAAE,IAAID,EAAE,GAAG,CAAT,EAAY;IAC/ER,MAAM,CAACY,cAAP,CAAsB,CAAtB,EAAyB,qBAAzB,EAAgD,CAAhD;IACAZ,MAAM,CAACyB,YAAP,CAAoB,CAApB,EAAuB,CAAvB;IACAzB,MAAM,CAACoB,YAAP;EACH;AAAE;;AACH,MAAMW,GAAG,GAAG,CAAC,CAAC,CAAC,aAAD,CAAD,CAAD,EAAoB,CAAC,CAAC,qBAAD,CAAD,CAApB,EAA+C,GAA/C,CAAZ;AACA,MAAMC,GAAG,GAAG,CAAC,aAAD,EAAgB,qBAAhB,EAAuC,GAAvC,CAAZ;AACA,MAAMC,GAAG,GAAG,8kEAAZ;AACA,MAAMC,mBAAmB,GAAG;EACxB;AACJ;AACA;EACIC,eAAe,EAAE/E,OAAO,CAAC,WAAD,EAAc,CAClC;EACA;EACA;EACA;EACAH,KAAK,CAAC,oBAAD,EAAuBC,KAAK,CAAC;IAC9B,aAAa,MADiB;IAE9B,cAAc;EAFgB,CAAD,CAA5B,CAL6B,EASlCD,KAAK,CAAC,MAAD,EAASC,KAAK,CAAC;IAChB;IACA,cAAc,MAFE;IAGhB,cAAc;EAHE,CAAD,CAAd,CAT6B,EAclCC,UAAU,CAAC,sBAAD,EAAyBH,OAAO,CAAC,KAAD,CAAhC,CAdwB,EAelCG,UAAU,CAAC,qCAAD,EAAwCH,OAAO,CAAC,wCAAD,CAA/C,CAfwB,CAAd;AAJA,CAA5B;AAuBA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,SAASoF,6BAAT,CAAuCC,QAAvC,EAAiD;EAC7C,MAAMC,KAAK,CAAE,gDAA+CD,QAAS,IAA1D,CAAX;AACH;AACD;AACA;AACA;AACA;;;AACA,MAAME,2BAA2B,GAAG,IAAI3D,cAAJ,CAAmB,6BAAnB,EAAkD;EAClF4D,UAAU,EAAE,MADsE;EAElFC,OAAO,EAAEC;AAFyE,CAAlD,CAApC;AAIA;AACA;AACA;AACA;;AACA,SAASA,mCAAT,GAA+C;EAC3C,OAAO,KAAP;AACH;;AACD,MAAMC,gBAAN,SAA+B9E,aAA/B,CAA6C;EACzC;AACJ;AACA;AACA;AACA;AACA;AACA;EACI+E,WAAW,CAACC,kBAAD,EAAqBC,UAArB,EAAiCC,UAAjC,EAA6CC,gBAA7C,EAA+DC,MAA/D,EAAuE;IAC9E,MAAMF,UAAN,EAAkBC,gBAAlB,EAAoCC,MAApC;IACA,KAAKJ,kBAAL,GAA0BA,kBAA1B;IACA,KAAKC,UAAL,GAAkBA,UAAlB;EACH;EACD;AACJ;AACA;;;EACII,kBAAkB,GAAG;IACjB,KAAKJ,UAAL,CAAgBK,qBAAhB,CAAsCC,SAAtC,CAAgD,MAAM;MAClD,KAAKP,kBAAL,CAAwBQ,YAAxB;IACH,CAFD;EAGH;;AApBwC;;AAsB7CV,gBAAgB,CAACW,IAAjB,GAAwB,SAASC,wBAAT,CAAkCC,CAAlC,EAAqC;EAAE,OAAO,KAAKA,CAAC,IAAIb,gBAAV,EAA4B3C,MAAM,CAACyD,iBAAP,CAAyBzD,MAAM,CAAC5B,iBAAhC,CAA5B,EAAgF4B,MAAM,CAACyD,iBAAP,CAAyB/E,UAAU,CAAC,MAAMgF,kBAAP,CAAnC,CAAhF,EAAgJ1D,MAAM,CAACyD,iBAAP,CAAyBzD,MAAM,CAACxB,UAAhC,CAAhJ,EAA6LwB,MAAM,CAACyD,iBAAP,CAAyBxD,MAAM,CAACnC,gBAAhC,CAA7L,EAAgPkC,MAAM,CAACyD,iBAAP,CAAyBzD,MAAM,CAAClB,MAAhC,CAAhP,CAAP;AAAkS,CAAjW;;AACA6D,gBAAgB,CAACgB,IAAjB,GAAwB,aAAc3D,MAAM,CAAC4D,iBAAP,CAAyB;EAAEC,IAAI,EAAElB,gBAAR;EAA0BmB,SAAS,EAAE,CAAC,CAAC,oBAAD,CAAD,CAArC;EAA+DC,SAAS,EAAE,CAAC,CAAD,EAAI,oBAAJ,CAA1E;EAAqGC,QAAQ,EAAE,CAA/G;EAAkHC,YAAY,EAAE,SAASC,6BAAT,CAAuC1D,EAAvC,EAA2CC,GAA3C,EAAgD;IAAE,IAAID,EAAE,GAAG,CAAT,EAAY;MACrPR,MAAM,CAACmE,WAAP,CAAmB,aAAnB,EAAkC1D,GAAG,CAACqC,UAAJ,CAAesB,eAAf,CAA+BC,IAAjE,EAAuE,IAAvE,EAA6E,cAA7E,EAA6F5D,GAAG,CAACqC,UAAJ,CAAesB,eAAf,CAA+BE,KAA5H,EAAmI,IAAnI;IACH;EAAE,CAFwD;EAEtDC,QAAQ,EAAE,CAACvE,MAAM,CAACwE,0BAAR,CAF4C;EAEPC,kBAAkB,EAAEnE,GAFb;EAEkBoE,KAAK,EAAE,CAFzB;EAE4BC,IAAI,EAAE,CAFlC;EAEqCC,QAAQ,EAAE,SAASC,yBAAT,CAAmCrE,EAAnC,EAAuCC,GAAvC,EAA4C;IAAE,IAAID,EAAE,GAAG,CAAT,EAAY;MAChKR,MAAM,CAAC8E,eAAP;MACA9E,MAAM,CAACyB,YAAP,CAAoB,CAApB;IACH;EAAE,CALwD;EAKtDsD,aAAa,EAAE,CALuC;EAKpCC,eAAe,EAAE;AALmB,CAAzB,CAAtC;AAMA;;AACArC,gBAAgB,CAACsC,cAAjB,GAAkC,MAAM,CACpC;EAAEpB,IAAI,EAAEzF;AAAR,CADoC,EAEpC;EAAEyF,IAAI,EAAEH,kBAAR;EAA4BwB,UAAU,EAAE,CAAC;IAAErB,IAAI,EAAElF,MAAR;IAAgBwG,IAAI,EAAE,CAACzG,UAAU,CAAC,MAAMgF,kBAAP,CAAX;EAAtB,CAAD;AAAxC,CAFoC,EAGpC;EAAEG,IAAI,EAAErF;AAAR,CAHoC,EAIpC;EAAEqF,IAAI,EAAE/F;AAAR,CAJoC,EAKpC;EAAE+F,IAAI,EAAE/E;AAAR,CALoC,CAAxC;;AAOA,CAAC,YAAY;EAAE,CAAC,OAAOsG,SAAP,KAAqB,WAArB,IAAoCA,SAArC,KAAmDpF,MAAM,CAACqF,iBAAP,CAAyB1C,gBAAzB,EAA2C,CAAC;IACtGkB,IAAI,EAAExF,SADgG;IAEtG8G,IAAI,EAAE,CAAC;MAAEG,QAAQ,EAAE,oBAAZ;MACCV,QAAQ,EAAE,2BADX;MAECW,IAAI,EAAE;QACF,SAAS,oBADP;QAEF,0BAA0B,iCAFxB;QAGF,2BAA2B;MAHzB,CAFP;MAOCP,eAAe,EAAE7G,uBAAuB,CAACqH,MAP1C;MAQCT,aAAa,EAAE7F,iBAAiB,CAACuG;IARlC,CAAD;EAFgG,CAAD,CAA3C,EAY1D,YAAY;IAAE,OAAO,CAAC;MAAE5B,IAAI,EAAE7D,MAAM,CAAC5B;IAAf,CAAD,EAAqC;MAAEyF,IAAI,EAAEH,kBAAR;MAA4BwB,UAAU,EAAE,CAAC;QAC3FrB,IAAI,EAAElF,MADqF;QAE3FwG,IAAI,EAAE,CAACzG,UAAU,CAAC,MAAMgF,kBAAP,CAAX;MAFqF,CAAD;IAAxC,CAArC,EAGX;MAAEG,IAAI,EAAE7D,MAAM,CAACxB;IAAf,CAHW,EAGkB;MAAEqF,IAAI,EAAE5D,MAAM,CAACnC;IAAf,CAHlB,EAGqD;MAAE+F,IAAI,EAAE7D,MAAM,CAAClB;IAAf,CAHrD,CAAP;EAGuF,CAf3C,EAe6C,IAf7C,CAAnD;AAewG,CAfvH;AAgBA;AACA;AACA;;;AACA,MAAM4G,SAAN,CAAgB;EACZ;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;EACI9C,WAAW,CAAC+C,WAAD,EAAcC,iBAAd,EAAiCC,aAAjC,EAAgDC,SAAhD,EAA2DC,OAA3D,EAAoEC,IAApE,EAA0E;IACjF,KAAKL,WAAL,GAAmBA,WAAnB;IACA,KAAKC,iBAAL,GAAyBA,iBAAzB;IACA,KAAKC,aAAL,GAAqBA,aAArB;IACA,KAAKC,SAAL,GAAiBA,SAAjB;IACA,KAAKC,OAAL,GAAeA,OAAf;IACA,KAAKC,IAAL,GAAYA,IAAZ;IACA,KAAKC,oCAAL,GAA4C,IAA5C;IACA;AACR;AACA;;IACQ,KAAKC,iBAAL,GAAyB,KAAzB;IACA,KAAKC,SAAL,GAAiB,OAAjB;IACA,KAAKC,KAAL,GAAa,MAAb;IACA,KAAKC,aAAL,GAAqB,KAArB;IACA,KAAKC,UAAL,GAAkB,IAAlB;IACA;AACR;AACA;;IACQ,KAAKC,iBAAL,GAAyB,IAAIjH,OAAJ,EAAzB;IACA;AACR;AACA;;IACQ,KAAKkH,aAAL,GAAqB,IAAIlH,OAAJ,EAArB;IACA;AACR;AACA;;IACQ,KAAKmH,eAAL,GAAuB,MAAvB;IACA;AACR;AACA;;IACQ,KAAKC,YAAL,GACA;IACA,IAAIjI,YAAJ;IAAiB;IAAc,IAA/B,CAFA;IAGA;AACR;AACA;;IACQ,KAAKkI,UAAL,GAAkB,IAAIrH,OAAJ,EAAlB;IACA;AACR;AACA;IACQ;;IACA,KAAKsH,iBAAL,GAAyB,IAAInI,YAAJ,EAAzB;IACA;AACR;AACA;AACA;;IACQ,KAAKoI,YAAL,GAAoB,IAAIvH,OAAJ,EAApB;IACA,KAAKwH,OAAL,GAAe,KAAf;IACA,KAAKJ,YAAL,CAAkBtD,SAAlB,CAA6B2D,MAAD,IAAY;MACpC,IAAIA,MAAJ,EAAY;QACR,IAAI,KAAKf,IAAT,EAAe;UACX,KAAKC,oCAAL;UAA6C;UAAkB,KAAKD,IAAL,CAAUgB,aAAzE;QACH;;QACD,IAAI,KAAKC,mBAAL,IAA4B,KAAKC,UAArC,EAAiD;UAC7C,KAAKC,UAAL;QACH;MACJ,CAPD,MAQK;QACD,KAAKC,aAAL;MACH;IACJ,CAZD;IAaA;AACR;AACA;AACA;AACA;;IACQ,KAAKrB,OAAL,CAAasB,iBAAb,CAA+B,MAAM;MACjCjI,SAAS,CAAC,KAAKuG,WAAL,CAAiB2B,aAAlB,EAAiC,SAAjC,CAAT,CAAqDC,IAArD,CAA0D/H,MAAM,CAACgI,KAAK,IAAIA,KAAK,CAACC,OAAN,KAAkB/J,MAAlB,IAA4B,CAAC,KAAKgK,YAA5C,CAAhE,EAA2H9H,SAAS,CAAC,KAAK+G,UAAN,CAApI,EAAuJvD,SAAvJ,CAAiKoE,KAAK,IAAI,KAAKzB,OAAL,CAAa4B,GAAb,CAAiB,MAAM;QAC7L,KAAKC,KAAL;QACAJ,KAAK,CAACK,eAAN;MACH,CAHyK,CAA1K;IAIH,CALD,EAnEiF,CAyEjF;IACA;;;IACA,KAAKrB,aAAL,CAAmBe,IAAnB,CAAwB1H,oBAAoB,CAAC,CAACiI,CAAD,EAAIC,CAAJ,KAAU;MACnD,OAAOD,CAAC,CAACE,SAAF,KAAgBD,CAAC,CAACC,SAAlB,IAA+BF,CAAC,CAACG,OAAF,KAAcF,CAAC,CAACE,OAAtD;IACH,CAF2C,CAA5C,EAEI7E,SAFJ,CAEeoE,KAAD,IAAW;MACrB,MAAM;QAAEQ,SAAF;QAAaC;MAAb,IAAyBT,KAA/B;;MACA,IAAKS,OAAO,CAACC,OAAR,CAAgB,MAAhB,MAA4B,CAA5B,IAAiCF,SAAS,KAAK,MAAhD,IACCC,OAAO,KAAK,MAAZ,IAAsBD,SAAS,CAACE,OAAV,CAAkB,MAAlB,MAA8B,CADzD,EAC6D;QACzD,KAAKxB,YAAL,CAAkByB,IAAlB,CAAuB,KAAKrB,OAA5B;MACH;IACJ,CARD;EASH;EACD;AACJ;AACA;AACA;;;EACgB,IAARzE,QAAQ,GAAG;IAAE,OAAO,KAAK8D,SAAZ;EAAwB;EACzC;AACJ;AACA;AACA;;;EACgB,IAAR9D,QAAQ,CAAC+F,KAAD,EAAQ;IAChB;IACAA,KAAK,GAAGA,KAAK,KAAK,KAAV,GAAkB,KAAlB,GAA0B,OAAlC;;IACA,IAAIA,KAAK,IAAI,KAAKjC,SAAlB,EAA6B;MACzB,KAAKA,SAAL,GAAiBiC,KAAjB;MACA,KAAKxB,iBAAL,CAAuBuB,IAAvB;IACH;EACJ;EACD;AACJ;AACA;AACA;;;EACY,IAAJE,IAAI,GAAG;IAAE,OAAO,KAAKjC,KAAZ;EAAoB;EACjC;AACJ;AACA;AACA;;;EACY,IAAJiC,IAAI,CAACD,KAAD,EAAQ;IACZ,KAAKhC,KAAL,GAAagC,KAAb;;IACA,KAAKvB,YAAL,CAAkByB,IAAlB;EACH;EACD;AACJ;AACA;AACA;;;EACoB,IAAZZ,YAAY,GAAG;IAAE,OAAO,KAAKrB,aAAZ;EAA4B;EACjD;AACJ;AACA;AACA;;;EACoB,IAAZqB,YAAY,CAACU,KAAD,EAAQ;IAAE,KAAK/B,aAAL,GAAqB7I,qBAAqB,CAAC4K,KAAD,CAA1C;EAAoD;EAC9E;AACJ;AACA;AACA;;;EACiB,IAATG,SAAS,GAAG;IAAE,OAAO,KAAKjC,UAAZ;EAAyB;EAC3C;AACJ;AACA;AACA;;;EACiB,IAATiC,SAAS,CAACH,KAAD,EAAQ;IAAE,KAAK9B,UAAL,GAAkB9I,qBAAqB,CAAC4K,KAAD,CAAvC;EAAiD;EACxE;AACJ;AACA;AACA;;;EACqB,IAAbI,aAAa,GAAG;IAChB,OAAO,KAAK9B,YAAL,CAAkBa,IAAlB,CAAuB/H,MAAM,CAACiJ,CAAC,IAAIA,CAAN,CAA7B,EAAuChJ,GAAG,CAAC,MAAM,CAAG,CAAV,CAA1C,CAAP;EACH;EACD;AACJ;AACA;AACA;;;EACmB,IAAXiJ,WAAW,GAAG;IACd,OAAO,KAAKnC,iBAAL,CAAuBgB,IAAvB,CAA4B/H,MAAM,CAACmJ,CAAC,IAAIA,CAAC,CAACX,SAAF,KAAgBW,CAAC,CAACV,OAAlB,IAA6BU,CAAC,CAACV,OAAF,CAAUC,OAAV,CAAkB,MAAlB,MAA8B,CAAjE,CAAlC,EAAuGzI,GAAG,CAAC,MAAM,CAAG,CAAV,CAA1G,CAAP;EACH;EACD;AACJ;AACA;AACA;;;EACqB,IAAbmJ,aAAa,GAAG;IAChB,OAAO,KAAKlC,YAAL,CAAkBa,IAAlB,CAAuB/H,MAAM,CAACiJ,CAAC,IAAI,CAACA,CAAP,CAA7B,EAAwChJ,GAAG,CAAC,MAAM,CAAG,CAAV,CAA3C,CAAP;EACH;EACD;AACJ;AACA;AACA;;;EACmB,IAAXoJ,WAAW,GAAG;IACd,OAAO,KAAKtC,iBAAL,CAAuBgB,IAAvB,CAA4B/H,MAAM,CAACmJ,CAAC,IAAIA,CAAC,CAACX,SAAF,KAAgBW,CAAC,CAACV,OAAlB,IAA6BU,CAAC,CAACV,OAAF,KAAc,MAAjD,CAAlC,EAA4FxI,GAAG,CAAC,MAAM,CAAG,CAAV,CAA/F,CAAP;EACH;EACD;AACJ;AACA;;;EAC2B,IAAnBwH,mBAAmB,GAAG;IACtB;IACA,OAAO,KAAKF,MAAL,IAAe,KAAKsB,IAAL,KAAc,MAApC;EACH;EACD;AACJ;AACA;AACA;AACA;;;EACIlB,UAAU,GAAG;IACT,IAAI,CAAC,KAAKoB,SAAV,EAAqB;MACjB;IACH;;IACD,KAAKrB,UAAL,CAAgB4B,4BAAhB,GAA+CC,IAA/C,CAAoDC,aAAa,IAAI;MACjE;MACA;MACA,IAAI,CAACA,aAAD,IAAkB,OAAO,KAAKrD,WAAL,CAAiB2B,aAAjB,CAA+B2B,KAAtC,KAAgD,UAAtE,EAAkF;QAC9E,KAAKtD,WAAL,CAAiB2B,aAAjB,CAA+B2B,KAA/B;MACH;IACJ,CAND;EAOH;EACD;AACJ;AACA;AACA;AACA;AACA;;;EACI7B,aAAa,GAAG;IACZ,IAAI,CAAC,KAAKmB,SAAV,EAAqB;MACjB;IACH;IACD;;;IACA,MAAMW,QAAQ,GAAG,KAAKlD,IAAL,IAAa,KAAKA,IAAL,CAAUgB,aAAxC;;IACA,IAAIkC,QAAQ,IAAI,KAAKvD,WAAL,CAAiB2B,aAAjB,CAA+B6B,QAA/B,CAAwCD,QAAxC,CAAhB,EAAmE;MAC/D,IAAI,KAAKjD,oCAAL,YAAqDmD,WAAzD,EAAsE;QAClE,KAAKvD,aAAL,CAAmBwD,QAAnB,CAA4B,KAAKpD,oCAAjC,EAAuE,KAAKqD,UAA5E;MACH,CAFD,MAGK;QACD,KAAK3D,WAAL,CAAiB2B,aAAjB,CAA+BiC,IAA/B;MACH;IACJ;;IACD,KAAKtD,oCAAL,GAA4C,IAA5C;IACA,KAAKqD,UAAL,GAAkB,IAAlB;EACH;EACD;AACJ;AACA;;;EACIpG,kBAAkB,GAAG;IACjB,KAAKgE,UAAL,GAAkB,KAAKtB,iBAAL,CAAuB4D,MAAvB,CAA8B,KAAK7D,WAAL,CAAiB2B,aAA/C,CAAlB;IACA,KAAKJ,UAAL,CAAgBuC,OAAhB,GAA0B,KAAKxC,mBAA/B;EACH;EACD;AACJ;AACA;;;EACIyC,qBAAqB,GAAG;IACpB;IACA;IACA;IACA;IACA,IAAI,KAAK5D,SAAL,CAAe6D,SAAnB,EAA8B;MAC1B,KAAKzD,iBAAL,GAAyB,IAAzB;IACH;EACJ;EACD;AACJ;AACA;;;EACI0D,WAAW,GAAG;IACV,IAAI,KAAK1C,UAAT,EAAqB;MACjB,KAAKA,UAAL,CAAgB2C,OAAhB;IACH;;IACD,KAAKtD,iBAAL,CAAuBuD,QAAvB;;IACA,KAAKtD,aAAL,CAAmBsD,QAAnB;;IACA,KAAKjD,YAAL,CAAkBiD,QAAlB;;IACA,KAAKnD,UAAL,CAAgB2B,IAAhB;;IACA,KAAK3B,UAAL,CAAgBmD,QAAhB;EACH;EACD;AACJ;AACA;AACA;AACA;;;EACc,IAAN/C,MAAM,GAAG;IAAE,OAAO,KAAKD,OAAZ;EAAsB;EACrC;AACJ;AACA;AACA;;;EACc,IAANC,MAAM,CAACqB,KAAD,EAAQ;IAAE,KAAK2B,MAAL,CAAYvM,qBAAqB,CAAC4K,KAAD,CAAjC;EAA4C;EAChE;AACJ;AACA;AACA;AACA;AACA;;;EACI4B,IAAI,CAACC,SAAD,EAAY;IACZ,OAAO,KAAKF,MAAL,CAAY,IAAZ,EAAkBE,SAAlB,CAAP;EACH;EACD;AACJ;AACA;AACA;;;EACIrC,KAAK,GAAG;IACJ,OAAO,KAAKmC,MAAL,CAAY,KAAZ,CAAP;EACH;EACD;AACJ;AACA;AACA;AACA;AACA;AACA;;;EACIA,MAAM,CAACG,MAAM,GAAG,CAAC,KAAKnD,MAAhB,EAAwBkD,SAAS,GAAG,SAApC,EAA+C;IACjD,KAAKnD,OAAL,GAAeoD,MAAf;;IACA,IAAIA,MAAJ,EAAY;MACR,KAAKzD,eAAL,GAAuB,KAAKP,iBAAL,GAAyB,MAAzB,GAAkC,cAAzD;MACA,KAAKoD,UAAL,GAAkBW,SAAlB;IACH,CAHD,MAIK;MACD,KAAKxD,eAAL,GAAuB,MAAvB;;MACA,KAAKW,aAAL;IACH;;IACD,IAAI,KAAKF,UAAT,EAAqB;MACjB,KAAKA,UAAL,CAAgBuC,OAAhB,GAA0B,KAAKxC,mBAA/B;IACH;;IACD,OAAO,IAAIkD,OAAJ,CAAYC,OAAO,IAAI;MAC1B,KAAK1D,YAAL,CAAkBa,IAAlB,CAAuB5H,IAAI,CAAC,CAAD,CAA3B,EAAgCyD,SAAhC,CAA0C4G,IAAI,IAAII,OAAO,CAACJ,IAAI,GAAG,MAAH,GAAY,OAAjB,CAAzD;IACH,CAFM,CAAP;EAGH;EACD;AACJ;AACA;;;EACc,IAANK,MAAM,GAAG;IACT,OAAO,KAAK1E,WAAL,CAAiB2B,aAAjB,GAAkC,KAAK3B,WAAL,CAAiB2B,aAAjB,CAA+BgD,WAA/B,IAA8C,CAAhF,GAAqF,CAA5F;EACH;;AAnTW;;AAqThB5E,SAAS,CAACpC,IAAV,GAAiB,SAASiH,iBAAT,CAA2B/G,CAA3B,EAA8B;EAAE,OAAO,KAAKA,CAAC,IAAIkC,SAAV,EAAqB1F,MAAM,CAACyD,iBAAP,CAAyBzD,MAAM,CAACxB,UAAhC,CAArB,EAAkEwB,MAAM,CAACyD,iBAAP,CAAyBvD,MAAM,CAAC5C,gBAAhC,CAAlE,EAAqH0C,MAAM,CAACyD,iBAAP,CAAyBvD,MAAM,CAAC7C,YAAhC,CAArH,EAAoK2C,MAAM,CAACyD,iBAAP,CAAyBtD,MAAM,CAACxC,QAAhC,CAApK,EAA+MqC,MAAM,CAACyD,iBAAP,CAAyBzD,MAAM,CAAClB,MAAhC,CAA/M,EAAwPkB,MAAM,CAACyD,iBAAP,CAAyBxF,QAAzB,EAAmC,CAAnC,CAAxP,CAAP;AAAwS,CAAzV;;AACAyH,SAAS,CAAC/B,IAAV,GAAiB,aAAc3D,MAAM,CAAC4D,iBAAP,CAAyB;EAAEC,IAAI,EAAE6B,SAAR;EAAmB5B,SAAS,EAAE,CAAC,CAAC,YAAD,CAAD,CAA9B;EAAgDC,SAAS,EAAE,CAAC,UAAD,EAAa,IAAb,EAAmB,CAAnB,EAAsB,YAAtB,CAA3D;EAAgGC,QAAQ,EAAE,EAA1G;EAA8GC,YAAY,EAAE,SAASuG,sBAAT,CAAgChK,EAAhC,EAAoCC,GAApC,EAAyC;IAAE,IAAID,EAAE,GAAG,CAAT,EAAY;MACnOR,MAAM,CAACyK,uBAAP,CAA+B,kBAA/B,EAAmD,SAASC,sDAAT,CAAgEC,MAAhE,EAAwE;QAAE,OAAOlK,GAAG,CAAC8F,iBAAJ,CAAsB+B,IAAtB,CAA2BqC,MAA3B,CAAP;MAA4C,CAAzK,EAA2K,iBAA3K,EAA8L,SAASC,qDAAT,CAA+DD,MAA/D,EAAuE;QAAE,OAAOlK,GAAG,CAAC+F,aAAJ,CAAkB8B,IAAlB,CAAuBqC,MAAvB,CAAP;MAAwC,CAA/S;IACH;;IAAC,IAAInK,EAAE,GAAG,CAAT,EAAY;MACVR,MAAM,CAAC6K,WAAP,CAAmB,OAAnB,EAA4B,IAA5B;MACA7K,MAAM,CAAC8K,uBAAP,CAA+B,YAA/B,EAA6CrK,GAAG,CAACgG,eAAjD;MACAzG,MAAM,CAACsB,WAAP,CAAmB,gBAAnB,EAAqCb,GAAG,CAAC4B,QAAJ,KAAiB,KAAtD,EAA6D,iBAA7D,EAAgF5B,GAAG,CAAC4H,IAAJ,KAAa,MAA7F,EAAqG,iBAArG,EAAwH5H,GAAG,CAAC4H,IAAJ,KAAa,MAArI,EAA6I,iBAA7I,EAAgK5H,GAAG,CAAC4H,IAAJ,KAAa,MAA7K;IACH;EAAE,CANiD;EAM/C0C,MAAM,EAAE;IAAE1I,QAAQ,EAAE,UAAZ;IAAwBgG,IAAI,EAAE,MAA9B;IAAsCX,YAAY,EAAE,cAApD;IAAoEa,SAAS,EAAE,WAA/E;IAA4FxB,MAAM,EAAE;EAApG,CANuC;EAMyEiE,OAAO,EAAE;IAAEtE,YAAY,EAAE,cAAhB;IAAgCE,iBAAiB,EAAE,iBAAnD;IAAsE4B,aAAa,EAAE,QAArF;IAA+FE,WAAW,EAAE,aAA5G;IAA2HE,aAAa,EAAE,QAA1I;IAAoJC,WAAW,EAAE;EAAjK,CANlF;EAMoQoC,QAAQ,EAAE,CAAC,WAAD,CAN9Q;EAM6RxG,kBAAkB,EAAEnE,GANjT;EAMsToE,KAAK,EAAE,CAN7T;EAMgUC,IAAI,EAAE,CANtU;EAMyUuG,MAAM,EAAE,CAAC,CAAC,CAAD,EAAI,4BAAJ,CAAD,CANjV;EAMsXtG,QAAQ,EAAE,SAASuG,kBAAT,CAA4B3K,EAA5B,EAAgCC,GAAhC,EAAqC;IAAE,IAAID,EAAE,GAAG,CAAT,EAAY;MACneR,MAAM,CAAC8E,eAAP;MACA9E,MAAM,CAACY,cAAP,CAAsB,CAAtB,EAAyB,KAAzB,EAAgC,CAAhC;MACAZ,MAAM,CAACyB,YAAP,CAAoB,CAApB;MACAzB,MAAM,CAACoB,YAAP;IACH;EAAE,CAXiD;EAW/C2D,aAAa,EAAE,CAXgC;EAW7BqG,IAAI,EAAE;IAAEC,SAAS,EAAE,CAACnJ,mBAAmB,CAACC,eAArB;EAAb,CAXuB;EAW+B6C,eAAe,EAAE;AAXhD,CAAzB,CAA/B;AAYA;;AACAU,SAAS,CAACT,cAAV,GAA2B,MAAM,CAC7B;EAAEpB,IAAI,EAAErF;AAAR,CAD6B,EAE7B;EAAEqF,IAAI,EAAEvG;AAAR,CAF6B,EAG7B;EAAEuG,IAAI,EAAExG;AAAR,CAH6B,EAI7B;EAAEwG,IAAI,EAAElG;AAAR,CAJ6B,EAK7B;EAAEkG,IAAI,EAAE/E;AAAR,CAL6B,EAM7B;EAAE+E,IAAI,EAAEyH,SAAR;EAAmBpG,UAAU,EAAE,CAAC;IAAErB,IAAI,EAAE9E;EAAR,CAAD,EAAqB;IAAE8E,IAAI,EAAElF,MAAR;IAAgBwG,IAAI,EAAE,CAAClH,QAAD;EAAtB,CAArB;AAA/B,CAN6B,CAAjC;;AAQAyH,SAAS,CAAC6F,cAAV,GAA2B;EACvBlJ,QAAQ,EAAE,CAAC;IAAEwB,IAAI,EAAEhF;EAAR,CAAD,CADa;EAEvBwJ,IAAI,EAAE,CAAC;IAAExE,IAAI,EAAEhF;EAAR,CAAD,CAFiB;EAGvB6I,YAAY,EAAE,CAAC;IAAE7D,IAAI,EAAEhF;EAAR,CAAD,CAHS;EAIvB0J,SAAS,EAAE,CAAC;IAAE1E,IAAI,EAAEhF;EAAR,CAAD,CAJY;EAKvB6H,YAAY,EAAE,CAAC;IAAE7C,IAAI,EAAE7E;EAAR,CAAD,CALS;EAMvBwJ,aAAa,EAAE,CAAC;IAAE3E,IAAI,EAAE7E,MAAR;IAAgBmG,IAAI,EAAE,CAAC,QAAD;EAAtB,CAAD,CANQ;EAOvBuD,WAAW,EAAE,CAAC;IAAE7E,IAAI,EAAE7E;EAAR,CAAD,CAPU;EAQvB4J,aAAa,EAAE,CAAC;IAAE/E,IAAI,EAAE7E,MAAR;IAAgBmG,IAAI,EAAE,CAAC,QAAD;EAAtB,CAAD,CARQ;EASvB0D,WAAW,EAAE,CAAC;IAAEhF,IAAI,EAAE7E;EAAR,CAAD,CATU;EAUvB4H,iBAAiB,EAAE,CAAC;IAAE/C,IAAI,EAAE7E,MAAR;IAAgBmG,IAAI,EAAE,CAAC,iBAAD;EAAtB,CAAD,CAVI;EAWvB4B,MAAM,EAAE,CAAC;IAAElD,IAAI,EAAEhF;EAAR,CAAD;AAXe,CAA3B;;AAaA,CAAC,YAAY;EAAE,CAAC,OAAOuG,SAAP,KAAqB,WAArB,IAAoCA,SAArC,KAAmDpF,MAAM,CAACqF,iBAAP,CAAyBK,SAAzB,EAAoC,CAAC;IAC/F7B,IAAI,EAAExF,SADyF;IAE/F8G,IAAI,EAAE,CAAC;MAAEG,QAAQ,EAAE,YAAZ;MACC2F,QAAQ,EAAE,WADX;MAECrG,QAAQ,EAAE,2EAFX;MAGC4G,UAAU,EAAE,CAACtJ,mBAAmB,CAACC,eAArB,CAHb;MAICoD,IAAI,EAAE;QACF,SAAS,YADP;QAEF,gBAAgB,iBAFd;QAGF,sBAAsB,gCAHpB;QAIF,qBAAqB,4BAJnB;QAKF;QACA,gBAAgB,MANd;QAOF,0BAA0B,oBAPxB;QAQF,2BAA2B,iBARzB;QASF,2BAA2B,iBATzB;QAUF,2BAA2B,iBAVzB;QAWF,YAAY;MAXV,CAJP;MAiBCP,eAAe,EAAE7G,uBAAuB,CAACqH,MAjB1C;MAkBCT,aAAa,EAAE7F,iBAAiB,CAACuG;IAlBlC,CAAD;EAFyF,CAAD,CAApC,EAsB1D,YAAY;IAAE,OAAO,CAAC;MAAE5B,IAAI,EAAE7D,MAAM,CAACxB;IAAf,CAAD,EAA8B;MAAEqF,IAAI,EAAE3D,MAAM,CAAC5C;IAAf,CAA9B,EAAiE;MAAEuG,IAAI,EAAE3D,MAAM,CAAC7C;IAAf,CAAjE,EAAgG;MAAEwG,IAAI,EAAE1D,MAAM,CAACxC;IAAf,CAAhG,EAA2H;MAAEkG,IAAI,EAAE7D,MAAM,CAAClB;IAAf,CAA3H,EAAoJ;MAAE+E,IAAI,EAAEyH,SAAR;MAAmBpG,UAAU,EAAE,CAAC;QACjMrB,IAAI,EAAE9E;MAD2L,CAAD,EAEjM;QACC8E,IAAI,EAAElF,MADP;QAECwG,IAAI,EAAE,CAAClH,QAAD;MAFP,CAFiM;IAA/B,CAApJ,CAAP;EAKF,CA3B8C,EA2B5C;IAAEyI,YAAY,EAAE,CAAC;MAC3B7C,IAAI,EAAE7E;IADqB,CAAD,CAAhB;IAEV4H,iBAAiB,EAAE,CAAC;MACpB/C,IAAI,EAAE7E,MADc;MAEpBmG,IAAI,EAAE,CAAC,iBAAD;IAFc,CAAD,CAFT;IAKV9C,QAAQ,EAAE,CAAC;MACXwB,IAAI,EAAEhF;IADK,CAAD,CALA;IAOVwJ,IAAI,EAAE,CAAC;MACPxE,IAAI,EAAEhF;IADC,CAAD,CAPI;IASV6I,YAAY,EAAE,CAAC;MACf7D,IAAI,EAAEhF;IADS,CAAD,CATJ;IAWV0J,SAAS,EAAE,CAAC;MACZ1E,IAAI,EAAEhF;IADM,CAAD,CAXD;IAaV2J,aAAa,EAAE,CAAC;MAChB3E,IAAI,EAAE7E,MADU;MAEhBmG,IAAI,EAAE,CAAC,QAAD;IAFU,CAAD,CAbL;IAgBVuD,WAAW,EAAE,CAAC;MACd7E,IAAI,EAAE7E;IADQ,CAAD,CAhBH;IAkBV4J,aAAa,EAAE,CAAC;MAChB/E,IAAI,EAAE7E,MADU;MAEhBmG,IAAI,EAAE,CAAC,QAAD;IAFU,CAAD,CAlBL;IAqBV0D,WAAW,EAAE,CAAC;MACdhF,IAAI,EAAE7E;IADQ,CAAD,CArBH;IAuBV+H,MAAM,EAAE,CAAC;MACTlD,IAAI,EAAEhF;IADG,CAAD;EAvBE,CA3B4C,CAAnD;AAoDC,CApDhB;AAqDA;AACA;AACA;AACA;AACA;AACA;;;AACA,MAAM6E,kBAAN,CAAyB;EACrB;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACId,WAAW,CAAC6I,IAAD,EAAOC,QAAP,EAAiB3F,OAAjB,EAA0BlD,kBAA1B,EAA8C8I,eAAe,GAAG,KAAhE,EAAuEC,cAAvE;EACX;AACJ;AACA;AACA;EACIC,aALW,EAKI;IACX,KAAKJ,IAAL,GAAYA,IAAZ;IACA,KAAKC,QAAL,GAAgBA,QAAhB;IACA,KAAK3F,OAAL,GAAeA,OAAf;IACA,KAAKlD,kBAAL,GAA0BA,kBAA1B;IACA,KAAK+I,cAAL,GAAsBA,cAAtB;IACA;AACR;AACA;;IACQ,KAAKE,aAAL,GAAqB,IAAIrN,YAAJ,EAArB;IACA;AACR;AACA;;IACQ,KAAKkI,UAAL,GAAkB,IAAIrH,OAAJ,EAAlB;IACA;AACR;AACA;;IACQ,KAAKyM,eAAL,GAAuB,IAAIzM,OAAJ,EAAvB;IACA;AACR;AACA;AACA;AACA;;IACQ,KAAK8E,eAAL,GAAuB;MAAEC,IAAI,EAAE,IAAR;MAAcC,KAAK,EAAE;IAArB,CAAvB;IACA,KAAKnB,qBAAL,GAA6B,IAAI7D,OAAJ,EAA7B,CAxBW,CAyBX;IACA;;IACA,IAAImM,IAAJ,EAAU;MACNA,IAAI,CAACO,MAAL,CAAYzE,IAAZ,CAAiB3H,SAAS,CAAC,KAAK+G,UAAN,CAA1B,EAA6CvD,SAA7C,CAAuD,MAAM;QACzD,KAAK6I,gBAAL;;QACA,KAAKC,qBAAL;MACH,CAHD;IAIH,CAhCU,CAiCX;IACA;;;IACA,IAAIL,aAAJ,EAAmB;MACfA,aAAa,CAACG,MAAd,GACKzE,IADL,CACU3H,SAAS,CAAC,KAAK+G,UAAN,CADnB,EAEKvD,SAFL,CAEe,MAAM,KAAK8I,qBAAL,EAFrB;IAGH;;IACD,KAAKC,SAAL,GAAiBR,eAAjB;EACH;EACD;AACJ;AACA;AACA;;;EACa,IAALS,KAAK,GAAG;IAAE,OAAO,KAAKC,MAAZ;EAAqB;EACnC;AACJ;AACA;AACA;;;EACW,IAAHC,GAAG,GAAG;IAAE,OAAO,KAAKC,IAAZ;EAAmB;EAC/B;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;EACgB,IAARC,QAAQ,GAAG;IAAE,OAAO,KAAKL,SAAZ;EAAwB;EACzC;AACJ;AACA;AACA;;;EACgB,IAARK,QAAQ,CAACpE,KAAD,EAAQ;IAAE,KAAK+D,SAAL,GAAiB3O,qBAAqB,CAAC4K,KAAD,CAAtC;EAAgD;EACtE;AACJ;AACA;AACA;AACA;AACA;;;EACmB,IAAXqE,WAAW,GAAG;IACd,IAAI,KAAKC,iBAAL,IAA0B,IAA9B,EAAoC;MAChC,OAAO,CAAC,KAAKL,MAAN,IAAgB,KAAKA,MAAL,CAAYhE,IAAZ,KAAqB,MAArC,IAA+C,CAAC,KAAKkE,IAArD,IAA6D,KAAKA,IAAL,CAAUlE,IAAV,KAAmB,MAAvF;IACH;;IACD,OAAO,KAAKqE,iBAAZ;EACH;EACD;AACJ;AACA;AACA;;;EACmB,IAAXD,WAAW,CAACrE,KAAD,EAAQ;IACnB,KAAKsE,iBAAL,GAAyBtE,KAAK,IAAI,IAAT,GAAgB,IAAhB,GAAuB5K,qBAAqB,CAAC4K,KAAD,CAArE;EACH;EACD;AACJ;AACA;AACA;;;EACkB,IAAVuE,UAAU,GAAG;IACb,OAAO,KAAKC,YAAL,IAAqB,KAAKC,QAAjC;EACH;EACD;AACJ;AACA;;;EACI3J,kBAAkB,GAAG;IACjB,KAAK4J,QAAL,CAAcC,OAAd,CAAsBxF,IAAtB,CAA2B7H,SAAS,CAAC,IAAD,CAApC,EAA4C0D,SAA5C,CAAsD,MAAM;MACxD,KAAK6I,gBAAL;;MACA,KAAKa,QAAL,CAAcE,OAAd,CAAuBC,MAAD,IAAY;QAC9B,KAAKC,kBAAL,CAAwBD,MAAxB;;QACA,KAAKE,oBAAL,CAA0BF,MAA1B;;QACA,KAAKG,gBAAL,CAAsBH,MAAtB;MACH,CAJD;;MAKA,IAAI,CAAC,KAAKH,QAAL,CAAcO,MAAf,IACA,KAAKC,aAAL,CAAmB,KAAKjB,MAAxB,CADA,IAEA,KAAKiB,aAAL,CAAmB,KAAKf,IAAxB,CAFJ,EAEmC;QAC/B,KAAKL,qBAAL;MACH;;MACD,KAAKrJ,kBAAL,CAAwBQ,YAAxB;IACH,CAbD;;IAcA,KAAK0I,eAAL,CAAqBxE,IAArB,CAA0BhI,YAAY,CAAC,EAAD,CAAtC,EAA4C;IAC5CK,SAAS,CAAC,KAAK+G,UAAN,CADT,EAC4BvD,SAD5B,CACsC,MAAM,KAAK8I,qBAAL,EAD5C;EAEH;EACD;AACJ;AACA;;;EACItC,WAAW,GAAG;IACV,KAAKzG,qBAAL,CAA2B2G,QAA3B;;IACA,KAAKiC,eAAL,CAAqBjC,QAArB;;IACA,KAAKnD,UAAL,CAAgB2B,IAAhB;;IACA,KAAK3B,UAAL,CAAgBmD,QAAhB;EACH;EACD;AACJ;AACA;AACA;;;EACIE,IAAI,GAAG;IACH,KAAK8C,QAAL,CAAcE,OAAd,CAAsBC,MAAM,IAAIA,MAAM,CAACjD,IAAP,EAAhC;EACH;EACD;AACJ;AACA;AACA;;;EACIpC,KAAK,GAAG;IACJ,KAAKkF,QAAL,CAAcE,OAAd,CAAsBC,MAAM,IAAIA,MAAM,CAACrF,KAAP,EAAhC;EACH;EACD;AACJ;AACA;;;EACI2F,SAAS,GAAG;IACR;IACA,IAAI,KAAKpB,SAAL,IAAkB,KAAKqB,SAAL,EAAtB,EAAwC;MACpC;MACA,KAAKzH,OAAL,CAAasB,iBAAb,CAA+B,MAAM,KAAK0E,eAAL,CAAqBzD,IAArB,EAArC;IACH;EACJ;EACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;;;EACI4E,kBAAkB,CAACD,MAAD,EAAS;IACvBA,MAAM,CAAC1G,iBAAP,CAAyBgB,IAAzB,CAA8B/H,MAAM,CAAEgI,KAAD,IAAWA,KAAK,CAACQ,SAAN,KAAoBR,KAAK,CAACS,OAAtC,CAApC,EAAoFrI,SAAS,CAAC,KAAKkN,QAAL,CAAcC,OAAf,CAA7F,EACK3J,SADL,CACgBoE,KAAD,IAAW;MACtB;MACA;MACA,IAAIA,KAAK,CAACS,OAAN,KAAkB,cAAlB,IAAoC,KAAK2D,cAAL,KAAwB,gBAAhE,EAAkF;QAC9E,KAAKF,QAAL,CAAcpE,aAAd,CAA4BmG,SAA5B,CAAsCC,GAAtC,CAA0C,uBAA1C;MACH;;MACD,KAAKxB,qBAAL;;MACA,KAAKrJ,kBAAL,CAAwBQ,YAAxB;IACH,CATD;;IAUA,IAAI4J,MAAM,CAAC5E,IAAP,KAAgB,MAApB,EAA4B;MACxB4E,MAAM,CAACvG,YAAP,CAAoBa,IAApB,CAAyB3H,SAAS,CAAC,KAAKkN,QAAL,CAAcC,OAAf,CAAlC,EAA2D3J,SAA3D,CAAqE,MAAM,KAAKuK,kBAAL,CAAwBV,MAAM,CAAClG,MAA/B,CAA3E;IACH;EACJ;EACD;AACJ;AACA;AACA;AACA;AACA;AACA;;;EACIoG,oBAAoB,CAACF,MAAD,EAAS;IACzB,IAAI,CAACA,MAAL,EAAa;MACT;IACH,CAHwB,CAIzB;IACA;;;IACAA,MAAM,CAACrG,iBAAP,CAAyBW,IAAzB,CAA8B3H,SAAS,CAAC,KAAKkN,QAAL,CAAcC,OAAf,CAAvC,EAAgE3J,SAAhE,CAA0E,MAAM;MAC5E,KAAK2C,OAAL,CAAa6H,gBAAb,CAA8BC,YAA9B,GAA6CtG,IAA7C,CAAkD5H,IAAI,CAAC,CAAD,CAAtD,EAA2DyD,SAA3D,CAAqE,MAAM;QACvE,KAAK6I,gBAAL;MACH,CAFD;IAGH,CAJD;EAKH;EACD;AACJ;AACA;AACA;AACA;AACA;;;EACImB,gBAAgB,CAACH,MAAD,EAAS;IACrB,IAAIA,MAAJ,EAAY;MACRA,MAAM,CAACpG,YAAP,CAAoBU,IAApB,CAAyB3H,SAAS,CAACP,KAAK,CAAC,KAAKyN,QAAL,CAAcC,OAAf,EAAwB,KAAKpG,UAA7B,CAAN,CAAlC,EACKvD,SADL,CACe,MAAM;QACjB,KAAK8I,qBAAL;;QACA,KAAKrJ,kBAAL,CAAwBQ,YAAxB;MACH,CAJD;IAKH;EACJ;EACD;AACJ;AACA;AACA;AACA;AACA;;;EACIsK,kBAAkB,CAACG,KAAD,EAAQ;IACtB,IAAIA,KAAJ,EAAW;MACP,KAAKpC,QAAL,CAAcpE,aAAd,CAA4BmG,SAA5B,CAAsCC,GAAtC,CAA0C,mBAA1C;IACH,CAFD,MAGK;MACD,KAAKhC,QAAL,CAAcpE,aAAd,CAA4BmG,SAA5B,CAAsCM,MAAtC,CAA6C,mBAA7C;IACH;EACJ;EACD;AACJ;AACA;AACA;AACA;;;EACI9B,gBAAgB,GAAG;IACf,KAAKI,MAAL,GAAc,KAAKE,IAAL,GAAY,IAA1B,CADe,CAEf;;IACA,KAAKO,QAAL,CAAcE,OAAd,CAAsBC,MAAM,IAAI;MAC5B,IAAIA,MAAM,CAAC5K,QAAP,IAAmB,KAAvB,EAA8B;QAC1B,IAAI,KAAKkK,IAAL,IAAa,IAAjB,EAAuB;UACnBnK,6BAA6B,CAAC,KAAD,CAA7B;QACH;;QACD,KAAKmK,IAAL,GAAYU,MAAZ;MACH,CALD,MAMK;QACD,IAAI,KAAKZ,MAAL,IAAe,IAAnB,EAAyB;UACrBjK,6BAA6B,CAAC,OAAD,CAA7B;QACH;;QACD,KAAKiK,MAAL,GAAcY,MAAd;MACH;IACJ,CAbD;;IAcA,KAAKe,MAAL,GAAc,KAAKC,KAAL,GAAa,IAA3B,CAjBe,CAkBf;;IACA,IAAI,KAAKxC,IAAL,IAAa,KAAKA,IAAL,CAAUrD,KAAV,KAAoB,KAArC,EAA4C;MACxC,KAAK6F,KAAL,GAAa,KAAK1B,IAAlB;MACA,KAAKyB,MAAL,GAAc,KAAK3B,MAAnB;IACH,CAHD,MAIK;MACD,KAAK4B,KAAL,GAAa,KAAK5B,MAAlB;MACA,KAAK2B,MAAL,GAAc,KAAKzB,IAAnB;IACH;EACJ;EACD;AACJ;AACA;AACA;AACA;;;EACIiB,SAAS,GAAG;IACR,OAAQ,KAAKF,aAAL,CAAmB,KAAKjB,MAAxB,KAAmC,KAAKA,MAAL,CAAYhE,IAAZ,IAAoB,MAAxD,IACF,KAAKiF,aAAL,CAAmB,KAAKf,IAAxB,KAAiC,KAAKA,IAAL,CAAUlE,IAAV,IAAkB,MADxD;EAEH;EACD;AACJ;AACA;;;EACIlH,kBAAkB,GAAG;IACjB,KAAK2K,aAAL,CAAmB3D,IAAnB;;IACA,KAAK+F,iBAAL;EACH;EACD;AACJ;AACA;;;EACIA,iBAAiB,GAAG;IAChB;IACA,CAAC,KAAK7B,MAAN,EAAc,KAAKE,IAAnB,EACK/M,MADL,CACYyN,MAAM,IAAIA,MAAM,IAAI,CAACA,MAAM,CAACvF,YAAlB,IAAkC,KAAKyG,gBAAL,CAAsBlB,MAAtB,CADxD,EAEKD,OAFL,CAEaC,MAAM;IAAK;IAAkBA,MAAnB,CAA4BrF,KAA5B,EAFvB;EAGH;EACD;AACJ;AACA;;;EACIrG,kBAAkB,GAAG;IACjB,OAAQ,KAAK+L,aAAL,CAAmB,KAAKjB,MAAxB,KAAmC,KAAK8B,gBAAL,CAAsB,KAAK9B,MAA3B,CAApC,IACF,KAAKiB,aAAL,CAAmB,KAAKf,IAAxB,KAAiC,KAAK4B,gBAAL,CAAsB,KAAK5B,IAA3B,CADtC;EAEH;EACD;AACJ;AACA;AACA;AACA;;;EACI4B,gBAAgB,CAAClB,MAAD,EAAS;IACrB,OAAOA,MAAM,CAAC5E,IAAP,KAAgB,MAAhB,IAA0B,CAAC,CAAC,KAAKqE,iBAAxC;EACH;EACD;AACJ;AACA;AACA;AACA;;;EACIY,aAAa,CAACL,MAAD,EAAS;IAClB,OAAOA,MAAM,IAAI,IAAV,IAAkBA,MAAM,CAAClG,MAAhC;EACH;EACD;AACJ;AACA;AACA;AACA;AACA;;;EACImF,qBAAqB,GAAG;IACpB;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;;IACA;IACA,IAAI7H,IAAI,GAAG,CAAX;IACA;;IACA,IAAIC,KAAK,GAAG,CAAZ;;IACA,IAAI,KAAK2J,KAAL,IAAc,KAAKA,KAAL,CAAWlH,MAA7B,EAAqC;MACjC,IAAI,KAAKkH,KAAL,CAAW5F,IAAX,IAAmB,MAAvB,EAA+B;QAC3BhE,IAAI,IAAI,KAAK4J,KAAL,CAAW5D,MAAnB;MACH,CAFD,MAGK,IAAI,KAAK4D,KAAL,CAAW5F,IAAX,IAAmB,MAAvB,EAA+B;QAChC;QACA,IAAI+F,KAAK,GAAG,KAAKH,KAAL,CAAW5D,MAAvB;QACAhG,IAAI,IAAI+J,KAAR;QACA9J,KAAK,IAAI8J,KAAT;MACH;IACJ;;IACD,IAAI,KAAKJ,MAAL,IAAe,KAAKA,MAAL,CAAYjH,MAA/B,EAAuC;MACnC,IAAI,KAAKiH,MAAL,CAAY3F,IAAZ,IAAoB,MAAxB,EAAgC;QAC5B/D,KAAK,IAAI,KAAK0J,MAAL,CAAY3D,MAArB;MACH,CAFD,MAGK,IAAI,KAAK2D,MAAL,CAAY3F,IAAZ,IAAoB,MAAxB,EAAgC;QACjC;QACA,IAAI+F,KAAK,GAAG,KAAKJ,MAAL,CAAY3D,MAAxB;QACA/F,KAAK,IAAI8J,KAAT;QACA/J,IAAI,IAAI+J,KAAR;MACH;IACJ,CAtCmB,CAuCpB;IACA;IACA;IACA;;;IACA/J,IAAI,GAAGA,IAAI;IAAK;IAAkB,IAAlC;IACAC,KAAK,GAAGA,KAAK;IAAK;IAAkB,IAApC;;IACA,IAAID,IAAI,KAAK,KAAKD,eAAL,CAAqBC,IAA9B,IAAsCC,KAAK,KAAK,KAAKF,eAAL,CAAqBE,KAAzE,EAAgF;MAC5E,KAAKF,eAAL,GAAuB;QAAEC,IAAF;QAAQC;MAAR,CAAvB,CAD4E,CAE5E;MACA;;MACA,KAAKyB,OAAL,CAAa4B,GAAb,CAAiB,MAAM,KAAKxE,qBAAL,CAA2BmF,IAA3B,CAAgC,KAAKlE,eAArC,CAAvB;IACH;EACJ;;AAnXoB;;AAqXzBV,kBAAkB,CAACJ,IAAnB,GAA0B,SAAS+K,0BAAT,CAAoC7K,CAApC,EAAuC;EAAE,OAAO,KAAKA,CAAC,IAAIE,kBAAV,EAA8B1D,MAAM,CAACyD,iBAAP,CAAyBrD,MAAM,CAAC7C,cAAhC,EAAgD,CAAhD,CAA9B,EAAkFyC,MAAM,CAACyD,iBAAP,CAAyBzD,MAAM,CAACxB,UAAhC,CAAlF,EAA+HwB,MAAM,CAACyD,iBAAP,CAAyBzD,MAAM,CAAClB,MAAhC,CAA/H,EAAwKkB,MAAM,CAACyD,iBAAP,CAAyBzD,MAAM,CAAC5B,iBAAhC,CAAxK,EAA4N4B,MAAM,CAACyD,iBAAP,CAAyBlB,2BAAzB,CAA5N,EAAmRvC,MAAM,CAACyD,iBAAP,CAAyB3D,qBAAzB,EAAgD,CAAhD,CAAnR,EAAuUE,MAAM,CAACyD,iBAAP,CAAyBxD,MAAM,CAAClC,aAAhC,EAA+C,CAA/C,CAAvU,CAAP;AAAmY,CAAtc;;AACA2F,kBAAkB,CAACC,IAAnB,GAA0B,aAAc3D,MAAM,CAAC4D,iBAAP,CAAyB;EAAEC,IAAI,EAAEH,kBAAR;EAA4BI,SAAS,EAAE,CAAC,CAAC,sBAAD,CAAD,CAAvC;EAAmEwK,cAAc,EAAE,SAASC,iCAAT,CAA2C/N,EAA3C,EAA+CC,GAA/C,EAAoD+N,QAApD,EAA8D;IAAE,IAAIhO,EAAE,GAAG,CAAT,EAAY;MACxNR,MAAM,CAACyO,cAAP,CAAsBD,QAAtB,EAAgC7L,gBAAhC,EAAkD,CAAlD;MACA3C,MAAM,CAACyO,cAAP,CAAsBD,QAAtB,EAAgC9I,SAAhC,EAA2C,CAA3C;IACH;;IAAC,IAAIlF,EAAE,GAAG,CAAT,EAAY;MACV,IAAIkO,EAAJ;;MACA1O,MAAM,CAAC2O,cAAP,CAAsBD,EAAE,GAAG1O,MAAM,CAAC4O,WAAP,EAA3B,MAAqDnO,GAAG,CAACoM,QAAJ,GAAe6B,EAAE,CAACG,KAAvE;MACA7O,MAAM,CAAC2O,cAAP,CAAsBD,EAAE,GAAG1O,MAAM,CAAC4O,WAAP,EAA3B,MAAqDnO,GAAG,CAACqM,QAAJ,GAAe4B,EAApE;IACH;EAAE,CAP0D;EAOxDI,SAAS,EAAE,SAASC,wBAAT,CAAkCvO,EAAlC,EAAsCC,GAAtC,EAA2C;IAAE,IAAID,EAAE,GAAG,CAAT,EAAY;MACrER,MAAM,CAACgP,WAAP,CAAmBrM,gBAAnB,EAAqC,CAArC;IACH;;IAAC,IAAInC,EAAE,GAAG,CAAT,EAAY;MACV,IAAIkO,EAAJ;;MACA1O,MAAM,CAAC2O,cAAP,CAAsBD,EAAE,GAAG1O,MAAM,CAAC4O,WAAP,EAA3B,MAAqDnO,GAAG,CAACmM,YAAJ,GAAmB8B,EAAE,CAACG,KAA3E;IACH;EAAE,CAZ0D;EAYxD9K,SAAS,EAAE,CAAC,CAAD,EAAI,sBAAJ,CAZ6C;EAYhBC,QAAQ,EAAE,CAZM;EAYHC,YAAY,EAAE,SAASgL,+BAAT,CAAyCzO,EAAzC,EAA6CC,GAA7C,EAAkD;IAAE,IAAID,EAAE,GAAG,CAAT,EAAY;MACpIR,MAAM,CAACsB,WAAP,CAAmB,wCAAnB,EAA6Db,GAAG,CAACiM,iBAAjE;IACH;EAAE,CAd0D;EAcxD3B,MAAM,EAAE;IAAEyB,QAAQ,EAAE,UAAZ;IAAwBC,WAAW,EAAE;EAArC,CAdgD;EAcMzB,OAAO,EAAE;IAAEc,aAAa,EAAE;EAAjB,CAdf;EAcmDb,QAAQ,EAAE,CAAC,oBAAD,CAd7D;EAcqFxG,kBAAkB,EAAE9C,GAdzG;EAc8G+C,KAAK,EAAE,CAdrH;EAcwHC,IAAI,EAAE,CAd9H;EAciIuG,MAAM,EAAE,CAAC,CAAC,OAAD,EAAU,qBAAV,EAAiC,CAAjC,EAAoC,kBAApC,EAAwD,OAAxD,EAAiE,CAAjE,EAAoE,MAApE,CAAD,EAA8E,CAAC,CAAD,EAAI,MAAJ,CAA9E,EAA2F,CAAC,CAAD,EAAI,qBAAJ,EAA2B,CAA3B,EAA8B,OAA9B,CAA3F,CAdzI;EAc6QtG,QAAQ,EAAE,SAASsK,2BAAT,CAAqC1O,EAArC,EAAyCC,GAAzC,EAA8C;IAAE,IAAID,EAAE,GAAG,CAAT,EAAY;MAC5YR,MAAM,CAAC8E,eAAP,CAAuBpD,GAAvB;MACA1B,MAAM,CAACmP,UAAP,CAAkB,CAAlB,EAAqB5O,iCAArB,EAAwD,CAAxD,EAA2D,CAA3D,EAA8D,KAA9D,EAAqE,CAArE;MACAP,MAAM,CAACyB,YAAP,CAAoB,CAApB;MACAzB,MAAM,CAACyB,YAAP,CAAoB,CAApB,EAAuB,CAAvB;MACAzB,MAAM,CAACmP,UAAP,CAAkB,CAAlB,EAAqB3N,gDAArB,EAAuE,CAAvE,EAA0E,CAA1E,EAA6E,oBAA7E,EAAmG,CAAnG;IACH;;IAAC,IAAIhB,EAAE,GAAG,CAAT,EAAY;MACVR,MAAM,CAACoP,UAAP,CAAkB,MAAlB,EAA0B3O,GAAG,CAACgM,WAA9B;MACAzM,MAAM,CAACqP,SAAP,CAAiB,CAAjB;MACArP,MAAM,CAACoP,UAAP,CAAkB,MAAlB,EAA0B,CAAC3O,GAAG,CAACoM,QAA/B;IACH;EAAE,CAxB0D;EAwBxDyC,YAAY,EAAE,CAACjP,MAAM,CAACkP,IAAR,EAAc5M,gBAAd,CAxB0C;EAwBT6M,MAAM,EAAE,CAACvN,GAAD,CAxBC;EAwBM8C,aAAa,EAAE,CAxBrB;EAwBwBC,eAAe,EAAE;AAxBzC,CAAzB,CAAxC;AAyBA;;AACAtB,kBAAkB,CAACuB,cAAnB,GAAoC,MAAM,CACtC;EAAEpB,IAAI,EAAEtG,cAAR;EAAwB2H,UAAU,EAAE,CAAC;IAAErB,IAAI,EAAE9E;EAAR,CAAD;AAApC,CADsC,EAEtC;EAAE8E,IAAI,EAAErF;AAAR,CAFsC,EAGtC;EAAEqF,IAAI,EAAE/E;AAAR,CAHsC,EAItC;EAAE+E,IAAI,EAAEzF;AAAR,CAJsC,EAKtC;EAAEyF,IAAI,EAAEyH,SAAR;EAAmBpG,UAAU,EAAE,CAAC;IAAErB,IAAI,EAAElF,MAAR;IAAgBwG,IAAI,EAAE,CAAC5C,2BAAD;EAAtB,CAAD;AAA/B,CALsC,EAMtC;EAAEsB,IAAI,EAAE4L,MAAR;EAAgBvK,UAAU,EAAE,CAAC;IAAErB,IAAI,EAAE9E;EAAR,CAAD,EAAqB;IAAE8E,IAAI,EAAElF,MAAR;IAAgBwG,IAAI,EAAE,CAACrF,qBAAD;EAAtB,CAArB;AAA5B,CANsC,EAOtC;EAAE+D,IAAI,EAAE9F,aAAR;EAAuBmH,UAAU,EAAE,CAAC;IAAErB,IAAI,EAAE9E;EAAR,CAAD;AAAnC,CAPsC,CAA1C;;AASA2E,kBAAkB,CAAC6H,cAAnB,GAAoC;EAChCuB,QAAQ,EAAE,CAAC;IAAEjJ,IAAI,EAAEtF,eAAR;IAAyB4G,IAAI,EAAE,CAACO,SAAD;EAA/B,CAAD,CADsB;EAEhCmH,QAAQ,EAAE,CAAC;IAAEhJ,IAAI,EAAEvF,YAAR;IAAsB6G,IAAI,EAAE,CAACxC,gBAAD;EAA5B,CAAD,CAFsB;EAGhCiK,YAAY,EAAE,CAAC;IAAE/I,IAAI,EAAE5E,SAAR;IAAmBkG,IAAI,EAAE,CAACxC,gBAAD;EAAzB,CAAD,CAHkB;EAIhC6J,QAAQ,EAAE,CAAC;IAAE3I,IAAI,EAAEhF;EAAR,CAAD,CAJsB;EAKhC4N,WAAW,EAAE,CAAC;IAAE5I,IAAI,EAAEhF;EAAR,CAAD,CALmB;EAMhCiN,aAAa,EAAE,CAAC;IAAEjI,IAAI,EAAE7E;EAAR,CAAD;AANiB,CAApC;;AAQA,CAAC,YAAY;EAAE,CAAC,OAAOoG,SAAP,KAAqB,WAArB,IAAoCA,SAArC,KAAmDpF,MAAM,CAACqF,iBAAP,CAAyB3B,kBAAzB,EAA6C,CAAC;IACxGG,IAAI,EAAExF,SADkG;IAExG8G,IAAI,EAAE,CAAC;MAAEG,QAAQ,EAAE,sBAAZ;MAAoC2F,QAAQ,EAAE,oBAA9C;MAAoErG,QAAQ,EAAE,gVAA9E;MAAgaW,IAAI,EAAE;QACja,SAAS,sBADwZ;QAEja,kDAAkD;MAF+W,CAAta;MAGIP,eAAe,EAAE7G,uBAAuB,CAACqH,MAH7C;MAGqDT,aAAa,EAAE7F,iBAAiB,CAACuG,IAHtF;MAG4F+J,MAAM,EAAE,CAAC,8kEAAD;IAHpG,CAAD;EAFkG,CAAD,CAA7C,EAM1D,YAAY;IAAE,OAAO,CAAC;MAAE3L,IAAI,EAAEzD,MAAM,CAAC7C,cAAf;MAA+B2H,UAAU,EAAE,CAAC;QAC1DrB,IAAI,EAAE9E;MADoD,CAAD;IAA3C,CAAD,EAEX;MAAE8E,IAAI,EAAE7D,MAAM,CAACxB;IAAf,CAFW,EAEkB;MAAEqF,IAAI,EAAE7D,MAAM,CAAClB;IAAf,CAFlB,EAE2C;MAAE+E,IAAI,EAAE7D,MAAM,CAAC5B;IAAf,CAF3C,EAE+E;MAAEyF,IAAI,EAAEyH,SAAR;MAAmBpG,UAAU,EAAE,CAAC;QAC5HrB,IAAI,EAAElF,MADsH;QAE5HwG,IAAI,EAAE,CAAC5C,2BAAD;MAFsH,CAAD;IAA/B,CAF/E,EAKX;MAAEsB,IAAI,EAAE4L,MAAR;MAAgBvK,UAAU,EAAE,CAAC;QAC/BrB,IAAI,EAAE9E;MADyB,CAAD,EAE/B;QACC8E,IAAI,EAAElF,MADP;QAECwG,IAAI,EAAE,CAACrF,qBAAD;MAFP,CAF+B;IAA5B,CALW,EAUX;MAAE+D,IAAI,EAAE5D,MAAM,CAAClC,aAAf;MAA8BmH,UAAU,EAAE,CAAC;QAC7CrB,IAAI,EAAE9E;MADuC,CAAD;IAA1C,CAVW,CAAP;EAYF,CAlB8C,EAkB5C;IAAE+M,aAAa,EAAE,CAAC;MAC5BjI,IAAI,EAAE7E;IADsB,CAAD,CAAjB;IAEVwN,QAAQ,EAAE,CAAC;MACX3I,IAAI,EAAEhF;IADK,CAAD,CAFA;IAIV4N,WAAW,EAAE,CAAC;MACd5I,IAAI,EAAEhF;IADQ,CAAD,CAJH;IAMViO,QAAQ,EAAE,CAAC;MACXjJ,IAAI,EAAEtF,eADK;MAEX4G,IAAI,EAAE,CAACO,SAAD;IAFK,CAAD,CANA;IASVmH,QAAQ,EAAE,CAAC;MACXhJ,IAAI,EAAEvF,YADK;MAEX6G,IAAI,EAAE,CAACxC,gBAAD;IAFK,CAAD,CATA;IAYViK,YAAY,EAAE,CAAC;MACf/I,IAAI,EAAE5E,SADS;MAEfkG,IAAI,EAAE,CAACxC,gBAAD;IAFS,CAAD;EAZJ,CAlB4C,CAAnD;AAiCC,CAjChB;AAmCA;AACA;AACA;AACA;;;AACA,MAAM+M,iBAAN,SAAgC/M,gBAAhC,CAAiD;EAC7C;AACJ;AACA;AACA;AACA;AACA;AACA;EACIC,WAAW,CAAC+M,iBAAD,EAAoBC,SAApB,EAA+B7M,UAA/B,EAA2CC,gBAA3C,EAA6DC,MAA7D,EAAqE;IAC5E,MAAM0M,iBAAN,EAAyBC,SAAzB,EAAoC7M,UAApC,EAAgDC,gBAAhD,EAAkEC,MAAlE;EACH;;AAV4C;;AAYjDyM,iBAAiB,CAACpM,IAAlB,GAAyB,SAASuM,yBAAT,CAAmCrM,CAAnC,EAAsC;EAAE,OAAO,KAAKA,CAAC,IAAIkM,iBAAV,EAA6B1P,MAAM,CAACyD,iBAAP,CAAyBzD,MAAM,CAAC5B,iBAAhC,CAA7B,EAAiF4B,MAAM,CAACyD,iBAAP,CAAyB/E,UAAU,CAAC,MAAMoR,mBAAP,CAAnC,CAAjF,EAAkJ9P,MAAM,CAACyD,iBAAP,CAAyBzD,MAAM,CAACxB,UAAhC,CAAlJ,EAA+LwB,MAAM,CAACyD,iBAAP,CAAyBxD,MAAM,CAACnC,gBAAhC,CAA/L,EAAkPkC,MAAM,CAACyD,iBAAP,CAAyBzD,MAAM,CAAClB,MAAhC,CAAlP,CAAP;AAAoS,CAArW;;AACA4Q,iBAAiB,CAAC/L,IAAlB,GAAyB,aAAc3D,MAAM,CAAC4D,iBAAP,CAAyB;EAAEC,IAAI,EAAE6L,iBAAR;EAA2B5L,SAAS,EAAE,CAAC,CAAC,qBAAD,CAAD,CAAtC;EAAiEC,SAAS,EAAE,CAAC,CAAD,EAAI,oBAAJ,EAA0B,qBAA1B,CAA5E;EAA8HC,QAAQ,EAAE,CAAxI;EAA2IC,YAAY,EAAE,SAAS8L,8BAAT,CAAwCvP,EAAxC,EAA4CC,GAA5C,EAAiD;IAAE,IAAID,EAAE,GAAG,CAAT,EAAY;MAChRR,MAAM,CAACmE,WAAP,CAAmB,aAAnB,EAAkC1D,GAAG,CAACqC,UAAJ,CAAesB,eAAf,CAA+BC,IAAjE,EAAuE,IAAvE,EAA6E,cAA7E,EAA6F5D,GAAG,CAACqC,UAAJ,CAAesB,eAAf,CAA+BE,KAA5H,EAAmI,IAAnI;IACH;EAAE,CAFyD;EAEvDC,QAAQ,EAAE,CAACvE,MAAM,CAACwE,0BAAR,CAF6C;EAERC,kBAAkB,EAAEnE,GAFZ;EAEiBoE,KAAK,EAAE,CAFxB;EAE2BC,IAAI,EAAE,CAFjC;EAEoCC,QAAQ,EAAE,SAASoL,0BAAT,CAAoCxP,EAApC,EAAwCC,GAAxC,EAA6C;IAAE,IAAID,EAAE,GAAG,CAAT,EAAY;MACjKR,MAAM,CAAC8E,eAAP;MACA9E,MAAM,CAACyB,YAAP,CAAoB,CAApB;IACH;EAAE,CALyD;EAKvDsD,aAAa,EAAE,CALwC;EAKrCC,eAAe,EAAE;AALoB,CAAzB,CAAvC;AAMA;;AACA0K,iBAAiB,CAACzK,cAAlB,GAAmC,MAAM,CACrC;EAAEpB,IAAI,EAAEzF;AAAR,CADqC,EAErC;EAAEyF,IAAI,EAAEiM,mBAAR;EAA6B5K,UAAU,EAAE,CAAC;IAAErB,IAAI,EAAElF,MAAR;IAAgBwG,IAAI,EAAE,CAACzG,UAAU,CAAC,MAAMoR,mBAAP,CAAX;EAAtB,CAAD;AAAzC,CAFqC,EAGrC;EAAEjM,IAAI,EAAErF;AAAR,CAHqC,EAIrC;EAAEqF,IAAI,EAAE/F;AAAR,CAJqC,EAKrC;EAAE+F,IAAI,EAAE/E;AAAR,CALqC,CAAzC;;AAOA,CAAC,YAAY;EAAE,CAAC,OAAOsG,SAAP,KAAqB,WAArB,IAAoCA,SAArC,KAAmDpF,MAAM,CAACqF,iBAAP,CAAyBqK,iBAAzB,EAA4C,CAAC;IACvG7L,IAAI,EAAExF,SADiG;IAEvG8G,IAAI,EAAE,CAAC;MAAEG,QAAQ,EAAE,qBAAZ;MACCV,QAAQ,EAAE,2BADX;MAECW,IAAI,EAAE;QACF,SAAS,wCADP;QAEF,0BAA0B,iCAFxB;QAGF,2BAA2B;MAHzB,CAFP;MAOCP,eAAe,EAAE7G,uBAAuB,CAACqH,MAP1C;MAQCT,aAAa,EAAE7F,iBAAiB,CAACuG;IARlC,CAAD;EAFiG,CAAD,CAA5C,EAY1D,YAAY;IAAE,OAAO,CAAC;MAAE5B,IAAI,EAAE7D,MAAM,CAAC5B;IAAf,CAAD,EAAqC;MAAEyF,IAAI,EAAEiM,mBAAR;MAA6B5K,UAAU,EAAE,CAAC;QAC5FrB,IAAI,EAAElF,MADsF;QAE5FwG,IAAI,EAAE,CAACzG,UAAU,CAAC,MAAMoR,mBAAP,CAAX;MAFsF,CAAD;IAAzC,CAArC,EAGX;MAAEjM,IAAI,EAAE7D,MAAM,CAACxB;IAAf,CAHW,EAGkB;MAAEqF,IAAI,EAAE5D,MAAM,CAACnC;IAAf,CAHlB,EAGqD;MAAE+F,IAAI,EAAE7D,MAAM,CAAClB;IAAf,CAHrD,CAAP;EAGuF,CAf3C,EAe6C,IAf7C,CAAnD;AAewG,CAfvH;;AAgBA,MAAMmR,UAAN,SAAyBvK,SAAzB,CAAmC;EAC/B9C,WAAW,GAAG;IACV,MAAM,GAAGsN,SAAT;IACA,KAAKC,gBAAL,GAAwB,KAAxB;IACA,KAAKC,YAAL,GAAoB,CAApB;IACA,KAAKC,eAAL,GAAuB,CAAvB;EACH;EACD;AACJ;AACA;AACA;;;EACuB,IAAfC,eAAe,GAAG;IAAE,OAAO,KAAKH,gBAAZ;EAA+B;EACvD;AACJ;AACA;AACA;;;EACuB,IAAfG,eAAe,CAAClI,KAAD,EAAQ;IAAE,KAAK+H,gBAAL,GAAwB3S,qBAAqB,CAAC4K,KAAD,CAA7C;EAAuD;EACpF;AACJ;AACA;AACA;AACA;;;EACmB,IAAXmI,WAAW,GAAG;IAAE,OAAO,KAAKH,YAAZ;EAA2B;EAC/C;AACJ;AACA;AACA;;;EACmB,IAAXG,WAAW,CAACnI,KAAD,EAAQ;IAAE,KAAKgI,YAAL,GAAoB3S,oBAAoB,CAAC2K,KAAD,CAAxC;EAAkD;EAC3E;AACJ;AACA;AACA;AACA;;;EACsB,IAAdoI,cAAc,GAAG;IAAE,OAAO,KAAKH,eAAZ;EAA8B;EACrD;AACJ;AACA;AACA;;;EACsB,IAAdG,cAAc,CAACpI,KAAD,EAAQ;IAAE,KAAKiI,eAAL,GAAuB5S,oBAAoB,CAAC2K,KAAD,CAA3C;EAAqD;;AAtClD;;AAwCnC6H,UAAU,CAAC3M,IAAX,GAAkB,aAAc,YAAY;EAAE,IAAImN,uBAAJ;EAA6B,OAAO,SAASC,kBAAT,CAA4BlN,CAA5B,EAA+B;IAAE,OAAO,CAACiN,uBAAuB,KAAKA,uBAAuB,GAAGzQ,MAAM,CAAC2Q,qBAAP,CAA6BV,UAA7B,CAA/B,CAAxB,EAAkGzM,CAAC,IAAIyM,UAAvG,CAAP;EAA4H,CAApK;AAAuK,CAAlN,EAAhC;;AACAA,UAAU,CAACtM,IAAX,GAAkB,aAAc3D,MAAM,CAAC4D,iBAAP,CAAyB;EAAEC,IAAI,EAAEoM,UAAR;EAAoBnM,SAAS,EAAE,CAAC,CAAC,aAAD,CAAD,CAA/B;EAAkDC,SAAS,EAAE,CAAC,UAAD,EAAa,IAAb,EAAmB,CAAnB,EAAsB,YAAtB,EAAoC,aAApC,CAA7D;EAAiHC,QAAQ,EAAE,EAA3H;EAA+HC,YAAY,EAAE,SAAS2M,uBAAT,CAAiCpQ,EAAjC,EAAqCC,GAArC,EAA0C;IAAE,IAAID,EAAE,GAAG,CAAT,EAAY;MACtPR,MAAM,CAACyK,uBAAP,CAA+B,kBAA/B,EAAmD,SAASoG,uDAAT,CAAiElG,MAAjE,EAAyE;QAAE,OAAOlK,GAAG,CAAC8F,iBAAJ,CAAsB+B,IAAtB,CAA2BqC,MAA3B,CAAP;MAA4C,CAA1K,EAA4K,iBAA5K,EAA+L,SAASmG,sDAAT,CAAgEnG,MAAhE,EAAwE;QAAE,OAAOlK,GAAG,CAAC+F,aAAJ,CAAkB8B,IAAlB,CAAuBqC,MAAvB,CAAP;MAAwC,CAAjT;IACH;;IAAC,IAAInK,EAAE,GAAG,CAAT,EAAY;MACVR,MAAM,CAAC6K,WAAP,CAAmB,OAAnB,EAA4B,IAA5B;MACA7K,MAAM,CAAC8K,uBAAP,CAA+B,YAA/B,EAA6CrK,GAAG,CAACgG,eAAjD;MACAzG,MAAM,CAACmE,WAAP,CAAmB,KAAnB,EAA0B1D,GAAG,CAAC6P,eAAJ,GAAsB7P,GAAG,CAAC8P,WAA1B,GAAwC,IAAlE,EAAwE,IAAxE,EAA8E,QAA9E,EAAwF9P,GAAG,CAAC6P,eAAJ,GAAsB7P,GAAG,CAAC+P,cAA1B,GAA2C,IAAnI,EAAyI,IAAzI;MACAxQ,MAAM,CAACsB,WAAP,CAAmB,gBAAnB,EAAqCb,GAAG,CAAC4B,QAAJ,KAAiB,KAAtD,EAA6D,iBAA7D,EAAgF5B,GAAG,CAAC4H,IAAJ,KAAa,MAA7F,EAAqG,iBAArG,EAAwH5H,GAAG,CAAC4H,IAAJ,KAAa,MAArI,EAA6I,iBAA7I,EAAgK5H,GAAG,CAAC4H,IAAJ,KAAa,MAA7K,EAAqL,mBAArL,EAA0M5H,GAAG,CAAC6P,eAA9M;IACH;EAAE,CAPkD;EAOhDvF,MAAM,EAAE;IAAEuF,eAAe,EAAE,iBAAnB;IAAsCC,WAAW,EAAE,aAAnD;IAAkEC,cAAc,EAAE;EAAlF,CAPwC;EAO8DvF,QAAQ,EAAE,CAAC,YAAD,CAPxE;EAOwF1G,QAAQ,EAAE,CAACvE,MAAM,CAACwE,0BAAR,CAPlG;EAOuIC,kBAAkB,EAAEnE,GAP3J;EAOgKoE,KAAK,EAAE,CAPvK;EAO0KC,IAAI,EAAE,CAPhL;EAOmLuG,MAAM,EAAE,CAAC,CAAC,CAAD,EAAI,4BAAJ,CAAD,CAP3L;EAOgOtG,QAAQ,EAAE,SAASmM,mBAAT,CAA6BvQ,EAA7B,EAAiCC,GAAjC,EAAsC;IAAE,IAAID,EAAE,GAAG,CAAT,EAAY;MAC/UR,MAAM,CAAC8E,eAAP;MACA9E,MAAM,CAACY,cAAP,CAAsB,CAAtB,EAAyB,KAAzB,EAAgC,CAAhC;MACAZ,MAAM,CAACyB,YAAP,CAAoB,CAApB;MACAzB,MAAM,CAACoB,YAAP;IACH;EAAE,CAZkD;EAYhD2D,aAAa,EAAE,CAZiC;EAY9BqG,IAAI,EAAE;IAAEC,SAAS,EAAE,CAACnJ,mBAAmB,CAACC,eAArB;EAAb,CAZwB;EAY8B6C,eAAe,EAAE;AAZ/C,CAAzB,CAAhC;AAaAiL,UAAU,CAAC1E,cAAX,GAA4B;EACxB+E,eAAe,EAAE,CAAC;IAAEzM,IAAI,EAAEhF;EAAR,CAAD,CADO;EAExB0R,WAAW,EAAE,CAAC;IAAE1M,IAAI,EAAEhF;EAAR,CAAD,CAFW;EAGxB2R,cAAc,EAAE,CAAC;IAAE3M,IAAI,EAAEhF;EAAR,CAAD;AAHQ,CAA5B;;AAKA,CAAC,YAAY;EAAE,CAAC,OAAOuG,SAAP,KAAqB,WAArB,IAAoCA,SAArC,KAAmDpF,MAAM,CAACqF,iBAAP,CAAyB4K,UAAzB,EAAqC,CAAC;IAChGpM,IAAI,EAAExF,SAD0F;IAEhG8G,IAAI,EAAE,CAAC;MAAEG,QAAQ,EAAE,aAAZ;MACC2F,QAAQ,EAAE,YADX;MAECrG,QAAQ,EAAE,2EAFX;MAGC4G,UAAU,EAAE,CAACtJ,mBAAmB,CAACC,eAArB,CAHb;MAICoD,IAAI,EAAE;QACF,SAAS,wBADP;QAEF,YAAY,IAFV;QAGF,gBAAgB,iBAHd;QAIF,sBAAsB,gCAJpB;QAKF,qBAAqB,4BALnB;QAMF;QACA,gBAAgB,MAPd;QAQF,0BAA0B,oBARxB;QASF,2BAA2B,iBATzB;QAUF,2BAA2B,iBAVzB;QAWF,2BAA2B,iBAXzB;QAYF,6BAA6B,iBAZ3B;QAaF,kBAAkB,sCAbhB;QAcF,qBAAqB;MAdnB,CAJP;MAoBCP,eAAe,EAAE7G,uBAAuB,CAACqH,MApB1C;MAqBCT,aAAa,EAAE7F,iBAAiB,CAACuG;IArBlC,CAAD;EAF0F,CAAD,CAArC,EAyB1D,IAzB0D,EAyBpD;IAAE6K,eAAe,EAAE,CAAC;MACtBzM,IAAI,EAAEhF;IADgB,CAAD,CAAnB;IAEF0R,WAAW,EAAE,CAAC;MACd1M,IAAI,EAAEhF;IADQ,CAAD,CAFX;IAIF2R,cAAc,EAAE,CAAC;MACjB3M,IAAI,EAAEhF;IADW,CAAD;EAJd,CAzBoD,CAAnD;AA+BC,CA/BhB;;AAgCA,MAAMiR,mBAAN,SAAkCpM,kBAAlC,CAAqD;;AAErDoM,mBAAmB,CAACxM,IAApB,GAA2B,aAAc,YAAY;EAAE,IAAI0N,gCAAJ;EAAsC,OAAO,SAASC,2BAAT,CAAqCzN,CAArC,EAAwC;IAAE,OAAO,CAACwN,gCAAgC,KAAKA,gCAAgC,GAAGhR,MAAM,CAAC2Q,qBAAP,CAA6Bb,mBAA7B,CAAxC,CAAjC,EAA6HtM,CAAC,IAAIsM,mBAAlI,CAAP;EAAgK,CAAjN;AAAoN,CAAxQ,EAAzC;;AACAA,mBAAmB,CAACnM,IAApB,GAA2B,aAAc3D,MAAM,CAAC4D,iBAAP,CAAyB;EAAEC,IAAI,EAAEiM,mBAAR;EAA6BhM,SAAS,EAAE,CAAC,CAAC,uBAAD,CAAD,CAAxC;EAAqEwK,cAAc,EAAE,SAAS4C,kCAAT,CAA4C1Q,EAA5C,EAAgDC,GAAhD,EAAqD+N,QAArD,EAA+D;IAAE,IAAIhO,EAAE,GAAG,CAAT,EAAY;MAC5NR,MAAM,CAACyO,cAAP,CAAsBD,QAAtB,EAAgCkB,iBAAhC,EAAmD,CAAnD;MACA1P,MAAM,CAACyO,cAAP,CAAsBD,QAAtB,EAAgCyB,UAAhC,EAA4C,CAA5C;IACH;;IAAC,IAAIzP,EAAE,GAAG,CAAT,EAAY;MACV,IAAIkO,EAAJ;;MACA1O,MAAM,CAAC2O,cAAP,CAAsBD,EAAE,GAAG1O,MAAM,CAAC4O,WAAP,EAA3B,MAAqDnO,GAAG,CAACoM,QAAJ,GAAe6B,EAAE,CAACG,KAAvE;MACA7O,MAAM,CAAC2O,cAAP,CAAsBD,EAAE,GAAG1O,MAAM,CAAC4O,WAAP,EAA3B,MAAqDnO,GAAG,CAACqM,QAAJ,GAAe4B,EAApE;IACH;EAAE,CAP2D;EAOzD3K,SAAS,EAAE,CAAC,CAAD,EAAI,sBAAJ,EAA4B,uBAA5B,CAP8C;EAOQC,QAAQ,EAAE,CAPlB;EAOqBC,YAAY,EAAE,SAASkN,gCAAT,CAA0C3Q,EAA1C,EAA8CC,GAA9C,EAAmD;IAAE,IAAID,EAAE,GAAG,CAAT,EAAY;MAC9JR,MAAM,CAACsB,WAAP,CAAmB,wCAAnB,EAA6Db,GAAG,CAACiM,iBAAjE;IACH;EAAE,CAT2D;EASzDzB,QAAQ,EAAE,CAAC,qBAAD,CAT+C;EAStB1G,QAAQ,EAAE,CAACvE,MAAM,CAACwE,0BAAR,CATY;EASyBC,kBAAkB,EAAEzC,GAT7C;EASkD0C,KAAK,EAAE,CATzD;EAS4DC,IAAI,EAAE,CATlE;EASqEuG,MAAM,EAAE,CAAC,CAAC,OAAD,EAAU,qBAAV,EAAiC,CAAjC,EAAoC,kBAApC,EAAwD,OAAxD,EAAiE,CAAjE,EAAoE,MAApE,CAAD,EAA8E,CAAC,eAAD,EAAkB,EAAlB,EAAsB,CAAtB,EAAyB,MAAzB,CAA9E,EAAgH,CAAC,CAAD,EAAI,qBAAJ,EAA2B,CAA3B,EAA8B,OAA9B,CAAhH,EAAwJ,CAAC,eAAD,EAAkB,EAAlB,CAAxJ,CAT7E;EAS6PtG,QAAQ,EAAE,SAASwM,4BAAT,CAAsC5Q,EAAtC,EAA0CC,GAA1C,EAA+C;IAAE,IAAID,EAAE,GAAG,CAAT,EAAY;MAC9XR,MAAM,CAAC8E,eAAP,CAAuB/C,GAAvB;MACA/B,MAAM,CAACmP,UAAP,CAAkB,CAAlB,EAAqBvN,kCAArB,EAAyD,CAAzD,EAA4D,CAA5D,EAA+D,KAA/D,EAAsE,CAAtE;MACA5B,MAAM,CAACyB,YAAP,CAAoB,CAApB;MACAzB,MAAM,CAACyB,YAAP,CAAoB,CAApB,EAAuB,CAAvB;MACAzB,MAAM,CAACmP,UAAP,CAAkB,CAAlB,EAAqBrN,kDAArB,EAAyE,CAAzE,EAA4E,CAA5E,EAA+E,qBAA/E,EAAsG,CAAtG;IACH;;IAAC,IAAItB,EAAE,GAAG,CAAT,EAAY;MACVR,MAAM,CAACoP,UAAP,CAAkB,MAAlB,EAA0B3O,GAAG,CAACgM,WAA9B;MACAzM,MAAM,CAACqP,SAAP,CAAiB,CAAjB;MACArP,MAAM,CAACoP,UAAP,CAAkB,MAAlB,EAA0B,CAAC3O,GAAG,CAACoM,QAA/B;IACH;EAAE,CAnB2D;EAmBzDyC,YAAY,EAAE,CAACjP,MAAM,CAACkP,IAAR,EAActP,MAAM,CAACpC,aAArB,EAAoC6R,iBAApC,CAnB2C;EAmBaF,MAAM,EAAE,CAACvN,GAAD,CAnBrB;EAmB4B8C,aAAa,EAAE,CAnB3C;EAmB8CC,eAAe,EAAE;AAnB/D,CAAzB,CAAzC;AAoBA8K,mBAAmB,CAACvE,cAApB,GAAqC;EACjCuB,QAAQ,EAAE,CAAC;IAAEjJ,IAAI,EAAEtF,eAAR;IAAyB4G,IAAI,EAAE,CAAC8K,UAAD;EAA/B,CAAD,CADuB;EAEjCpD,QAAQ,EAAE,CAAC;IAAEhJ,IAAI,EAAEvF,YAAR;IAAsB6G,IAAI,EAAE,CAACuK,iBAAD;EAA5B,CAAD;AAFuB,CAArC;;AAIA,CAAC,YAAY;EAAE,CAAC,OAAOtK,SAAP,KAAqB,WAArB,IAAoCA,SAArC,KAAmDpF,MAAM,CAACqF,iBAAP,CAAyByK,mBAAzB,EAA8C,CAAC;IACzGjM,IAAI,EAAExF,SADmG;IAEzG8G,IAAI,EAAE,CAAC;MAAEG,QAAQ,EAAE,uBAAZ;MAAqC2F,QAAQ,EAAE,qBAA/C;MAAsErG,QAAQ,EAAE,kWAAhF;MAAobW,IAAI,EAAE;QACrb,SAAS,4CAD4a;QAErb,kDAAkD;MAFmY,CAA1b;MAGIP,eAAe,EAAE7G,uBAAuB,CAACqH,MAH7C;MAGqDT,aAAa,EAAE7F,iBAAiB,CAACuG,IAHtF;MAG4F+J,MAAM,EAAE,CAAC,8kEAAD;IAHpG,CAAD;EAFmG,CAAD,CAA9C,EAM1D,IAN0D,EAMpD;IAAE1C,QAAQ,EAAE,CAAC;MACfjJ,IAAI,EAAEtF,eADS;MAEf4G,IAAI,EAAE,CAAC8K,UAAD;IAFS,CAAD,CAAZ;IAGFpD,QAAQ,EAAE,CAAC;MACXhJ,IAAI,EAAEvF,YADK;MAEX6G,IAAI,EAAE,CAACuK,iBAAD;IAFK,CAAD;EAHR,CANoD,CAAnD;AAYC,CAZhB;AAcA;AACA;AACA;AACA;;;AACA,MAAM2B,gBAAN,CAAuB;;AAEvBA,gBAAgB,CAAC/N,IAAjB,GAAwB,SAASgO,wBAAT,CAAkC9N,CAAlC,EAAqC;EAAE,OAAO,KAAKA,CAAC,IAAI6N,gBAAV,GAAP;AAAuC,CAAtG;;AACAA,gBAAgB,CAACE,IAAjB,GAAwB,aAAcvR,MAAM,CAACwR,gBAAP,CAAwB;EAAE3N,IAAI,EAAEwN;AAAR,CAAxB,CAAtC;AACAA,gBAAgB,CAACI,IAAjB,GAAwB,aAAczR,MAAM,CAAC0R,gBAAP,CAAwB;EAAEC,OAAO,EAAE,CAACzT,YAAD,EACjE6B,eADiE,EAEjE/B,eAFiE,EAGjEJ,cAHiE,EAGjDmC,eAHiD;AAAX,CAAxB,CAAtC;;AAIA,CAAC,YAAY;EAAE,CAAC,OAAOqF,SAAP,KAAqB,WAArB,IAAoCA,SAArC,KAAmDpF,MAAM,CAACqF,iBAAP,CAAyBgM,gBAAzB,EAA2C,CAAC;IACtGxN,IAAI,EAAE1E,QADgG;IAEtGgG,IAAI,EAAE,CAAC;MACCwM,OAAO,EAAE,CACLzT,YADK,EAEL6B,eAFK,EAGL/B,eAHK,EAILJ,cAJK,CADV;MAOCgU,OAAO,EAAE,CACL7R,eADK,EAEL2F,SAFK,EAGLhC,kBAHK,EAILf,gBAJK,EAKLsN,UALK,EAMLH,mBANK,EAOLJ,iBAPK,CAPV;MAgBCmC,YAAY,EAAE,CACVnM,SADU,EAEVhC,kBAFU,EAGVf,gBAHU,EAIVsN,UAJU,EAKVH,mBALU,EAMVJ,iBANU;IAhBf,CAAD;EAFgG,CAAD,CAA3C,EA2B1D,IA3B0D,EA2BpD,IA3BoD,CAAnD;AA2BO,CA3BtB;;AA4BA,CAAC,YAAY;EAAE,CAAC,OAAOoC,SAAP,KAAqB,WAArB,IAAoCA,SAArC,KAAmD9R,MAAM,CAAC+R,kBAAP,CAA0BV,gBAA1B,EAA4C;IAAEQ,YAAY,EAAE,YAAY;MAAE,OAAO,CAACnM,SAAD,EAAYhC,kBAAZ,EAAgCf,gBAAhC,EAAkDsN,UAAlD,EAA8DH,mBAA9D,EAAmFJ,iBAAnF,CAAP;IAA+G,CAA7I;IAA+IiC,OAAO,EAAE,YAAY;MAAE,OAAO,CAACzT,YAAD,EACnR6B,eADmR,EAEnR/B,eAFmR,EAGnRJ,cAHmR,CAAP;IAG1P,CAHoF;IAGlFgU,OAAO,EAAE,YAAY;MAAE,OAAO,CAAC7R,eAAD,EAAkB2F,SAAlB,EAA6BhC,kBAA7B,EAAiDf,gBAAjD,EAAmEsN,UAAnE,EAA+EH,mBAA/E,EAAoGJ,iBAApG,CAAP;IAAgI;EAHrE,CAA5C,CAAnD;AAG0K,CAHzL;AAKA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;AAEA,SAAS2B,gBAAT,EAA2BjP,6BAA3B,EAA0DM,mCAA1D,EAA+FH,2BAA/F,EAA4HI,gBAA5H,EAA8I+C,SAA9I,EAAyJhC,kBAAzJ,EAA6KgM,iBAA7K,EAAgMO,UAAhM,EAA4MH,mBAA5M,EAAiO5N,mBAAjO"},"metadata":{},"sourceType":"module"}