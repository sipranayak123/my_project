{"ast":null,"code":"/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { Injectable, NgModule, ChangeDetectionStrategy, ChangeDetectorRef, Component, EventEmitter, forwardRef, Inject, Input, Optional, Output, ViewChild, ViewEncapsulation, ElementRef, NgZone, InjectionToken, ViewContainerRef, Directive, Attribute, ContentChild, defineInjectable } from '@angular/core';\nimport { Subject, merge, Subscription, of } from 'rxjs';\nimport { take, filter } from 'rxjs/operators';\nimport { DOWN_ARROW, END, ENTER, HOME, LEFT_ARROW, PAGE_DOWN, PAGE_UP, RIGHT_ARROW, UP_ARROW, SPACE, ESCAPE } from '@angular/cdk/keycodes';\nimport { DateAdapter, MAT_DATE_FORMATS, mixinColor } from '@angular/material/core';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { ComponentPortal, PortalModule } from '@angular/cdk/portal';\nimport { animate, state, style, transition, trigger } from '@angular/animations';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { Overlay, OverlayConfig, OverlayModule } from '@angular/cdk/overlay';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport { MatDialog, MatDialogModule } from '@angular/material/dialog';\nimport { NG_VALIDATORS, NG_VALUE_ACCESSOR, Validators } from '@angular/forms';\nimport { MatFormField } from '@angular/material/form-field';\nimport { MAT_INPUT_VALUE_ACCESSOR } from '@angular/material/input';\nimport { MatButtonModule } from '@angular/material/button';\nimport { A11yModule } from '@angular/cdk/a11y';\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * \\@docs-private\n * @param {?} provider\n * @return {?}\n */\n\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/common';\nimport * as ɵngcc2 from '@angular/material/core';\nimport * as ɵngcc3 from '@angular/cdk/bidi';\nimport * as ɵngcc4 from '@angular/material/button';\nimport * as ɵngcc5 from '@angular/cdk/a11y';\nimport * as ɵngcc6 from '@angular/cdk/portal';\nimport * as ɵngcc7 from '@angular/material/dialog';\nimport * as ɵngcc8 from '@angular/cdk/overlay';\nimport * as ɵngcc9 from '@angular/material/form-field';\nconst _c0 = [\"mat-calendar-body\", \"\"];\n\nfunction MatCalendarBody_tr_0_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"tr\", 2)(1, \"td\", 3);\n    ɵngcc0.ɵɵtext(2);\n    ɵngcc0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵstyleProp(\"padding-top\", ctx_r0._cellPadding)(\"padding-bottom\", ctx_r0._cellPadding);\n    ɵngcc0.ɵɵattribute(\"colspan\", ctx_r0.numCols);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r0.label);\n  }\n}\n\nfunction MatCalendarBody_tr_1_td_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"td\", 7);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r4 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵstyleProp(\"padding-top\", ctx_r4._cellPadding)(\"padding-bottom\", ctx_r4._cellPadding);\n    ɵngcc0.ɵɵattribute(\"colspan\", ctx_r4._firstRowOffset);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r4._firstRowOffset >= ctx_r4.labelMinRequiredCells ? ctx_r4.label : \"\");\n  }\n}\n\nfunction MatCalendarBody_tr_1_td_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r9 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"td\", 8);\n    ɵngcc0.ɵɵlistener(\"click\", function MatCalendarBody_tr_1_td_2_Template_td_click_0_listener() {\n      const restoredCtx = ɵngcc0.ɵɵrestoreView(_r9);\n      const item_r6 = restoredCtx.$implicit;\n      const ctx_r8 = ɵngcc0.ɵɵnextContext(2);\n      return ɵngcc0.ɵɵresetView(ctx_r8._cellClicked(item_r6));\n    });\n    ɵngcc0.ɵɵelementStart(1, \"div\", 9);\n    ɵngcc0.ɵɵtext(2);\n    ɵngcc0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const item_r6 = ctx.$implicit;\n    const colIndex_r7 = ctx.index;\n    const rowIndex_r3 = ɵngcc0.ɵɵnextContext().index;\n    const ctx_r5 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵstyleProp(\"width\", ctx_r5._cellWidth)(\"padding-top\", ctx_r5._cellPadding)(\"padding-bottom\", ctx_r5._cellPadding);\n    ɵngcc0.ɵɵclassProp(\"mat-calendar-body-disabled\", !item_r6.enabled)(\"mat-calendar-body-active\", ctx_r5._isActiveCell(rowIndex_r3, colIndex_r7));\n    ɵngcc0.ɵɵproperty(\"ngClass\", item_r6.cssClasses)(\"tabindex\", ctx_r5._isActiveCell(rowIndex_r3, colIndex_r7) ? 0 : -1);\n    ɵngcc0.ɵɵattribute(\"aria-label\", item_r6.ariaLabel)(\"aria-disabled\", !item_r6.enabled || null)(\"aria-selected\", ctx_r5.selectedValue === item_r6.value);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵclassProp(\"mat-calendar-body-selected\", ctx_r5.selectedValue === item_r6.value)(\"mat-calendar-body-today\", ctx_r5.todayValue === item_r6.value);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(item_r6.displayValue);\n  }\n}\n\nfunction MatCalendarBody_tr_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"tr\", 4);\n    ɵngcc0.ɵɵtemplate(1, MatCalendarBody_tr_1_td_1_Template, 2, 6, \"td\", 5);\n    ɵngcc0.ɵɵtemplate(2, MatCalendarBody_tr_1_td_2_Template, 3, 20, \"td\", 6);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const row_r2 = ctx.$implicit;\n    const rowIndex_r3 = ctx.index;\n    const ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", rowIndex_r3 === 0 && ctx_r1._firstRowOffset);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngForOf\", row_r2);\n  }\n}\n\nfunction MatMonthView_th_3_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"th\");\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const day_r1 = ctx.$implicit;\n    ɵngcc0.ɵɵattribute(\"aria-label\", day_r1.long);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(day_r1.narrow);\n  }\n}\n\nconst _c1 = [\"*\"];\n\nfunction MatCalendar_ng_template_0_Template(rf, ctx) {}\n\nfunction MatCalendar_mat_month_view_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"mat-month-view\", 5);\n    ɵngcc0.ɵɵlistener(\"activeDateChange\", function MatCalendar_mat_month_view_2_Template_mat_month_view_activeDateChange_0_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r5);\n      const ctx_r4 = ɵngcc0.ɵɵnextContext();\n      return ɵngcc0.ɵɵresetView(ctx_r4.activeDate = $event);\n    })(\"selectedChange\", function MatCalendar_mat_month_view_2_Template_mat_month_view_selectedChange_0_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r5);\n      const ctx_r6 = ɵngcc0.ɵɵnextContext();\n      return ɵngcc0.ɵɵresetView(ctx_r6._dateSelected($event));\n    })(\"_userSelection\", function MatCalendar_mat_month_view_2_Template_mat_month_view__userSelection_0_listener() {\n      ɵngcc0.ɵɵrestoreView(_r5);\n      const ctx_r7 = ɵngcc0.ɵɵnextContext();\n      return ɵngcc0.ɵɵresetView(ctx_r7._userSelected());\n    });\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"activeDate\", ctx_r1.activeDate)(\"selected\", ctx_r1.selected)(\"dateFilter\", ctx_r1.dateFilter)(\"maxDate\", ctx_r1.maxDate)(\"minDate\", ctx_r1.minDate)(\"dateClass\", ctx_r1.dateClass);\n  }\n}\n\nfunction MatCalendar_mat_year_view_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r9 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"mat-year-view\", 6);\n    ɵngcc0.ɵɵlistener(\"activeDateChange\", function MatCalendar_mat_year_view_3_Template_mat_year_view_activeDateChange_0_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r9);\n      const ctx_r8 = ɵngcc0.ɵɵnextContext();\n      return ɵngcc0.ɵɵresetView(ctx_r8.activeDate = $event);\n    })(\"monthSelected\", function MatCalendar_mat_year_view_3_Template_mat_year_view_monthSelected_0_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r9);\n      const ctx_r10 = ɵngcc0.ɵɵnextContext();\n      return ɵngcc0.ɵɵresetView(ctx_r10._monthSelectedInYearView($event));\n    })(\"selectedChange\", function MatCalendar_mat_year_view_3_Template_mat_year_view_selectedChange_0_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r9);\n      const ctx_r11 = ɵngcc0.ɵɵnextContext();\n      return ɵngcc0.ɵɵresetView(ctx_r11._goToDateInView($event, \"month\"));\n    });\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r2 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"activeDate\", ctx_r2.activeDate)(\"selected\", ctx_r2.selected)(\"dateFilter\", ctx_r2.dateFilter)(\"maxDate\", ctx_r2.maxDate)(\"minDate\", ctx_r2.minDate);\n  }\n}\n\nfunction MatCalendar_mat_multi_year_view_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r13 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"mat-multi-year-view\", 7);\n    ɵngcc0.ɵɵlistener(\"activeDateChange\", function MatCalendar_mat_multi_year_view_4_Template_mat_multi_year_view_activeDateChange_0_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r13);\n      const ctx_r12 = ɵngcc0.ɵɵnextContext();\n      return ɵngcc0.ɵɵresetView(ctx_r12.activeDate = $event);\n    })(\"yearSelected\", function MatCalendar_mat_multi_year_view_4_Template_mat_multi_year_view_yearSelected_0_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r13);\n      const ctx_r14 = ɵngcc0.ɵɵnextContext();\n      return ɵngcc0.ɵɵresetView(ctx_r14._yearSelectedInMultiYearView($event));\n    })(\"selectedChange\", function MatCalendar_mat_multi_year_view_4_Template_mat_multi_year_view_selectedChange_0_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r13);\n      const ctx_r15 = ɵngcc0.ɵɵnextContext();\n      return ɵngcc0.ɵɵresetView(ctx_r15._goToDateInView($event, \"year\"));\n    });\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r3 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"activeDate\", ctx_r3.activeDate)(\"selected\", ctx_r3.selected)(\"dateFilter\", ctx_r3.dateFilter)(\"maxDate\", ctx_r3.maxDate)(\"minDate\", ctx_r3.minDate);\n  }\n}\n\nconst _c2 = [\"button\"];\n\nfunction MatDatepickerToggle__svg_svg_2_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵnamespaceSVG();\n    ɵngcc0.ɵɵelementStart(0, \"svg\", 3);\n    ɵngcc0.ɵɵelement(1, \"path\", 4);\n    ɵngcc0.ɵɵelementEnd();\n  }\n}\n\nconst _c3 = [[[\"\", \"matDatepickerToggleIcon\", \"\"]]];\nconst _c4 = [\"[matDatepickerToggleIcon]\"];\n\nfunction createMissingDateImplError(provider) {\n  return Error(`MatDatepicker: No provider found for ${provider}. You must import one of the following ` + `modules at your application root: MatNativeDateModule, MatMomentDateModule, or provide a ` + `custom implementation.`);\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Datepicker data that requires internationalization.\n */\n\n\nclass MatDatepickerIntl {\n  constructor() {\n    /**\n     * Stream that emits whenever the labels here are changed. Use this to notify\n     * components if the labels have changed after initialization.\n     */\n    this.changes = new Subject();\n    /**\n     * A label for the calendar popup (used by screen readers).\n     */\n\n    this.calendarLabel = 'Calendar';\n    /**\n     * A label for the button used to open the calendar popup (used by screen readers).\n     */\n\n    this.openCalendarLabel = 'Open calendar';\n    /**\n     * A label for the previous month button (used by screen readers).\n     */\n\n    this.prevMonthLabel = 'Previous month';\n    /**\n     * A label for the next month button (used by screen readers).\n     */\n\n    this.nextMonthLabel = 'Next month';\n    /**\n     * A label for the previous year button (used by screen readers).\n     */\n\n    this.prevYearLabel = 'Previous year';\n    /**\n     * A label for the next year button (used by screen readers).\n     */\n\n    this.nextYearLabel = 'Next year';\n    /**\n     * A label for the previous multi-year button (used by screen readers).\n     */\n\n    this.prevMultiYearLabel = 'Previous 20 years';\n    /**\n     * A label for the next multi-year button (used by screen readers).\n     */\n\n    this.nextMultiYearLabel = 'Next 20 years';\n    /**\n     * A label for the 'switch to month view' button (used by screen readers).\n     */\n\n    this.switchToMonthViewLabel = 'Choose date';\n    /**\n     * A label for the 'switch to year view' button (used by screen readers).\n     */\n\n    this.switchToMultiYearViewLabel = 'Choose month and year';\n  }\n\n}\n\nMatDatepickerIntl.ɵfac = function MatDatepickerIntl_Factory(t) {\n  return new (t || MatDatepickerIntl)();\n};\n\nMatDatepickerIntl.ɵprov = /*@__PURE__*/ɵngcc0.ɵɵdefineInjectable({\n  token: MatDatepickerIntl,\n  factory: MatDatepickerIntl.ɵfac,\n  providedIn: 'root'\n});\n/** @nocollapse */\n\nMatDatepickerIntl.ngInjectableDef = defineInjectable({\n  factory: function MatDatepickerIntl_Factory() {\n    return new MatDatepickerIntl();\n  },\n  token: MatDatepickerIntl,\n  providedIn: \"root\"\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatDatepickerIntl, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], function () {\n    return [];\n  }, null);\n})();\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * An internal class that represents the data corresponding to a single calendar cell.\n * \\@docs-private\n */\n\n\nclass MatCalendarCell {\n  /**\n   * @param {?} value\n   * @param {?} displayValue\n   * @param {?} ariaLabel\n   * @param {?} enabled\n   * @param {?=} cssClasses\n   */\n  constructor(value, displayValue, ariaLabel, enabled, cssClasses) {\n    this.value = value;\n    this.displayValue = displayValue;\n    this.ariaLabel = ariaLabel;\n    this.enabled = enabled;\n    this.cssClasses = cssClasses;\n  }\n\n}\n/**\n * An internal component used to display calendar data in a table.\n * \\@docs-private\n */\n\n\nclass MatCalendarBody {\n  /**\n   * @param {?} _elementRef\n   * @param {?} _ngZone\n   */\n  constructor(_elementRef, _ngZone) {\n    this._elementRef = _elementRef;\n    this._ngZone = _ngZone;\n    /**\n     * The number of columns in the table.\n     */\n\n    this.numCols = 7;\n    /**\n     * The cell number of the active cell in the table.\n     */\n\n    this.activeCell = 0;\n    /**\n     * The aspect ratio (width / height) to use for the cells in the table. This aspect ratio will be\n     * maintained even as the table resizes.\n     */\n\n    this.cellAspectRatio = 1;\n    /**\n     * Emits when a new value is selected.\n     */\n\n    this.selectedValueChange = new EventEmitter();\n  }\n  /**\n   * @param {?} cell\n   * @return {?}\n   */\n\n\n  _cellClicked(cell) {\n    if (cell.enabled) {\n      this.selectedValueChange.emit(cell.value);\n    }\n  }\n  /**\n   * @param {?} changes\n   * @return {?}\n   */\n\n\n  ngOnChanges(changes) {\n    /** @type {?} */\n    const columnChanges = changes['numCols'];\n    const {\n      rows,\n      numCols\n    } = this;\n\n    if (changes['rows'] || columnChanges) {\n      this._firstRowOffset = rows && rows.length && rows[0].length ? numCols - rows[0].length : 0;\n    }\n\n    if (changes['cellAspectRatio'] || columnChanges || !this._cellPadding) {\n      this._cellPadding = `${50 * this.cellAspectRatio / numCols}%`;\n    }\n\n    if (columnChanges || !this._cellWidth) {\n      this._cellWidth = `${100 / numCols}%`;\n    }\n  }\n  /**\n   * @param {?} rowIndex\n   * @param {?} colIndex\n   * @return {?}\n   */\n\n\n  _isActiveCell(rowIndex, colIndex) {\n    /** @type {?} */\n    let cellNumber = rowIndex * this.numCols + colIndex; // Account for the fact that the first row may not have as many cells.\n\n    if (rowIndex) {\n      cellNumber -= this._firstRowOffset;\n    }\n\n    return cellNumber == this.activeCell;\n  }\n  /**\n   * Focuses the active cell after the microtask queue is empty.\n   * @return {?}\n   */\n\n\n  _focusActiveCell() {\n    this._ngZone.runOutsideAngular(() => {\n      this._ngZone.onStable.asObservable().pipe(take(1)).subscribe(() => {\n        /** @type {?} */\n        const activeCell = this._elementRef.nativeElement.querySelector('.mat-calendar-body-active');\n\n        if (activeCell) {\n          activeCell.focus();\n        }\n      });\n    });\n  }\n\n}\n\nMatCalendarBody.ɵfac = function MatCalendarBody_Factory(t) {\n  return new (t || MatCalendarBody)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone));\n};\n\nMatCalendarBody.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n  type: MatCalendarBody,\n  selectors: [[\"\", \"mat-calendar-body\", \"\"]],\n  hostAttrs: [\"role\", \"grid\", \"aria-readonly\", \"true\", 1, \"mat-calendar-body\"],\n  inputs: {\n    numCols: \"numCols\",\n    activeCell: \"activeCell\",\n    cellAspectRatio: \"cellAspectRatio\",\n    label: \"label\",\n    rows: \"rows\",\n    todayValue: \"todayValue\",\n    selectedValue: \"selectedValue\",\n    labelMinRequiredCells: \"labelMinRequiredCells\"\n  },\n  outputs: {\n    selectedValueChange: \"selectedValueChange\"\n  },\n  exportAs: [\"matCalendarBody\"],\n  features: [ɵngcc0.ɵɵNgOnChangesFeature],\n  attrs: _c0,\n  decls: 2,\n  vars: 2,\n  consts: [[\"aria-hidden\", \"true\", 4, \"ngIf\"], [\"role\", \"row\", 4, \"ngFor\", \"ngForOf\"], [\"aria-hidden\", \"true\"], [1, \"mat-calendar-body-label\"], [\"role\", \"row\"], [\"aria-hidden\", \"true\", \"class\", \"mat-calendar-body-label\", 3, \"paddingTop\", \"paddingBottom\", 4, \"ngIf\"], [\"role\", \"gridcell\", \"class\", \"mat-calendar-body-cell\", 3, \"ngClass\", \"tabindex\", \"mat-calendar-body-disabled\", \"mat-calendar-body-active\", \"width\", \"paddingTop\", \"paddingBottom\", \"click\", 4, \"ngFor\", \"ngForOf\"], [\"aria-hidden\", \"true\", 1, \"mat-calendar-body-label\"], [\"role\", \"gridcell\", 1, \"mat-calendar-body-cell\", 3, \"ngClass\", \"tabindex\", \"click\"], [1, \"mat-calendar-body-cell-content\"]],\n  template: function MatCalendarBody_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵtemplate(0, MatCalendarBody_tr_0_Template, 3, 6, \"tr\", 0);\n      ɵngcc0.ɵɵtemplate(1, MatCalendarBody_tr_1_Template, 3, 2, \"tr\", 1);\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵproperty(\"ngIf\", ctx._firstRowOffset < ctx.labelMinRequiredCells);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngForOf\", ctx.rows);\n    }\n  },\n  dependencies: [ɵngcc1.NgClass, ɵngcc1.NgForOf, ɵngcc1.NgIf],\n  styles: [\".mat-calendar-body{min-width:224px}.mat-calendar-body-label{height:0;line-height:0;text-align:left;padding-left:4.71429%;padding-right:4.71429%}.mat-calendar-body-cell{position:relative;height:0;line-height:0;text-align:center;outline:0;cursor:pointer}.mat-calendar-body-disabled{cursor:default}.mat-calendar-body-cell-content{position:absolute;top:5%;left:5%;display:flex;align-items:center;justify-content:center;box-sizing:border-box;width:90%;height:90%;line-height:1;border-width:1px;border-style:solid;border-radius:999px}@media (-ms-high-contrast:active){.mat-calendar-body-cell-content{border:none}}@media (-ms-high-contrast:active){.mat-calendar-body-selected,.mat-datepicker-popup:not(:empty){outline:solid 1px}.mat-calendar-body-today{outline:dotted 1px}}[dir=rtl] .mat-calendar-body-label{text-align:right}\"],\n  encapsulation: 2,\n  changeDetection: 0\n});\n/** @nocollapse */\n\nMatCalendarBody.ctorParameters = () => [{\n  type: ElementRef\n}, {\n  type: NgZone\n}];\n\nMatCalendarBody.propDecorators = {\n  label: [{\n    type: Input\n  }],\n  rows: [{\n    type: Input\n  }],\n  todayValue: [{\n    type: Input\n  }],\n  selectedValue: [{\n    type: Input\n  }],\n  labelMinRequiredCells: [{\n    type: Input\n  }],\n  numCols: [{\n    type: Input\n  }],\n  activeCell: [{\n    type: Input\n  }],\n  cellAspectRatio: [{\n    type: Input\n  }],\n  selectedValueChange: [{\n    type: Output\n  }]\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatCalendarBody, [{\n    type: Component,\n    args: [{\n      selector: '[mat-calendar-body]',\n      template: \"<tr *ngIf=\\\"_firstRowOffset < labelMinRequiredCells\\\" aria-hidden=\\\"true\\\"><td class=\\\"mat-calendar-body-label\\\" [attr.colspan]=\\\"numCols\\\" [style.paddingTop]=\\\"_cellPadding\\\" [style.paddingBottom]=\\\"_cellPadding\\\">{{label}}</td></tr><tr *ngFor=\\\"let row of rows; let rowIndex = index\\\" role=\\\"row\\\"><td *ngIf=\\\"rowIndex === 0 && _firstRowOffset\\\" aria-hidden=\\\"true\\\" class=\\\"mat-calendar-body-label\\\" [attr.colspan]=\\\"_firstRowOffset\\\" [style.paddingTop]=\\\"_cellPadding\\\" [style.paddingBottom]=\\\"_cellPadding\\\">{{_firstRowOffset >= labelMinRequiredCells ? label : ''}}</td><td *ngFor=\\\"let item of row; let colIndex = index\\\" role=\\\"gridcell\\\" class=\\\"mat-calendar-body-cell\\\" [ngClass]=\\\"item.cssClasses\\\" [tabindex]=\\\"_isActiveCell(rowIndex, colIndex) ? 0 : -1\\\" [class.mat-calendar-body-disabled]=\\\"!item.enabled\\\" [class.mat-calendar-body-active]=\\\"_isActiveCell(rowIndex, colIndex)\\\" [attr.aria-label]=\\\"item.ariaLabel\\\" [attr.aria-disabled]=\\\"!item.enabled || null\\\" [attr.aria-selected]=\\\"selectedValue === item.value\\\" (click)=\\\"_cellClicked(item)\\\" [style.width]=\\\"_cellWidth\\\" [style.paddingTop]=\\\"_cellPadding\\\" [style.paddingBottom]=\\\"_cellPadding\\\"><div class=\\\"mat-calendar-body-cell-content\\\" [class.mat-calendar-body-selected]=\\\"selectedValue === item.value\\\" [class.mat-calendar-body-today]=\\\"todayValue === item.value\\\">{{item.displayValue}}</div></td></tr>\",\n      host: {\n        'class': 'mat-calendar-body',\n        'role': 'grid',\n        'aria-readonly': 'true'\n      },\n      exportAs: 'matCalendarBody',\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      styles: [\".mat-calendar-body{min-width:224px}.mat-calendar-body-label{height:0;line-height:0;text-align:left;padding-left:4.71429%;padding-right:4.71429%}.mat-calendar-body-cell{position:relative;height:0;line-height:0;text-align:center;outline:0;cursor:pointer}.mat-calendar-body-disabled{cursor:default}.mat-calendar-body-cell-content{position:absolute;top:5%;left:5%;display:flex;align-items:center;justify-content:center;box-sizing:border-box;width:90%;height:90%;line-height:1;border-width:1px;border-style:solid;border-radius:999px}@media (-ms-high-contrast:active){.mat-calendar-body-cell-content{border:none}}@media (-ms-high-contrast:active){.mat-calendar-body-selected,.mat-datepicker-popup:not(:empty){outline:solid 1px}.mat-calendar-body-today{outline:dotted 1px}}[dir=rtl] .mat-calendar-body-label{text-align:right}\"]\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.ElementRef\n    }, {\n      type: ɵngcc0.NgZone\n    }];\n  }, {\n    numCols: [{\n      type: Input\n    }],\n    activeCell: [{\n      type: Input\n    }],\n    cellAspectRatio: [{\n      type: Input\n    }],\n    selectedValueChange: [{\n      type: Output\n    }],\n    label: [{\n      type: Input\n    }],\n    rows: [{\n      type: Input\n    }],\n    todayValue: [{\n      type: Input\n    }],\n    selectedValue: [{\n      type: Input\n    }],\n    labelMinRequiredCells: [{\n      type: Input\n    }]\n  });\n})();\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/** @type {?} */\n\n\nconst DAYS_PER_WEEK = 7;\n/**\n * An internal component used to display a single month in the datepicker.\n * \\@docs-private\n * @template D\n */\n\nclass MatMonthView {\n  /**\n   * @param {?} _changeDetectorRef\n   * @param {?} _dateFormats\n   * @param {?} _dateAdapter\n   * @param {?=} _dir\n   */\n  constructor(_changeDetectorRef, _dateFormats, _dateAdapter, _dir) {\n    this._changeDetectorRef = _changeDetectorRef;\n    this._dateFormats = _dateFormats;\n    this._dateAdapter = _dateAdapter;\n    this._dir = _dir;\n    /**\n     * Emits when a new date is selected.\n     */\n\n    this.selectedChange = new EventEmitter();\n    /**\n     * Emits when any date is selected.\n     */\n\n    this._userSelection = new EventEmitter();\n    /**\n     * Emits when any date is activated.\n     */\n\n    this.activeDateChange = new EventEmitter();\n\n    if (!this._dateAdapter) {\n      throw createMissingDateImplError('DateAdapter');\n    }\n\n    if (!this._dateFormats) {\n      throw createMissingDateImplError('MAT_DATE_FORMATS');\n    }\n    /** @type {?} */\n\n\n    const firstDayOfWeek = this._dateAdapter.getFirstDayOfWeek();\n    /** @type {?} */\n\n\n    const narrowWeekdays = this._dateAdapter.getDayOfWeekNames('narrow');\n    /** @type {?} */\n\n\n    const longWeekdays = this._dateAdapter.getDayOfWeekNames('long'); // Rotate the labels for days of the week based on the configured first day of the week.\n\n    /** @type {?} */\n\n\n    let weekdays = longWeekdays.map((long, i) => {\n      return {\n        long,\n        narrow: narrowWeekdays[i]\n      };\n    });\n    this._weekdays = weekdays.slice(firstDayOfWeek).concat(weekdays.slice(0, firstDayOfWeek));\n    this._activeDate = this._dateAdapter.today();\n  }\n  /**\n   * The date to display in this month view (everything other than the month and year is ignored).\n   * @return {?}\n   */\n\n\n  get activeDate() {\n    return this._activeDate;\n  }\n  /**\n   * @param {?} value\n   * @return {?}\n   */\n\n\n  set activeDate(value) {\n    /** @type {?} */\n    const oldActiveDate = this._activeDate;\n    /** @type {?} */\n\n    const validDate = this._getValidDateOrNull(this._dateAdapter.deserialize(value)) || this._dateAdapter.today();\n\n    this._activeDate = this._dateAdapter.clampDate(validDate, this.minDate, this.maxDate);\n\n    if (!this._hasSameMonthAndYear(oldActiveDate, this._activeDate)) {\n      this._init();\n    }\n  }\n  /**\n   * The currently selected date.\n   * @return {?}\n   */\n\n\n  get selected() {\n    return this._selected;\n  }\n  /**\n   * @param {?} value\n   * @return {?}\n   */\n\n\n  set selected(value) {\n    this._selected = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n    this._selectedDate = this._getDateInCurrentMonth(this._selected);\n  }\n  /**\n   * The minimum selectable date.\n   * @return {?}\n   */\n\n\n  get minDate() {\n    return this._minDate;\n  }\n  /**\n   * @param {?} value\n   * @return {?}\n   */\n\n\n  set minDate(value) {\n    this._minDate = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n  }\n  /**\n   * The maximum selectable date.\n   * @return {?}\n   */\n\n\n  get maxDate() {\n    return this._maxDate;\n  }\n  /**\n   * @param {?} value\n   * @return {?}\n   */\n\n\n  set maxDate(value) {\n    this._maxDate = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n  }\n  /**\n   * @return {?}\n   */\n\n\n  ngAfterContentInit() {\n    this._init();\n  }\n  /**\n   * Handles when a new date is selected.\n   * @param {?} date\n   * @return {?}\n   */\n\n\n  _dateSelected(date) {\n    if (this._selectedDate != date) {\n      /** @type {?} */\n      const selectedYear = this._dateAdapter.getYear(this.activeDate);\n      /** @type {?} */\n\n\n      const selectedMonth = this._dateAdapter.getMonth(this.activeDate);\n      /** @type {?} */\n\n\n      const selectedDate = this._dateAdapter.createDate(selectedYear, selectedMonth, date);\n\n      this.selectedChange.emit(selectedDate);\n    }\n\n    this._userSelection.emit();\n  }\n  /**\n   * Handles keydown events on the calendar body when calendar is in month view.\n   * @param {?} event\n   * @return {?}\n   */\n\n\n  _handleCalendarBodyKeydown(event) {\n    // TODO(mmalerba): We currently allow keyboard navigation to disabled dates, but just prevent\n    // disabled ones from being selected. This may not be ideal, we should look into whether\n    // navigation should skip over disabled dates, and if so, how to implement that efficiently.\n    // TODO(mmalerba): We currently allow keyboard navigation to disabled dates, but just prevent\n    // disabled ones from being selected. This may not be ideal, we should look into whether\n    // navigation should skip over disabled dates, and if so, how to implement that efficiently.\n\n    /** @type {?} */\n    const oldActiveDate = this._activeDate;\n    /** @type {?} */\n\n    const isRtl = this._isRtl();\n\n    switch (event.keyCode) {\n      case LEFT_ARROW:\n        this.activeDate = this._dateAdapter.addCalendarDays(this._activeDate, isRtl ? 1 : -1);\n        break;\n\n      case RIGHT_ARROW:\n        this.activeDate = this._dateAdapter.addCalendarDays(this._activeDate, isRtl ? -1 : 1);\n        break;\n\n      case UP_ARROW:\n        this.activeDate = this._dateAdapter.addCalendarDays(this._activeDate, -7);\n        break;\n\n      case DOWN_ARROW:\n        this.activeDate = this._dateAdapter.addCalendarDays(this._activeDate, 7);\n        break;\n\n      case HOME:\n        this.activeDate = this._dateAdapter.addCalendarDays(this._activeDate, 1 - this._dateAdapter.getDate(this._activeDate));\n        break;\n\n      case END:\n        this.activeDate = this._dateAdapter.addCalendarDays(this._activeDate, this._dateAdapter.getNumDaysInMonth(this._activeDate) - this._dateAdapter.getDate(this._activeDate));\n        break;\n\n      case PAGE_UP:\n        this.activeDate = event.altKey ? this._dateAdapter.addCalendarYears(this._activeDate, -1) : this._dateAdapter.addCalendarMonths(this._activeDate, -1);\n        break;\n\n      case PAGE_DOWN:\n        this.activeDate = event.altKey ? this._dateAdapter.addCalendarYears(this._activeDate, 1) : this._dateAdapter.addCalendarMonths(this._activeDate, 1);\n        break;\n\n      case ENTER:\n      case SPACE:\n        if (!this.dateFilter || this.dateFilter(this._activeDate)) {\n          this._dateSelected(this._dateAdapter.getDate(this._activeDate));\n\n          this._userSelection.emit(); // Prevent unexpected default actions such as form submission.\n\n\n          event.preventDefault();\n        }\n\n        return;\n\n      default:\n        // Don't prevent default or focus active cell on keys that we don't explicitly handle.\n        return;\n    }\n\n    if (this._dateAdapter.compareDate(oldActiveDate, this.activeDate)) {\n      this.activeDateChange.emit(this.activeDate);\n    }\n\n    this._focusActiveCell(); // Prevent unexpected default actions such as form submission.\n\n\n    event.preventDefault();\n  }\n  /**\n   * Initializes this month view.\n   * @return {?}\n   */\n\n\n  _init() {\n    this._selectedDate = this._getDateInCurrentMonth(this.selected);\n    this._todayDate = this._getDateInCurrentMonth(this._dateAdapter.today());\n    this._monthLabel = this._dateAdapter.getMonthNames('short')[this._dateAdapter.getMonth(this.activeDate)].toLocaleUpperCase();\n    /** @type {?} */\n\n    let firstOfMonth = this._dateAdapter.createDate(this._dateAdapter.getYear(this.activeDate), this._dateAdapter.getMonth(this.activeDate), 1);\n\n    this._firstWeekOffset = (DAYS_PER_WEEK + this._dateAdapter.getDayOfWeek(firstOfMonth) - this._dateAdapter.getFirstDayOfWeek()) % DAYS_PER_WEEK;\n\n    this._createWeekCells();\n\n    this._changeDetectorRef.markForCheck();\n  }\n  /**\n   * Focuses the active cell after the microtask queue is empty.\n   * @return {?}\n   */\n\n\n  _focusActiveCell() {\n    this._matCalendarBody._focusActiveCell();\n  }\n  /**\n   * Creates MatCalendarCells for the dates in this month.\n   * @private\n   * @return {?}\n   */\n\n\n  _createWeekCells() {\n    /** @type {?} */\n    const daysInMonth = this._dateAdapter.getNumDaysInMonth(this.activeDate);\n    /** @type {?} */\n\n\n    const dateNames = this._dateAdapter.getDateNames();\n\n    this._weeks = [[]];\n\n    for (let i = 0, cell = this._firstWeekOffset; i < daysInMonth; i++, cell++) {\n      if (cell == DAYS_PER_WEEK) {\n        this._weeks.push([]);\n\n        cell = 0;\n      }\n      /** @type {?} */\n\n\n      const date = this._dateAdapter.createDate(this._dateAdapter.getYear(this.activeDate), this._dateAdapter.getMonth(this.activeDate), i + 1);\n      /** @type {?} */\n\n\n      const enabled = this._shouldEnableDate(date);\n      /** @type {?} */\n\n\n      const ariaLabel = this._dateAdapter.format(date, this._dateFormats.display.dateA11yLabel);\n      /** @type {?} */\n\n\n      const cellClasses = this.dateClass ? this.dateClass(date) : undefined;\n\n      this._weeks[this._weeks.length - 1].push(new MatCalendarCell(i + 1, dateNames[i], ariaLabel, enabled, cellClasses));\n    }\n  }\n  /**\n   * Date filter for the month\n   * @private\n   * @param {?} date\n   * @return {?}\n   */\n\n\n  _shouldEnableDate(date) {\n    return !!date && (!this.dateFilter || this.dateFilter(date)) && (!this.minDate || this._dateAdapter.compareDate(date, this.minDate) >= 0) && (!this.maxDate || this._dateAdapter.compareDate(date, this.maxDate) <= 0);\n  }\n  /**\n   * Gets the date in this month that the given Date falls on.\n   * Returns null if the given Date is in another month.\n   * @private\n   * @param {?} date\n   * @return {?}\n   */\n\n\n  _getDateInCurrentMonth(date) {\n    return date && this._hasSameMonthAndYear(date, this.activeDate) ? this._dateAdapter.getDate(date) : null;\n  }\n  /**\n   * Checks whether the 2 dates are non-null and fall within the same month of the same year.\n   * @private\n   * @param {?} d1\n   * @param {?} d2\n   * @return {?}\n   */\n\n\n  _hasSameMonthAndYear(d1, d2) {\n    return !!(d1 && d2 && this._dateAdapter.getMonth(d1) == this._dateAdapter.getMonth(d2) && this._dateAdapter.getYear(d1) == this._dateAdapter.getYear(d2));\n  }\n  /**\n   * @private\n   * @param {?} obj The object to check.\n   * @return {?} The given object if it is both a date instance and valid, otherwise null.\n   */\n\n\n  _getValidDateOrNull(obj) {\n    return this._dateAdapter.isDateInstance(obj) && this._dateAdapter.isValid(obj) ? obj : null;\n  }\n  /**\n   * Determines whether the user has the RTL layout direction.\n   * @private\n   * @return {?}\n   */\n\n\n  _isRtl() {\n    return this._dir && this._dir.value === 'rtl';\n  }\n\n}\n\nMatMonthView.ɵfac = function MatMonthView_Factory(t) {\n  return new (t || MatMonthView)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(MAT_DATE_FORMATS, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.DateAdapter, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc3.Directionality, 8));\n};\n\nMatMonthView.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n  type: MatMonthView,\n  selectors: [[\"mat-month-view\"]],\n  viewQuery: function MatMonthView_Query(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵviewQuery(MatCalendarBody, 5);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._matCalendarBody = _t.first);\n    }\n  },\n  inputs: {\n    activeDate: \"activeDate\",\n    selected: \"selected\",\n    minDate: \"minDate\",\n    maxDate: \"maxDate\",\n    dateFilter: \"dateFilter\",\n    dateClass: \"dateClass\"\n  },\n  outputs: {\n    selectedChange: \"selectedChange\",\n    _userSelection: \"_userSelection\",\n    activeDateChange: \"activeDateChange\"\n  },\n  exportAs: [\"matMonthView\"],\n  decls: 7,\n  vars: 7,\n  consts: [[1, \"mat-calendar-table\"], [1, \"mat-calendar-table-header\"], [4, \"ngFor\", \"ngForOf\"], [\"colspan\", \"7\", \"aria-hidden\", \"true\", 1, \"mat-calendar-table-header-divider\"], [\"mat-calendar-body\", \"\", 3, \"label\", \"rows\", \"todayValue\", \"selectedValue\", \"labelMinRequiredCells\", \"activeCell\", \"selectedValueChange\", \"keydown\"]],\n  template: function MatMonthView_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵelementStart(0, \"table\", 0)(1, \"thead\", 1)(2, \"tr\");\n      ɵngcc0.ɵɵtemplate(3, MatMonthView_th_3_Template, 2, 2, \"th\", 2);\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵelementStart(4, \"tr\");\n      ɵngcc0.ɵɵelement(5, \"th\", 3);\n      ɵngcc0.ɵɵelementEnd()();\n      ɵngcc0.ɵɵelementStart(6, \"tbody\", 4);\n      ɵngcc0.ɵɵlistener(\"selectedValueChange\", function MatMonthView_Template_tbody_selectedValueChange_6_listener($event) {\n        return ctx._dateSelected($event);\n      })(\"keydown\", function MatMonthView_Template_tbody_keydown_6_listener($event) {\n        return ctx._handleCalendarBodyKeydown($event);\n      });\n      ɵngcc0.ɵɵelementEnd()();\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵadvance(3);\n      ɵngcc0.ɵɵproperty(\"ngForOf\", ctx._weekdays);\n      ɵngcc0.ɵɵadvance(3);\n      ɵngcc0.ɵɵproperty(\"label\", ctx._monthLabel)(\"rows\", ctx._weeks)(\"todayValue\", ctx._todayDate)(\"selectedValue\", ctx._selectedDate)(\"labelMinRequiredCells\", 3)(\"activeCell\", ctx._dateAdapter.getDate(ctx.activeDate) - 1);\n    }\n  },\n  dependencies: [ɵngcc1.NgForOf, MatCalendarBody],\n  encapsulation: 2,\n  changeDetection: 0\n});\n/** @nocollapse */\n\nMatMonthView.ctorParameters = () => [{\n  type: ChangeDetectorRef\n}, {\n  type: undefined,\n  decorators: [{\n    type: Optional\n  }, {\n    type: Inject,\n    args: [MAT_DATE_FORMATS]\n  }]\n}, {\n  type: DateAdapter,\n  decorators: [{\n    type: Optional\n  }]\n}, {\n  type: Directionality,\n  decorators: [{\n    type: Optional\n  }]\n}];\n\nMatMonthView.propDecorators = {\n  activeDate: [{\n    type: Input\n  }],\n  selected: [{\n    type: Input\n  }],\n  minDate: [{\n    type: Input\n  }],\n  maxDate: [{\n    type: Input\n  }],\n  dateFilter: [{\n    type: Input\n  }],\n  dateClass: [{\n    type: Input\n  }],\n  selectedChange: [{\n    type: Output\n  }],\n  _userSelection: [{\n    type: Output\n  }],\n  activeDateChange: [{\n    type: Output\n  }],\n  _matCalendarBody: [{\n    type: ViewChild,\n    args: [MatCalendarBody]\n  }]\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatMonthView, [{\n    type: Component,\n    args: [{\n      selector: 'mat-month-view',\n      template: \"<table class=\\\"mat-calendar-table\\\"><thead class=\\\"mat-calendar-table-header\\\"><tr><th *ngFor=\\\"let day of _weekdays\\\" [attr.aria-label]=\\\"day.long\\\">{{day.narrow}}</th></tr><tr><th class=\\\"mat-calendar-table-header-divider\\\" colspan=\\\"7\\\" aria-hidden=\\\"true\\\"></th></tr></thead><tbody mat-calendar-body [label]=\\\"_monthLabel\\\" [rows]=\\\"_weeks\\\" [todayValue]=\\\"_todayDate\\\" [selectedValue]=\\\"_selectedDate\\\" [labelMinRequiredCells]=\\\"3\\\" [activeCell]=\\\"_dateAdapter.getDate(activeDate) - 1\\\" (selectedValueChange)=\\\"_dateSelected($event)\\\" (keydown)=\\\"_handleCalendarBodyKeydown($event)\\\"></tbody></table>\",\n      exportAs: 'matMonthView',\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.ChangeDetectorRef\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [MAT_DATE_FORMATS]\n      }]\n    }, {\n      type: ɵngcc2.DateAdapter,\n      decorators: [{\n        type: Optional\n      }]\n    }, {\n      type: ɵngcc3.Directionality,\n      decorators: [{\n        type: Optional\n      }]\n    }];\n  }, {\n    selectedChange: [{\n      type: Output\n    }],\n    _userSelection: [{\n      type: Output\n    }],\n    activeDateChange: [{\n      type: Output\n    }],\n    activeDate: [{\n      type: Input\n    }],\n    selected: [{\n      type: Input\n    }],\n    minDate: [{\n      type: Input\n    }],\n    maxDate: [{\n      type: Input\n    }],\n    dateFilter: [{\n      type: Input\n    }],\n    dateClass: [{\n      type: Input\n    }],\n    _matCalendarBody: [{\n      type: ViewChild,\n      args: [MatCalendarBody]\n    }]\n  });\n})();\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/** @type {?} */\n\n\nconst yearsPerPage = 24;\n/** @type {?} */\n\nconst yearsPerRow = 4;\n/**\n * An internal component used to display a year selector in the datepicker.\n * \\@docs-private\n * @template D\n */\n\nclass MatMultiYearView {\n  /**\n   * @param {?} _changeDetectorRef\n   * @param {?} _dateAdapter\n   * @param {?=} _dir\n   */\n  constructor(_changeDetectorRef, _dateAdapter, _dir) {\n    this._changeDetectorRef = _changeDetectorRef;\n    this._dateAdapter = _dateAdapter;\n    this._dir = _dir;\n    /**\n     * Emits when a new year is selected.\n     */\n\n    this.selectedChange = new EventEmitter();\n    /**\n     * Emits the selected year. This doesn't imply a change on the selected date\n     */\n\n    this.yearSelected = new EventEmitter();\n    /**\n     * Emits when any date is activated.\n     */\n\n    this.activeDateChange = new EventEmitter();\n\n    if (!this._dateAdapter) {\n      throw createMissingDateImplError('DateAdapter');\n    }\n\n    this._activeDate = this._dateAdapter.today();\n  }\n  /**\n   * The date to display in this multi-year view (everything other than the year is ignored).\n   * @return {?}\n   */\n\n\n  get activeDate() {\n    return this._activeDate;\n  }\n  /**\n   * @param {?} value\n   * @return {?}\n   */\n\n\n  set activeDate(value) {\n    /** @type {?} */\n    let oldActiveDate = this._activeDate;\n    /** @type {?} */\n\n    const validDate = this._getValidDateOrNull(this._dateAdapter.deserialize(value)) || this._dateAdapter.today();\n\n    this._activeDate = this._dateAdapter.clampDate(validDate, this.minDate, this.maxDate);\n\n    if (Math.floor(this._dateAdapter.getYear(oldActiveDate) / yearsPerPage) != Math.floor(this._dateAdapter.getYear(this._activeDate) / yearsPerPage)) {\n      this._init();\n    }\n  }\n  /**\n   * The currently selected date.\n   * @return {?}\n   */\n\n\n  get selected() {\n    return this._selected;\n  }\n  /**\n   * @param {?} value\n   * @return {?}\n   */\n\n\n  set selected(value) {\n    this._selected = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n    this._selectedYear = this._selected && this._dateAdapter.getYear(this._selected);\n  }\n  /**\n   * The minimum selectable date.\n   * @return {?}\n   */\n\n\n  get minDate() {\n    return this._minDate;\n  }\n  /**\n   * @param {?} value\n   * @return {?}\n   */\n\n\n  set minDate(value) {\n    this._minDate = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n  }\n  /**\n   * The maximum selectable date.\n   * @return {?}\n   */\n\n\n  get maxDate() {\n    return this._maxDate;\n  }\n  /**\n   * @param {?} value\n   * @return {?}\n   */\n\n\n  set maxDate(value) {\n    this._maxDate = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n  }\n  /**\n   * @return {?}\n   */\n\n\n  ngAfterContentInit() {\n    this._init();\n  }\n  /**\n   * Initializes this multi-year view.\n   * @return {?}\n   */\n\n\n  _init() {\n    this._todayYear = this._dateAdapter.getYear(this._dateAdapter.today());\n    /** @type {?} */\n\n    let activeYear = this._dateAdapter.getYear(this._activeDate);\n    /** @type {?} */\n\n\n    let activeOffset = activeYear % yearsPerPage;\n    this._years = [];\n\n    for (let i = 0, row = []; i < yearsPerPage; i++) {\n      row.push(activeYear - activeOffset + i);\n\n      if (row.length == yearsPerRow) {\n        this._years.push(row.map(year => this._createCellForYear(year)));\n\n        row = [];\n      }\n    }\n\n    this._changeDetectorRef.markForCheck();\n  }\n  /**\n   * Handles when a new year is selected.\n   * @param {?} year\n   * @return {?}\n   */\n\n\n  _yearSelected(year) {\n    this.yearSelected.emit(this._dateAdapter.createDate(year, 0, 1));\n    /** @type {?} */\n\n    let month = this._dateAdapter.getMonth(this.activeDate);\n    /** @type {?} */\n\n\n    let daysInMonth = this._dateAdapter.getNumDaysInMonth(this._dateAdapter.createDate(year, month, 1));\n\n    this.selectedChange.emit(this._dateAdapter.createDate(year, month, Math.min(this._dateAdapter.getDate(this.activeDate), daysInMonth)));\n  }\n  /**\n   * Handles keydown events on the calendar body when calendar is in multi-year view.\n   * @param {?} event\n   * @return {?}\n   */\n\n\n  _handleCalendarBodyKeydown(event) {\n    // TODO(mmalerba): We currently allow keyboard navigation to disabled dates, but just prevent\n    // disabled ones from being selected. This may not be ideal, we should look into whether\n    // navigation should skip over disabled dates, and if so, how to implement that efficiently.\n    // TODO(mmalerba): We currently allow keyboard navigation to disabled dates, but just prevent\n    // disabled ones from being selected. This may not be ideal, we should look into whether\n    // navigation should skip over disabled dates, and if so, how to implement that efficiently.\n\n    /** @type {?} */\n    const oldActiveDate = this._activeDate;\n    /** @type {?} */\n\n    const isRtl = this._isRtl();\n\n    switch (event.keyCode) {\n      case LEFT_ARROW:\n        this.activeDate = this._dateAdapter.addCalendarYears(this._activeDate, isRtl ? 1 : -1);\n        break;\n\n      case RIGHT_ARROW:\n        this.activeDate = this._dateAdapter.addCalendarYears(this._activeDate, isRtl ? -1 : 1);\n        break;\n\n      case UP_ARROW:\n        this.activeDate = this._dateAdapter.addCalendarYears(this._activeDate, -yearsPerRow);\n        break;\n\n      case DOWN_ARROW:\n        this.activeDate = this._dateAdapter.addCalendarYears(this._activeDate, yearsPerRow);\n        break;\n\n      case HOME:\n        this.activeDate = this._dateAdapter.addCalendarYears(this._activeDate, -this._dateAdapter.getYear(this._activeDate) % yearsPerPage);\n        break;\n\n      case END:\n        this.activeDate = this._dateAdapter.addCalendarYears(this._activeDate, yearsPerPage - this._dateAdapter.getYear(this._activeDate) % yearsPerPage - 1);\n        break;\n\n      case PAGE_UP:\n        this.activeDate = this._dateAdapter.addCalendarYears(this._activeDate, event.altKey ? -yearsPerPage * 10 : -yearsPerPage);\n        break;\n\n      case PAGE_DOWN:\n        this.activeDate = this._dateAdapter.addCalendarYears(this._activeDate, event.altKey ? yearsPerPage * 10 : yearsPerPage);\n        break;\n\n      case ENTER:\n      case SPACE:\n        this._yearSelected(this._dateAdapter.getYear(this._activeDate));\n\n        break;\n\n      default:\n        // Don't prevent default or focus active cell on keys that we don't explicitly handle.\n        return;\n    }\n\n    if (this._dateAdapter.compareDate(oldActiveDate, this.activeDate)) {\n      this.activeDateChange.emit(this.activeDate);\n    }\n\n    this._focusActiveCell(); // Prevent unexpected default actions such as form submission.\n\n\n    event.preventDefault();\n  }\n  /**\n   * @return {?}\n   */\n\n\n  _getActiveCell() {\n    return this._dateAdapter.getYear(this.activeDate) % yearsPerPage;\n  }\n  /**\n   * Focuses the active cell after the microtask queue is empty.\n   * @return {?}\n   */\n\n\n  _focusActiveCell() {\n    this._matCalendarBody._focusActiveCell();\n  }\n  /**\n   * Creates an MatCalendarCell for the given year.\n   * @private\n   * @param {?} year\n   * @return {?}\n   */\n\n\n  _createCellForYear(year) {\n    /** @type {?} */\n    let yearName = this._dateAdapter.getYearName(this._dateAdapter.createDate(year, 0, 1));\n\n    return new MatCalendarCell(year, yearName, yearName, this._shouldEnableYear(year));\n  }\n  /**\n   * Whether the given year is enabled.\n   * @private\n   * @param {?} year\n   * @return {?}\n   */\n\n\n  _shouldEnableYear(year) {\n    // disable if the year is greater than maxDate lower than minDate\n    if (year === undefined || year === null || this.maxDate && year > this._dateAdapter.getYear(this.maxDate) || this.minDate && year < this._dateAdapter.getYear(this.minDate)) {\n      return false;\n    } // enable if it reaches here and there's no filter defined\n\n\n    if (!this.dateFilter) {\n      return true;\n    }\n    /** @type {?} */\n\n\n    const firstOfYear = this._dateAdapter.createDate(year, 0, 1); // If any date in the year is enabled count the year as enabled.\n\n\n    for (let date = firstOfYear; this._dateAdapter.getYear(date) == year; date = this._dateAdapter.addCalendarDays(date, 1)) {\n      if (this.dateFilter(date)) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n  /**\n   * @private\n   * @param {?} obj The object to check.\n   * @return {?} The given object if it is both a date instance and valid, otherwise null.\n   */\n\n\n  _getValidDateOrNull(obj) {\n    return this._dateAdapter.isDateInstance(obj) && this._dateAdapter.isValid(obj) ? obj : null;\n  }\n  /**\n   * Determines whether the user has the RTL layout direction.\n   * @private\n   * @return {?}\n   */\n\n\n  _isRtl() {\n    return this._dir && this._dir.value === 'rtl';\n  }\n\n}\n\nMatMultiYearView.ɵfac = function MatMultiYearView_Factory(t) {\n  return new (t || MatMultiYearView)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.DateAdapter, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc3.Directionality, 8));\n};\n\nMatMultiYearView.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n  type: MatMultiYearView,\n  selectors: [[\"mat-multi-year-view\"]],\n  viewQuery: function MatMultiYearView_Query(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵviewQuery(MatCalendarBody, 5);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._matCalendarBody = _t.first);\n    }\n  },\n  inputs: {\n    activeDate: \"activeDate\",\n    selected: \"selected\",\n    minDate: \"minDate\",\n    maxDate: \"maxDate\",\n    dateFilter: \"dateFilter\"\n  },\n  outputs: {\n    selectedChange: \"selectedChange\",\n    yearSelected: \"yearSelected\",\n    activeDateChange: \"activeDateChange\"\n  },\n  exportAs: [\"matMultiYearView\"],\n  decls: 5,\n  vars: 6,\n  consts: [[1, \"mat-calendar-table\"], [1, \"mat-calendar-table-header\"], [\"colspan\", \"4\", 1, \"mat-calendar-table-header-divider\"], [\"mat-calendar-body\", \"\", 3, \"rows\", \"todayValue\", \"selectedValue\", \"numCols\", \"cellAspectRatio\", \"activeCell\", \"selectedValueChange\", \"keydown\"]],\n  template: function MatMultiYearView_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵelementStart(0, \"table\", 0)(1, \"thead\", 1)(2, \"tr\");\n      ɵngcc0.ɵɵelement(3, \"th\", 2);\n      ɵngcc0.ɵɵelementEnd()();\n      ɵngcc0.ɵɵelementStart(4, \"tbody\", 3);\n      ɵngcc0.ɵɵlistener(\"selectedValueChange\", function MatMultiYearView_Template_tbody_selectedValueChange_4_listener($event) {\n        return ctx._yearSelected($event);\n      })(\"keydown\", function MatMultiYearView_Template_tbody_keydown_4_listener($event) {\n        return ctx._handleCalendarBodyKeydown($event);\n      });\n      ɵngcc0.ɵɵelementEnd()();\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵadvance(4);\n      ɵngcc0.ɵɵproperty(\"rows\", ctx._years)(\"todayValue\", ctx._todayYear)(\"selectedValue\", ctx._selectedYear)(\"numCols\", 4)(\"cellAspectRatio\", 4 / 7)(\"activeCell\", ctx._getActiveCell());\n    }\n  },\n  dependencies: [MatCalendarBody],\n  encapsulation: 2,\n  changeDetection: 0\n});\n/** @nocollapse */\n\nMatMultiYearView.ctorParameters = () => [{\n  type: ChangeDetectorRef\n}, {\n  type: DateAdapter,\n  decorators: [{\n    type: Optional\n  }]\n}, {\n  type: Directionality,\n  decorators: [{\n    type: Optional\n  }]\n}];\n\nMatMultiYearView.propDecorators = {\n  activeDate: [{\n    type: Input\n  }],\n  selected: [{\n    type: Input\n  }],\n  minDate: [{\n    type: Input\n  }],\n  maxDate: [{\n    type: Input\n  }],\n  dateFilter: [{\n    type: Input\n  }],\n  selectedChange: [{\n    type: Output\n  }],\n  yearSelected: [{\n    type: Output\n  }],\n  activeDateChange: [{\n    type: Output\n  }],\n  _matCalendarBody: [{\n    type: ViewChild,\n    args: [MatCalendarBody]\n  }]\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatMultiYearView, [{\n    type: Component,\n    args: [{\n      selector: 'mat-multi-year-view',\n      template: \"<table class=\\\"mat-calendar-table\\\"><thead class=\\\"mat-calendar-table-header\\\"><tr><th class=\\\"mat-calendar-table-header-divider\\\" colspan=\\\"4\\\"></th></tr></thead><tbody mat-calendar-body [rows]=\\\"_years\\\" [todayValue]=\\\"_todayYear\\\" [selectedValue]=\\\"_selectedYear\\\" [numCols]=\\\"4\\\" [cellAspectRatio]=\\\"4 / 7\\\" [activeCell]=\\\"_getActiveCell()\\\" (selectedValueChange)=\\\"_yearSelected($event)\\\" (keydown)=\\\"_handleCalendarBodyKeydown($event)\\\"></tbody></table>\",\n      exportAs: 'matMultiYearView',\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.ChangeDetectorRef\n    }, {\n      type: ɵngcc2.DateAdapter,\n      decorators: [{\n        type: Optional\n      }]\n    }, {\n      type: ɵngcc3.Directionality,\n      decorators: [{\n        type: Optional\n      }]\n    }];\n  }, {\n    selectedChange: [{\n      type: Output\n    }],\n    yearSelected: [{\n      type: Output\n    }],\n    activeDateChange: [{\n      type: Output\n    }],\n    activeDate: [{\n      type: Input\n    }],\n    selected: [{\n      type: Input\n    }],\n    minDate: [{\n      type: Input\n    }],\n    maxDate: [{\n      type: Input\n    }],\n    dateFilter: [{\n      type: Input\n    }],\n    _matCalendarBody: [{\n      type: ViewChild,\n      args: [MatCalendarBody]\n    }]\n  });\n})();\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * An internal component used to display a single year in the datepicker.\n * \\@docs-private\n * @template D\n */\n\n\nclass MatYearView {\n  /**\n   * @param {?} _changeDetectorRef\n   * @param {?} _dateFormats\n   * @param {?} _dateAdapter\n   * @param {?=} _dir\n   */\n  constructor(_changeDetectorRef, _dateFormats, _dateAdapter, _dir) {\n    this._changeDetectorRef = _changeDetectorRef;\n    this._dateFormats = _dateFormats;\n    this._dateAdapter = _dateAdapter;\n    this._dir = _dir;\n    /**\n     * Emits when a new month is selected.\n     */\n\n    this.selectedChange = new EventEmitter();\n    /**\n     * Emits the selected month. This doesn't imply a change on the selected date\n     */\n\n    this.monthSelected = new EventEmitter();\n    /**\n     * Emits when any date is activated.\n     */\n\n    this.activeDateChange = new EventEmitter();\n\n    if (!this._dateAdapter) {\n      throw createMissingDateImplError('DateAdapter');\n    }\n\n    if (!this._dateFormats) {\n      throw createMissingDateImplError('MAT_DATE_FORMATS');\n    }\n\n    this._activeDate = this._dateAdapter.today();\n  }\n  /**\n   * The date to display in this year view (everything other than the year is ignored).\n   * @return {?}\n   */\n\n\n  get activeDate() {\n    return this._activeDate;\n  }\n  /**\n   * @param {?} value\n   * @return {?}\n   */\n\n\n  set activeDate(value) {\n    /** @type {?} */\n    let oldActiveDate = this._activeDate;\n    /** @type {?} */\n\n    const validDate = this._getValidDateOrNull(this._dateAdapter.deserialize(value)) || this._dateAdapter.today();\n\n    this._activeDate = this._dateAdapter.clampDate(validDate, this.minDate, this.maxDate);\n\n    if (this._dateAdapter.getYear(oldActiveDate) !== this._dateAdapter.getYear(this._activeDate)) {\n      this._init();\n    }\n  }\n  /**\n   * The currently selected date.\n   * @return {?}\n   */\n\n\n  get selected() {\n    return this._selected;\n  }\n  /**\n   * @param {?} value\n   * @return {?}\n   */\n\n\n  set selected(value) {\n    this._selected = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n    this._selectedMonth = this._getMonthInCurrentYear(this._selected);\n  }\n  /**\n   * The minimum selectable date.\n   * @return {?}\n   */\n\n\n  get minDate() {\n    return this._minDate;\n  }\n  /**\n   * @param {?} value\n   * @return {?}\n   */\n\n\n  set minDate(value) {\n    this._minDate = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n  }\n  /**\n   * The maximum selectable date.\n   * @return {?}\n   */\n\n\n  get maxDate() {\n    return this._maxDate;\n  }\n  /**\n   * @param {?} value\n   * @return {?}\n   */\n\n\n  set maxDate(value) {\n    this._maxDate = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n  }\n  /**\n   * @return {?}\n   */\n\n\n  ngAfterContentInit() {\n    this._init();\n  }\n  /**\n   * Handles when a new month is selected.\n   * @param {?} month\n   * @return {?}\n   */\n\n\n  _monthSelected(month) {\n    /** @type {?} */\n    const normalizedDate = this._dateAdapter.createDate(this._dateAdapter.getYear(this.activeDate), month, 1);\n\n    this.monthSelected.emit(normalizedDate);\n    /** @type {?} */\n\n    const daysInMonth = this._dateAdapter.getNumDaysInMonth(normalizedDate);\n\n    this.selectedChange.emit(this._dateAdapter.createDate(this._dateAdapter.getYear(this.activeDate), month, Math.min(this._dateAdapter.getDate(this.activeDate), daysInMonth)));\n  }\n  /**\n   * Handles keydown events on the calendar body when calendar is in year view.\n   * @param {?} event\n   * @return {?}\n   */\n\n\n  _handleCalendarBodyKeydown(event) {\n    // TODO(mmalerba): We currently allow keyboard navigation to disabled dates, but just prevent\n    // disabled ones from being selected. This may not be ideal, we should look into whether\n    // navigation should skip over disabled dates, and if so, how to implement that efficiently.\n    // TODO(mmalerba): We currently allow keyboard navigation to disabled dates, but just prevent\n    // disabled ones from being selected. This may not be ideal, we should look into whether\n    // navigation should skip over disabled dates, and if so, how to implement that efficiently.\n\n    /** @type {?} */\n    const oldActiveDate = this._activeDate;\n    /** @type {?} */\n\n    const isRtl = this._isRtl();\n\n    switch (event.keyCode) {\n      case LEFT_ARROW:\n        this.activeDate = this._dateAdapter.addCalendarMonths(this._activeDate, isRtl ? 1 : -1);\n        break;\n\n      case RIGHT_ARROW:\n        this.activeDate = this._dateAdapter.addCalendarMonths(this._activeDate, isRtl ? -1 : 1);\n        break;\n\n      case UP_ARROW:\n        this.activeDate = this._dateAdapter.addCalendarMonths(this._activeDate, -4);\n        break;\n\n      case DOWN_ARROW:\n        this.activeDate = this._dateAdapter.addCalendarMonths(this._activeDate, 4);\n        break;\n\n      case HOME:\n        this.activeDate = this._dateAdapter.addCalendarMonths(this._activeDate, -this._dateAdapter.getMonth(this._activeDate));\n        break;\n\n      case END:\n        this.activeDate = this._dateAdapter.addCalendarMonths(this._activeDate, 11 - this._dateAdapter.getMonth(this._activeDate));\n        break;\n\n      case PAGE_UP:\n        this.activeDate = this._dateAdapter.addCalendarYears(this._activeDate, event.altKey ? -10 : -1);\n        break;\n\n      case PAGE_DOWN:\n        this.activeDate = this._dateAdapter.addCalendarYears(this._activeDate, event.altKey ? 10 : 1);\n        break;\n\n      case ENTER:\n      case SPACE:\n        this._monthSelected(this._dateAdapter.getMonth(this._activeDate));\n\n        break;\n\n      default:\n        // Don't prevent default or focus active cell on keys that we don't explicitly handle.\n        return;\n    }\n\n    if (this._dateAdapter.compareDate(oldActiveDate, this.activeDate)) {\n      this.activeDateChange.emit(this.activeDate);\n    }\n\n    this._focusActiveCell(); // Prevent unexpected default actions such as form submission.\n\n\n    event.preventDefault();\n  }\n  /**\n   * Initializes this year view.\n   * @return {?}\n   */\n\n\n  _init() {\n    this._selectedMonth = this._getMonthInCurrentYear(this.selected);\n    this._todayMonth = this._getMonthInCurrentYear(this._dateAdapter.today());\n    this._yearLabel = this._dateAdapter.getYearName(this.activeDate);\n    /** @type {?} */\n\n    let monthNames = this._dateAdapter.getMonthNames('short'); // First row of months only contains 5 elements so we can fit the year label on the same row.\n\n\n    this._months = [[0, 1, 2, 3], [4, 5, 6, 7], [8, 9, 10, 11]].map(row => row.map(month => this._createCellForMonth(month, monthNames[month])));\n\n    this._changeDetectorRef.markForCheck();\n  }\n  /**\n   * Focuses the active cell after the microtask queue is empty.\n   * @return {?}\n   */\n\n\n  _focusActiveCell() {\n    this._matCalendarBody._focusActiveCell();\n  }\n  /**\n   * Gets the month in this year that the given Date falls on.\n   * Returns null if the given Date is in another year.\n   * @private\n   * @param {?} date\n   * @return {?}\n   */\n\n\n  _getMonthInCurrentYear(date) {\n    return date && this._dateAdapter.getYear(date) == this._dateAdapter.getYear(this.activeDate) ? this._dateAdapter.getMonth(date) : null;\n  }\n  /**\n   * Creates an MatCalendarCell for the given month.\n   * @private\n   * @param {?} month\n   * @param {?} monthName\n   * @return {?}\n   */\n\n\n  _createCellForMonth(month, monthName) {\n    /** @type {?} */\n    let ariaLabel = this._dateAdapter.format(this._dateAdapter.createDate(this._dateAdapter.getYear(this.activeDate), month, 1), this._dateFormats.display.monthYearA11yLabel);\n\n    return new MatCalendarCell(month, monthName.toLocaleUpperCase(), ariaLabel, this._shouldEnableMonth(month));\n  }\n  /**\n   * Whether the given month is enabled.\n   * @private\n   * @param {?} month\n   * @return {?}\n   */\n\n\n  _shouldEnableMonth(month) {\n    /** @type {?} */\n    const activeYear = this._dateAdapter.getYear(this.activeDate);\n\n    if (month === undefined || month === null || this._isYearAndMonthAfterMaxDate(activeYear, month) || this._isYearAndMonthBeforeMinDate(activeYear, month)) {\n      return false;\n    }\n\n    if (!this.dateFilter) {\n      return true;\n    }\n    /** @type {?} */\n\n\n    const firstOfMonth = this._dateAdapter.createDate(activeYear, month, 1); // If any date in the month is enabled count the month as enabled.\n\n\n    for (let date = firstOfMonth; this._dateAdapter.getMonth(date) == month; date = this._dateAdapter.addCalendarDays(date, 1)) {\n      if (this.dateFilter(date)) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n  /**\n   * Tests whether the combination month/year is after this.maxDate, considering\n   * just the month and year of this.maxDate\n   * @private\n   * @param {?} year\n   * @param {?} month\n   * @return {?}\n   */\n\n\n  _isYearAndMonthAfterMaxDate(year, month) {\n    if (this.maxDate) {\n      /** @type {?} */\n      const maxYear = this._dateAdapter.getYear(this.maxDate);\n      /** @type {?} */\n\n\n      const maxMonth = this._dateAdapter.getMonth(this.maxDate);\n\n      return year > maxYear || year === maxYear && month > maxMonth;\n    }\n\n    return false;\n  }\n  /**\n   * Tests whether the combination month/year is before this.minDate, considering\n   * just the month and year of this.minDate\n   * @private\n   * @param {?} year\n   * @param {?} month\n   * @return {?}\n   */\n\n\n  _isYearAndMonthBeforeMinDate(year, month) {\n    if (this.minDate) {\n      /** @type {?} */\n      const minYear = this._dateAdapter.getYear(this.minDate);\n      /** @type {?} */\n\n\n      const minMonth = this._dateAdapter.getMonth(this.minDate);\n\n      return year < minYear || year === minYear && month < minMonth;\n    }\n\n    return false;\n  }\n  /**\n   * @private\n   * @param {?} obj The object to check.\n   * @return {?} The given object if it is both a date instance and valid, otherwise null.\n   */\n\n\n  _getValidDateOrNull(obj) {\n    return this._dateAdapter.isDateInstance(obj) && this._dateAdapter.isValid(obj) ? obj : null;\n  }\n  /**\n   * Determines whether the user has the RTL layout direction.\n   * @private\n   * @return {?}\n   */\n\n\n  _isRtl() {\n    return this._dir && this._dir.value === 'rtl';\n  }\n\n}\n\nMatYearView.ɵfac = function MatYearView_Factory(t) {\n  return new (t || MatYearView)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(MAT_DATE_FORMATS, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.DateAdapter, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc3.Directionality, 8));\n};\n\nMatYearView.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n  type: MatYearView,\n  selectors: [[\"mat-year-view\"]],\n  viewQuery: function MatYearView_Query(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵviewQuery(MatCalendarBody, 5);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._matCalendarBody = _t.first);\n    }\n  },\n  inputs: {\n    activeDate: \"activeDate\",\n    selected: \"selected\",\n    minDate: \"minDate\",\n    maxDate: \"maxDate\",\n    dateFilter: \"dateFilter\"\n  },\n  outputs: {\n    selectedChange: \"selectedChange\",\n    monthSelected: \"monthSelected\",\n    activeDateChange: \"activeDateChange\"\n  },\n  exportAs: [\"matYearView\"],\n  decls: 5,\n  vars: 8,\n  consts: [[1, \"mat-calendar-table\"], [1, \"mat-calendar-table-header\"], [\"colspan\", \"4\", 1, \"mat-calendar-table-header-divider\"], [\"mat-calendar-body\", \"\", 3, \"label\", \"rows\", \"todayValue\", \"selectedValue\", \"labelMinRequiredCells\", \"numCols\", \"cellAspectRatio\", \"activeCell\", \"selectedValueChange\", \"keydown\"]],\n  template: function MatYearView_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵelementStart(0, \"table\", 0)(1, \"thead\", 1)(2, \"tr\");\n      ɵngcc0.ɵɵelement(3, \"th\", 2);\n      ɵngcc0.ɵɵelementEnd()();\n      ɵngcc0.ɵɵelementStart(4, \"tbody\", 3);\n      ɵngcc0.ɵɵlistener(\"selectedValueChange\", function MatYearView_Template_tbody_selectedValueChange_4_listener($event) {\n        return ctx._monthSelected($event);\n      })(\"keydown\", function MatYearView_Template_tbody_keydown_4_listener($event) {\n        return ctx._handleCalendarBodyKeydown($event);\n      });\n      ɵngcc0.ɵɵelementEnd()();\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵadvance(4);\n      ɵngcc0.ɵɵproperty(\"label\", ctx._yearLabel)(\"rows\", ctx._months)(\"todayValue\", ctx._todayMonth)(\"selectedValue\", ctx._selectedMonth)(\"labelMinRequiredCells\", 2)(\"numCols\", 4)(\"cellAspectRatio\", 4 / 7)(\"activeCell\", ctx._dateAdapter.getMonth(ctx.activeDate));\n    }\n  },\n  dependencies: [MatCalendarBody],\n  encapsulation: 2,\n  changeDetection: 0\n});\n/** @nocollapse */\n\nMatYearView.ctorParameters = () => [{\n  type: ChangeDetectorRef\n}, {\n  type: undefined,\n  decorators: [{\n    type: Optional\n  }, {\n    type: Inject,\n    args: [MAT_DATE_FORMATS]\n  }]\n}, {\n  type: DateAdapter,\n  decorators: [{\n    type: Optional\n  }]\n}, {\n  type: Directionality,\n  decorators: [{\n    type: Optional\n  }]\n}];\n\nMatYearView.propDecorators = {\n  activeDate: [{\n    type: Input\n  }],\n  selected: [{\n    type: Input\n  }],\n  minDate: [{\n    type: Input\n  }],\n  maxDate: [{\n    type: Input\n  }],\n  dateFilter: [{\n    type: Input\n  }],\n  selectedChange: [{\n    type: Output\n  }],\n  monthSelected: [{\n    type: Output\n  }],\n  activeDateChange: [{\n    type: Output\n  }],\n  _matCalendarBody: [{\n    type: ViewChild,\n    args: [MatCalendarBody]\n  }]\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatYearView, [{\n    type: Component,\n    args: [{\n      selector: 'mat-year-view',\n      template: \"<table class=\\\"mat-calendar-table\\\"><thead class=\\\"mat-calendar-table-header\\\"><tr><th class=\\\"mat-calendar-table-header-divider\\\" colspan=\\\"4\\\"></th></tr></thead><tbody mat-calendar-body [label]=\\\"_yearLabel\\\" [rows]=\\\"_months\\\" [todayValue]=\\\"_todayMonth\\\" [selectedValue]=\\\"_selectedMonth\\\" [labelMinRequiredCells]=\\\"2\\\" [numCols]=\\\"4\\\" [cellAspectRatio]=\\\"4 / 7\\\" [activeCell]=\\\"_dateAdapter.getMonth(activeDate)\\\" (selectedValueChange)=\\\"_monthSelected($event)\\\" (keydown)=\\\"_handleCalendarBodyKeydown($event)\\\"></tbody></table>\",\n      exportAs: 'matYearView',\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.ChangeDetectorRef\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [MAT_DATE_FORMATS]\n      }]\n    }, {\n      type: ɵngcc2.DateAdapter,\n      decorators: [{\n        type: Optional\n      }]\n    }, {\n      type: ɵngcc3.Directionality,\n      decorators: [{\n        type: Optional\n      }]\n    }];\n  }, {\n    selectedChange: [{\n      type: Output\n    }],\n    monthSelected: [{\n      type: Output\n    }],\n    activeDateChange: [{\n      type: Output\n    }],\n    activeDate: [{\n      type: Input\n    }],\n    selected: [{\n      type: Input\n    }],\n    minDate: [{\n      type: Input\n    }],\n    maxDate: [{\n      type: Input\n    }],\n    dateFilter: [{\n      type: Input\n    }],\n    _matCalendarBody: [{\n      type: ViewChild,\n      args: [MatCalendarBody]\n    }]\n  });\n})();\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Default header for MatCalendar\n * @template D\n */\n\n\nclass MatCalendarHeader {\n  /**\n   * @param {?} _intl\n   * @param {?} calendar\n   * @param {?} _dateAdapter\n   * @param {?} _dateFormats\n   * @param {?} changeDetectorRef\n   */\n  constructor(_intl, calendar, _dateAdapter, _dateFormats, changeDetectorRef) {\n    this._intl = _intl;\n    this.calendar = calendar;\n    this._dateAdapter = _dateAdapter;\n    this._dateFormats = _dateFormats;\n    this.calendar.stateChanges.subscribe(() => changeDetectorRef.markForCheck());\n  }\n  /**\n   * The label for the current calendar view.\n   * @return {?}\n   */\n\n\n  get periodButtonText() {\n    if (this.calendar.currentView == 'month') {\n      return this._dateAdapter.format(this.calendar.activeDate, this._dateFormats.display.monthYearLabel).toLocaleUpperCase();\n    }\n\n    if (this.calendar.currentView == 'year') {\n      return this._dateAdapter.getYearName(this.calendar.activeDate);\n    }\n    /** @type {?} */\n\n\n    const activeYear = this._dateAdapter.getYear(this.calendar.activeDate);\n    /** @type {?} */\n\n\n    const firstYearInView = this._dateAdapter.getYearName(this._dateAdapter.createDate(activeYear - activeYear % 24, 0, 1));\n    /** @type {?} */\n\n\n    const lastYearInView = this._dateAdapter.getYearName(this._dateAdapter.createDate(activeYear + yearsPerPage - 1 - activeYear % 24, 0, 1));\n\n    return `${firstYearInView} \\u2013 ${lastYearInView}`;\n  }\n  /**\n   * @return {?}\n   */\n\n\n  get periodButtonLabel() {\n    return this.calendar.currentView == 'month' ? this._intl.switchToMultiYearViewLabel : this._intl.switchToMonthViewLabel;\n  }\n  /**\n   * The label for the previous button.\n   * @return {?}\n   */\n\n\n  get prevButtonLabel() {\n    return {\n      'month': this._intl.prevMonthLabel,\n      'year': this._intl.prevYearLabel,\n      'multi-year': this._intl.prevMultiYearLabel\n    }[this.calendar.currentView];\n  }\n  /**\n   * The label for the next button.\n   * @return {?}\n   */\n\n\n  get nextButtonLabel() {\n    return {\n      'month': this._intl.nextMonthLabel,\n      'year': this._intl.nextYearLabel,\n      'multi-year': this._intl.nextMultiYearLabel\n    }[this.calendar.currentView];\n  }\n  /**\n   * Handles user clicks on the period label.\n   * @return {?}\n   */\n\n\n  currentPeriodClicked() {\n    this.calendar.currentView = this.calendar.currentView == 'month' ? 'multi-year' : 'month';\n  }\n  /**\n   * Handles user clicks on the previous button.\n   * @return {?}\n   */\n\n\n  previousClicked() {\n    this.calendar.activeDate = this.calendar.currentView == 'month' ? this._dateAdapter.addCalendarMonths(this.calendar.activeDate, -1) : this._dateAdapter.addCalendarYears(this.calendar.activeDate, this.calendar.currentView == 'year' ? -1 : -yearsPerPage);\n  }\n  /**\n   * Handles user clicks on the next button.\n   * @return {?}\n   */\n\n\n  nextClicked() {\n    this.calendar.activeDate = this.calendar.currentView == 'month' ? this._dateAdapter.addCalendarMonths(this.calendar.activeDate, 1) : this._dateAdapter.addCalendarYears(this.calendar.activeDate, this.calendar.currentView == 'year' ? 1 : yearsPerPage);\n  }\n  /**\n   * Whether the previous period button is enabled.\n   * @return {?}\n   */\n\n\n  previousEnabled() {\n    if (!this.calendar.minDate) {\n      return true;\n    }\n\n    return !this.calendar.minDate || !this._isSameView(this.calendar.activeDate, this.calendar.minDate);\n  }\n  /**\n   * Whether the next period button is enabled.\n   * @return {?}\n   */\n\n\n  nextEnabled() {\n    return !this.calendar.maxDate || !this._isSameView(this.calendar.activeDate, this.calendar.maxDate);\n  }\n  /**\n   * Whether the two dates represent the same view in the current view mode (month or year).\n   * @private\n   * @param {?} date1\n   * @param {?} date2\n   * @return {?}\n   */\n\n\n  _isSameView(date1, date2) {\n    if (this.calendar.currentView == 'month') {\n      return this._dateAdapter.getYear(date1) == this._dateAdapter.getYear(date2) && this._dateAdapter.getMonth(date1) == this._dateAdapter.getMonth(date2);\n    }\n\n    if (this.calendar.currentView == 'year') {\n      return this._dateAdapter.getYear(date1) == this._dateAdapter.getYear(date2);\n    } // Otherwise we are in 'multi-year' view.\n\n\n    return Math.floor(this._dateAdapter.getYear(date1) / yearsPerPage) == Math.floor(this._dateAdapter.getYear(date2) / yearsPerPage);\n  }\n\n}\n\nMatCalendarHeader.ɵfac = function MatCalendarHeader_Factory(t) {\n  return new (t || MatCalendarHeader)(ɵngcc0.ɵɵdirectiveInject(MatDatepickerIntl), ɵngcc0.ɵɵdirectiveInject(forwardRef(() => MatCalendar)), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.DateAdapter, 8), ɵngcc0.ɵɵdirectiveInject(MAT_DATE_FORMATS, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef));\n};\n\nMatCalendarHeader.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n  type: MatCalendarHeader,\n  selectors: [[\"mat-calendar-header\"]],\n  exportAs: [\"matCalendarHeader\"],\n  ngContentSelectors: _c1,\n  decls: 9,\n  vars: 8,\n  consts: [[1, \"mat-calendar-header\"], [1, \"mat-calendar-controls\"], [\"mat-button\", \"\", \"type\", \"button\", \"cdkAriaLive\", \"polite\", 1, \"mat-calendar-period-button\", 3, \"click\"], [1, \"mat-calendar-arrow\"], [1, \"mat-calendar-spacer\"], [\"mat-icon-button\", \"\", \"type\", \"button\", 1, \"mat-calendar-previous-button\", 3, \"disabled\", \"click\"], [\"mat-icon-button\", \"\", \"type\", \"button\", 1, \"mat-calendar-next-button\", 3, \"disabled\", \"click\"]],\n  template: function MatCalendarHeader_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵprojectionDef();\n      ɵngcc0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"button\", 2);\n      ɵngcc0.ɵɵlistener(\"click\", function MatCalendarHeader_Template_button_click_2_listener() {\n        return ctx.currentPeriodClicked();\n      });\n      ɵngcc0.ɵɵtext(3);\n      ɵngcc0.ɵɵelement(4, \"div\", 3);\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵelement(5, \"div\", 4);\n      ɵngcc0.ɵɵprojection(6);\n      ɵngcc0.ɵɵelementStart(7, \"button\", 5);\n      ɵngcc0.ɵɵlistener(\"click\", function MatCalendarHeader_Template_button_click_7_listener() {\n        return ctx.previousClicked();\n      });\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵelementStart(8, \"button\", 6);\n      ɵngcc0.ɵɵlistener(\"click\", function MatCalendarHeader_Template_button_click_8_listener() {\n        return ctx.nextClicked();\n      });\n      ɵngcc0.ɵɵelementEnd()()();\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵadvance(2);\n      ɵngcc0.ɵɵattribute(\"aria-label\", ctx.periodButtonLabel);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵtextInterpolate(ctx.periodButtonText);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵclassProp(\"mat-calendar-invert\", ctx.calendar.currentView != \"month\");\n      ɵngcc0.ɵɵadvance(3);\n      ɵngcc0.ɵɵproperty(\"disabled\", !ctx.previousEnabled());\n      ɵngcc0.ɵɵattribute(\"aria-label\", ctx.prevButtonLabel);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"disabled\", !ctx.nextEnabled());\n      ɵngcc0.ɵɵattribute(\"aria-label\", ctx.nextButtonLabel);\n    }\n  },\n  dependencies: [ɵngcc4.MatButton, ɵngcc5.CdkAriaLive],\n  encapsulation: 2,\n  changeDetection: 0\n});\n/** @nocollapse */\n\nMatCalendarHeader.ctorParameters = () => [{\n  type: MatDatepickerIntl\n}, {\n  type: MatCalendar,\n  decorators: [{\n    type: Inject,\n    args: [forwardRef(() => MatCalendar)]\n  }]\n}, {\n  type: DateAdapter,\n  decorators: [{\n    type: Optional\n  }]\n}, {\n  type: undefined,\n  decorators: [{\n    type: Optional\n  }, {\n    type: Inject,\n    args: [MAT_DATE_FORMATS]\n  }]\n}, {\n  type: ChangeDetectorRef\n}];\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatCalendarHeader, [{\n    type: Component,\n    args: [{\n      selector: 'mat-calendar-header',\n      template: \"<div class=\\\"mat-calendar-header\\\"><div class=\\\"mat-calendar-controls\\\"><button mat-button type=\\\"button\\\" class=\\\"mat-calendar-period-button\\\" (click)=\\\"currentPeriodClicked()\\\" [attr.aria-label]=\\\"periodButtonLabel\\\" cdkAriaLive=\\\"polite\\\">{{periodButtonText}}<div class=\\\"mat-calendar-arrow\\\" [class.mat-calendar-invert]=\\\"calendar.currentView != 'month'\\\"></div></button><div class=\\\"mat-calendar-spacer\\\"></div><ng-content></ng-content><button mat-icon-button type=\\\"button\\\" class=\\\"mat-calendar-previous-button\\\" [disabled]=\\\"!previousEnabled()\\\" (click)=\\\"previousClicked()\\\" [attr.aria-label]=\\\"prevButtonLabel\\\"></button> <button mat-icon-button type=\\\"button\\\" class=\\\"mat-calendar-next-button\\\" [disabled]=\\\"!nextEnabled()\\\" (click)=\\\"nextClicked()\\\" [attr.aria-label]=\\\"nextButtonLabel\\\"></button></div></div>\",\n      exportAs: 'matCalendarHeader',\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush\n    }]\n  }], function () {\n    return [{\n      type: MatDatepickerIntl\n    }, {\n      type: MatCalendar,\n      decorators: [{\n        type: Inject,\n        args: [forwardRef(() => MatCalendar)]\n      }]\n    }, {\n      type: ɵngcc2.DateAdapter,\n      decorators: [{\n        type: Optional\n      }]\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [MAT_DATE_FORMATS]\n      }]\n    }, {\n      type: ɵngcc0.ChangeDetectorRef\n    }];\n  }, null);\n})();\n/**\n * A calendar that is used as part of the datepicker.\n * \\@docs-private\n * @template D\n */\n\n\nclass MatCalendar {\n  /**\n   * @param {?} _intl\n   * @param {?} _dateAdapter\n   * @param {?} _dateFormats\n   * @param {?} _changeDetectorRef\n   */\n  constructor(_intl, _dateAdapter, _dateFormats, _changeDetectorRef) {\n    this._dateAdapter = _dateAdapter;\n    this._dateFormats = _dateFormats;\n    this._changeDetectorRef = _changeDetectorRef;\n    /**\n     * Used for scheduling that focus should be moved to the active cell on the next tick.\n     * We need to schedule it, rather than do it immediately, because we have to wait\n     * for Angular to re-evaluate the view children.\n     */\n\n    this._moveFocusOnNextTick = false;\n    /**\n     * Whether the calendar should be started in month or year view.\n     */\n\n    this.startView = 'month';\n    /**\n     * Emits when the currently selected date changes.\n     */\n\n    this.selectedChange = new EventEmitter();\n    /**\n     * Emits the year chosen in multiyear view.\n     * This doesn't imply a change on the selected date.\n     */\n\n    this.yearSelected = new EventEmitter();\n    /**\n     * Emits the month chosen in year view.\n     * This doesn't imply a change on the selected date.\n     */\n\n    this.monthSelected = new EventEmitter();\n    /**\n     * Emits when any date is selected.\n     */\n\n    this._userSelection = new EventEmitter();\n    /**\n     * Emits whenever there is a state change that the header may need to respond to.\n     */\n\n    this.stateChanges = new Subject();\n\n    if (!this._dateAdapter) {\n      throw createMissingDateImplError('DateAdapter');\n    }\n\n    if (!this._dateFormats) {\n      throw createMissingDateImplError('MAT_DATE_FORMATS');\n    }\n\n    this._intlChanges = _intl.changes.subscribe(() => {\n      _changeDetectorRef.markForCheck();\n\n      this.stateChanges.next();\n    });\n  }\n  /**\n   * A date representing the period (month or year) to start the calendar in.\n   * @return {?}\n   */\n\n\n  get startAt() {\n    return this._startAt;\n  }\n  /**\n   * @param {?} value\n   * @return {?}\n   */\n\n\n  set startAt(value) {\n    this._startAt = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n  }\n  /**\n   * The currently selected date.\n   * @return {?}\n   */\n\n\n  get selected() {\n    return this._selected;\n  }\n  /**\n   * @param {?} value\n   * @return {?}\n   */\n\n\n  set selected(value) {\n    this._selected = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n  }\n  /**\n   * The minimum selectable date.\n   * @return {?}\n   */\n\n\n  get minDate() {\n    return this._minDate;\n  }\n  /**\n   * @param {?} value\n   * @return {?}\n   */\n\n\n  set minDate(value) {\n    this._minDate = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n  }\n  /**\n   * The maximum selectable date.\n   * @return {?}\n   */\n\n\n  get maxDate() {\n    return this._maxDate;\n  }\n  /**\n   * @param {?} value\n   * @return {?}\n   */\n\n\n  set maxDate(value) {\n    this._maxDate = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n  }\n  /**\n   * The current active date. This determines which time period is shown and which date is\n   * highlighted when using keyboard navigation.\n   * @return {?}\n   */\n\n\n  get activeDate() {\n    return this._clampedActiveDate;\n  }\n  /**\n   * @param {?} value\n   * @return {?}\n   */\n\n\n  set activeDate(value) {\n    this._clampedActiveDate = this._dateAdapter.clampDate(value, this.minDate, this.maxDate);\n    this.stateChanges.next();\n\n    this._changeDetectorRef.markForCheck();\n  }\n  /**\n   * Whether the calendar is in month view.\n   * @return {?}\n   */\n\n\n  get currentView() {\n    return this._currentView;\n  }\n  /**\n   * @param {?} value\n   * @return {?}\n   */\n\n\n  set currentView(value) {\n    this._currentView = value;\n    this._moveFocusOnNextTick = true;\n\n    this._changeDetectorRef.markForCheck();\n  }\n  /**\n   * @return {?}\n   */\n\n\n  ngAfterContentInit() {\n    this._calendarHeaderPortal = new ComponentPortal(this.headerComponent || MatCalendarHeader);\n    this.activeDate = this.startAt || this._dateAdapter.today(); // Assign to the private property since we don't want to move focus on init.\n\n    this._currentView = this.startView;\n  }\n  /**\n   * @return {?}\n   */\n\n\n  ngAfterViewChecked() {\n    if (this._moveFocusOnNextTick) {\n      this._moveFocusOnNextTick = false;\n      this.focusActiveCell();\n    }\n  }\n  /**\n   * @return {?}\n   */\n\n\n  ngOnDestroy() {\n    this._intlChanges.unsubscribe();\n\n    this.stateChanges.complete();\n  }\n  /**\n   * @param {?} changes\n   * @return {?}\n   */\n\n\n  ngOnChanges(changes) {\n    /** @type {?} */\n    const change = changes['minDate'] || changes['maxDate'] || changes['dateFilter'];\n\n    if (change && !change.firstChange) {\n      /** @type {?} */\n      const view = this._getCurrentViewComponent();\n\n      if (view) {\n        // We need to `detectChanges` manually here, because the `minDate`, `maxDate` etc. are\n        // passed down to the view via data bindings which won't be up-to-date when we call `_init`.\n        this._changeDetectorRef.detectChanges();\n\n        view._init();\n      }\n    }\n\n    this.stateChanges.next();\n  }\n  /**\n   * @return {?}\n   */\n\n\n  focusActiveCell() {\n    this._getCurrentViewComponent()._focusActiveCell();\n  }\n  /**\n   * Updates today's date after an update of the active date\n   * @return {?}\n   */\n\n\n  updateTodaysDate() {\n    /** @type {?} */\n    let view = this.currentView == 'month' ? this.monthView : this.currentView == 'year' ? this.yearView : this.multiYearView;\n    view.ngAfterContentInit();\n  }\n  /**\n   * Handles date selection in the month view.\n   * @param {?} date\n   * @return {?}\n   */\n\n\n  _dateSelected(date) {\n    if (!this._dateAdapter.sameDate(date, this.selected)) {\n      this.selectedChange.emit(date);\n    }\n  }\n  /**\n   * Handles year selection in the multiyear view.\n   * @param {?} normalizedYear\n   * @return {?}\n   */\n\n\n  _yearSelectedInMultiYearView(normalizedYear) {\n    this.yearSelected.emit(normalizedYear);\n  }\n  /**\n   * Handles month selection in the year view.\n   * @param {?} normalizedMonth\n   * @return {?}\n   */\n\n\n  _monthSelectedInYearView(normalizedMonth) {\n    this.monthSelected.emit(normalizedMonth);\n  }\n  /**\n   * @return {?}\n   */\n\n\n  _userSelected() {\n    this._userSelection.emit();\n  }\n  /**\n   * Handles year/month selection in the multi-year/year views.\n   * @param {?} date\n   * @param {?} view\n   * @return {?}\n   */\n\n\n  _goToDateInView(date, view) {\n    this.activeDate = date;\n    this.currentView = view;\n  }\n  /**\n   * @private\n   * @param {?} obj The object to check.\n   * @return {?} The given object if it is both a date instance and valid, otherwise null.\n   */\n\n\n  _getValidDateOrNull(obj) {\n    return this._dateAdapter.isDateInstance(obj) && this._dateAdapter.isValid(obj) ? obj : null;\n  }\n  /**\n   * Returns the component instance that corresponds to the current calendar view.\n   * @private\n   * @return {?}\n   */\n\n\n  _getCurrentViewComponent() {\n    return this.monthView || this.yearView || this.multiYearView;\n  }\n\n}\n\nMatCalendar.ɵfac = function MatCalendar_Factory(t) {\n  return new (t || MatCalendar)(ɵngcc0.ɵɵdirectiveInject(MatDatepickerIntl), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.DateAdapter, 8), ɵngcc0.ɵɵdirectiveInject(MAT_DATE_FORMATS, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef));\n};\n\nMatCalendar.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n  type: MatCalendar,\n  selectors: [[\"mat-calendar\"]],\n  viewQuery: function MatCalendar_Query(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵviewQuery(MatMonthView, 5);\n      ɵngcc0.ɵɵviewQuery(MatYearView, 5);\n      ɵngcc0.ɵɵviewQuery(MatMultiYearView, 5);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.monthView = _t.first);\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.yearView = _t.first);\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.multiYearView = _t.first);\n    }\n  },\n  hostAttrs: [1, \"mat-calendar\"],\n  inputs: {\n    startView: \"startView\",\n    startAt: \"startAt\",\n    selected: \"selected\",\n    minDate: \"minDate\",\n    maxDate: \"maxDate\",\n    headerComponent: \"headerComponent\",\n    dateFilter: \"dateFilter\",\n    dateClass: \"dateClass\"\n  },\n  outputs: {\n    selectedChange: \"selectedChange\",\n    yearSelected: \"yearSelected\",\n    monthSelected: \"monthSelected\",\n    _userSelection: \"_userSelection\"\n  },\n  exportAs: [\"matCalendar\"],\n  features: [ɵngcc0.ɵɵNgOnChangesFeature],\n  decls: 5,\n  vars: 5,\n  consts: [[3, \"cdkPortalOutlet\"], [\"cdkMonitorSubtreeFocus\", \"\", \"tabindex\", \"-1\", 1, \"mat-calendar-content\", 3, \"ngSwitch\"], [3, \"activeDate\", \"selected\", \"dateFilter\", \"maxDate\", \"minDate\", \"dateClass\", \"activeDateChange\", \"selectedChange\", \"_userSelection\", 4, \"ngSwitchCase\"], [3, \"activeDate\", \"selected\", \"dateFilter\", \"maxDate\", \"minDate\", \"activeDateChange\", \"monthSelected\", \"selectedChange\", 4, \"ngSwitchCase\"], [3, \"activeDate\", \"selected\", \"dateFilter\", \"maxDate\", \"minDate\", \"activeDateChange\", \"yearSelected\", \"selectedChange\", 4, \"ngSwitchCase\"], [3, \"activeDate\", \"selected\", \"dateFilter\", \"maxDate\", \"minDate\", \"dateClass\", \"activeDateChange\", \"selectedChange\", \"_userSelection\"], [3, \"activeDate\", \"selected\", \"dateFilter\", \"maxDate\", \"minDate\", \"activeDateChange\", \"monthSelected\", \"selectedChange\"], [3, \"activeDate\", \"selected\", \"dateFilter\", \"maxDate\", \"minDate\", \"activeDateChange\", \"yearSelected\", \"selectedChange\"]],\n  template: function MatCalendar_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵtemplate(0, MatCalendar_ng_template_0_Template, 0, 0, \"ng-template\", 0);\n      ɵngcc0.ɵɵelementStart(1, \"div\", 1);\n      ɵngcc0.ɵɵtemplate(2, MatCalendar_mat_month_view_2_Template, 1, 6, \"mat-month-view\", 2);\n      ɵngcc0.ɵɵtemplate(3, MatCalendar_mat_year_view_3_Template, 1, 5, \"mat-year-view\", 3);\n      ɵngcc0.ɵɵtemplate(4, MatCalendar_mat_multi_year_view_4_Template, 1, 5, \"mat-multi-year-view\", 4);\n      ɵngcc0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵproperty(\"cdkPortalOutlet\", ctx._calendarHeaderPortal);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngSwitch\", ctx.currentView);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngSwitchCase\", \"month\");\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngSwitchCase\", \"year\");\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngSwitchCase\", \"multi-year\");\n    }\n  },\n  dependencies: [ɵngcc1.NgSwitch, ɵngcc1.NgSwitchCase, ɵngcc5.CdkMonitorFocus, ɵngcc6.CdkPortalOutlet, MatMonthView, MatYearView, MatMultiYearView],\n  styles: [\".mat-calendar{display:block}.mat-calendar-header{padding:8px 8px 0 8px}.mat-calendar-content{padding:0 8px 8px 8px;outline:0}.mat-calendar-controls{display:flex;margin:5% calc(33% / 7 - 16px)}.mat-calendar-spacer{flex:1 1 auto}.mat-calendar-period-button{min-width:0}.mat-calendar-arrow{display:inline-block;width:0;height:0;border-left:5px solid transparent;border-right:5px solid transparent;border-top-width:5px;border-top-style:solid;margin:0 0 0 5px;vertical-align:middle}.mat-calendar-arrow.mat-calendar-invert{transform:rotate(180deg)}[dir=rtl] .mat-calendar-arrow{margin:0 5px 0 0}.mat-calendar-next-button,.mat-calendar-previous-button{position:relative}.mat-calendar-next-button::after,.mat-calendar-previous-button::after{top:0;left:0;right:0;bottom:0;position:absolute;content:'';margin:15.5px;border:0 solid currentColor;border-top-width:2px}[dir=rtl] .mat-calendar-next-button,[dir=rtl] .mat-calendar-previous-button{transform:rotate(180deg)}.mat-calendar-previous-button::after{border-left-width:2px;transform:translateX(2px) rotate(-45deg)}.mat-calendar-next-button::after{border-right-width:2px;transform:translateX(-2px) rotate(45deg)}.mat-calendar-table{border-spacing:0;border-collapse:collapse;width:100%}.mat-calendar-table-header th{text-align:center;padding:0 0 8px 0}.mat-calendar-table-header-divider{position:relative;height:1px}.mat-calendar-table-header-divider::after{content:'';position:absolute;top:0;left:-8px;right:-8px;height:1px}\"],\n  encapsulation: 2,\n  changeDetection: 0\n});\n/** @nocollapse */\n\nMatCalendar.ctorParameters = () => [{\n  type: MatDatepickerIntl\n}, {\n  type: DateAdapter,\n  decorators: [{\n    type: Optional\n  }]\n}, {\n  type: undefined,\n  decorators: [{\n    type: Optional\n  }, {\n    type: Inject,\n    args: [MAT_DATE_FORMATS]\n  }]\n}, {\n  type: ChangeDetectorRef\n}];\n\nMatCalendar.propDecorators = {\n  headerComponent: [{\n    type: Input\n  }],\n  startAt: [{\n    type: Input\n  }],\n  startView: [{\n    type: Input\n  }],\n  selected: [{\n    type: Input\n  }],\n  minDate: [{\n    type: Input\n  }],\n  maxDate: [{\n    type: Input\n  }],\n  dateFilter: [{\n    type: Input\n  }],\n  dateClass: [{\n    type: Input\n  }],\n  selectedChange: [{\n    type: Output\n  }],\n  yearSelected: [{\n    type: Output\n  }],\n  monthSelected: [{\n    type: Output\n  }],\n  _userSelection: [{\n    type: Output\n  }],\n  monthView: [{\n    type: ViewChild,\n    args: [MatMonthView]\n  }],\n  yearView: [{\n    type: ViewChild,\n    args: [MatYearView]\n  }],\n  multiYearView: [{\n    type: ViewChild,\n    args: [MatMultiYearView]\n  }]\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatCalendar, [{\n    type: Component,\n    args: [{\n      selector: 'mat-calendar',\n      template: \"<ng-template [cdkPortalOutlet]=\\\"_calendarHeaderPortal\\\"></ng-template><div class=\\\"mat-calendar-content\\\" [ngSwitch]=\\\"currentView\\\" cdkMonitorSubtreeFocus tabindex=\\\"-1\\\"><mat-month-view *ngSwitchCase=\\\"'month'\\\" [(activeDate)]=\\\"activeDate\\\" [selected]=\\\"selected\\\" [dateFilter]=\\\"dateFilter\\\" [maxDate]=\\\"maxDate\\\" [minDate]=\\\"minDate\\\" [dateClass]=\\\"dateClass\\\" (selectedChange)=\\\"_dateSelected($event)\\\" (_userSelection)=\\\"_userSelected()\\\"></mat-month-view><mat-year-view *ngSwitchCase=\\\"'year'\\\" [(activeDate)]=\\\"activeDate\\\" [selected]=\\\"selected\\\" [dateFilter]=\\\"dateFilter\\\" [maxDate]=\\\"maxDate\\\" [minDate]=\\\"minDate\\\" (monthSelected)=\\\"_monthSelectedInYearView($event)\\\" (selectedChange)=\\\"_goToDateInView($event, 'month')\\\"></mat-year-view><mat-multi-year-view *ngSwitchCase=\\\"'multi-year'\\\" [(activeDate)]=\\\"activeDate\\\" [selected]=\\\"selected\\\" [dateFilter]=\\\"dateFilter\\\" [maxDate]=\\\"maxDate\\\" [minDate]=\\\"minDate\\\" (yearSelected)=\\\"_yearSelectedInMultiYearView($event)\\\" (selectedChange)=\\\"_goToDateInView($event, 'year')\\\"></mat-multi-year-view></div>\",\n      host: {\n        'class': 'mat-calendar'\n      },\n      exportAs: 'matCalendar',\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      styles: [\".mat-calendar{display:block}.mat-calendar-header{padding:8px 8px 0 8px}.mat-calendar-content{padding:0 8px 8px 8px;outline:0}.mat-calendar-controls{display:flex;margin:5% calc(33% / 7 - 16px)}.mat-calendar-spacer{flex:1 1 auto}.mat-calendar-period-button{min-width:0}.mat-calendar-arrow{display:inline-block;width:0;height:0;border-left:5px solid transparent;border-right:5px solid transparent;border-top-width:5px;border-top-style:solid;margin:0 0 0 5px;vertical-align:middle}.mat-calendar-arrow.mat-calendar-invert{transform:rotate(180deg)}[dir=rtl] .mat-calendar-arrow{margin:0 5px 0 0}.mat-calendar-next-button,.mat-calendar-previous-button{position:relative}.mat-calendar-next-button::after,.mat-calendar-previous-button::after{top:0;left:0;right:0;bottom:0;position:absolute;content:'';margin:15.5px;border:0 solid currentColor;border-top-width:2px}[dir=rtl] .mat-calendar-next-button,[dir=rtl] .mat-calendar-previous-button{transform:rotate(180deg)}.mat-calendar-previous-button::after{border-left-width:2px;transform:translateX(2px) rotate(-45deg)}.mat-calendar-next-button::after{border-right-width:2px;transform:translateX(-2px) rotate(45deg)}.mat-calendar-table{border-spacing:0;border-collapse:collapse;width:100%}.mat-calendar-table-header th{text-align:center;padding:0 0 8px 0}.mat-calendar-table-header-divider{position:relative;height:1px}.mat-calendar-table-header-divider::after{content:'';position:absolute;top:0;left:-8px;right:-8px;height:1px}\"]\n    }]\n  }], function () {\n    return [{\n      type: MatDatepickerIntl\n    }, {\n      type: ɵngcc2.DateAdapter,\n      decorators: [{\n        type: Optional\n      }]\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [MAT_DATE_FORMATS]\n      }]\n    }, {\n      type: ɵngcc0.ChangeDetectorRef\n    }];\n  }, {\n    startView: [{\n      type: Input\n    }],\n    selectedChange: [{\n      type: Output\n    }],\n    yearSelected: [{\n      type: Output\n    }],\n    monthSelected: [{\n      type: Output\n    }],\n    _userSelection: [{\n      type: Output\n    }],\n    startAt: [{\n      type: Input\n    }],\n    selected: [{\n      type: Input\n    }],\n    minDate: [{\n      type: Input\n    }],\n    maxDate: [{\n      type: Input\n    }],\n    headerComponent: [{\n      type: Input\n    }],\n    dateFilter: [{\n      type: Input\n    }],\n    dateClass: [{\n      type: Input\n    }],\n    monthView: [{\n      type: ViewChild,\n      args: [MatMonthView]\n    }],\n    yearView: [{\n      type: ViewChild,\n      args: [MatYearView]\n    }],\n    multiYearView: [{\n      type: ViewChild,\n      args: [MatMultiYearView]\n    }]\n  });\n})();\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Animations used by the Material datepicker.\n * \\@docs-private\n * @type {?}\n */\n\n\nconst matDatepickerAnimations = {\n  /**\n   * Transforms the height of the datepicker's calendar.\n   */\n  transformPanel: trigger('transformPanel', [state('void', style({\n    opacity: 0,\n    transform: 'scale(1, 0.8)'\n  })), transition('void => enter', animate('120ms cubic-bezier(0, 0, 0.2, 1)', style({\n    opacity: 1,\n    transform: 'scale(1, 1)'\n  }))), transition('* => void', animate('100ms linear', style({\n    opacity: 0\n  })))]),\n\n  /**\n   * Fades in the content of the calendar.\n   */\n  fadeInCalendar: trigger('fadeInCalendar', [state('void', style({\n    opacity: 0\n  })), state('enter', style({\n    opacity: 1\n  })), // TODO(crisbeto): this animation should be removed since it isn't quite on spec, but we\n  // need to keep it until #12440 gets in, otherwise the exit animation will look glitchy.\n  transition('void => *', animate('120ms 100ms cubic-bezier(0.55, 0, 0.55, 0.2)'))])\n};\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Used to generate a unique ID for each datepicker instance.\n * @type {?}\n */\n\nlet datepickerUid = 0;\n/**\n * Injection token that determines the scroll handling while the calendar is open.\n * @type {?}\n */\n\nconst MAT_DATEPICKER_SCROLL_STRATEGY = new InjectionToken('mat-datepicker-scroll-strategy');\n/**\n * \\@docs-private\n * @param {?} overlay\n * @return {?}\n */\n\nfunction MAT_DATEPICKER_SCROLL_STRATEGY_FACTORY(overlay) {\n  return () => overlay.scrollStrategies.reposition();\n}\n/**\n * \\@docs-private\n * @type {?}\n */\n\n\nconst MAT_DATEPICKER_SCROLL_STRATEGY_FACTORY_PROVIDER = {\n  provide: MAT_DATEPICKER_SCROLL_STRATEGY,\n  deps: [Overlay],\n  useFactory: MAT_DATEPICKER_SCROLL_STRATEGY_FACTORY\n}; // Boilerplate for applying mixins to MatDatepickerContent.\n\n/**\n * \\@docs-private\n */\n\nclass MatDatepickerContentBase {\n  /**\n   * @param {?} _elementRef\n   */\n  constructor(_elementRef) {\n    this._elementRef = _elementRef;\n  }\n\n}\n/** @type {?} */\n\n\nconst _MatDatepickerContentMixinBase = mixinColor(MatDatepickerContentBase);\n/**\n * Component used as the content for the datepicker dialog and popup. We use this instead of using\n * MatCalendar directly as the content so we can control the initial focus. This also gives us a\n * place to put additional features of the popup that are not part of the calendar itself in the\n * future. (e.g. confirmation buttons).\n * \\@docs-private\n * @template D\n */\n\n\nclass MatDatepickerContent extends _MatDatepickerContentMixinBase {\n  /**\n   * @param {?} elementRef\n   */\n  constructor(elementRef) {\n    super(elementRef);\n  }\n  /**\n   * @return {?}\n   */\n\n\n  ngAfterViewInit() {\n    this._calendar.focusActiveCell();\n  }\n\n}\n\nMatDatepickerContent.ɵfac = function MatDatepickerContent_Factory(t) {\n  return new (t || MatDatepickerContent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef));\n};\n\nMatDatepickerContent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n  type: MatDatepickerContent,\n  selectors: [[\"mat-datepicker-content\"]],\n  viewQuery: function MatDatepickerContent_Query(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵviewQuery(MatCalendar, 5);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._calendar = _t.first);\n    }\n  },\n  hostAttrs: [1, \"mat-datepicker-content\"],\n  hostVars: 3,\n  hostBindings: function MatDatepickerContent_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      ɵngcc0.ɵɵsyntheticHostProperty(\"@transformPanel\", \"enter\");\n      ɵngcc0.ɵɵclassProp(\"mat-datepicker-content-touch\", ctx.datepicker.touchUi);\n    }\n  },\n  inputs: {\n    color: \"color\"\n  },\n  exportAs: [\"matDatepickerContent\"],\n  features: [ɵngcc0.ɵɵInheritDefinitionFeature],\n  decls: 1,\n  vars: 11,\n  consts: [[\"cdkTrapFocus\", \"\", 3, \"id\", \"ngClass\", \"startAt\", \"startView\", \"minDate\", \"maxDate\", \"dateFilter\", \"headerComponent\", \"selected\", \"dateClass\", \"selectedChange\", \"yearSelected\", \"monthSelected\", \"_userSelection\"]],\n  template: function MatDatepickerContent_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵelementStart(0, \"mat-calendar\", 0);\n      ɵngcc0.ɵɵlistener(\"selectedChange\", function MatDatepickerContent_Template_mat_calendar_selectedChange_0_listener($event) {\n        return ctx.datepicker.select($event);\n      })(\"yearSelected\", function MatDatepickerContent_Template_mat_calendar_yearSelected_0_listener($event) {\n        return ctx.datepicker._selectYear($event);\n      })(\"monthSelected\", function MatDatepickerContent_Template_mat_calendar_monthSelected_0_listener($event) {\n        return ctx.datepicker._selectMonth($event);\n      })(\"_userSelection\", function MatDatepickerContent_Template_mat_calendar__userSelection_0_listener() {\n        return ctx.datepicker.close();\n      });\n      ɵngcc0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵproperty(\"id\", ctx.datepicker.id)(\"ngClass\", ctx.datepicker.panelClass)(\"startAt\", ctx.datepicker.startAt)(\"startView\", ctx.datepicker.startView)(\"minDate\", ctx.datepicker._minDate)(\"maxDate\", ctx.datepicker._maxDate)(\"dateFilter\", ctx.datepicker._dateFilter)(\"headerComponent\", ctx.datepicker.calendarHeaderComponent)(\"selected\", ctx.datepicker._selected)(\"dateClass\", ctx.datepicker.dateClass)(\"@fadeInCalendar\", \"enter\");\n    }\n  },\n  dependencies: [ɵngcc1.NgClass, ɵngcc5.CdkTrapFocus, MatCalendar],\n  styles: [\".mat-datepicker-content{display:block;border-radius:4px}.mat-datepicker-content .mat-calendar{width:296px;height:354px}.mat-datepicker-content-touch{display:block;max-height:80vh;overflow:auto;margin:-24px}.mat-datepicker-content-touch .mat-calendar{min-width:250px;min-height:312px;max-width:750px;max-height:788px}@media all and (orientation:landscape){.mat-datepicker-content-touch .mat-calendar{width:64vh;height:80vh}}@media all and (orientation:portrait){.mat-datepicker-content-touch .mat-calendar{width:80vw;height:100vw}}\"],\n  encapsulation: 2,\n  data: {\n    animation: [matDatepickerAnimations.transformPanel, matDatepickerAnimations.fadeInCalendar]\n  },\n  changeDetection: 0\n});\n/** @nocollapse */\n\nMatDatepickerContent.ctorParameters = () => [{\n  type: ElementRef\n}];\n\nMatDatepickerContent.propDecorators = {\n  _calendar: [{\n    type: ViewChild,\n    args: [MatCalendar]\n  }]\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatDatepickerContent, [{\n    type: Component,\n    args: [{\n      selector: 'mat-datepicker-content',\n      template: \"<mat-calendar cdkTrapFocus [id]=\\\"datepicker.id\\\" [ngClass]=\\\"datepicker.panelClass\\\" [startAt]=\\\"datepicker.startAt\\\" [startView]=\\\"datepicker.startView\\\" [minDate]=\\\"datepicker._minDate\\\" [maxDate]=\\\"datepicker._maxDate\\\" [dateFilter]=\\\"datepicker._dateFilter\\\" [headerComponent]=\\\"datepicker.calendarHeaderComponent\\\" [selected]=\\\"datepicker._selected\\\" [dateClass]=\\\"datepicker.dateClass\\\" [@fadeInCalendar]=\\\"'enter'\\\" (selectedChange)=\\\"datepicker.select($event)\\\" (yearSelected)=\\\"datepicker._selectYear($event)\\\" (monthSelected)=\\\"datepicker._selectMonth($event)\\\" (_userSelection)=\\\"datepicker.close()\\\"></mat-calendar>\",\n      host: {\n        'class': 'mat-datepicker-content',\n        '[@transformPanel]': '\"enter\"',\n        '[class.mat-datepicker-content-touch]': 'datepicker.touchUi'\n      },\n      animations: [matDatepickerAnimations.transformPanel, matDatepickerAnimations.fadeInCalendar],\n      exportAs: 'matDatepickerContent',\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      inputs: ['color'],\n      styles: [\".mat-datepicker-content{display:block;border-radius:4px}.mat-datepicker-content .mat-calendar{width:296px;height:354px}.mat-datepicker-content-touch{display:block;max-height:80vh;overflow:auto;margin:-24px}.mat-datepicker-content-touch .mat-calendar{min-width:250px;min-height:312px;max-width:750px;max-height:788px}@media all and (orientation:landscape){.mat-datepicker-content-touch .mat-calendar{width:64vh;height:80vh}}@media all and (orientation:portrait){.mat-datepicker-content-touch .mat-calendar{width:80vw;height:100vw}}\"]\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.ElementRef\n    }];\n  }, {\n    _calendar: [{\n      type: ViewChild,\n      args: [MatCalendar]\n    }]\n  });\n})(); // TODO(mmalerba): We use a component instead of a directive here so the user can use implicit\n// template reference variables (e.g. #d vs #d=\"matDatepicker\"). We can change this to a directive\n// if angular adds support for `exportAs: '$implicit'` on directives.\n\n/**\n * Component responsible for managing the datepicker popup/dialog.\n * @template D\n */\n\n\nclass MatDatepicker {\n  /**\n   * @param {?} _dialog\n   * @param {?} _overlay\n   * @param {?} _ngZone\n   * @param {?} _viewContainerRef\n   * @param {?} scrollStrategy\n   * @param {?} _dateAdapter\n   * @param {?} _dir\n   * @param {?} _document\n   */\n  constructor(_dialog, _overlay, _ngZone, _viewContainerRef, scrollStrategy, _dateAdapter, _dir, _document) {\n    this._dialog = _dialog;\n    this._overlay = _overlay;\n    this._ngZone = _ngZone;\n    this._viewContainerRef = _viewContainerRef;\n    this._dateAdapter = _dateAdapter;\n    this._dir = _dir;\n    this._document = _document;\n    /**\n     * The view that the calendar should start in.\n     */\n\n    this.startView = 'month';\n    this._touchUi = false;\n    /**\n     * Emits selected year in multiyear view.\n     * This doesn't imply a change on the selected date.\n     */\n\n    this.yearSelected = new EventEmitter();\n    /**\n     * Emits selected month in year view.\n     * This doesn't imply a change on the selected date.\n     */\n\n    this.monthSelected = new EventEmitter();\n    /**\n     * Emits when the datepicker has been opened.\n     */\n\n    this.openedStream = new EventEmitter();\n    /**\n     * Emits when the datepicker has been closed.\n     */\n\n    this.closedStream = new EventEmitter();\n    this._opened = false;\n    /**\n     * The id for the datepicker calendar.\n     */\n\n    this.id = `mat-datepicker-${datepickerUid++}`;\n    this._validSelected = null;\n    /**\n     * The element that was focused before the datepicker was opened.\n     */\n\n    this._focusedElementBeforeOpen = null;\n    /**\n     * Subscription to value changes in the associated input element.\n     */\n\n    this._inputSubscription = Subscription.EMPTY;\n    /**\n     * Emits when the datepicker is disabled.\n     */\n\n    this._disabledChange = new Subject();\n    /**\n     * Emits new selected date when selected date changes.\n     */\n\n    this._selectedChanged = new Subject();\n\n    if (!this._dateAdapter) {\n      throw createMissingDateImplError('DateAdapter');\n    }\n\n    this._scrollStrategy = scrollStrategy;\n  }\n  /**\n   * The date to open the calendar to initially.\n   * @return {?}\n   */\n\n\n  get startAt() {\n    // If an explicit startAt is set we start there, otherwise we start at whatever the currently\n    // selected value is.\n    return this._startAt || (this._datepickerInput ? this._datepickerInput.value : null);\n  }\n  /**\n   * @param {?} value\n   * @return {?}\n   */\n\n\n  set startAt(value) {\n    this._startAt = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n  }\n  /**\n   * Color palette to use on the datepicker's calendar.\n   * @return {?}\n   */\n\n\n  get color() {\n    return this._color || (this._datepickerInput ? this._datepickerInput._getThemePalette() : undefined);\n  }\n  /**\n   * @param {?} value\n   * @return {?}\n   */\n\n\n  set color(value) {\n    this._color = value;\n  }\n  /**\n   * Whether the calendar UI is in touch mode. In touch mode the calendar opens in a dialog rather\n   * than a popup and elements have more padding to allow for bigger touch targets.\n   * @return {?}\n   */\n\n\n  get touchUi() {\n    return this._touchUi;\n  }\n  /**\n   * @param {?} value\n   * @return {?}\n   */\n\n\n  set touchUi(value) {\n    this._touchUi = coerceBooleanProperty(value);\n  }\n  /**\n   * Whether the datepicker pop-up should be disabled.\n   * @return {?}\n   */\n\n\n  get disabled() {\n    return this._disabled === undefined && this._datepickerInput ? this._datepickerInput.disabled : !!this._disabled;\n  }\n  /**\n   * @param {?} value\n   * @return {?}\n   */\n\n\n  set disabled(value) {\n    /** @type {?} */\n    const newValue = coerceBooleanProperty(value);\n\n    if (newValue !== this._disabled) {\n      this._disabled = newValue;\n\n      this._disabledChange.next(newValue);\n    }\n  }\n  /**\n   * Whether the calendar is open.\n   * @return {?}\n   */\n\n\n  get opened() {\n    return this._opened;\n  }\n  /**\n   * @param {?} value\n   * @return {?}\n   */\n\n\n  set opened(value) {\n    value ? this.open() : this.close();\n  }\n  /**\n   * The currently selected date.\n   * @return {?}\n   */\n\n\n  get _selected() {\n    return this._validSelected;\n  }\n  /**\n   * @param {?} value\n   * @return {?}\n   */\n\n\n  set _selected(value) {\n    this._validSelected = value;\n  }\n  /**\n   * The minimum selectable date.\n   * @return {?}\n   */\n\n\n  get _minDate() {\n    return this._datepickerInput && this._datepickerInput.min;\n  }\n  /**\n   * The maximum selectable date.\n   * @return {?}\n   */\n\n\n  get _maxDate() {\n    return this._datepickerInput && this._datepickerInput.max;\n  }\n  /**\n   * @return {?}\n   */\n\n\n  get _dateFilter() {\n    return this._datepickerInput && this._datepickerInput._dateFilter;\n  }\n  /**\n   * @return {?}\n   */\n\n\n  ngOnDestroy() {\n    this.close();\n\n    this._inputSubscription.unsubscribe();\n\n    this._disabledChange.complete();\n\n    if (this._popupRef) {\n      this._popupRef.dispose();\n\n      this._popupComponentRef = null;\n    }\n  }\n  /**\n   * Selects the given date\n   * @param {?} date\n   * @return {?}\n   */\n\n\n  select(date) {\n    /** @type {?} */\n    let oldValue = this._selected;\n    this._selected = date;\n\n    if (!this._dateAdapter.sameDate(oldValue, this._selected)) {\n      this._selectedChanged.next(date);\n    }\n  }\n  /**\n   * Emits the selected year in multiyear view\n   * @param {?} normalizedYear\n   * @return {?}\n   */\n\n\n  _selectYear(normalizedYear) {\n    this.yearSelected.emit(normalizedYear);\n  }\n  /**\n   * Emits selected month in year view\n   * @param {?} normalizedMonth\n   * @return {?}\n   */\n\n\n  _selectMonth(normalizedMonth) {\n    this.monthSelected.emit(normalizedMonth);\n  }\n  /**\n   * Register an input with this datepicker.\n   * @param {?} input The datepicker input to register with this datepicker.\n   * @return {?}\n   */\n\n\n  _registerInput(input) {\n    if (this._datepickerInput) {\n      throw Error('A MatDatepicker can only be associated with a single input.');\n    }\n\n    this._datepickerInput = input;\n    this._inputSubscription = this._datepickerInput._valueChange.subscribe(value => this._selected = value);\n  }\n  /**\n   * Open the calendar.\n   * @return {?}\n   */\n\n\n  open() {\n    if (this._opened || this.disabled) {\n      return;\n    }\n\n    if (!this._datepickerInput) {\n      throw Error('Attempted to open an MatDatepicker with no associated input.');\n    }\n\n    if (this._document) {\n      this._focusedElementBeforeOpen = this._document.activeElement;\n    }\n\n    this.touchUi ? this._openAsDialog() : this._openAsPopup();\n    this._opened = true;\n    this.openedStream.emit();\n  }\n  /**\n   * Close the calendar.\n   * @return {?}\n   */\n\n\n  close() {\n    if (!this._opened) {\n      return;\n    }\n\n    if (this._popupRef && this._popupRef.hasAttached()) {\n      this._popupRef.detach();\n    }\n\n    if (this._dialogRef) {\n      this._dialogRef.close();\n\n      this._dialogRef = null;\n    }\n\n    if (this._calendarPortal && this._calendarPortal.isAttached) {\n      this._calendarPortal.detach();\n    }\n    /** @type {?} */\n\n\n    const completeClose = () => {\n      // The `_opened` could've been reset already if\n      // we got two events in quick succession.\n      if (this._opened) {\n        this._opened = false;\n        this.closedStream.emit();\n        this._focusedElementBeforeOpen = null;\n      }\n    };\n\n    if (this._focusedElementBeforeOpen && typeof this._focusedElementBeforeOpen.focus === 'function') {\n      // Because IE moves focus asynchronously, we can't count on it being restored before we've\n      // marked the datepicker as closed. If the event fires out of sequence and the element that\n      // we're refocusing opens the datepicker on focus, the user could be stuck with not being\n      // able to close the calendar at all. We work around it by making the logic, that marks\n      // the datepicker as closed, async as well.\n      this._focusedElementBeforeOpen.focus();\n\n      setTimeout(completeClose);\n    } else {\n      completeClose();\n    }\n  }\n  /**\n   * Open the calendar as a dialog.\n   * @private\n   * @return {?}\n   */\n\n\n  _openAsDialog() {\n    // Usually this would be handled by `open` which ensures that we can only have one overlay\n    // open at a time, however since we reset the variables in async handlers some overlays\n    // may slip through if the user opens and closes multiple times in quick succession (e.g.\n    // by holding down the enter key).\n    if (this._dialogRef) {\n      this._dialogRef.close();\n    }\n\n    this._dialogRef = this._dialog.open(MatDatepickerContent, {\n      direction: this._dir ? this._dir.value : 'ltr',\n      viewContainerRef: this._viewContainerRef,\n      panelClass: 'mat-datepicker-dialog'\n    });\n\n    this._dialogRef.afterClosed().subscribe(() => this.close());\n\n    this._dialogRef.componentInstance.datepicker = this;\n\n    this._setColor();\n  }\n  /**\n   * Open the calendar as a popup.\n   * @private\n   * @return {?}\n   */\n\n\n  _openAsPopup() {\n    if (!this._calendarPortal) {\n      this._calendarPortal = new ComponentPortal(MatDatepickerContent, this._viewContainerRef);\n    }\n\n    if (!this._popupRef) {\n      this._createPopup();\n    }\n\n    if (!this._popupRef.hasAttached()) {\n      this._popupComponentRef = this._popupRef.attach(this._calendarPortal);\n      this._popupComponentRef.instance.datepicker = this;\n\n      this._setColor(); // Update the position once the calendar has rendered.\n\n\n      this._ngZone.onStable.asObservable().pipe(take(1)).subscribe(() => {\n        this._popupRef.updatePosition();\n      });\n    }\n  }\n  /**\n   * Create the popup.\n   * @private\n   * @return {?}\n   */\n\n\n  _createPopup() {\n    /** @type {?} */\n    const overlayConfig = new OverlayConfig({\n      positionStrategy: this._createPopupPositionStrategy(),\n      hasBackdrop: true,\n      backdropClass: 'mat-overlay-transparent-backdrop',\n      direction: this._dir,\n      scrollStrategy: this._scrollStrategy(),\n      panelClass: 'mat-datepicker-popup'\n    });\n    this._popupRef = this._overlay.create(overlayConfig);\n\n    this._popupRef.overlayElement.setAttribute('role', 'dialog');\n\n    merge(this._popupRef.backdropClick(), this._popupRef.detachments(), this._popupRef.keydownEvents().pipe(filter(event => {\n      // Closing on alt + up is only valid when there's an input associated with the datepicker.\n      return event.keyCode === ESCAPE || this._datepickerInput && event.altKey && event.keyCode === UP_ARROW;\n    }))).subscribe(() => this.close());\n  }\n  /**\n   * Create the popup PositionStrategy.\n   * @private\n   * @return {?}\n   */\n\n\n  _createPopupPositionStrategy() {\n    return this._overlay.position().flexibleConnectedTo(this._datepickerInput.getConnectedOverlayOrigin()).withTransformOriginOn('.mat-datepicker-content').withFlexibleDimensions(false).withViewportMargin(8).withLockedPosition().withPositions([{\n      originX: 'start',\n      originY: 'bottom',\n      overlayX: 'start',\n      overlayY: 'top'\n    }, {\n      originX: 'start',\n      originY: 'top',\n      overlayX: 'start',\n      overlayY: 'bottom'\n    }, {\n      originX: 'end',\n      originY: 'bottom',\n      overlayX: 'end',\n      overlayY: 'top'\n    }, {\n      originX: 'end',\n      originY: 'top',\n      overlayX: 'end',\n      overlayY: 'bottom'\n    }]);\n  }\n  /**\n   * @private\n   * @param {?} obj The object to check.\n   * @return {?} The given object if it is both a date instance and valid, otherwise null.\n   */\n\n\n  _getValidDateOrNull(obj) {\n    return this._dateAdapter.isDateInstance(obj) && this._dateAdapter.isValid(obj) ? obj : null;\n  }\n  /**\n   * Passes the current theme color along to the calendar overlay.\n   * @private\n   * @return {?}\n   */\n\n\n  _setColor() {\n    /** @type {?} */\n    const color = this.color;\n\n    if (this._popupComponentRef) {\n      this._popupComponentRef.instance.color = color;\n    }\n\n    if (this._dialogRef) {\n      this._dialogRef.componentInstance.color = color;\n    }\n  }\n\n}\n\nMatDatepicker.ɵfac = function MatDatepicker_Factory(t) {\n  return new (t || MatDatepicker)(ɵngcc0.ɵɵdirectiveInject(ɵngcc7.MatDialog), ɵngcc0.ɵɵdirectiveInject(ɵngcc8.Overlay), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(MAT_DATEPICKER_SCROLL_STRATEGY), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.DateAdapter, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc3.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(DOCUMENT, 8));\n};\n\nMatDatepicker.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n  type: MatDatepicker,\n  selectors: [[\"mat-datepicker\"]],\n  inputs: {\n    startView: \"startView\",\n    startAt: \"startAt\",\n    color: \"color\",\n    touchUi: \"touchUi\",\n    disabled: \"disabled\",\n    opened: \"opened\",\n    calendarHeaderComponent: \"calendarHeaderComponent\",\n    panelClass: \"panelClass\",\n    dateClass: \"dateClass\"\n  },\n  outputs: {\n    yearSelected: \"yearSelected\",\n    monthSelected: \"monthSelected\",\n    openedStream: \"opened\",\n    closedStream: \"closed\"\n  },\n  exportAs: [\"matDatepicker\"],\n  decls: 0,\n  vars: 0,\n  template: function MatDatepicker_Template(rf, ctx) {},\n  encapsulation: 2,\n  changeDetection: 0\n});\n/** @nocollapse */\n\nMatDatepicker.ctorParameters = () => [{\n  type: MatDialog\n}, {\n  type: Overlay\n}, {\n  type: NgZone\n}, {\n  type: ViewContainerRef\n}, {\n  type: undefined,\n  decorators: [{\n    type: Inject,\n    args: [MAT_DATEPICKER_SCROLL_STRATEGY]\n  }]\n}, {\n  type: DateAdapter,\n  decorators: [{\n    type: Optional\n  }]\n}, {\n  type: Directionality,\n  decorators: [{\n    type: Optional\n  }]\n}, {\n  type: undefined,\n  decorators: [{\n    type: Optional\n  }, {\n    type: Inject,\n    args: [DOCUMENT]\n  }]\n}];\n\nMatDatepicker.propDecorators = {\n  calendarHeaderComponent: [{\n    type: Input\n  }],\n  startAt: [{\n    type: Input\n  }],\n  startView: [{\n    type: Input\n  }],\n  color: [{\n    type: Input\n  }],\n  touchUi: [{\n    type: Input\n  }],\n  disabled: [{\n    type: Input\n  }],\n  yearSelected: [{\n    type: Output\n  }],\n  monthSelected: [{\n    type: Output\n  }],\n  panelClass: [{\n    type: Input\n  }],\n  dateClass: [{\n    type: Input\n  }],\n  openedStream: [{\n    type: Output,\n    args: ['opened']\n  }],\n  closedStream: [{\n    type: Output,\n    args: ['closed']\n  }],\n  opened: [{\n    type: Input\n  }]\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatDatepicker, [{\n    type: Component,\n    args: [{\n      selector: 'mat-datepicker',\n      template: '',\n      exportAs: 'matDatepicker',\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc7.MatDialog\n    }, {\n      type: ɵngcc8.Overlay\n    }, {\n      type: ɵngcc0.NgZone\n    }, {\n      type: ɵngcc0.ViewContainerRef\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [MAT_DATEPICKER_SCROLL_STRATEGY]\n      }]\n    }, {\n      type: ɵngcc2.DateAdapter,\n      decorators: [{\n        type: Optional\n      }]\n    }, {\n      type: ɵngcc3.Directionality,\n      decorators: [{\n        type: Optional\n      }]\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [DOCUMENT]\n      }]\n    }];\n  }, {\n    startView: [{\n      type: Input\n    }],\n    yearSelected: [{\n      type: Output\n    }],\n    monthSelected: [{\n      type: Output\n    }],\n    openedStream: [{\n      type: Output,\n      args: ['opened']\n    }],\n    closedStream: [{\n      type: Output,\n      args: ['closed']\n    }],\n    startAt: [{\n      type: Input\n    }],\n    color: [{\n      type: Input\n    }],\n    touchUi: [{\n      type: Input\n    }],\n    disabled: [{\n      type: Input\n    }],\n    opened: [{\n      type: Input\n    }],\n    calendarHeaderComponent: [{\n      type: Input\n    }],\n    panelClass: [{\n      type: Input\n    }],\n    dateClass: [{\n      type: Input\n    }]\n  });\n})();\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * \\@docs-private\n * @type {?}\n */\n\n\nconst MAT_DATEPICKER_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => MatDatepickerInput),\n  multi: true\n};\n/**\n * \\@docs-private\n * @type {?}\n */\n\nconst MAT_DATEPICKER_VALIDATORS = {\n  provide: NG_VALIDATORS,\n  useExisting: forwardRef(() => MatDatepickerInput),\n  multi: true\n};\n/**\n * An event used for datepicker input and change events. We don't always have access to a native\n * input or change event because the event may have been triggered by the user clicking on the\n * calendar popup. For consistency, we always use MatDatepickerInputEvent instead.\n * @template D\n */\n\nclass MatDatepickerInputEvent {\n  /**\n   * @param {?} target\n   * @param {?} targetElement\n   */\n  constructor(target, targetElement) {\n    this.target = target;\n    this.targetElement = targetElement;\n    this.value = this.target.value;\n  }\n\n}\n/**\n * Directive used to connect an input to a MatDatepicker.\n * @template D\n */\n\n\nclass MatDatepickerInput {\n  /**\n   * @param {?} _elementRef\n   * @param {?} _dateAdapter\n   * @param {?} _dateFormats\n   * @param {?} _formField\n   */\n  constructor(_elementRef, _dateAdapter, _dateFormats, _formField) {\n    this._elementRef = _elementRef;\n    this._dateAdapter = _dateAdapter;\n    this._dateFormats = _dateFormats;\n    this._formField = _formField;\n    /**\n     * Emits when a `change` event is fired on this `<input>`.\n     */\n\n    this.dateChange = new EventEmitter();\n    /**\n     * Emits when an `input` event is fired on this `<input>`.\n     */\n\n    this.dateInput = new EventEmitter();\n    /**\n     * Emits when the value changes (either due to user input or programmatic change).\n     */\n\n    this._valueChange = new EventEmitter();\n    /**\n     * Emits when the disabled state has changed\n     */\n\n    this._disabledChange = new EventEmitter();\n\n    this._onTouched = () => {};\n\n    this._cvaOnChange = () => {};\n\n    this._validatorOnChange = () => {};\n\n    this._datepickerSubscription = Subscription.EMPTY;\n    this._localeSubscription = Subscription.EMPTY;\n    /**\n     * The form control validator for whether the input parses.\n     */\n\n    this._parseValidator = () => {\n      return this._lastValueValid ? null : {\n        'matDatepickerParse': {\n          'text': this._elementRef.nativeElement.value\n        }\n      };\n    };\n    /**\n     * The form control validator for the min date.\n     */\n\n\n    this._minValidator = control => {\n      /** @type {?} */\n      const controlValue = this._getValidDateOrNull(this._dateAdapter.deserialize(control.value));\n\n      return !this.min || !controlValue || this._dateAdapter.compareDate(this.min, controlValue) <= 0 ? null : {\n        'matDatepickerMin': {\n          'min': this.min,\n          'actual': controlValue\n        }\n      };\n    };\n    /**\n     * The form control validator for the max date.\n     */\n\n\n    this._maxValidator = control => {\n      /** @type {?} */\n      const controlValue = this._getValidDateOrNull(this._dateAdapter.deserialize(control.value));\n\n      return !this.max || !controlValue || this._dateAdapter.compareDate(this.max, controlValue) >= 0 ? null : {\n        'matDatepickerMax': {\n          'max': this.max,\n          'actual': controlValue\n        }\n      };\n    };\n    /**\n     * The form control validator for the date filter.\n     */\n\n\n    this._filterValidator = control => {\n      /** @type {?} */\n      const controlValue = this._getValidDateOrNull(this._dateAdapter.deserialize(control.value));\n\n      return !this._dateFilter || !controlValue || this._dateFilter(controlValue) ? null : {\n        'matDatepickerFilter': true\n      };\n    };\n    /**\n     * The combined form control validator for this input.\n     */\n\n\n    this._validator = Validators.compose([this._parseValidator, this._minValidator, this._maxValidator, this._filterValidator]);\n    /**\n     * Whether the last value set on the input was valid.\n     */\n\n    this._lastValueValid = false;\n\n    if (!this._dateAdapter) {\n      throw createMissingDateImplError('DateAdapter');\n    }\n\n    if (!this._dateFormats) {\n      throw createMissingDateImplError('MAT_DATE_FORMATS');\n    } // Update the displayed date when the locale changes.\n\n\n    this._localeSubscription = _dateAdapter.localeChanges.subscribe(() => {\n      this.value = this.value;\n    });\n  }\n  /**\n   * The datepicker that this input is associated with.\n   * @param {?} value\n   * @return {?}\n   */\n\n\n  set matDatepicker(value) {\n    if (!value) {\n      return;\n    }\n\n    this._datepicker = value;\n\n    this._datepicker._registerInput(this);\n\n    this._datepickerSubscription.unsubscribe();\n\n    this._datepickerSubscription = this._datepicker._selectedChanged.subscribe(selected => {\n      this.value = selected;\n\n      this._cvaOnChange(selected);\n\n      this._onTouched();\n\n      this.dateInput.emit(new MatDatepickerInputEvent(this, this._elementRef.nativeElement));\n      this.dateChange.emit(new MatDatepickerInputEvent(this, this._elementRef.nativeElement));\n    });\n  }\n  /**\n   * Function that can be used to filter out dates within the datepicker.\n   * @param {?} value\n   * @return {?}\n   */\n\n\n  set matDatepickerFilter(value) {\n    this._dateFilter = value;\n\n    this._validatorOnChange();\n  }\n  /**\n   * The value of the input.\n   * @return {?}\n   */\n\n\n  get value() {\n    return this._value;\n  }\n  /**\n   * @param {?} value\n   * @return {?}\n   */\n\n\n  set value(value) {\n    value = this._dateAdapter.deserialize(value);\n    this._lastValueValid = !value || this._dateAdapter.isValid(value);\n    value = this._getValidDateOrNull(value);\n    /** @type {?} */\n\n    const oldDate = this.value;\n    this._value = value;\n\n    this._formatValue(value);\n\n    if (!this._dateAdapter.sameDate(oldDate, value)) {\n      this._valueChange.emit(value);\n    }\n  }\n  /**\n   * The minimum valid date.\n   * @return {?}\n   */\n\n\n  get min() {\n    return this._min;\n  }\n  /**\n   * @param {?} value\n   * @return {?}\n   */\n\n\n  set min(value) {\n    this._min = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n\n    this._validatorOnChange();\n  }\n  /**\n   * The maximum valid date.\n   * @return {?}\n   */\n\n\n  get max() {\n    return this._max;\n  }\n  /**\n   * @param {?} value\n   * @return {?}\n   */\n\n\n  set max(value) {\n    this._max = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n\n    this._validatorOnChange();\n  }\n  /**\n   * Whether the datepicker-input is disabled.\n   * @return {?}\n   */\n\n\n  get disabled() {\n    return !!this._disabled;\n  }\n  /**\n   * @param {?} value\n   * @return {?}\n   */\n\n\n  set disabled(value) {\n    /** @type {?} */\n    const newValue = coerceBooleanProperty(value);\n    /** @type {?} */\n\n    const element = this._elementRef.nativeElement;\n\n    if (this._disabled !== newValue) {\n      this._disabled = newValue;\n\n      this._disabledChange.emit(newValue);\n    } // We need to null check the `blur` method, because it's undefined during SSR.\n\n\n    if (newValue && element.blur) {\n      // Normally, native input elements automatically blur if they turn disabled. This behavior\n      // is problematic, because it would mean that it triggers another change detection cycle,\n      // which then causes a changed after checked error if the input element was focused before.\n      element.blur();\n    }\n  }\n  /**\n   * @return {?}\n   */\n\n\n  ngOnDestroy() {\n    this._datepickerSubscription.unsubscribe();\n\n    this._localeSubscription.unsubscribe();\n\n    this._valueChange.complete();\n\n    this._disabledChange.complete();\n  }\n  /**\n   * \\@docs-private\n   * @param {?} fn\n   * @return {?}\n   */\n\n\n  registerOnValidatorChange(fn) {\n    this._validatorOnChange = fn;\n  }\n  /**\n   * \\@docs-private\n   * @param {?} c\n   * @return {?}\n   */\n\n\n  validate(c) {\n    return this._validator ? this._validator(c) : null;\n  }\n  /**\n   * @deprecated\n   * \\@breaking-change 8.0.0 Use `getConnectedOverlayOrigin` instead\n   * @return {?}\n   */\n\n\n  getPopupConnectionElementRef() {\n    return this.getConnectedOverlayOrigin();\n  }\n  /**\n   * Gets the element that the datepicker popup should be connected to.\n   * @return {?} The element to connect the popup to.\n   */\n\n\n  getConnectedOverlayOrigin() {\n    return this._formField ? this._formField.getConnectedOverlayOrigin() : this._elementRef;\n  } // Implemented as part of ControlValueAccessor.\n\n  /**\n   * @param {?} value\n   * @return {?}\n   */\n\n\n  writeValue(value) {\n    this.value = value;\n  } // Implemented as part of ControlValueAccessor.\n\n  /**\n   * @param {?} fn\n   * @return {?}\n   */\n\n\n  registerOnChange(fn) {\n    this._cvaOnChange = fn;\n  } // Implemented as part of ControlValueAccessor.\n\n  /**\n   * @param {?} fn\n   * @return {?}\n   */\n\n\n  registerOnTouched(fn) {\n    this._onTouched = fn;\n  } // Implemented as part of ControlValueAccessor.\n\n  /**\n   * @param {?} isDisabled\n   * @return {?}\n   */\n\n\n  setDisabledState(isDisabled) {\n    this.disabled = isDisabled;\n  }\n  /**\n   * @param {?} event\n   * @return {?}\n   */\n\n\n  _onKeydown(event) {\n    /** @type {?} */\n    const isAltDownArrow = event.altKey && event.keyCode === DOWN_ARROW;\n\n    if (this._datepicker && isAltDownArrow && !this._elementRef.nativeElement.readOnly) {\n      this._datepicker.open();\n\n      event.preventDefault();\n    }\n  }\n  /**\n   * @param {?} value\n   * @return {?}\n   */\n\n\n  _onInput(value) {\n    /** @type {?} */\n    let date = this._dateAdapter.parse(value, this._dateFormats.parse.dateInput);\n\n    this._lastValueValid = !date || this._dateAdapter.isValid(date);\n    date = this._getValidDateOrNull(date);\n\n    if (!this._dateAdapter.sameDate(date, this._value)) {\n      this._value = date;\n\n      this._cvaOnChange(date);\n\n      this._valueChange.emit(date);\n\n      this.dateInput.emit(new MatDatepickerInputEvent(this, this._elementRef.nativeElement));\n    } else {\n      this._validatorOnChange();\n    }\n  }\n  /**\n   * @return {?}\n   */\n\n\n  _onChange() {\n    this.dateChange.emit(new MatDatepickerInputEvent(this, this._elementRef.nativeElement));\n  }\n  /**\n   * Returns the palette used by the input's form field, if any.\n   * @return {?}\n   */\n\n\n  _getThemePalette() {\n    return this._formField ? this._formField.color : undefined;\n  }\n  /**\n   * Handles blur events on the input.\n   * @return {?}\n   */\n\n\n  _onBlur() {\n    // Reformat the input only if we have a valid value.\n    if (this.value) {\n      this._formatValue(this.value);\n    }\n\n    this._onTouched();\n  }\n  /**\n   * Formats a value and sets it on the input element.\n   * @private\n   * @param {?} value\n   * @return {?}\n   */\n\n\n  _formatValue(value) {\n    this._elementRef.nativeElement.value = value ? this._dateAdapter.format(value, this._dateFormats.display.dateInput) : '';\n  }\n  /**\n   * @private\n   * @param {?} obj The object to check.\n   * @return {?} The given object if it is both a date instance and valid, otherwise null.\n   */\n\n\n  _getValidDateOrNull(obj) {\n    return this._dateAdapter.isDateInstance(obj) && this._dateAdapter.isValid(obj) ? obj : null;\n  }\n\n}\n\nMatDatepickerInput.ɵfac = function MatDatepickerInput_Factory(t) {\n  return new (t || MatDatepickerInput)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.DateAdapter, 8), ɵngcc0.ɵɵdirectiveInject(MAT_DATE_FORMATS, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc9.MatFormField, 8));\n};\n\nMatDatepickerInput.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n  type: MatDatepickerInput,\n  selectors: [[\"input\", \"matDatepicker\", \"\"]],\n  hostVars: 5,\n  hostBindings: function MatDatepickerInput_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵlistener(\"input\", function MatDatepickerInput_input_HostBindingHandler($event) {\n        return ctx._onInput($event.target.value);\n      })(\"change\", function MatDatepickerInput_change_HostBindingHandler() {\n        return ctx._onChange();\n      })(\"blur\", function MatDatepickerInput_blur_HostBindingHandler() {\n        return ctx._onBlur();\n      })(\"keydown\", function MatDatepickerInput_keydown_HostBindingHandler($event) {\n        return ctx._onKeydown($event);\n      });\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵhostProperty(\"disabled\", ctx.disabled);\n      ɵngcc0.ɵɵattribute(\"aria-haspopup\", true)(\"aria-owns\", (ctx._datepicker == null ? null : ctx._datepicker.opened) && ctx._datepicker.id || null)(\"min\", ctx.min ? ctx._dateAdapter.toIso8601(ctx.min) : null)(\"max\", ctx.max ? ctx._dateAdapter.toIso8601(ctx.max) : null);\n    }\n  },\n  inputs: {\n    value: \"value\",\n    matDatepicker: \"matDatepicker\",\n    matDatepickerFilter: \"matDatepickerFilter\",\n    min: \"min\",\n    max: \"max\",\n    disabled: \"disabled\"\n  },\n  outputs: {\n    dateChange: \"dateChange\",\n    dateInput: \"dateInput\"\n  },\n  exportAs: [\"matDatepickerInput\"],\n  features: [ɵngcc0.ɵɵProvidersFeature([MAT_DATEPICKER_VALUE_ACCESSOR, MAT_DATEPICKER_VALIDATORS, {\n    provide: MAT_INPUT_VALUE_ACCESSOR,\n    useExisting: MatDatepickerInput\n  }])]\n});\n/** @nocollapse */\n\nMatDatepickerInput.ctorParameters = () => [{\n  type: ElementRef\n}, {\n  type: DateAdapter,\n  decorators: [{\n    type: Optional\n  }]\n}, {\n  type: undefined,\n  decorators: [{\n    type: Optional\n  }, {\n    type: Inject,\n    args: [MAT_DATE_FORMATS]\n  }]\n}, {\n  type: MatFormField,\n  decorators: [{\n    type: Optional\n  }]\n}];\n\nMatDatepickerInput.propDecorators = {\n  matDatepicker: [{\n    type: Input\n  }],\n  matDatepickerFilter: [{\n    type: Input\n  }],\n  value: [{\n    type: Input\n  }],\n  min: [{\n    type: Input\n  }],\n  max: [{\n    type: Input\n  }],\n  disabled: [{\n    type: Input\n  }],\n  dateChange: [{\n    type: Output\n  }],\n  dateInput: [{\n    type: Output\n  }]\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatDatepickerInput, [{\n    type: Directive,\n    args: [{\n      selector: 'input[matDatepicker]',\n      providers: [MAT_DATEPICKER_VALUE_ACCESSOR, MAT_DATEPICKER_VALIDATORS, {\n        provide: MAT_INPUT_VALUE_ACCESSOR,\n        useExisting: MatDatepickerInput\n      }],\n      host: {\n        '[attr.aria-haspopup]': 'true',\n        '[attr.aria-owns]': '(_datepicker?.opened && _datepicker.id) || null',\n        '[attr.min]': 'min ? _dateAdapter.toIso8601(min) : null',\n        '[attr.max]': 'max ? _dateAdapter.toIso8601(max) : null',\n        '[disabled]': 'disabled',\n        '(input)': '_onInput($event.target.value)',\n        '(change)': '_onChange()',\n        '(blur)': '_onBlur()',\n        '(keydown)': '_onKeydown($event)'\n      },\n      exportAs: 'matDatepickerInput'\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.ElementRef\n    }, {\n      type: ɵngcc2.DateAdapter,\n      decorators: [{\n        type: Optional\n      }]\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [MAT_DATE_FORMATS]\n      }]\n    }, {\n      type: ɵngcc9.MatFormField,\n      decorators: [{\n        type: Optional\n      }]\n    }];\n  }, {\n    dateChange: [{\n      type: Output\n    }],\n    dateInput: [{\n      type: Output\n    }],\n    value: [{\n      type: Input\n    }],\n    matDatepicker: [{\n      type: Input\n    }],\n    matDatepickerFilter: [{\n      type: Input\n    }],\n    min: [{\n      type: Input\n    }],\n    max: [{\n      type: Input\n    }],\n    disabled: [{\n      type: Input\n    }]\n  });\n})();\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Can be used to override the icon of a `matDatepickerToggle`.\n */\n\n\nclass MatDatepickerToggleIcon {}\n\nMatDatepickerToggleIcon.ɵfac = function MatDatepickerToggleIcon_Factory(t) {\n  return new (t || MatDatepickerToggleIcon)();\n};\n\nMatDatepickerToggleIcon.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n  type: MatDatepickerToggleIcon,\n  selectors: [[\"\", \"matDatepickerToggleIcon\", \"\"]]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatDatepickerToggleIcon, [{\n    type: Directive,\n    args: [{\n      selector: '[matDatepickerToggleIcon]'\n    }]\n  }], null, null);\n})();\n/**\n * @template D\n */\n\n\nclass MatDatepickerToggle {\n  /**\n   * @param {?} _intl\n   * @param {?} _changeDetectorRef\n   * @param {?} defaultTabIndex\n   */\n  constructor(_intl, _changeDetectorRef, defaultTabIndex) {\n    this._intl = _intl;\n    this._changeDetectorRef = _changeDetectorRef;\n    this._stateChanges = Subscription.EMPTY;\n    /** @type {?} */\n\n    const parsedTabIndex = Number(defaultTabIndex);\n    this.tabIndex = parsedTabIndex || parsedTabIndex === 0 ? parsedTabIndex : null;\n  }\n  /**\n   * Whether the toggle button is disabled.\n   * @return {?}\n   */\n\n\n  get disabled() {\n    if (this._disabled === undefined && this.datepicker) {\n      return this.datepicker.disabled;\n    }\n\n    return !!this._disabled;\n  }\n  /**\n   * @param {?} value\n   * @return {?}\n   */\n\n\n  set disabled(value) {\n    this._disabled = coerceBooleanProperty(value);\n  }\n  /**\n   * @param {?} changes\n   * @return {?}\n   */\n\n\n  ngOnChanges(changes) {\n    if (changes['datepicker']) {\n      this._watchStateChanges();\n    }\n  }\n  /**\n   * @return {?}\n   */\n\n\n  ngOnDestroy() {\n    this._stateChanges.unsubscribe();\n  }\n  /**\n   * @return {?}\n   */\n\n\n  ngAfterContentInit() {\n    this._watchStateChanges();\n  }\n  /**\n   * @param {?} event\n   * @return {?}\n   */\n\n\n  _open(event) {\n    if (this.datepicker && !this.disabled) {\n      this.datepicker.open();\n      event.stopPropagation();\n    }\n  }\n  /**\n   * @private\n   * @return {?}\n   */\n\n\n  _watchStateChanges() {\n    /** @type {?} */\n    const datepickerDisabled = this.datepicker ? this.datepicker._disabledChange : of();\n    /** @type {?} */\n\n    const inputDisabled = this.datepicker && this.datepicker._datepickerInput ? this.datepicker._datepickerInput._disabledChange : of();\n    /** @type {?} */\n\n    const datepickerToggled = this.datepicker ? merge(this.datepicker.openedStream, this.datepicker.closedStream) : of();\n\n    this._stateChanges.unsubscribe();\n\n    this._stateChanges = merge(this._intl.changes, datepickerDisabled, inputDisabled, datepickerToggled).subscribe(() => this._changeDetectorRef.markForCheck());\n  }\n\n}\n\nMatDatepickerToggle.ɵfac = function MatDatepickerToggle_Factory(t) {\n  return new (t || MatDatepickerToggle)(ɵngcc0.ɵɵdirectiveInject(MatDatepickerIntl), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵinjectAttribute('tabindex'));\n};\n\nMatDatepickerToggle.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n  type: MatDatepickerToggle,\n  selectors: [[\"mat-datepicker-toggle\"]],\n  contentQueries: function MatDatepickerToggle_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵcontentQuery(dirIndex, MatDatepickerToggleIcon, 5);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._customIcon = _t.first);\n    }\n  },\n  viewQuery: function MatDatepickerToggle_Query(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵviewQuery(_c2, 5);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._button = _t.first);\n    }\n  },\n  hostAttrs: [1, \"mat-datepicker-toggle\"],\n  hostVars: 7,\n  hostBindings: function MatDatepickerToggle_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵlistener(\"focus\", function MatDatepickerToggle_focus_HostBindingHandler() {\n        return ctx._button.focus();\n      });\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵattribute(\"tabindex\", -1);\n      ɵngcc0.ɵɵclassProp(\"mat-datepicker-toggle-active\", ctx.datepicker && ctx.datepicker.opened)(\"mat-accent\", ctx.datepicker && ctx.datepicker.color === \"accent\")(\"mat-warn\", ctx.datepicker && ctx.datepicker.color === \"warn\");\n    }\n  },\n  inputs: {\n    tabIndex: \"tabIndex\",\n    disabled: \"disabled\",\n    datepicker: [\"for\", \"datepicker\"],\n    disableRipple: \"disableRipple\"\n  },\n  exportAs: [\"matDatepickerToggle\"],\n  features: [ɵngcc0.ɵɵNgOnChangesFeature],\n  ngContentSelectors: _c4,\n  decls: 4,\n  vars: 5,\n  consts: [[\"mat-icon-button\", \"\", \"type\", \"button\", \"aria-haspopup\", \"true\", 3, \"disabled\", \"disableRipple\", \"click\"], [\"button\", \"\"], [\"class\", \"mat-datepicker-toggle-default-icon\", \"viewBox\", \"0 0 24 24\", \"width\", \"24px\", \"height\", \"24px\", \"fill\", \"currentColor\", \"focusable\", \"false\", 4, \"ngIf\"], [\"viewBox\", \"0 0 24 24\", \"width\", \"24px\", \"height\", \"24px\", \"fill\", \"currentColor\", \"focusable\", \"false\", 1, \"mat-datepicker-toggle-default-icon\"], [\"d\", \"M19 3h-1V1h-2v2H8V1H6v2H5c-1.11 0-1.99.9-1.99 2L3 19c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm0 16H5V8h14v11zM7 10h5v5H7z\"]],\n  template: function MatDatepickerToggle_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵprojectionDef(_c3);\n      ɵngcc0.ɵɵelementStart(0, \"button\", 0, 1);\n      ɵngcc0.ɵɵlistener(\"click\", function MatDatepickerToggle_Template_button_click_0_listener($event) {\n        return ctx._open($event);\n      });\n      ɵngcc0.ɵɵtemplate(2, MatDatepickerToggle__svg_svg_2_Template, 2, 0, \"svg\", 2);\n      ɵngcc0.ɵɵprojection(3);\n      ɵngcc0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵproperty(\"disabled\", ctx.disabled)(\"disableRipple\", ctx.disableRipple);\n      ɵngcc0.ɵɵattribute(\"aria-label\", ctx._intl.openCalendarLabel)(\"tabindex\", ctx.disabled ? -1 : ctx.tabIndex);\n      ɵngcc0.ɵɵadvance(2);\n      ɵngcc0.ɵɵproperty(\"ngIf\", !ctx._customIcon);\n    }\n  },\n  dependencies: [ɵngcc1.NgIf, ɵngcc4.MatButton],\n  styles: [\".mat-form-field-appearance-legacy .mat-form-field-prefix .mat-datepicker-toggle-default-icon,.mat-form-field-appearance-legacy .mat-form-field-suffix .mat-datepicker-toggle-default-icon{width:1em}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-datepicker-toggle-default-icon,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-datepicker-toggle-default-icon{display:block;width:1.5em;height:1.5em}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-icon-button .mat-datepicker-toggle-default-icon,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-icon-button .mat-datepicker-toggle-default-icon{margin:auto}\"],\n  encapsulation: 2,\n  changeDetection: 0\n});\n/** @nocollapse */\n\nMatDatepickerToggle.ctorParameters = () => [{\n  type: MatDatepickerIntl\n}, {\n  type: ChangeDetectorRef\n}, {\n  type: String,\n  decorators: [{\n    type: Attribute,\n    args: ['tabindex']\n  }]\n}];\n\nMatDatepickerToggle.propDecorators = {\n  datepicker: [{\n    type: Input,\n    args: ['for']\n  }],\n  tabIndex: [{\n    type: Input\n  }],\n  disabled: [{\n    type: Input\n  }],\n  disableRipple: [{\n    type: Input\n  }],\n  _customIcon: [{\n    type: ContentChild,\n    args: [MatDatepickerToggleIcon]\n  }],\n  _button: [{\n    type: ViewChild,\n    args: ['button']\n  }]\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatDatepickerToggle, [{\n    type: Component,\n    args: [{\n      selector: 'mat-datepicker-toggle',\n      template: \"<button #button mat-icon-button type=\\\"button\\\" aria-haspopup=\\\"true\\\" [attr.aria-label]=\\\"_intl.openCalendarLabel\\\" [attr.tabindex]=\\\"disabled ? -1 : tabIndex\\\" [disabled]=\\\"disabled\\\" [disableRipple]=\\\"disableRipple\\\" (click)=\\\"_open($event)\\\"><svg *ngIf=\\\"!_customIcon\\\" class=\\\"mat-datepicker-toggle-default-icon\\\" viewBox=\\\"0 0 24 24\\\" width=\\\"24px\\\" height=\\\"24px\\\" fill=\\\"currentColor\\\" focusable=\\\"false\\\"><path d=\\\"M19 3h-1V1h-2v2H8V1H6v2H5c-1.11 0-1.99.9-1.99 2L3 19c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm0 16H5V8h14v11zM7 10h5v5H7z\\\"/></svg><ng-content select=\\\"[matDatepickerToggleIcon]\\\"></ng-content></button>\",\n      host: {\n        'class': 'mat-datepicker-toggle',\n        // Always set the tabindex to -1 so that it doesn't overlap with any custom tabindex the\n        // consumer may have provided, while still being able to receive focus.\n        '[attr.tabindex]': '-1',\n        '[class.mat-datepicker-toggle-active]': 'datepicker && datepicker.opened',\n        '[class.mat-accent]': 'datepicker && datepicker.color === \"accent\"',\n        '[class.mat-warn]': 'datepicker && datepicker.color === \"warn\"',\n        '(focus)': '_button.focus()'\n      },\n      exportAs: 'matDatepickerToggle',\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      styles: [\".mat-form-field-appearance-legacy .mat-form-field-prefix .mat-datepicker-toggle-default-icon,.mat-form-field-appearance-legacy .mat-form-field-suffix .mat-datepicker-toggle-default-icon{width:1em}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-datepicker-toggle-default-icon,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-datepicker-toggle-default-icon{display:block;width:1.5em;height:1.5em}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-icon-button .mat-datepicker-toggle-default-icon,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-icon-button .mat-datepicker-toggle-default-icon{margin:auto}\"]\n    }]\n  }], function () {\n    return [{\n      type: MatDatepickerIntl\n    }, {\n      type: ɵngcc0.ChangeDetectorRef\n    }, {\n      type: String,\n      decorators: [{\n        type: Attribute,\n        args: ['tabindex']\n      }]\n    }];\n  }, {\n    tabIndex: [{\n      type: Input\n    }],\n    disabled: [{\n      type: Input\n    }],\n    datepicker: [{\n      type: Input,\n      args: ['for']\n    }],\n    disableRipple: [{\n      type: Input\n    }],\n    _customIcon: [{\n      type: ContentChild,\n      args: [MatDatepickerToggleIcon]\n    }],\n    _button: [{\n      type: ViewChild,\n      args: ['button']\n    }]\n  });\n})();\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n\nclass MatDatepickerModule {}\n\nMatDatepickerModule.ɵfac = function MatDatepickerModule_Factory(t) {\n  return new (t || MatDatepickerModule)();\n};\n\nMatDatepickerModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n  type: MatDatepickerModule\n});\nMatDatepickerModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n  providers: [MatDatepickerIntl, MAT_DATEPICKER_SCROLL_STRATEGY_FACTORY_PROVIDER],\n  imports: [CommonModule, MatButtonModule, MatDialogModule, OverlayModule, A11yModule, PortalModule]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatDatepickerModule, [{\n    type: NgModule,\n    args: [{\n      imports: [CommonModule, MatButtonModule, MatDialogModule, OverlayModule, A11yModule, PortalModule],\n      exports: [MatCalendar, MatCalendarBody, MatDatepicker, MatDatepickerContent, MatDatepickerInput, MatDatepickerToggle, MatDatepickerToggleIcon, MatMonthView, MatYearView, MatMultiYearView, MatCalendarHeader],\n      declarations: [MatCalendar, MatCalendarBody, MatDatepicker, MatDatepickerContent, MatDatepickerInput, MatDatepickerToggle, MatDatepickerToggleIcon, MatMonthView, MatYearView, MatMultiYearView, MatCalendarHeader],\n      providers: [MatDatepickerIntl, MAT_DATEPICKER_SCROLL_STRATEGY_FACTORY_PROVIDER],\n      entryComponents: [MatDatepickerContent, MatCalendarHeader]\n    }]\n  }], null, null);\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatDatepickerModule, {\n    declarations: function () {\n      return [MatCalendar, MatCalendarBody, MatDatepicker, MatDatepickerContent, MatDatepickerInput, MatDatepickerToggle, MatDatepickerToggleIcon, MatMonthView, MatYearView, MatMultiYearView, MatCalendarHeader];\n    },\n    imports: function () {\n      return [CommonModule, MatButtonModule, MatDialogModule, OverlayModule, A11yModule, PortalModule];\n    },\n    exports: function () {\n      return [MatCalendar, MatCalendarBody, MatDatepicker, MatDatepickerContent, MatDatepickerInput, MatDatepickerToggle, MatDatepickerToggleIcon, MatMonthView, MatYearView, MatMultiYearView, MatCalendarHeader];\n    }\n  });\n})();\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n\nexport { MatDatepickerModule, MatCalendarHeader, MatCalendar, MatCalendarCell, MatCalendarBody, MAT_DATEPICKER_SCROLL_STRATEGY_FACTORY, MAT_DATEPICKER_SCROLL_STRATEGY, MAT_DATEPICKER_SCROLL_STRATEGY_FACTORY_PROVIDER, MatDatepickerContentBase, _MatDatepickerContentMixinBase, MatDatepickerContent, MatDatepicker, matDatepickerAnimations, MAT_DATEPICKER_VALUE_ACCESSOR, MAT_DATEPICKER_VALIDATORS, MatDatepickerInputEvent, MatDatepickerInput, MatDatepickerIntl, MatDatepickerToggleIcon, MatDatepickerToggle, MatMonthView, MatYearView, MatMultiYearView as ɵa34 };","map":{"version":3,"names":["Injectable","NgModule","ChangeDetectionStrategy","ChangeDetectorRef","Component","EventEmitter","forwardRef","Inject","Input","Optional","Output","ViewChild","ViewEncapsulation","ElementRef","NgZone","InjectionToken","ViewContainerRef","Directive","Attribute","ContentChild","defineInjectable","Subject","merge","Subscription","of","take","filter","DOWN_ARROW","END","ENTER","HOME","LEFT_ARROW","PAGE_DOWN","PAGE_UP","RIGHT_ARROW","UP_ARROW","SPACE","ESCAPE","DateAdapter","MAT_DATE_FORMATS","mixinColor","Directionality","ComponentPortal","PortalModule","animate","state","style","transition","trigger","coerceBooleanProperty","Overlay","OverlayConfig","OverlayModule","DOCUMENT","CommonModule","MatDialog","MatDialogModule","NG_VALIDATORS","NG_VALUE_ACCESSOR","Validators","MatFormField","MAT_INPUT_VALUE_ACCESSOR","MatButtonModule","A11yModule","ɵngcc0","ɵngcc1","ɵngcc2","ɵngcc3","ɵngcc4","ɵngcc5","ɵngcc6","ɵngcc7","ɵngcc8","ɵngcc9","_c0","MatCalendarBody_tr_0_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ctx_r0","ɵɵnextContext","ɵɵadvance","ɵɵstyleProp","_cellPadding","ɵɵattribute","numCols","ɵɵtextInterpolate","label","MatCalendarBody_tr_1_td_1_Template","ctx_r4","_firstRowOffset","labelMinRequiredCells","MatCalendarBody_tr_1_td_2_Template","_r9","ɵɵgetCurrentView","ɵɵlistener","MatCalendarBody_tr_1_td_2_Template_td_click_0_listener","restoredCtx","ɵɵrestoreView","item_r6","$implicit","ctx_r8","ɵɵresetView","_cellClicked","colIndex_r7","index","rowIndex_r3","ctx_r5","_cellWidth","ɵɵclassProp","enabled","_isActiveCell","ɵɵproperty","cssClasses","ariaLabel","selectedValue","value","todayValue","displayValue","MatCalendarBody_tr_1_Template","ɵɵtemplate","row_r2","ctx_r1","MatMonthView_th_3_Template","day_r1","long","narrow","_c1","MatCalendar_ng_template_0_Template","MatCalendar_mat_month_view_2_Template","_r5","MatCalendar_mat_month_view_2_Template_mat_month_view_activeDateChange_0_listener","$event","activeDate","MatCalendar_mat_month_view_2_Template_mat_month_view_selectedChange_0_listener","ctx_r6","_dateSelected","MatCalendar_mat_month_view_2_Template_mat_month_view__userSelection_0_listener","ctx_r7","_userSelected","selected","dateFilter","maxDate","minDate","dateClass","MatCalendar_mat_year_view_3_Template","MatCalendar_mat_year_view_3_Template_mat_year_view_activeDateChange_0_listener","MatCalendar_mat_year_view_3_Template_mat_year_view_monthSelected_0_listener","ctx_r10","_monthSelectedInYearView","MatCalendar_mat_year_view_3_Template_mat_year_view_selectedChange_0_listener","ctx_r11","_goToDateInView","ctx_r2","MatCalendar_mat_multi_year_view_4_Template","_r13","MatCalendar_mat_multi_year_view_4_Template_mat_multi_year_view_activeDateChange_0_listener","ctx_r12","MatCalendar_mat_multi_year_view_4_Template_mat_multi_year_view_yearSelected_0_listener","ctx_r14","_yearSelectedInMultiYearView","MatCalendar_mat_multi_year_view_4_Template_mat_multi_year_view_selectedChange_0_listener","ctx_r15","ctx_r3","_c2","MatDatepickerToggle__svg_svg_2_Template","ɵɵnamespaceSVG","ɵɵelement","_c3","_c4","createMissingDateImplError","provider","Error","MatDatepickerIntl","constructor","changes","calendarLabel","openCalendarLabel","prevMonthLabel","nextMonthLabel","prevYearLabel","nextYearLabel","prevMultiYearLabel","nextMultiYearLabel","switchToMonthViewLabel","switchToMultiYearViewLabel","ɵfac","MatDatepickerIntl_Factory","t","ɵprov","ɵɵdefineInjectable","token","factory","providedIn","ngInjectableDef","ngDevMode","ɵsetClassMetadata","type","args","MatCalendarCell","MatCalendarBody","_elementRef","_ngZone","activeCell","cellAspectRatio","selectedValueChange","cell","emit","ngOnChanges","columnChanges","rows","length","rowIndex","colIndex","cellNumber","_focusActiveCell","runOutsideAngular","onStable","asObservable","pipe","subscribe","nativeElement","querySelector","focus","MatCalendarBody_Factory","ɵɵdirectiveInject","ɵcmp","ɵɵdefineComponent","selectors","hostAttrs","inputs","outputs","exportAs","features","ɵɵNgOnChangesFeature","attrs","decls","vars","consts","template","MatCalendarBody_Template","dependencies","NgClass","NgForOf","NgIf","styles","encapsulation","changeDetection","ctorParameters","propDecorators","selector","host","None","OnPush","DAYS_PER_WEEK","MatMonthView","_changeDetectorRef","_dateFormats","_dateAdapter","_dir","selectedChange","_userSelection","activeDateChange","firstDayOfWeek","getFirstDayOfWeek","narrowWeekdays","getDayOfWeekNames","longWeekdays","weekdays","map","i","_weekdays","slice","concat","_activeDate","today","oldActiveDate","validDate","_getValidDateOrNull","deserialize","clampDate","_hasSameMonthAndYear","_init","_selected","_selectedDate","_getDateInCurrentMonth","_minDate","_maxDate","ngAfterContentInit","date","selectedYear","getYear","selectedMonth","getMonth","selectedDate","createDate","_handleCalendarBodyKeydown","event","isRtl","_isRtl","keyCode","addCalendarDays","getDate","getNumDaysInMonth","altKey","addCalendarYears","addCalendarMonths","preventDefault","compareDate","_todayDate","_monthLabel","getMonthNames","toLocaleUpperCase","firstOfMonth","_firstWeekOffset","getDayOfWeek","_createWeekCells","markForCheck","_matCalendarBody","daysInMonth","dateNames","getDateNames","_weeks","push","_shouldEnableDate","format","display","dateA11yLabel","cellClasses","undefined","d1","d2","obj","isDateInstance","isValid","MatMonthView_Factory","viewQuery","MatMonthView_Query","ɵɵviewQuery","_t","ɵɵqueryRefresh","ɵɵloadQuery","first","MatMonthView_Template","MatMonthView_Template_tbody_selectedValueChange_6_listener","MatMonthView_Template_tbody_keydown_6_listener","decorators","yearsPerPage","yearsPerRow","MatMultiYearView","yearSelected","Math","floor","_selectedYear","_todayYear","activeYear","activeOffset","_years","row","year","_createCellForYear","_yearSelected","month","min","_getActiveCell","yearName","getYearName","_shouldEnableYear","firstOfYear","MatMultiYearView_Factory","MatMultiYearView_Query","MatMultiYearView_Template","MatMultiYearView_Template_tbody_selectedValueChange_4_listener","MatMultiYearView_Template_tbody_keydown_4_listener","MatYearView","monthSelected","_selectedMonth","_getMonthInCurrentYear","_monthSelected","normalizedDate","_todayMonth","_yearLabel","monthNames","_months","_createCellForMonth","monthName","monthYearA11yLabel","_shouldEnableMonth","_isYearAndMonthAfterMaxDate","_isYearAndMonthBeforeMinDate","maxYear","maxMonth","minYear","minMonth","MatYearView_Factory","MatYearView_Query","MatYearView_Template","MatYearView_Template_tbody_selectedValueChange_4_listener","MatYearView_Template_tbody_keydown_4_listener","MatCalendarHeader","_intl","calendar","changeDetectorRef","stateChanges","periodButtonText","currentView","monthYearLabel","firstYearInView","lastYearInView","periodButtonLabel","prevButtonLabel","nextButtonLabel","currentPeriodClicked","previousClicked","nextClicked","previousEnabled","_isSameView","nextEnabled","date1","date2","MatCalendarHeader_Factory","MatCalendar","ngContentSelectors","MatCalendarHeader_Template","ɵɵprojectionDef","MatCalendarHeader_Template_button_click_2_listener","ɵɵprojection","MatCalendarHeader_Template_button_click_7_listener","MatCalendarHeader_Template_button_click_8_listener","MatButton","CdkAriaLive","_moveFocusOnNextTick","startView","_intlChanges","next","startAt","_startAt","_clampedActiveDate","_currentView","_calendarHeaderPortal","headerComponent","ngAfterViewChecked","focusActiveCell","ngOnDestroy","unsubscribe","complete","change","firstChange","view","_getCurrentViewComponent","detectChanges","updateTodaysDate","monthView","yearView","multiYearView","sameDate","normalizedYear","normalizedMonth","MatCalendar_Factory","MatCalendar_Query","MatCalendar_Template","NgSwitch","NgSwitchCase","CdkMonitorFocus","CdkPortalOutlet","matDatepickerAnimations","transformPanel","opacity","transform","fadeInCalendar","datepickerUid","MAT_DATEPICKER_SCROLL_STRATEGY","MAT_DATEPICKER_SCROLL_STRATEGY_FACTORY","overlay","scrollStrategies","reposition","MAT_DATEPICKER_SCROLL_STRATEGY_FACTORY_PROVIDER","provide","deps","useFactory","MatDatepickerContentBase","_MatDatepickerContentMixinBase","MatDatepickerContent","elementRef","ngAfterViewInit","_calendar","MatDatepickerContent_Factory","MatDatepickerContent_Query","hostVars","hostBindings","MatDatepickerContent_HostBindings","ɵɵsyntheticHostProperty","datepicker","touchUi","color","ɵɵInheritDefinitionFeature","MatDatepickerContent_Template","MatDatepickerContent_Template_mat_calendar_selectedChange_0_listener","select","MatDatepickerContent_Template_mat_calendar_yearSelected_0_listener","_selectYear","MatDatepickerContent_Template_mat_calendar_monthSelected_0_listener","_selectMonth","MatDatepickerContent_Template_mat_calendar__userSelection_0_listener","close","id","panelClass","_dateFilter","calendarHeaderComponent","CdkTrapFocus","data","animation","animations","MatDatepicker","_dialog","_overlay","_viewContainerRef","scrollStrategy","_document","_touchUi","openedStream","closedStream","_opened","_validSelected","_focusedElementBeforeOpen","_inputSubscription","EMPTY","_disabledChange","_selectedChanged","_scrollStrategy","_datepickerInput","_color","_getThemePalette","disabled","_disabled","newValue","opened","open","max","_popupRef","dispose","_popupComponentRef","oldValue","_registerInput","input","_valueChange","activeElement","_openAsDialog","_openAsPopup","hasAttached","detach","_dialogRef","_calendarPortal","isAttached","completeClose","setTimeout","direction","viewContainerRef","afterClosed","componentInstance","_setColor","_createPopup","attach","instance","updatePosition","overlayConfig","positionStrategy","_createPopupPositionStrategy","hasBackdrop","backdropClass","create","overlayElement","setAttribute","backdropClick","detachments","keydownEvents","position","flexibleConnectedTo","getConnectedOverlayOrigin","withTransformOriginOn","withFlexibleDimensions","withViewportMargin","withLockedPosition","withPositions","originX","originY","overlayX","overlayY","MatDatepicker_Factory","MatDatepicker_Template","MAT_DATEPICKER_VALUE_ACCESSOR","useExisting","MatDatepickerInput","multi","MAT_DATEPICKER_VALIDATORS","MatDatepickerInputEvent","target","targetElement","_formField","dateChange","dateInput","_onTouched","_cvaOnChange","_validatorOnChange","_datepickerSubscription","_localeSubscription","_parseValidator","_lastValueValid","_minValidator","control","controlValue","_maxValidator","_filterValidator","_validator","compose","localeChanges","matDatepicker","_datepicker","matDatepickerFilter","_value","oldDate","_formatValue","_min","_max","element","blur","registerOnValidatorChange","fn","validate","c","getPopupConnectionElementRef","writeValue","registerOnChange","registerOnTouched","setDisabledState","isDisabled","_onKeydown","isAltDownArrow","readOnly","_onInput","parse","_onChange","_onBlur","MatDatepickerInput_Factory","ɵdir","ɵɵdefineDirective","MatDatepickerInput_HostBindings","MatDatepickerInput_input_HostBindingHandler","MatDatepickerInput_change_HostBindingHandler","MatDatepickerInput_blur_HostBindingHandler","MatDatepickerInput_keydown_HostBindingHandler","ɵɵhostProperty","toIso8601","ɵɵProvidersFeature","providers","MatDatepickerToggleIcon","MatDatepickerToggleIcon_Factory","MatDatepickerToggle","defaultTabIndex","_stateChanges","parsedTabIndex","Number","tabIndex","_watchStateChanges","_open","stopPropagation","datepickerDisabled","inputDisabled","datepickerToggled","MatDatepickerToggle_Factory","ɵɵinjectAttribute","contentQueries","MatDatepickerToggle_ContentQueries","dirIndex","ɵɵcontentQuery","_customIcon","MatDatepickerToggle_Query","_button","MatDatepickerToggle_HostBindings","MatDatepickerToggle_focus_HostBindingHandler","disableRipple","MatDatepickerToggle_Template","MatDatepickerToggle_Template_button_click_0_listener","String","MatDatepickerModule","MatDatepickerModule_Factory","ɵmod","ɵɵdefineNgModule","ɵinj","ɵɵdefineInjector","imports","exports","declarations","entryComponents","ngJitMode","ɵɵsetNgModuleScope","ɵa34"],"sources":["/Users/apple/Desktop/zepto/my_project/node_modules/@angular/material/__ivy_ngcc__/esm2015/datepicker.js"],"sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { Injectable, NgModule, ChangeDetectionStrategy, ChangeDetectorRef, Component, EventEmitter, forwardRef, Inject, Input, Optional, Output, ViewChild, ViewEncapsulation, ElementRef, NgZone, InjectionToken, ViewContainerRef, Directive, Attribute, ContentChild, defineInjectable } from '@angular/core';\nimport { Subject, merge, Subscription, of } from 'rxjs';\nimport { take, filter } from 'rxjs/operators';\nimport { DOWN_ARROW, END, ENTER, HOME, LEFT_ARROW, PAGE_DOWN, PAGE_UP, RIGHT_ARROW, UP_ARROW, SPACE, ESCAPE } from '@angular/cdk/keycodes';\nimport { DateAdapter, MAT_DATE_FORMATS, mixinColor } from '@angular/material/core';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { ComponentPortal, PortalModule } from '@angular/cdk/portal';\nimport { animate, state, style, transition, trigger } from '@angular/animations';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { Overlay, OverlayConfig, OverlayModule } from '@angular/cdk/overlay';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport { MatDialog, MatDialogModule } from '@angular/material/dialog';\nimport { NG_VALIDATORS, NG_VALUE_ACCESSOR, Validators } from '@angular/forms';\nimport { MatFormField } from '@angular/material/form-field';\nimport { MAT_INPUT_VALUE_ACCESSOR } from '@angular/material/input';\nimport { MatButtonModule } from '@angular/material/button';\nimport { A11yModule } from '@angular/cdk/a11y';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * \\@docs-private\n * @param {?} provider\n * @return {?}\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/common';\nimport * as ɵngcc2 from '@angular/material/core';\nimport * as ɵngcc3 from '@angular/cdk/bidi';\nimport * as ɵngcc4 from '@angular/material/button';\nimport * as ɵngcc5 from '@angular/cdk/a11y';\nimport * as ɵngcc6 from '@angular/cdk/portal';\nimport * as ɵngcc7 from '@angular/material/dialog';\nimport * as ɵngcc8 from '@angular/cdk/overlay';\nimport * as ɵngcc9 from '@angular/material/form-field';\n\nconst _c0 = [\"mat-calendar-body\", \"\"];\nfunction MatCalendarBody_tr_0_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"tr\", 2)(1, \"td\", 3);\n    ɵngcc0.ɵɵtext(2);\n    ɵngcc0.ɵɵelementEnd()();\n} if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵstyleProp(\"padding-top\", ctx_r0._cellPadding)(\"padding-bottom\", ctx_r0._cellPadding);\n    ɵngcc0.ɵɵattribute(\"colspan\", ctx_r0.numCols);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r0.label);\n} }\nfunction MatCalendarBody_tr_1_td_1_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"td\", 7);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r4 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵstyleProp(\"padding-top\", ctx_r4._cellPadding)(\"padding-bottom\", ctx_r4._cellPadding);\n    ɵngcc0.ɵɵattribute(\"colspan\", ctx_r4._firstRowOffset);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r4._firstRowOffset >= ctx_r4.labelMinRequiredCells ? ctx_r4.label : \"\");\n} }\nfunction MatCalendarBody_tr_1_td_2_Template(rf, ctx) { if (rf & 1) {\n    const _r9 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"td\", 8);\n    ɵngcc0.ɵɵlistener(\"click\", function MatCalendarBody_tr_1_td_2_Template_td_click_0_listener() { const restoredCtx = ɵngcc0.ɵɵrestoreView(_r9); const item_r6 = restoredCtx.$implicit; const ctx_r8 = ɵngcc0.ɵɵnextContext(2); return ɵngcc0.ɵɵresetView(ctx_r8._cellClicked(item_r6)); });\n    ɵngcc0.ɵɵelementStart(1, \"div\", 9);\n    ɵngcc0.ɵɵtext(2);\n    ɵngcc0.ɵɵelementEnd()();\n} if (rf & 2) {\n    const item_r6 = ctx.$implicit;\n    const colIndex_r7 = ctx.index;\n    const rowIndex_r3 = ɵngcc0.ɵɵnextContext().index;\n    const ctx_r5 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵstyleProp(\"width\", ctx_r5._cellWidth)(\"padding-top\", ctx_r5._cellPadding)(\"padding-bottom\", ctx_r5._cellPadding);\n    ɵngcc0.ɵɵclassProp(\"mat-calendar-body-disabled\", !item_r6.enabled)(\"mat-calendar-body-active\", ctx_r5._isActiveCell(rowIndex_r3, colIndex_r7));\n    ɵngcc0.ɵɵproperty(\"ngClass\", item_r6.cssClasses)(\"tabindex\", ctx_r5._isActiveCell(rowIndex_r3, colIndex_r7) ? 0 : -1);\n    ɵngcc0.ɵɵattribute(\"aria-label\", item_r6.ariaLabel)(\"aria-disabled\", !item_r6.enabled || null)(\"aria-selected\", ctx_r5.selectedValue === item_r6.value);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵclassProp(\"mat-calendar-body-selected\", ctx_r5.selectedValue === item_r6.value)(\"mat-calendar-body-today\", ctx_r5.todayValue === item_r6.value);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(item_r6.displayValue);\n} }\nfunction MatCalendarBody_tr_1_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"tr\", 4);\n    ɵngcc0.ɵɵtemplate(1, MatCalendarBody_tr_1_td_1_Template, 2, 6, \"td\", 5);\n    ɵngcc0.ɵɵtemplate(2, MatCalendarBody_tr_1_td_2_Template, 3, 20, \"td\", 6);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const row_r2 = ctx.$implicit;\n    const rowIndex_r3 = ctx.index;\n    const ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", rowIndex_r3 === 0 && ctx_r1._firstRowOffset);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngForOf\", row_r2);\n} }\nfunction MatMonthView_th_3_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"th\");\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const day_r1 = ctx.$implicit;\n    ɵngcc0.ɵɵattribute(\"aria-label\", day_r1.long);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(day_r1.narrow);\n} }\nconst _c1 = [\"*\"];\nfunction MatCalendar_ng_template_0_Template(rf, ctx) { }\nfunction MatCalendar_mat_month_view_2_Template(rf, ctx) { if (rf & 1) {\n    const _r5 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"mat-month-view\", 5);\n    ɵngcc0.ɵɵlistener(\"activeDateChange\", function MatCalendar_mat_month_view_2_Template_mat_month_view_activeDateChange_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r5); const ctx_r4 = ɵngcc0.ɵɵnextContext(); return ɵngcc0.ɵɵresetView(ctx_r4.activeDate = $event); })(\"selectedChange\", function MatCalendar_mat_month_view_2_Template_mat_month_view_selectedChange_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r5); const ctx_r6 = ɵngcc0.ɵɵnextContext(); return ɵngcc0.ɵɵresetView(ctx_r6._dateSelected($event)); })(\"_userSelection\", function MatCalendar_mat_month_view_2_Template_mat_month_view__userSelection_0_listener() { ɵngcc0.ɵɵrestoreView(_r5); const ctx_r7 = ɵngcc0.ɵɵnextContext(); return ɵngcc0.ɵɵresetView(ctx_r7._userSelected()); });\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"activeDate\", ctx_r1.activeDate)(\"selected\", ctx_r1.selected)(\"dateFilter\", ctx_r1.dateFilter)(\"maxDate\", ctx_r1.maxDate)(\"minDate\", ctx_r1.minDate)(\"dateClass\", ctx_r1.dateClass);\n} }\nfunction MatCalendar_mat_year_view_3_Template(rf, ctx) { if (rf & 1) {\n    const _r9 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"mat-year-view\", 6);\n    ɵngcc0.ɵɵlistener(\"activeDateChange\", function MatCalendar_mat_year_view_3_Template_mat_year_view_activeDateChange_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r9); const ctx_r8 = ɵngcc0.ɵɵnextContext(); return ɵngcc0.ɵɵresetView(ctx_r8.activeDate = $event); })(\"monthSelected\", function MatCalendar_mat_year_view_3_Template_mat_year_view_monthSelected_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r9); const ctx_r10 = ɵngcc0.ɵɵnextContext(); return ɵngcc0.ɵɵresetView(ctx_r10._monthSelectedInYearView($event)); })(\"selectedChange\", function MatCalendar_mat_year_view_3_Template_mat_year_view_selectedChange_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r9); const ctx_r11 = ɵngcc0.ɵɵnextContext(); return ɵngcc0.ɵɵresetView(ctx_r11._goToDateInView($event, \"month\")); });\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r2 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"activeDate\", ctx_r2.activeDate)(\"selected\", ctx_r2.selected)(\"dateFilter\", ctx_r2.dateFilter)(\"maxDate\", ctx_r2.maxDate)(\"minDate\", ctx_r2.minDate);\n} }\nfunction MatCalendar_mat_multi_year_view_4_Template(rf, ctx) { if (rf & 1) {\n    const _r13 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"mat-multi-year-view\", 7);\n    ɵngcc0.ɵɵlistener(\"activeDateChange\", function MatCalendar_mat_multi_year_view_4_Template_mat_multi_year_view_activeDateChange_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r13); const ctx_r12 = ɵngcc0.ɵɵnextContext(); return ɵngcc0.ɵɵresetView(ctx_r12.activeDate = $event); })(\"yearSelected\", function MatCalendar_mat_multi_year_view_4_Template_mat_multi_year_view_yearSelected_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r13); const ctx_r14 = ɵngcc0.ɵɵnextContext(); return ɵngcc0.ɵɵresetView(ctx_r14._yearSelectedInMultiYearView($event)); })(\"selectedChange\", function MatCalendar_mat_multi_year_view_4_Template_mat_multi_year_view_selectedChange_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r13); const ctx_r15 = ɵngcc0.ɵɵnextContext(); return ɵngcc0.ɵɵresetView(ctx_r15._goToDateInView($event, \"year\")); });\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r3 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"activeDate\", ctx_r3.activeDate)(\"selected\", ctx_r3.selected)(\"dateFilter\", ctx_r3.dateFilter)(\"maxDate\", ctx_r3.maxDate)(\"minDate\", ctx_r3.minDate);\n} }\nconst _c2 = [\"button\"];\nfunction MatDatepickerToggle__svg_svg_2_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵnamespaceSVG();\n    ɵngcc0.ɵɵelementStart(0, \"svg\", 3);\n    ɵngcc0.ɵɵelement(1, \"path\", 4);\n    ɵngcc0.ɵɵelementEnd();\n} }\nconst _c3 = [[[\"\", \"matDatepickerToggleIcon\", \"\"]]];\nconst _c4 = [\"[matDatepickerToggleIcon]\"];\nfunction createMissingDateImplError(provider) {\n    return Error(`MatDatepicker: No provider found for ${provider}. You must import one of the following ` +\n        `modules at your application root: MatNativeDateModule, MatMomentDateModule, or provide a ` +\n        `custom implementation.`);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Datepicker data that requires internationalization.\n */\nclass MatDatepickerIntl {\n    constructor() {\n        /**\n         * Stream that emits whenever the labels here are changed. Use this to notify\n         * components if the labels have changed after initialization.\n         */\n        this.changes = new Subject();\n        /**\n         * A label for the calendar popup (used by screen readers).\n         */\n        this.calendarLabel = 'Calendar';\n        /**\n         * A label for the button used to open the calendar popup (used by screen readers).\n         */\n        this.openCalendarLabel = 'Open calendar';\n        /**\n         * A label for the previous month button (used by screen readers).\n         */\n        this.prevMonthLabel = 'Previous month';\n        /**\n         * A label for the next month button (used by screen readers).\n         */\n        this.nextMonthLabel = 'Next month';\n        /**\n         * A label for the previous year button (used by screen readers).\n         */\n        this.prevYearLabel = 'Previous year';\n        /**\n         * A label for the next year button (used by screen readers).\n         */\n        this.nextYearLabel = 'Next year';\n        /**\n         * A label for the previous multi-year button (used by screen readers).\n         */\n        this.prevMultiYearLabel = 'Previous 20 years';\n        /**\n         * A label for the next multi-year button (used by screen readers).\n         */\n        this.nextMultiYearLabel = 'Next 20 years';\n        /**\n         * A label for the 'switch to month view' button (used by screen readers).\n         */\n        this.switchToMonthViewLabel = 'Choose date';\n        /**\n         * A label for the 'switch to year view' button (used by screen readers).\n         */\n        this.switchToMultiYearViewLabel = 'Choose month and year';\n    }\n}\nMatDatepickerIntl.ɵfac = function MatDatepickerIntl_Factory(t) { return new (t || MatDatepickerIntl)(); };\nMatDatepickerIntl.ɵprov = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjectable({ token: MatDatepickerIntl, factory: MatDatepickerIntl.ɵfac, providedIn: 'root' });\n/** @nocollapse */ MatDatepickerIntl.ngInjectableDef = defineInjectable({ factory: function MatDatepickerIntl_Factory() { return new MatDatepickerIntl(); }, token: MatDatepickerIntl, providedIn: \"root\" });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatDatepickerIntl, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return []; }, null); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * An internal class that represents the data corresponding to a single calendar cell.\n * \\@docs-private\n */\nclass MatCalendarCell {\n    /**\n     * @param {?} value\n     * @param {?} displayValue\n     * @param {?} ariaLabel\n     * @param {?} enabled\n     * @param {?=} cssClasses\n     */\n    constructor(value, displayValue, ariaLabel, enabled, cssClasses) {\n        this.value = value;\n        this.displayValue = displayValue;\n        this.ariaLabel = ariaLabel;\n        this.enabled = enabled;\n        this.cssClasses = cssClasses;\n    }\n}\n/**\n * An internal component used to display calendar data in a table.\n * \\@docs-private\n */\nclass MatCalendarBody {\n    /**\n     * @param {?} _elementRef\n     * @param {?} _ngZone\n     */\n    constructor(_elementRef, _ngZone) {\n        this._elementRef = _elementRef;\n        this._ngZone = _ngZone;\n        /**\n         * The number of columns in the table.\n         */\n        this.numCols = 7;\n        /**\n         * The cell number of the active cell in the table.\n         */\n        this.activeCell = 0;\n        /**\n         * The aspect ratio (width / height) to use for the cells in the table. This aspect ratio will be\n         * maintained even as the table resizes.\n         */\n        this.cellAspectRatio = 1;\n        /**\n         * Emits when a new value is selected.\n         */\n        this.selectedValueChange = new EventEmitter();\n    }\n    /**\n     * @param {?} cell\n     * @return {?}\n     */\n    _cellClicked(cell) {\n        if (cell.enabled) {\n            this.selectedValueChange.emit(cell.value);\n        }\n    }\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    ngOnChanges(changes) {\n        /** @type {?} */\n        const columnChanges = changes['numCols'];\n        const { rows, numCols } = this;\n        if (changes['rows'] || columnChanges) {\n            this._firstRowOffset = rows && rows.length && rows[0].length ? numCols - rows[0].length : 0;\n        }\n        if (changes['cellAspectRatio'] || columnChanges || !this._cellPadding) {\n            this._cellPadding = `${50 * this.cellAspectRatio / numCols}%`;\n        }\n        if (columnChanges || !this._cellWidth) {\n            this._cellWidth = `${100 / numCols}%`;\n        }\n    }\n    /**\n     * @param {?} rowIndex\n     * @param {?} colIndex\n     * @return {?}\n     */\n    _isActiveCell(rowIndex, colIndex) {\n        /** @type {?} */\n        let cellNumber = rowIndex * this.numCols + colIndex;\n        // Account for the fact that the first row may not have as many cells.\n        if (rowIndex) {\n            cellNumber -= this._firstRowOffset;\n        }\n        return cellNumber == this.activeCell;\n    }\n    /**\n     * Focuses the active cell after the microtask queue is empty.\n     * @return {?}\n     */\n    _focusActiveCell() {\n        this._ngZone.runOutsideAngular(() => {\n            this._ngZone.onStable.asObservable().pipe(take(1)).subscribe(() => {\n                /** @type {?} */\n                const activeCell = this._elementRef.nativeElement.querySelector('.mat-calendar-body-active');\n                if (activeCell) {\n                    activeCell.focus();\n                }\n            });\n        });\n    }\n}\nMatCalendarBody.ɵfac = function MatCalendarBody_Factory(t) { return new (t || MatCalendarBody)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };\nMatCalendarBody.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: MatCalendarBody, selectors: [[\"\", \"mat-calendar-body\", \"\"]], hostAttrs: [\"role\", \"grid\", \"aria-readonly\", \"true\", 1, \"mat-calendar-body\"], inputs: { numCols: \"numCols\", activeCell: \"activeCell\", cellAspectRatio: \"cellAspectRatio\", label: \"label\", rows: \"rows\", todayValue: \"todayValue\", selectedValue: \"selectedValue\", labelMinRequiredCells: \"labelMinRequiredCells\" }, outputs: { selectedValueChange: \"selectedValueChange\" }, exportAs: [\"matCalendarBody\"], features: [ɵngcc0.ɵɵNgOnChangesFeature], attrs: _c0, decls: 2, vars: 2, consts: [[\"aria-hidden\", \"true\", 4, \"ngIf\"], [\"role\", \"row\", 4, \"ngFor\", \"ngForOf\"], [\"aria-hidden\", \"true\"], [1, \"mat-calendar-body-label\"], [\"role\", \"row\"], [\"aria-hidden\", \"true\", \"class\", \"mat-calendar-body-label\", 3, \"paddingTop\", \"paddingBottom\", 4, \"ngIf\"], [\"role\", \"gridcell\", \"class\", \"mat-calendar-body-cell\", 3, \"ngClass\", \"tabindex\", \"mat-calendar-body-disabled\", \"mat-calendar-body-active\", \"width\", \"paddingTop\", \"paddingBottom\", \"click\", 4, \"ngFor\", \"ngForOf\"], [\"aria-hidden\", \"true\", 1, \"mat-calendar-body-label\"], [\"role\", \"gridcell\", 1, \"mat-calendar-body-cell\", 3, \"ngClass\", \"tabindex\", \"click\"], [1, \"mat-calendar-body-cell-content\"]], template: function MatCalendarBody_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵtemplate(0, MatCalendarBody_tr_0_Template, 3, 6, \"tr\", 0);\n        ɵngcc0.ɵɵtemplate(1, MatCalendarBody_tr_1_Template, 3, 2, \"tr\", 1);\n    } if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx._firstRowOffset < ctx.labelMinRequiredCells);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngForOf\", ctx.rows);\n    } }, dependencies: [ɵngcc1.NgClass, ɵngcc1.NgForOf, ɵngcc1.NgIf], styles: [\".mat-calendar-body{min-width:224px}.mat-calendar-body-label{height:0;line-height:0;text-align:left;padding-left:4.71429%;padding-right:4.71429%}.mat-calendar-body-cell{position:relative;height:0;line-height:0;text-align:center;outline:0;cursor:pointer}.mat-calendar-body-disabled{cursor:default}.mat-calendar-body-cell-content{position:absolute;top:5%;left:5%;display:flex;align-items:center;justify-content:center;box-sizing:border-box;width:90%;height:90%;line-height:1;border-width:1px;border-style:solid;border-radius:999px}@media (-ms-high-contrast:active){.mat-calendar-body-cell-content{border:none}}@media (-ms-high-contrast:active){.mat-calendar-body-selected,.mat-datepicker-popup:not(:empty){outline:solid 1px}.mat-calendar-body-today{outline:dotted 1px}}[dir=rtl] .mat-calendar-body-label{text-align:right}\"], encapsulation: 2, changeDetection: 0 });\n/** @nocollapse */\nMatCalendarBody.ctorParameters = () => [\n    { type: ElementRef },\n    { type: NgZone }\n];\nMatCalendarBody.propDecorators = {\n    label: [{ type: Input }],\n    rows: [{ type: Input }],\n    todayValue: [{ type: Input }],\n    selectedValue: [{ type: Input }],\n    labelMinRequiredCells: [{ type: Input }],\n    numCols: [{ type: Input }],\n    activeCell: [{ type: Input }],\n    cellAspectRatio: [{ type: Input }],\n    selectedValueChange: [{ type: Output }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatCalendarBody, [{\n        type: Component,\n        args: [{ selector: '[mat-calendar-body]', template: \"<tr *ngIf=\\\"_firstRowOffset < labelMinRequiredCells\\\" aria-hidden=\\\"true\\\"><td class=\\\"mat-calendar-body-label\\\" [attr.colspan]=\\\"numCols\\\" [style.paddingTop]=\\\"_cellPadding\\\" [style.paddingBottom]=\\\"_cellPadding\\\">{{label}}</td></tr><tr *ngFor=\\\"let row of rows; let rowIndex = index\\\" role=\\\"row\\\"><td *ngIf=\\\"rowIndex === 0 && _firstRowOffset\\\" aria-hidden=\\\"true\\\" class=\\\"mat-calendar-body-label\\\" [attr.colspan]=\\\"_firstRowOffset\\\" [style.paddingTop]=\\\"_cellPadding\\\" [style.paddingBottom]=\\\"_cellPadding\\\">{{_firstRowOffset >= labelMinRequiredCells ? label : ''}}</td><td *ngFor=\\\"let item of row; let colIndex = index\\\" role=\\\"gridcell\\\" class=\\\"mat-calendar-body-cell\\\" [ngClass]=\\\"item.cssClasses\\\" [tabindex]=\\\"_isActiveCell(rowIndex, colIndex) ? 0 : -1\\\" [class.mat-calendar-body-disabled]=\\\"!item.enabled\\\" [class.mat-calendar-body-active]=\\\"_isActiveCell(rowIndex, colIndex)\\\" [attr.aria-label]=\\\"item.ariaLabel\\\" [attr.aria-disabled]=\\\"!item.enabled || null\\\" [attr.aria-selected]=\\\"selectedValue === item.value\\\" (click)=\\\"_cellClicked(item)\\\" [style.width]=\\\"_cellWidth\\\" [style.paddingTop]=\\\"_cellPadding\\\" [style.paddingBottom]=\\\"_cellPadding\\\"><div class=\\\"mat-calendar-body-cell-content\\\" [class.mat-calendar-body-selected]=\\\"selectedValue === item.value\\\" [class.mat-calendar-body-today]=\\\"todayValue === item.value\\\">{{item.displayValue}}</div></td></tr>\", host: {\n                    'class': 'mat-calendar-body',\n                    'role': 'grid',\n                    'aria-readonly': 'true'\n                }, exportAs: 'matCalendarBody', encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, styles: [\".mat-calendar-body{min-width:224px}.mat-calendar-body-label{height:0;line-height:0;text-align:left;padding-left:4.71429%;padding-right:4.71429%}.mat-calendar-body-cell{position:relative;height:0;line-height:0;text-align:center;outline:0;cursor:pointer}.mat-calendar-body-disabled{cursor:default}.mat-calendar-body-cell-content{position:absolute;top:5%;left:5%;display:flex;align-items:center;justify-content:center;box-sizing:border-box;width:90%;height:90%;line-height:1;border-width:1px;border-style:solid;border-radius:999px}@media (-ms-high-contrast:active){.mat-calendar-body-cell-content{border:none}}@media (-ms-high-contrast:active){.mat-calendar-body-selected,.mat-datepicker-popup:not(:empty){outline:solid 1px}.mat-calendar-body-today{outline:dotted 1px}}[dir=rtl] .mat-calendar-body-label{text-align:right}\"] }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }]; }, { numCols: [{\n            type: Input\n        }], activeCell: [{\n            type: Input\n        }], cellAspectRatio: [{\n            type: Input\n        }], selectedValueChange: [{\n            type: Output\n        }], label: [{\n            type: Input\n        }], rows: [{\n            type: Input\n        }], todayValue: [{\n            type: Input\n        }], selectedValue: [{\n            type: Input\n        }], labelMinRequiredCells: [{\n            type: Input\n        }] }); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst DAYS_PER_WEEK = 7;\n/**\n * An internal component used to display a single month in the datepicker.\n * \\@docs-private\n * @template D\n */\nclass MatMonthView {\n    /**\n     * @param {?} _changeDetectorRef\n     * @param {?} _dateFormats\n     * @param {?} _dateAdapter\n     * @param {?=} _dir\n     */\n    constructor(_changeDetectorRef, _dateFormats, _dateAdapter, _dir) {\n        this._changeDetectorRef = _changeDetectorRef;\n        this._dateFormats = _dateFormats;\n        this._dateAdapter = _dateAdapter;\n        this._dir = _dir;\n        /**\n         * Emits when a new date is selected.\n         */\n        this.selectedChange = new EventEmitter();\n        /**\n         * Emits when any date is selected.\n         */\n        this._userSelection = new EventEmitter();\n        /**\n         * Emits when any date is activated.\n         */\n        this.activeDateChange = new EventEmitter();\n        if (!this._dateAdapter) {\n            throw createMissingDateImplError('DateAdapter');\n        }\n        if (!this._dateFormats) {\n            throw createMissingDateImplError('MAT_DATE_FORMATS');\n        }\n        /** @type {?} */\n        const firstDayOfWeek = this._dateAdapter.getFirstDayOfWeek();\n        /** @type {?} */\n        const narrowWeekdays = this._dateAdapter.getDayOfWeekNames('narrow');\n        /** @type {?} */\n        const longWeekdays = this._dateAdapter.getDayOfWeekNames('long');\n        // Rotate the labels for days of the week based on the configured first day of the week.\n        /** @type {?} */\n        let weekdays = longWeekdays.map((long, i) => {\n            return { long, narrow: narrowWeekdays[i] };\n        });\n        this._weekdays = weekdays.slice(firstDayOfWeek).concat(weekdays.slice(0, firstDayOfWeek));\n        this._activeDate = this._dateAdapter.today();\n    }\n    /**\n     * The date to display in this month view (everything other than the month and year is ignored).\n     * @return {?}\n     */\n    get activeDate() { return this._activeDate; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set activeDate(value) {\n        /** @type {?} */\n        const oldActiveDate = this._activeDate;\n        /** @type {?} */\n        const validDate = this._getValidDateOrNull(this._dateAdapter.deserialize(value)) || this._dateAdapter.today();\n        this._activeDate = this._dateAdapter.clampDate(validDate, this.minDate, this.maxDate);\n        if (!this._hasSameMonthAndYear(oldActiveDate, this._activeDate)) {\n            this._init();\n        }\n    }\n    /**\n     * The currently selected date.\n     * @return {?}\n     */\n    get selected() { return this._selected; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set selected(value) {\n        this._selected = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n        this._selectedDate = this._getDateInCurrentMonth(this._selected);\n    }\n    /**\n     * The minimum selectable date.\n     * @return {?}\n     */\n    get minDate() { return this._minDate; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set minDate(value) {\n        this._minDate = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n    }\n    /**\n     * The maximum selectable date.\n     * @return {?}\n     */\n    get maxDate() { return this._maxDate; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set maxDate(value) {\n        this._maxDate = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        this._init();\n    }\n    /**\n     * Handles when a new date is selected.\n     * @param {?} date\n     * @return {?}\n     */\n    _dateSelected(date) {\n        if (this._selectedDate != date) {\n            /** @type {?} */\n            const selectedYear = this._dateAdapter.getYear(this.activeDate);\n            /** @type {?} */\n            const selectedMonth = this._dateAdapter.getMonth(this.activeDate);\n            /** @type {?} */\n            const selectedDate = this._dateAdapter.createDate(selectedYear, selectedMonth, date);\n            this.selectedChange.emit(selectedDate);\n        }\n        this._userSelection.emit();\n    }\n    /**\n     * Handles keydown events on the calendar body when calendar is in month view.\n     * @param {?} event\n     * @return {?}\n     */\n    _handleCalendarBodyKeydown(event) {\n        // TODO(mmalerba): We currently allow keyboard navigation to disabled dates, but just prevent\n        // disabled ones from being selected. This may not be ideal, we should look into whether\n        // navigation should skip over disabled dates, and if so, how to implement that efficiently.\n        // TODO(mmalerba): We currently allow keyboard navigation to disabled dates, but just prevent\n        // disabled ones from being selected. This may not be ideal, we should look into whether\n        // navigation should skip over disabled dates, and if so, how to implement that efficiently.\n        /** @type {?} */\n        const oldActiveDate = this._activeDate;\n        /** @type {?} */\n        const isRtl = this._isRtl();\n        switch (event.keyCode) {\n            case LEFT_ARROW:\n                this.activeDate = this._dateAdapter.addCalendarDays(this._activeDate, isRtl ? 1 : -1);\n                break;\n            case RIGHT_ARROW:\n                this.activeDate = this._dateAdapter.addCalendarDays(this._activeDate, isRtl ? -1 : 1);\n                break;\n            case UP_ARROW:\n                this.activeDate = this._dateAdapter.addCalendarDays(this._activeDate, -7);\n                break;\n            case DOWN_ARROW:\n                this.activeDate = this._dateAdapter.addCalendarDays(this._activeDate, 7);\n                break;\n            case HOME:\n                this.activeDate = this._dateAdapter.addCalendarDays(this._activeDate, 1 - this._dateAdapter.getDate(this._activeDate));\n                break;\n            case END:\n                this.activeDate = this._dateAdapter.addCalendarDays(this._activeDate, (this._dateAdapter.getNumDaysInMonth(this._activeDate) -\n                    this._dateAdapter.getDate(this._activeDate)));\n                break;\n            case PAGE_UP:\n                this.activeDate = event.altKey ?\n                    this._dateAdapter.addCalendarYears(this._activeDate, -1) :\n                    this._dateAdapter.addCalendarMonths(this._activeDate, -1);\n                break;\n            case PAGE_DOWN:\n                this.activeDate = event.altKey ?\n                    this._dateAdapter.addCalendarYears(this._activeDate, 1) :\n                    this._dateAdapter.addCalendarMonths(this._activeDate, 1);\n                break;\n            case ENTER:\n            case SPACE:\n                if (!this.dateFilter || this.dateFilter(this._activeDate)) {\n                    this._dateSelected(this._dateAdapter.getDate(this._activeDate));\n                    this._userSelection.emit();\n                    // Prevent unexpected default actions such as form submission.\n                    event.preventDefault();\n                }\n                return;\n            default:\n                // Don't prevent default or focus active cell on keys that we don't explicitly handle.\n                return;\n        }\n        if (this._dateAdapter.compareDate(oldActiveDate, this.activeDate)) {\n            this.activeDateChange.emit(this.activeDate);\n        }\n        this._focusActiveCell();\n        // Prevent unexpected default actions such as form submission.\n        event.preventDefault();\n    }\n    /**\n     * Initializes this month view.\n     * @return {?}\n     */\n    _init() {\n        this._selectedDate = this._getDateInCurrentMonth(this.selected);\n        this._todayDate = this._getDateInCurrentMonth(this._dateAdapter.today());\n        this._monthLabel =\n            this._dateAdapter.getMonthNames('short')[this._dateAdapter.getMonth(this.activeDate)]\n                .toLocaleUpperCase();\n        /** @type {?} */\n        let firstOfMonth = this._dateAdapter.createDate(this._dateAdapter.getYear(this.activeDate), this._dateAdapter.getMonth(this.activeDate), 1);\n        this._firstWeekOffset =\n            (DAYS_PER_WEEK + this._dateAdapter.getDayOfWeek(firstOfMonth) -\n                this._dateAdapter.getFirstDayOfWeek()) % DAYS_PER_WEEK;\n        this._createWeekCells();\n        this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * Focuses the active cell after the microtask queue is empty.\n     * @return {?}\n     */\n    _focusActiveCell() {\n        this._matCalendarBody._focusActiveCell();\n    }\n    /**\n     * Creates MatCalendarCells for the dates in this month.\n     * @private\n     * @return {?}\n     */\n    _createWeekCells() {\n        /** @type {?} */\n        const daysInMonth = this._dateAdapter.getNumDaysInMonth(this.activeDate);\n        /** @type {?} */\n        const dateNames = this._dateAdapter.getDateNames();\n        this._weeks = [[]];\n        for (let i = 0, cell = this._firstWeekOffset; i < daysInMonth; i++, cell++) {\n            if (cell == DAYS_PER_WEEK) {\n                this._weeks.push([]);\n                cell = 0;\n            }\n            /** @type {?} */\n            const date = this._dateAdapter.createDate(this._dateAdapter.getYear(this.activeDate), this._dateAdapter.getMonth(this.activeDate), i + 1);\n            /** @type {?} */\n            const enabled = this._shouldEnableDate(date);\n            /** @type {?} */\n            const ariaLabel = this._dateAdapter.format(date, this._dateFormats.display.dateA11yLabel);\n            /** @type {?} */\n            const cellClasses = this.dateClass ? this.dateClass(date) : undefined;\n            this._weeks[this._weeks.length - 1]\n                .push(new MatCalendarCell(i + 1, dateNames[i], ariaLabel, enabled, cellClasses));\n        }\n    }\n    /**\n     * Date filter for the month\n     * @private\n     * @param {?} date\n     * @return {?}\n     */\n    _shouldEnableDate(date) {\n        return !!date &&\n            (!this.dateFilter || this.dateFilter(date)) &&\n            (!this.minDate || this._dateAdapter.compareDate(date, this.minDate) >= 0) &&\n            (!this.maxDate || this._dateAdapter.compareDate(date, this.maxDate) <= 0);\n    }\n    /**\n     * Gets the date in this month that the given Date falls on.\n     * Returns null if the given Date is in another month.\n     * @private\n     * @param {?} date\n     * @return {?}\n     */\n    _getDateInCurrentMonth(date) {\n        return date && this._hasSameMonthAndYear(date, this.activeDate) ?\n            this._dateAdapter.getDate(date) : null;\n    }\n    /**\n     * Checks whether the 2 dates are non-null and fall within the same month of the same year.\n     * @private\n     * @param {?} d1\n     * @param {?} d2\n     * @return {?}\n     */\n    _hasSameMonthAndYear(d1, d2) {\n        return !!(d1 && d2 && this._dateAdapter.getMonth(d1) == this._dateAdapter.getMonth(d2) &&\n            this._dateAdapter.getYear(d1) == this._dateAdapter.getYear(d2));\n    }\n    /**\n     * @private\n     * @param {?} obj The object to check.\n     * @return {?} The given object if it is both a date instance and valid, otherwise null.\n     */\n    _getValidDateOrNull(obj) {\n        return (this._dateAdapter.isDateInstance(obj) && this._dateAdapter.isValid(obj)) ? obj : null;\n    }\n    /**\n     * Determines whether the user has the RTL layout direction.\n     * @private\n     * @return {?}\n     */\n    _isRtl() {\n        return this._dir && this._dir.value === 'rtl';\n    }\n}\nMatMonthView.ɵfac = function MatMonthView_Factory(t) { return new (t || MatMonthView)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(MAT_DATE_FORMATS, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.DateAdapter, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc3.Directionality, 8)); };\nMatMonthView.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: MatMonthView, selectors: [[\"mat-month-view\"]], viewQuery: function MatMonthView_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(MatCalendarBody, 5);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._matCalendarBody = _t.first);\n    } }, inputs: { activeDate: \"activeDate\", selected: \"selected\", minDate: \"minDate\", maxDate: \"maxDate\", dateFilter: \"dateFilter\", dateClass: \"dateClass\" }, outputs: { selectedChange: \"selectedChange\", _userSelection: \"_userSelection\", activeDateChange: \"activeDateChange\" }, exportAs: [\"matMonthView\"], decls: 7, vars: 7, consts: [[1, \"mat-calendar-table\"], [1, \"mat-calendar-table-header\"], [4, \"ngFor\", \"ngForOf\"], [\"colspan\", \"7\", \"aria-hidden\", \"true\", 1, \"mat-calendar-table-header-divider\"], [\"mat-calendar-body\", \"\", 3, \"label\", \"rows\", \"todayValue\", \"selectedValue\", \"labelMinRequiredCells\", \"activeCell\", \"selectedValueChange\", \"keydown\"]], template: function MatMonthView_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"table\", 0)(1, \"thead\", 1)(2, \"tr\");\n        ɵngcc0.ɵɵtemplate(3, MatMonthView_th_3_Template, 2, 2, \"th\", 2);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(4, \"tr\");\n        ɵngcc0.ɵɵelement(5, \"th\", 3);\n        ɵngcc0.ɵɵelementEnd()();\n        ɵngcc0.ɵɵelementStart(6, \"tbody\", 4);\n        ɵngcc0.ɵɵlistener(\"selectedValueChange\", function MatMonthView_Template_tbody_selectedValueChange_6_listener($event) { return ctx._dateSelected($event); })(\"keydown\", function MatMonthView_Template_tbody_keydown_6_listener($event) { return ctx._handleCalendarBodyKeydown($event); });\n        ɵngcc0.ɵɵelementEnd()();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵadvance(3);\n        ɵngcc0.ɵɵproperty(\"ngForOf\", ctx._weekdays);\n        ɵngcc0.ɵɵadvance(3);\n        ɵngcc0.ɵɵproperty(\"label\", ctx._monthLabel)(\"rows\", ctx._weeks)(\"todayValue\", ctx._todayDate)(\"selectedValue\", ctx._selectedDate)(\"labelMinRequiredCells\", 3)(\"activeCell\", ctx._dateAdapter.getDate(ctx.activeDate) - 1);\n    } }, dependencies: [ɵngcc1.NgForOf, MatCalendarBody], encapsulation: 2, changeDetection: 0 });\n/** @nocollapse */\nMatMonthView.ctorParameters = () => [\n    { type: ChangeDetectorRef },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_DATE_FORMATS,] }] },\n    { type: DateAdapter, decorators: [{ type: Optional }] },\n    { type: Directionality, decorators: [{ type: Optional }] }\n];\nMatMonthView.propDecorators = {\n    activeDate: [{ type: Input }],\n    selected: [{ type: Input }],\n    minDate: [{ type: Input }],\n    maxDate: [{ type: Input }],\n    dateFilter: [{ type: Input }],\n    dateClass: [{ type: Input }],\n    selectedChange: [{ type: Output }],\n    _userSelection: [{ type: Output }],\n    activeDateChange: [{ type: Output }],\n    _matCalendarBody: [{ type: ViewChild, args: [MatCalendarBody,] }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatMonthView, [{\n        type: Component,\n        args: [{ selector: 'mat-month-view',\n                template: \"<table class=\\\"mat-calendar-table\\\"><thead class=\\\"mat-calendar-table-header\\\"><tr><th *ngFor=\\\"let day of _weekdays\\\" [attr.aria-label]=\\\"day.long\\\">{{day.narrow}}</th></tr><tr><th class=\\\"mat-calendar-table-header-divider\\\" colspan=\\\"7\\\" aria-hidden=\\\"true\\\"></th></tr></thead><tbody mat-calendar-body [label]=\\\"_monthLabel\\\" [rows]=\\\"_weeks\\\" [todayValue]=\\\"_todayDate\\\" [selectedValue]=\\\"_selectedDate\\\" [labelMinRequiredCells]=\\\"3\\\" [activeCell]=\\\"_dateAdapter.getDate(activeDate) - 1\\\" (selectedValueChange)=\\\"_dateSelected($event)\\\" (keydown)=\\\"_handleCalendarBodyKeydown($event)\\\"></tbody></table>\",\n                exportAs: 'matMonthView',\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush\n            }]\n    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_DATE_FORMATS]\n            }] }, { type: ɵngcc2.DateAdapter, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc3.Directionality, decorators: [{\n                type: Optional\n            }] }]; }, { selectedChange: [{\n            type: Output\n        }], _userSelection: [{\n            type: Output\n        }], activeDateChange: [{\n            type: Output\n        }], activeDate: [{\n            type: Input\n        }], selected: [{\n            type: Input\n        }], minDate: [{\n            type: Input\n        }], maxDate: [{\n            type: Input\n        }], dateFilter: [{\n            type: Input\n        }], dateClass: [{\n            type: Input\n        }], _matCalendarBody: [{\n            type: ViewChild,\n            args: [MatCalendarBody]\n        }] }); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst yearsPerPage = 24;\n/** @type {?} */\nconst yearsPerRow = 4;\n/**\n * An internal component used to display a year selector in the datepicker.\n * \\@docs-private\n * @template D\n */\nclass MatMultiYearView {\n    /**\n     * @param {?} _changeDetectorRef\n     * @param {?} _dateAdapter\n     * @param {?=} _dir\n     */\n    constructor(_changeDetectorRef, _dateAdapter, _dir) {\n        this._changeDetectorRef = _changeDetectorRef;\n        this._dateAdapter = _dateAdapter;\n        this._dir = _dir;\n        /**\n         * Emits when a new year is selected.\n         */\n        this.selectedChange = new EventEmitter();\n        /**\n         * Emits the selected year. This doesn't imply a change on the selected date\n         */\n        this.yearSelected = new EventEmitter();\n        /**\n         * Emits when any date is activated.\n         */\n        this.activeDateChange = new EventEmitter();\n        if (!this._dateAdapter) {\n            throw createMissingDateImplError('DateAdapter');\n        }\n        this._activeDate = this._dateAdapter.today();\n    }\n    /**\n     * The date to display in this multi-year view (everything other than the year is ignored).\n     * @return {?}\n     */\n    get activeDate() { return this._activeDate; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set activeDate(value) {\n        /** @type {?} */\n        let oldActiveDate = this._activeDate;\n        /** @type {?} */\n        const validDate = this._getValidDateOrNull(this._dateAdapter.deserialize(value)) || this._dateAdapter.today();\n        this._activeDate = this._dateAdapter.clampDate(validDate, this.minDate, this.maxDate);\n        if (Math.floor(this._dateAdapter.getYear(oldActiveDate) / yearsPerPage) !=\n            Math.floor(this._dateAdapter.getYear(this._activeDate) / yearsPerPage)) {\n            this._init();\n        }\n    }\n    /**\n     * The currently selected date.\n     * @return {?}\n     */\n    get selected() { return this._selected; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set selected(value) {\n        this._selected = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n        this._selectedYear = this._selected && this._dateAdapter.getYear(this._selected);\n    }\n    /**\n     * The minimum selectable date.\n     * @return {?}\n     */\n    get minDate() { return this._minDate; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set minDate(value) {\n        this._minDate = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n    }\n    /**\n     * The maximum selectable date.\n     * @return {?}\n     */\n    get maxDate() { return this._maxDate; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set maxDate(value) {\n        this._maxDate = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        this._init();\n    }\n    /**\n     * Initializes this multi-year view.\n     * @return {?}\n     */\n    _init() {\n        this._todayYear = this._dateAdapter.getYear(this._dateAdapter.today());\n        /** @type {?} */\n        let activeYear = this._dateAdapter.getYear(this._activeDate);\n        /** @type {?} */\n        let activeOffset = activeYear % yearsPerPage;\n        this._years = [];\n        for (let i = 0, row = []; i < yearsPerPage; i++) {\n            row.push(activeYear - activeOffset + i);\n            if (row.length == yearsPerRow) {\n                this._years.push(row.map(year => this._createCellForYear(year)));\n                row = [];\n            }\n        }\n        this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * Handles when a new year is selected.\n     * @param {?} year\n     * @return {?}\n     */\n    _yearSelected(year) {\n        this.yearSelected.emit(this._dateAdapter.createDate(year, 0, 1));\n        /** @type {?} */\n        let month = this._dateAdapter.getMonth(this.activeDate);\n        /** @type {?} */\n        let daysInMonth = this._dateAdapter.getNumDaysInMonth(this._dateAdapter.createDate(year, month, 1));\n        this.selectedChange.emit(this._dateAdapter.createDate(year, month, Math.min(this._dateAdapter.getDate(this.activeDate), daysInMonth)));\n    }\n    /**\n     * Handles keydown events on the calendar body when calendar is in multi-year view.\n     * @param {?} event\n     * @return {?}\n     */\n    _handleCalendarBodyKeydown(event) {\n        // TODO(mmalerba): We currently allow keyboard navigation to disabled dates, but just prevent\n        // disabled ones from being selected. This may not be ideal, we should look into whether\n        // navigation should skip over disabled dates, and if so, how to implement that efficiently.\n        // TODO(mmalerba): We currently allow keyboard navigation to disabled dates, but just prevent\n        // disabled ones from being selected. This may not be ideal, we should look into whether\n        // navigation should skip over disabled dates, and if so, how to implement that efficiently.\n        /** @type {?} */\n        const oldActiveDate = this._activeDate;\n        /** @type {?} */\n        const isRtl = this._isRtl();\n        switch (event.keyCode) {\n            case LEFT_ARROW:\n                this.activeDate = this._dateAdapter.addCalendarYears(this._activeDate, isRtl ? 1 : -1);\n                break;\n            case RIGHT_ARROW:\n                this.activeDate = this._dateAdapter.addCalendarYears(this._activeDate, isRtl ? -1 : 1);\n                break;\n            case UP_ARROW:\n                this.activeDate = this._dateAdapter.addCalendarYears(this._activeDate, -yearsPerRow);\n                break;\n            case DOWN_ARROW:\n                this.activeDate = this._dateAdapter.addCalendarYears(this._activeDate, yearsPerRow);\n                break;\n            case HOME:\n                this.activeDate = this._dateAdapter.addCalendarYears(this._activeDate, -this._dateAdapter.getYear(this._activeDate) % yearsPerPage);\n                break;\n            case END:\n                this.activeDate = this._dateAdapter.addCalendarYears(this._activeDate, yearsPerPage - this._dateAdapter.getYear(this._activeDate) % yearsPerPage - 1);\n                break;\n            case PAGE_UP:\n                this.activeDate =\n                    this._dateAdapter.addCalendarYears(this._activeDate, event.altKey ? -yearsPerPage * 10 : -yearsPerPage);\n                break;\n            case PAGE_DOWN:\n                this.activeDate =\n                    this._dateAdapter.addCalendarYears(this._activeDate, event.altKey ? yearsPerPage * 10 : yearsPerPage);\n                break;\n            case ENTER:\n            case SPACE:\n                this._yearSelected(this._dateAdapter.getYear(this._activeDate));\n                break;\n            default:\n                // Don't prevent default or focus active cell on keys that we don't explicitly handle.\n                return;\n        }\n        if (this._dateAdapter.compareDate(oldActiveDate, this.activeDate)) {\n            this.activeDateChange.emit(this.activeDate);\n        }\n        this._focusActiveCell();\n        // Prevent unexpected default actions such as form submission.\n        event.preventDefault();\n    }\n    /**\n     * @return {?}\n     */\n    _getActiveCell() {\n        return this._dateAdapter.getYear(this.activeDate) % yearsPerPage;\n    }\n    /**\n     * Focuses the active cell after the microtask queue is empty.\n     * @return {?}\n     */\n    _focusActiveCell() {\n        this._matCalendarBody._focusActiveCell();\n    }\n    /**\n     * Creates an MatCalendarCell for the given year.\n     * @private\n     * @param {?} year\n     * @return {?}\n     */\n    _createCellForYear(year) {\n        /** @type {?} */\n        let yearName = this._dateAdapter.getYearName(this._dateAdapter.createDate(year, 0, 1));\n        return new MatCalendarCell(year, yearName, yearName, this._shouldEnableYear(year));\n    }\n    /**\n     * Whether the given year is enabled.\n     * @private\n     * @param {?} year\n     * @return {?}\n     */\n    _shouldEnableYear(year) {\n        // disable if the year is greater than maxDate lower than minDate\n        if (year === undefined || year === null ||\n            (this.maxDate && year > this._dateAdapter.getYear(this.maxDate)) ||\n            (this.minDate && year < this._dateAdapter.getYear(this.minDate))) {\n            return false;\n        }\n        // enable if it reaches here and there's no filter defined\n        if (!this.dateFilter) {\n            return true;\n        }\n        /** @type {?} */\n        const firstOfYear = this._dateAdapter.createDate(year, 0, 1);\n        // If any date in the year is enabled count the year as enabled.\n        for (let date = firstOfYear; this._dateAdapter.getYear(date) == year; date = this._dateAdapter.addCalendarDays(date, 1)) {\n            if (this.dateFilter(date)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    /**\n     * @private\n     * @param {?} obj The object to check.\n     * @return {?} The given object if it is both a date instance and valid, otherwise null.\n     */\n    _getValidDateOrNull(obj) {\n        return (this._dateAdapter.isDateInstance(obj) && this._dateAdapter.isValid(obj)) ? obj : null;\n    }\n    /**\n     * Determines whether the user has the RTL layout direction.\n     * @private\n     * @return {?}\n     */\n    _isRtl() {\n        return this._dir && this._dir.value === 'rtl';\n    }\n}\nMatMultiYearView.ɵfac = function MatMultiYearView_Factory(t) { return new (t || MatMultiYearView)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.DateAdapter, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc3.Directionality, 8)); };\nMatMultiYearView.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: MatMultiYearView, selectors: [[\"mat-multi-year-view\"]], viewQuery: function MatMultiYearView_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(MatCalendarBody, 5);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._matCalendarBody = _t.first);\n    } }, inputs: { activeDate: \"activeDate\", selected: \"selected\", minDate: \"minDate\", maxDate: \"maxDate\", dateFilter: \"dateFilter\" }, outputs: { selectedChange: \"selectedChange\", yearSelected: \"yearSelected\", activeDateChange: \"activeDateChange\" }, exportAs: [\"matMultiYearView\"], decls: 5, vars: 6, consts: [[1, \"mat-calendar-table\"], [1, \"mat-calendar-table-header\"], [\"colspan\", \"4\", 1, \"mat-calendar-table-header-divider\"], [\"mat-calendar-body\", \"\", 3, \"rows\", \"todayValue\", \"selectedValue\", \"numCols\", \"cellAspectRatio\", \"activeCell\", \"selectedValueChange\", \"keydown\"]], template: function MatMultiYearView_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"table\", 0)(1, \"thead\", 1)(2, \"tr\");\n        ɵngcc0.ɵɵelement(3, \"th\", 2);\n        ɵngcc0.ɵɵelementEnd()();\n        ɵngcc0.ɵɵelementStart(4, \"tbody\", 3);\n        ɵngcc0.ɵɵlistener(\"selectedValueChange\", function MatMultiYearView_Template_tbody_selectedValueChange_4_listener($event) { return ctx._yearSelected($event); })(\"keydown\", function MatMultiYearView_Template_tbody_keydown_4_listener($event) { return ctx._handleCalendarBodyKeydown($event); });\n        ɵngcc0.ɵɵelementEnd()();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵadvance(4);\n        ɵngcc0.ɵɵproperty(\"rows\", ctx._years)(\"todayValue\", ctx._todayYear)(\"selectedValue\", ctx._selectedYear)(\"numCols\", 4)(\"cellAspectRatio\", 4 / 7)(\"activeCell\", ctx._getActiveCell());\n    } }, dependencies: [MatCalendarBody], encapsulation: 2, changeDetection: 0 });\n/** @nocollapse */\nMatMultiYearView.ctorParameters = () => [\n    { type: ChangeDetectorRef },\n    { type: DateAdapter, decorators: [{ type: Optional }] },\n    { type: Directionality, decorators: [{ type: Optional }] }\n];\nMatMultiYearView.propDecorators = {\n    activeDate: [{ type: Input }],\n    selected: [{ type: Input }],\n    minDate: [{ type: Input }],\n    maxDate: [{ type: Input }],\n    dateFilter: [{ type: Input }],\n    selectedChange: [{ type: Output }],\n    yearSelected: [{ type: Output }],\n    activeDateChange: [{ type: Output }],\n    _matCalendarBody: [{ type: ViewChild, args: [MatCalendarBody,] }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatMultiYearView, [{\n        type: Component,\n        args: [{ selector: 'mat-multi-year-view',\n                template: \"<table class=\\\"mat-calendar-table\\\"><thead class=\\\"mat-calendar-table-header\\\"><tr><th class=\\\"mat-calendar-table-header-divider\\\" colspan=\\\"4\\\"></th></tr></thead><tbody mat-calendar-body [rows]=\\\"_years\\\" [todayValue]=\\\"_todayYear\\\" [selectedValue]=\\\"_selectedYear\\\" [numCols]=\\\"4\\\" [cellAspectRatio]=\\\"4 / 7\\\" [activeCell]=\\\"_getActiveCell()\\\" (selectedValueChange)=\\\"_yearSelected($event)\\\" (keydown)=\\\"_handleCalendarBodyKeydown($event)\\\"></tbody></table>\",\n                exportAs: 'matMultiYearView',\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush\n            }]\n    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc2.DateAdapter, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc3.Directionality, decorators: [{\n                type: Optional\n            }] }]; }, { selectedChange: [{\n            type: Output\n        }], yearSelected: [{\n            type: Output\n        }], activeDateChange: [{\n            type: Output\n        }], activeDate: [{\n            type: Input\n        }], selected: [{\n            type: Input\n        }], minDate: [{\n            type: Input\n        }], maxDate: [{\n            type: Input\n        }], dateFilter: [{\n            type: Input\n        }], _matCalendarBody: [{\n            type: ViewChild,\n            args: [MatCalendarBody]\n        }] }); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * An internal component used to display a single year in the datepicker.\n * \\@docs-private\n * @template D\n */\nclass MatYearView {\n    /**\n     * @param {?} _changeDetectorRef\n     * @param {?} _dateFormats\n     * @param {?} _dateAdapter\n     * @param {?=} _dir\n     */\n    constructor(_changeDetectorRef, _dateFormats, _dateAdapter, _dir) {\n        this._changeDetectorRef = _changeDetectorRef;\n        this._dateFormats = _dateFormats;\n        this._dateAdapter = _dateAdapter;\n        this._dir = _dir;\n        /**\n         * Emits when a new month is selected.\n         */\n        this.selectedChange = new EventEmitter();\n        /**\n         * Emits the selected month. This doesn't imply a change on the selected date\n         */\n        this.monthSelected = new EventEmitter();\n        /**\n         * Emits when any date is activated.\n         */\n        this.activeDateChange = new EventEmitter();\n        if (!this._dateAdapter) {\n            throw createMissingDateImplError('DateAdapter');\n        }\n        if (!this._dateFormats) {\n            throw createMissingDateImplError('MAT_DATE_FORMATS');\n        }\n        this._activeDate = this._dateAdapter.today();\n    }\n    /**\n     * The date to display in this year view (everything other than the year is ignored).\n     * @return {?}\n     */\n    get activeDate() { return this._activeDate; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set activeDate(value) {\n        /** @type {?} */\n        let oldActiveDate = this._activeDate;\n        /** @type {?} */\n        const validDate = this._getValidDateOrNull(this._dateAdapter.deserialize(value)) || this._dateAdapter.today();\n        this._activeDate = this._dateAdapter.clampDate(validDate, this.minDate, this.maxDate);\n        if (this._dateAdapter.getYear(oldActiveDate) !== this._dateAdapter.getYear(this._activeDate)) {\n            this._init();\n        }\n    }\n    /**\n     * The currently selected date.\n     * @return {?}\n     */\n    get selected() { return this._selected; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set selected(value) {\n        this._selected = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n        this._selectedMonth = this._getMonthInCurrentYear(this._selected);\n    }\n    /**\n     * The minimum selectable date.\n     * @return {?}\n     */\n    get minDate() { return this._minDate; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set minDate(value) {\n        this._minDate = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n    }\n    /**\n     * The maximum selectable date.\n     * @return {?}\n     */\n    get maxDate() { return this._maxDate; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set maxDate(value) {\n        this._maxDate = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        this._init();\n    }\n    /**\n     * Handles when a new month is selected.\n     * @param {?} month\n     * @return {?}\n     */\n    _monthSelected(month) {\n        /** @type {?} */\n        const normalizedDate = this._dateAdapter.createDate(this._dateAdapter.getYear(this.activeDate), month, 1);\n        this.monthSelected.emit(normalizedDate);\n        /** @type {?} */\n        const daysInMonth = this._dateAdapter.getNumDaysInMonth(normalizedDate);\n        this.selectedChange.emit(this._dateAdapter.createDate(this._dateAdapter.getYear(this.activeDate), month, Math.min(this._dateAdapter.getDate(this.activeDate), daysInMonth)));\n    }\n    /**\n     * Handles keydown events on the calendar body when calendar is in year view.\n     * @param {?} event\n     * @return {?}\n     */\n    _handleCalendarBodyKeydown(event) {\n        // TODO(mmalerba): We currently allow keyboard navigation to disabled dates, but just prevent\n        // disabled ones from being selected. This may not be ideal, we should look into whether\n        // navigation should skip over disabled dates, and if so, how to implement that efficiently.\n        // TODO(mmalerba): We currently allow keyboard navigation to disabled dates, but just prevent\n        // disabled ones from being selected. This may not be ideal, we should look into whether\n        // navigation should skip over disabled dates, and if so, how to implement that efficiently.\n        /** @type {?} */\n        const oldActiveDate = this._activeDate;\n        /** @type {?} */\n        const isRtl = this._isRtl();\n        switch (event.keyCode) {\n            case LEFT_ARROW:\n                this.activeDate = this._dateAdapter.addCalendarMonths(this._activeDate, isRtl ? 1 : -1);\n                break;\n            case RIGHT_ARROW:\n                this.activeDate = this._dateAdapter.addCalendarMonths(this._activeDate, isRtl ? -1 : 1);\n                break;\n            case UP_ARROW:\n                this.activeDate = this._dateAdapter.addCalendarMonths(this._activeDate, -4);\n                break;\n            case DOWN_ARROW:\n                this.activeDate = this._dateAdapter.addCalendarMonths(this._activeDate, 4);\n                break;\n            case HOME:\n                this.activeDate = this._dateAdapter.addCalendarMonths(this._activeDate, -this._dateAdapter.getMonth(this._activeDate));\n                break;\n            case END:\n                this.activeDate = this._dateAdapter.addCalendarMonths(this._activeDate, 11 - this._dateAdapter.getMonth(this._activeDate));\n                break;\n            case PAGE_UP:\n                this.activeDate =\n                    this._dateAdapter.addCalendarYears(this._activeDate, event.altKey ? -10 : -1);\n                break;\n            case PAGE_DOWN:\n                this.activeDate =\n                    this._dateAdapter.addCalendarYears(this._activeDate, event.altKey ? 10 : 1);\n                break;\n            case ENTER:\n            case SPACE:\n                this._monthSelected(this._dateAdapter.getMonth(this._activeDate));\n                break;\n            default:\n                // Don't prevent default or focus active cell on keys that we don't explicitly handle.\n                return;\n        }\n        if (this._dateAdapter.compareDate(oldActiveDate, this.activeDate)) {\n            this.activeDateChange.emit(this.activeDate);\n        }\n        this._focusActiveCell();\n        // Prevent unexpected default actions such as form submission.\n        event.preventDefault();\n    }\n    /**\n     * Initializes this year view.\n     * @return {?}\n     */\n    _init() {\n        this._selectedMonth = this._getMonthInCurrentYear(this.selected);\n        this._todayMonth = this._getMonthInCurrentYear(this._dateAdapter.today());\n        this._yearLabel = this._dateAdapter.getYearName(this.activeDate);\n        /** @type {?} */\n        let monthNames = this._dateAdapter.getMonthNames('short');\n        // First row of months only contains 5 elements so we can fit the year label on the same row.\n        this._months = [[0, 1, 2, 3], [4, 5, 6, 7], [8, 9, 10, 11]].map(row => row.map(month => this._createCellForMonth(month, monthNames[month])));\n        this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * Focuses the active cell after the microtask queue is empty.\n     * @return {?}\n     */\n    _focusActiveCell() {\n        this._matCalendarBody._focusActiveCell();\n    }\n    /**\n     * Gets the month in this year that the given Date falls on.\n     * Returns null if the given Date is in another year.\n     * @private\n     * @param {?} date\n     * @return {?}\n     */\n    _getMonthInCurrentYear(date) {\n        return date && this._dateAdapter.getYear(date) == this._dateAdapter.getYear(this.activeDate) ?\n            this._dateAdapter.getMonth(date) : null;\n    }\n    /**\n     * Creates an MatCalendarCell for the given month.\n     * @private\n     * @param {?} month\n     * @param {?} monthName\n     * @return {?}\n     */\n    _createCellForMonth(month, monthName) {\n        /** @type {?} */\n        let ariaLabel = this._dateAdapter.format(this._dateAdapter.createDate(this._dateAdapter.getYear(this.activeDate), month, 1), this._dateFormats.display.monthYearA11yLabel);\n        return new MatCalendarCell(month, monthName.toLocaleUpperCase(), ariaLabel, this._shouldEnableMonth(month));\n    }\n    /**\n     * Whether the given month is enabled.\n     * @private\n     * @param {?} month\n     * @return {?}\n     */\n    _shouldEnableMonth(month) {\n        /** @type {?} */\n        const activeYear = this._dateAdapter.getYear(this.activeDate);\n        if (month === undefined || month === null ||\n            this._isYearAndMonthAfterMaxDate(activeYear, month) ||\n            this._isYearAndMonthBeforeMinDate(activeYear, month)) {\n            return false;\n        }\n        if (!this.dateFilter) {\n            return true;\n        }\n        /** @type {?} */\n        const firstOfMonth = this._dateAdapter.createDate(activeYear, month, 1);\n        // If any date in the month is enabled count the month as enabled.\n        for (let date = firstOfMonth; this._dateAdapter.getMonth(date) == month; date = this._dateAdapter.addCalendarDays(date, 1)) {\n            if (this.dateFilter(date)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    /**\n     * Tests whether the combination month/year is after this.maxDate, considering\n     * just the month and year of this.maxDate\n     * @private\n     * @param {?} year\n     * @param {?} month\n     * @return {?}\n     */\n    _isYearAndMonthAfterMaxDate(year, month) {\n        if (this.maxDate) {\n            /** @type {?} */\n            const maxYear = this._dateAdapter.getYear(this.maxDate);\n            /** @type {?} */\n            const maxMonth = this._dateAdapter.getMonth(this.maxDate);\n            return year > maxYear || (year === maxYear && month > maxMonth);\n        }\n        return false;\n    }\n    /**\n     * Tests whether the combination month/year is before this.minDate, considering\n     * just the month and year of this.minDate\n     * @private\n     * @param {?} year\n     * @param {?} month\n     * @return {?}\n     */\n    _isYearAndMonthBeforeMinDate(year, month) {\n        if (this.minDate) {\n            /** @type {?} */\n            const minYear = this._dateAdapter.getYear(this.minDate);\n            /** @type {?} */\n            const minMonth = this._dateAdapter.getMonth(this.minDate);\n            return year < minYear || (year === minYear && month < minMonth);\n        }\n        return false;\n    }\n    /**\n     * @private\n     * @param {?} obj The object to check.\n     * @return {?} The given object if it is both a date instance and valid, otherwise null.\n     */\n    _getValidDateOrNull(obj) {\n        return (this._dateAdapter.isDateInstance(obj) && this._dateAdapter.isValid(obj)) ? obj : null;\n    }\n    /**\n     * Determines whether the user has the RTL layout direction.\n     * @private\n     * @return {?}\n     */\n    _isRtl() {\n        return this._dir && this._dir.value === 'rtl';\n    }\n}\nMatYearView.ɵfac = function MatYearView_Factory(t) { return new (t || MatYearView)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(MAT_DATE_FORMATS, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.DateAdapter, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc3.Directionality, 8)); };\nMatYearView.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: MatYearView, selectors: [[\"mat-year-view\"]], viewQuery: function MatYearView_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(MatCalendarBody, 5);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._matCalendarBody = _t.first);\n    } }, inputs: { activeDate: \"activeDate\", selected: \"selected\", minDate: \"minDate\", maxDate: \"maxDate\", dateFilter: \"dateFilter\" }, outputs: { selectedChange: \"selectedChange\", monthSelected: \"monthSelected\", activeDateChange: \"activeDateChange\" }, exportAs: [\"matYearView\"], decls: 5, vars: 8, consts: [[1, \"mat-calendar-table\"], [1, \"mat-calendar-table-header\"], [\"colspan\", \"4\", 1, \"mat-calendar-table-header-divider\"], [\"mat-calendar-body\", \"\", 3, \"label\", \"rows\", \"todayValue\", \"selectedValue\", \"labelMinRequiredCells\", \"numCols\", \"cellAspectRatio\", \"activeCell\", \"selectedValueChange\", \"keydown\"]], template: function MatYearView_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"table\", 0)(1, \"thead\", 1)(2, \"tr\");\n        ɵngcc0.ɵɵelement(3, \"th\", 2);\n        ɵngcc0.ɵɵelementEnd()();\n        ɵngcc0.ɵɵelementStart(4, \"tbody\", 3);\n        ɵngcc0.ɵɵlistener(\"selectedValueChange\", function MatYearView_Template_tbody_selectedValueChange_4_listener($event) { return ctx._monthSelected($event); })(\"keydown\", function MatYearView_Template_tbody_keydown_4_listener($event) { return ctx._handleCalendarBodyKeydown($event); });\n        ɵngcc0.ɵɵelementEnd()();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵadvance(4);\n        ɵngcc0.ɵɵproperty(\"label\", ctx._yearLabel)(\"rows\", ctx._months)(\"todayValue\", ctx._todayMonth)(\"selectedValue\", ctx._selectedMonth)(\"labelMinRequiredCells\", 2)(\"numCols\", 4)(\"cellAspectRatio\", 4 / 7)(\"activeCell\", ctx._dateAdapter.getMonth(ctx.activeDate));\n    } }, dependencies: [MatCalendarBody], encapsulation: 2, changeDetection: 0 });\n/** @nocollapse */\nMatYearView.ctorParameters = () => [\n    { type: ChangeDetectorRef },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_DATE_FORMATS,] }] },\n    { type: DateAdapter, decorators: [{ type: Optional }] },\n    { type: Directionality, decorators: [{ type: Optional }] }\n];\nMatYearView.propDecorators = {\n    activeDate: [{ type: Input }],\n    selected: [{ type: Input }],\n    minDate: [{ type: Input }],\n    maxDate: [{ type: Input }],\n    dateFilter: [{ type: Input }],\n    selectedChange: [{ type: Output }],\n    monthSelected: [{ type: Output }],\n    activeDateChange: [{ type: Output }],\n    _matCalendarBody: [{ type: ViewChild, args: [MatCalendarBody,] }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatYearView, [{\n        type: Component,\n        args: [{ selector: 'mat-year-view',\n                template: \"<table class=\\\"mat-calendar-table\\\"><thead class=\\\"mat-calendar-table-header\\\"><tr><th class=\\\"mat-calendar-table-header-divider\\\" colspan=\\\"4\\\"></th></tr></thead><tbody mat-calendar-body [label]=\\\"_yearLabel\\\" [rows]=\\\"_months\\\" [todayValue]=\\\"_todayMonth\\\" [selectedValue]=\\\"_selectedMonth\\\" [labelMinRequiredCells]=\\\"2\\\" [numCols]=\\\"4\\\" [cellAspectRatio]=\\\"4 / 7\\\" [activeCell]=\\\"_dateAdapter.getMonth(activeDate)\\\" (selectedValueChange)=\\\"_monthSelected($event)\\\" (keydown)=\\\"_handleCalendarBodyKeydown($event)\\\"></tbody></table>\",\n                exportAs: 'matYearView',\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush\n            }]\n    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_DATE_FORMATS]\n            }] }, { type: ɵngcc2.DateAdapter, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc3.Directionality, decorators: [{\n                type: Optional\n            }] }]; }, { selectedChange: [{\n            type: Output\n        }], monthSelected: [{\n            type: Output\n        }], activeDateChange: [{\n            type: Output\n        }], activeDate: [{\n            type: Input\n        }], selected: [{\n            type: Input\n        }], minDate: [{\n            type: Input\n        }], maxDate: [{\n            type: Input\n        }], dateFilter: [{\n            type: Input\n        }], _matCalendarBody: [{\n            type: ViewChild,\n            args: [MatCalendarBody]\n        }] }); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Default header for MatCalendar\n * @template D\n */\nclass MatCalendarHeader {\n    /**\n     * @param {?} _intl\n     * @param {?} calendar\n     * @param {?} _dateAdapter\n     * @param {?} _dateFormats\n     * @param {?} changeDetectorRef\n     */\n    constructor(_intl, calendar, _dateAdapter, _dateFormats, changeDetectorRef) {\n        this._intl = _intl;\n        this.calendar = calendar;\n        this._dateAdapter = _dateAdapter;\n        this._dateFormats = _dateFormats;\n        this.calendar.stateChanges.subscribe(() => changeDetectorRef.markForCheck());\n    }\n    /**\n     * The label for the current calendar view.\n     * @return {?}\n     */\n    get periodButtonText() {\n        if (this.calendar.currentView == 'month') {\n            return this._dateAdapter\n                .format(this.calendar.activeDate, this._dateFormats.display.monthYearLabel)\n                .toLocaleUpperCase();\n        }\n        if (this.calendar.currentView == 'year') {\n            return this._dateAdapter.getYearName(this.calendar.activeDate);\n        }\n        /** @type {?} */\n        const activeYear = this._dateAdapter.getYear(this.calendar.activeDate);\n        /** @type {?} */\n        const firstYearInView = this._dateAdapter.getYearName(this._dateAdapter.createDate(activeYear - activeYear % 24, 0, 1));\n        /** @type {?} */\n        const lastYearInView = this._dateAdapter.getYearName(this._dateAdapter.createDate(activeYear + yearsPerPage - 1 - activeYear % 24, 0, 1));\n        return `${firstYearInView} \\u2013 ${lastYearInView}`;\n    }\n    /**\n     * @return {?}\n     */\n    get periodButtonLabel() {\n        return this.calendar.currentView == 'month' ?\n            this._intl.switchToMultiYearViewLabel : this._intl.switchToMonthViewLabel;\n    }\n    /**\n     * The label for the previous button.\n     * @return {?}\n     */\n    get prevButtonLabel() {\n        return {\n            'month': this._intl.prevMonthLabel,\n            'year': this._intl.prevYearLabel,\n            'multi-year': this._intl.prevMultiYearLabel\n        }[this.calendar.currentView];\n    }\n    /**\n     * The label for the next button.\n     * @return {?}\n     */\n    get nextButtonLabel() {\n        return {\n            'month': this._intl.nextMonthLabel,\n            'year': this._intl.nextYearLabel,\n            'multi-year': this._intl.nextMultiYearLabel\n        }[this.calendar.currentView];\n    }\n    /**\n     * Handles user clicks on the period label.\n     * @return {?}\n     */\n    currentPeriodClicked() {\n        this.calendar.currentView = this.calendar.currentView == 'month' ? 'multi-year' : 'month';\n    }\n    /**\n     * Handles user clicks on the previous button.\n     * @return {?}\n     */\n    previousClicked() {\n        this.calendar.activeDate = this.calendar.currentView == 'month' ?\n            this._dateAdapter.addCalendarMonths(this.calendar.activeDate, -1) :\n            this._dateAdapter.addCalendarYears(this.calendar.activeDate, this.calendar.currentView == 'year' ? -1 : -yearsPerPage);\n    }\n    /**\n     * Handles user clicks on the next button.\n     * @return {?}\n     */\n    nextClicked() {\n        this.calendar.activeDate = this.calendar.currentView == 'month' ?\n            this._dateAdapter.addCalendarMonths(this.calendar.activeDate, 1) :\n            this._dateAdapter.addCalendarYears(this.calendar.activeDate, this.calendar.currentView == 'year' ? 1 : yearsPerPage);\n    }\n    /**\n     * Whether the previous period button is enabled.\n     * @return {?}\n     */\n    previousEnabled() {\n        if (!this.calendar.minDate) {\n            return true;\n        }\n        return !this.calendar.minDate ||\n            !this._isSameView(this.calendar.activeDate, this.calendar.minDate);\n    }\n    /**\n     * Whether the next period button is enabled.\n     * @return {?}\n     */\n    nextEnabled() {\n        return !this.calendar.maxDate ||\n            !this._isSameView(this.calendar.activeDate, this.calendar.maxDate);\n    }\n    /**\n     * Whether the two dates represent the same view in the current view mode (month or year).\n     * @private\n     * @param {?} date1\n     * @param {?} date2\n     * @return {?}\n     */\n    _isSameView(date1, date2) {\n        if (this.calendar.currentView == 'month') {\n            return this._dateAdapter.getYear(date1) == this._dateAdapter.getYear(date2) &&\n                this._dateAdapter.getMonth(date1) == this._dateAdapter.getMonth(date2);\n        }\n        if (this.calendar.currentView == 'year') {\n            return this._dateAdapter.getYear(date1) == this._dateAdapter.getYear(date2);\n        }\n        // Otherwise we are in 'multi-year' view.\n        return Math.floor(this._dateAdapter.getYear(date1) / yearsPerPage) ==\n            Math.floor(this._dateAdapter.getYear(date2) / yearsPerPage);\n    }\n}\nMatCalendarHeader.ɵfac = function MatCalendarHeader_Factory(t) { return new (t || MatCalendarHeader)(ɵngcc0.ɵɵdirectiveInject(MatDatepickerIntl), ɵngcc0.ɵɵdirectiveInject(forwardRef(() => MatCalendar)), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.DateAdapter, 8), ɵngcc0.ɵɵdirectiveInject(MAT_DATE_FORMATS, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef)); };\nMatCalendarHeader.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: MatCalendarHeader, selectors: [[\"mat-calendar-header\"]], exportAs: [\"matCalendarHeader\"], ngContentSelectors: _c1, decls: 9, vars: 8, consts: [[1, \"mat-calendar-header\"], [1, \"mat-calendar-controls\"], [\"mat-button\", \"\", \"type\", \"button\", \"cdkAriaLive\", \"polite\", 1, \"mat-calendar-period-button\", 3, \"click\"], [1, \"mat-calendar-arrow\"], [1, \"mat-calendar-spacer\"], [\"mat-icon-button\", \"\", \"type\", \"button\", 1, \"mat-calendar-previous-button\", 3, \"disabled\", \"click\"], [\"mat-icon-button\", \"\", \"type\", \"button\", 1, \"mat-calendar-next-button\", 3, \"disabled\", \"click\"]], template: function MatCalendarHeader_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"button\", 2);\n        ɵngcc0.ɵɵlistener(\"click\", function MatCalendarHeader_Template_button_click_2_listener() { return ctx.currentPeriodClicked(); });\n        ɵngcc0.ɵɵtext(3);\n        ɵngcc0.ɵɵelement(4, \"div\", 3);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelement(5, \"div\", 4);\n        ɵngcc0.ɵɵprojection(6);\n        ɵngcc0.ɵɵelementStart(7, \"button\", 5);\n        ɵngcc0.ɵɵlistener(\"click\", function MatCalendarHeader_Template_button_click_7_listener() { return ctx.previousClicked(); });\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(8, \"button\", 6);\n        ɵngcc0.ɵɵlistener(\"click\", function MatCalendarHeader_Template_button_click_8_listener() { return ctx.nextClicked(); });\n        ɵngcc0.ɵɵelementEnd()()();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵattribute(\"aria-label\", ctx.periodButtonLabel);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵtextInterpolate(ctx.periodButtonText);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵclassProp(\"mat-calendar-invert\", ctx.calendar.currentView != \"month\");\n        ɵngcc0.ɵɵadvance(3);\n        ɵngcc0.ɵɵproperty(\"disabled\", !ctx.previousEnabled());\n        ɵngcc0.ɵɵattribute(\"aria-label\", ctx.prevButtonLabel);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"disabled\", !ctx.nextEnabled());\n        ɵngcc0.ɵɵattribute(\"aria-label\", ctx.nextButtonLabel);\n    } }, dependencies: [ɵngcc4.MatButton, ɵngcc5.CdkAriaLive], encapsulation: 2, changeDetection: 0 });\n/** @nocollapse */\nMatCalendarHeader.ctorParameters = () => [\n    { type: MatDatepickerIntl },\n    { type: MatCalendar, decorators: [{ type: Inject, args: [forwardRef(() => MatCalendar),] }] },\n    { type: DateAdapter, decorators: [{ type: Optional }] },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_DATE_FORMATS,] }] },\n    { type: ChangeDetectorRef }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatCalendarHeader, [{\n        type: Component,\n        args: [{ selector: 'mat-calendar-header',\n                template: \"<div class=\\\"mat-calendar-header\\\"><div class=\\\"mat-calendar-controls\\\"><button mat-button type=\\\"button\\\" class=\\\"mat-calendar-period-button\\\" (click)=\\\"currentPeriodClicked()\\\" [attr.aria-label]=\\\"periodButtonLabel\\\" cdkAriaLive=\\\"polite\\\">{{periodButtonText}}<div class=\\\"mat-calendar-arrow\\\" [class.mat-calendar-invert]=\\\"calendar.currentView != 'month'\\\"></div></button><div class=\\\"mat-calendar-spacer\\\"></div><ng-content></ng-content><button mat-icon-button type=\\\"button\\\" class=\\\"mat-calendar-previous-button\\\" [disabled]=\\\"!previousEnabled()\\\" (click)=\\\"previousClicked()\\\" [attr.aria-label]=\\\"prevButtonLabel\\\"></button> <button mat-icon-button type=\\\"button\\\" class=\\\"mat-calendar-next-button\\\" [disabled]=\\\"!nextEnabled()\\\" (click)=\\\"nextClicked()\\\" [attr.aria-label]=\\\"nextButtonLabel\\\"></button></div></div>\",\n                exportAs: 'matCalendarHeader',\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush\n            }]\n    }], function () { return [{ type: MatDatepickerIntl }, { type: MatCalendar, decorators: [{\n                type: Inject,\n                args: [forwardRef(() => MatCalendar)]\n            }] }, { type: ɵngcc2.DateAdapter, decorators: [{\n                type: Optional\n            }] }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_DATE_FORMATS]\n            }] }, { type: ɵngcc0.ChangeDetectorRef }]; }, null); })();\n/**\n * A calendar that is used as part of the datepicker.\n * \\@docs-private\n * @template D\n */\nclass MatCalendar {\n    /**\n     * @param {?} _intl\n     * @param {?} _dateAdapter\n     * @param {?} _dateFormats\n     * @param {?} _changeDetectorRef\n     */\n    constructor(_intl, _dateAdapter, _dateFormats, _changeDetectorRef) {\n        this._dateAdapter = _dateAdapter;\n        this._dateFormats = _dateFormats;\n        this._changeDetectorRef = _changeDetectorRef;\n        /**\n         * Used for scheduling that focus should be moved to the active cell on the next tick.\n         * We need to schedule it, rather than do it immediately, because we have to wait\n         * for Angular to re-evaluate the view children.\n         */\n        this._moveFocusOnNextTick = false;\n        /**\n         * Whether the calendar should be started in month or year view.\n         */\n        this.startView = 'month';\n        /**\n         * Emits when the currently selected date changes.\n         */\n        this.selectedChange = new EventEmitter();\n        /**\n         * Emits the year chosen in multiyear view.\n         * This doesn't imply a change on the selected date.\n         */\n        this.yearSelected = new EventEmitter();\n        /**\n         * Emits the month chosen in year view.\n         * This doesn't imply a change on the selected date.\n         */\n        this.monthSelected = new EventEmitter();\n        /**\n         * Emits when any date is selected.\n         */\n        this._userSelection = new EventEmitter();\n        /**\n         * Emits whenever there is a state change that the header may need to respond to.\n         */\n        this.stateChanges = new Subject();\n        if (!this._dateAdapter) {\n            throw createMissingDateImplError('DateAdapter');\n        }\n        if (!this._dateFormats) {\n            throw createMissingDateImplError('MAT_DATE_FORMATS');\n        }\n        this._intlChanges = _intl.changes.subscribe(() => {\n            _changeDetectorRef.markForCheck();\n            this.stateChanges.next();\n        });\n    }\n    /**\n     * A date representing the period (month or year) to start the calendar in.\n     * @return {?}\n     */\n    get startAt() { return this._startAt; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set startAt(value) {\n        this._startAt = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n    }\n    /**\n     * The currently selected date.\n     * @return {?}\n     */\n    get selected() { return this._selected; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set selected(value) {\n        this._selected = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n    }\n    /**\n     * The minimum selectable date.\n     * @return {?}\n     */\n    get minDate() { return this._minDate; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set minDate(value) {\n        this._minDate = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n    }\n    /**\n     * The maximum selectable date.\n     * @return {?}\n     */\n    get maxDate() { return this._maxDate; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set maxDate(value) {\n        this._maxDate = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n    }\n    /**\n     * The current active date. This determines which time period is shown and which date is\n     * highlighted when using keyboard navigation.\n     * @return {?}\n     */\n    get activeDate() { return this._clampedActiveDate; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set activeDate(value) {\n        this._clampedActiveDate = this._dateAdapter.clampDate(value, this.minDate, this.maxDate);\n        this.stateChanges.next();\n        this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * Whether the calendar is in month view.\n     * @return {?}\n     */\n    get currentView() { return this._currentView; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set currentView(value) {\n        this._currentView = value;\n        this._moveFocusOnNextTick = true;\n        this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        this._calendarHeaderPortal = new ComponentPortal(this.headerComponent || MatCalendarHeader);\n        this.activeDate = this.startAt || this._dateAdapter.today();\n        // Assign to the private property since we don't want to move focus on init.\n        this._currentView = this.startView;\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterViewChecked() {\n        if (this._moveFocusOnNextTick) {\n            this._moveFocusOnNextTick = false;\n            this.focusActiveCell();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._intlChanges.unsubscribe();\n        this.stateChanges.complete();\n    }\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    ngOnChanges(changes) {\n        /** @type {?} */\n        const change = changes['minDate'] || changes['maxDate'] || changes['dateFilter'];\n        if (change && !change.firstChange) {\n            /** @type {?} */\n            const view = this._getCurrentViewComponent();\n            if (view) {\n                // We need to `detectChanges` manually here, because the `minDate`, `maxDate` etc. are\n                // passed down to the view via data bindings which won't be up-to-date when we call `_init`.\n                this._changeDetectorRef.detectChanges();\n                view._init();\n            }\n        }\n        this.stateChanges.next();\n    }\n    /**\n     * @return {?}\n     */\n    focusActiveCell() {\n        this._getCurrentViewComponent()._focusActiveCell();\n    }\n    /**\n     * Updates today's date after an update of the active date\n     * @return {?}\n     */\n    updateTodaysDate() {\n        /** @type {?} */\n        let view = this.currentView == 'month' ? this.monthView :\n            (this.currentView == 'year' ? this.yearView : this.multiYearView);\n        view.ngAfterContentInit();\n    }\n    /**\n     * Handles date selection in the month view.\n     * @param {?} date\n     * @return {?}\n     */\n    _dateSelected(date) {\n        if (!this._dateAdapter.sameDate(date, this.selected)) {\n            this.selectedChange.emit(date);\n        }\n    }\n    /**\n     * Handles year selection in the multiyear view.\n     * @param {?} normalizedYear\n     * @return {?}\n     */\n    _yearSelectedInMultiYearView(normalizedYear) {\n        this.yearSelected.emit(normalizedYear);\n    }\n    /**\n     * Handles month selection in the year view.\n     * @param {?} normalizedMonth\n     * @return {?}\n     */\n    _monthSelectedInYearView(normalizedMonth) {\n        this.monthSelected.emit(normalizedMonth);\n    }\n    /**\n     * @return {?}\n     */\n    _userSelected() {\n        this._userSelection.emit();\n    }\n    /**\n     * Handles year/month selection in the multi-year/year views.\n     * @param {?} date\n     * @param {?} view\n     * @return {?}\n     */\n    _goToDateInView(date, view) {\n        this.activeDate = date;\n        this.currentView = view;\n    }\n    /**\n     * @private\n     * @param {?} obj The object to check.\n     * @return {?} The given object if it is both a date instance and valid, otherwise null.\n     */\n    _getValidDateOrNull(obj) {\n        return (this._dateAdapter.isDateInstance(obj) && this._dateAdapter.isValid(obj)) ? obj : null;\n    }\n    /**\n     * Returns the component instance that corresponds to the current calendar view.\n     * @private\n     * @return {?}\n     */\n    _getCurrentViewComponent() {\n        return this.monthView || this.yearView || this.multiYearView;\n    }\n}\nMatCalendar.ɵfac = function MatCalendar_Factory(t) { return new (t || MatCalendar)(ɵngcc0.ɵɵdirectiveInject(MatDatepickerIntl), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.DateAdapter, 8), ɵngcc0.ɵɵdirectiveInject(MAT_DATE_FORMATS, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef)); };\nMatCalendar.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: MatCalendar, selectors: [[\"mat-calendar\"]], viewQuery: function MatCalendar_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(MatMonthView, 5);\n        ɵngcc0.ɵɵviewQuery(MatYearView, 5);\n        ɵngcc0.ɵɵviewQuery(MatMultiYearView, 5);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.monthView = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.yearView = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.multiYearView = _t.first);\n    } }, hostAttrs: [1, \"mat-calendar\"], inputs: { startView: \"startView\", startAt: \"startAt\", selected: \"selected\", minDate: \"minDate\", maxDate: \"maxDate\", headerComponent: \"headerComponent\", dateFilter: \"dateFilter\", dateClass: \"dateClass\" }, outputs: { selectedChange: \"selectedChange\", yearSelected: \"yearSelected\", monthSelected: \"monthSelected\", _userSelection: \"_userSelection\" }, exportAs: [\"matCalendar\"], features: [ɵngcc0.ɵɵNgOnChangesFeature], decls: 5, vars: 5, consts: [[3, \"cdkPortalOutlet\"], [\"cdkMonitorSubtreeFocus\", \"\", \"tabindex\", \"-1\", 1, \"mat-calendar-content\", 3, \"ngSwitch\"], [3, \"activeDate\", \"selected\", \"dateFilter\", \"maxDate\", \"minDate\", \"dateClass\", \"activeDateChange\", \"selectedChange\", \"_userSelection\", 4, \"ngSwitchCase\"], [3, \"activeDate\", \"selected\", \"dateFilter\", \"maxDate\", \"minDate\", \"activeDateChange\", \"monthSelected\", \"selectedChange\", 4, \"ngSwitchCase\"], [3, \"activeDate\", \"selected\", \"dateFilter\", \"maxDate\", \"minDate\", \"activeDateChange\", \"yearSelected\", \"selectedChange\", 4, \"ngSwitchCase\"], [3, \"activeDate\", \"selected\", \"dateFilter\", \"maxDate\", \"minDate\", \"dateClass\", \"activeDateChange\", \"selectedChange\", \"_userSelection\"], [3, \"activeDate\", \"selected\", \"dateFilter\", \"maxDate\", \"minDate\", \"activeDateChange\", \"monthSelected\", \"selectedChange\"], [3, \"activeDate\", \"selected\", \"dateFilter\", \"maxDate\", \"minDate\", \"activeDateChange\", \"yearSelected\", \"selectedChange\"]], template: function MatCalendar_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵtemplate(0, MatCalendar_ng_template_0_Template, 0, 0, \"ng-template\", 0);\n        ɵngcc0.ɵɵelementStart(1, \"div\", 1);\n        ɵngcc0.ɵɵtemplate(2, MatCalendar_mat_month_view_2_Template, 1, 6, \"mat-month-view\", 2);\n        ɵngcc0.ɵɵtemplate(3, MatCalendar_mat_year_view_3_Template, 1, 5, \"mat-year-view\", 3);\n        ɵngcc0.ɵɵtemplate(4, MatCalendar_mat_multi_year_view_4_Template, 1, 5, \"mat-multi-year-view\", 4);\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"cdkPortalOutlet\", ctx._calendarHeaderPortal);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngSwitch\", ctx.currentView);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngSwitchCase\", \"month\");\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngSwitchCase\", \"year\");\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngSwitchCase\", \"multi-year\");\n    } }, dependencies: [ɵngcc1.NgSwitch, ɵngcc1.NgSwitchCase, ɵngcc5.CdkMonitorFocus, ɵngcc6.CdkPortalOutlet, MatMonthView, MatYearView, MatMultiYearView], styles: [\".mat-calendar{display:block}.mat-calendar-header{padding:8px 8px 0 8px}.mat-calendar-content{padding:0 8px 8px 8px;outline:0}.mat-calendar-controls{display:flex;margin:5% calc(33% / 7 - 16px)}.mat-calendar-spacer{flex:1 1 auto}.mat-calendar-period-button{min-width:0}.mat-calendar-arrow{display:inline-block;width:0;height:0;border-left:5px solid transparent;border-right:5px solid transparent;border-top-width:5px;border-top-style:solid;margin:0 0 0 5px;vertical-align:middle}.mat-calendar-arrow.mat-calendar-invert{transform:rotate(180deg)}[dir=rtl] .mat-calendar-arrow{margin:0 5px 0 0}.mat-calendar-next-button,.mat-calendar-previous-button{position:relative}.mat-calendar-next-button::after,.mat-calendar-previous-button::after{top:0;left:0;right:0;bottom:0;position:absolute;content:'';margin:15.5px;border:0 solid currentColor;border-top-width:2px}[dir=rtl] .mat-calendar-next-button,[dir=rtl] .mat-calendar-previous-button{transform:rotate(180deg)}.mat-calendar-previous-button::after{border-left-width:2px;transform:translateX(2px) rotate(-45deg)}.mat-calendar-next-button::after{border-right-width:2px;transform:translateX(-2px) rotate(45deg)}.mat-calendar-table{border-spacing:0;border-collapse:collapse;width:100%}.mat-calendar-table-header th{text-align:center;padding:0 0 8px 0}.mat-calendar-table-header-divider{position:relative;height:1px}.mat-calendar-table-header-divider::after{content:'';position:absolute;top:0;left:-8px;right:-8px;height:1px}\"], encapsulation: 2, changeDetection: 0 });\n/** @nocollapse */\nMatCalendar.ctorParameters = () => [\n    { type: MatDatepickerIntl },\n    { type: DateAdapter, decorators: [{ type: Optional }] },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_DATE_FORMATS,] }] },\n    { type: ChangeDetectorRef }\n];\nMatCalendar.propDecorators = {\n    headerComponent: [{ type: Input }],\n    startAt: [{ type: Input }],\n    startView: [{ type: Input }],\n    selected: [{ type: Input }],\n    minDate: [{ type: Input }],\n    maxDate: [{ type: Input }],\n    dateFilter: [{ type: Input }],\n    dateClass: [{ type: Input }],\n    selectedChange: [{ type: Output }],\n    yearSelected: [{ type: Output }],\n    monthSelected: [{ type: Output }],\n    _userSelection: [{ type: Output }],\n    monthView: [{ type: ViewChild, args: [MatMonthView,] }],\n    yearView: [{ type: ViewChild, args: [MatYearView,] }],\n    multiYearView: [{ type: ViewChild, args: [MatMultiYearView,] }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatCalendar, [{\n        type: Component,\n        args: [{ selector: 'mat-calendar', template: \"<ng-template [cdkPortalOutlet]=\\\"_calendarHeaderPortal\\\"></ng-template><div class=\\\"mat-calendar-content\\\" [ngSwitch]=\\\"currentView\\\" cdkMonitorSubtreeFocus tabindex=\\\"-1\\\"><mat-month-view *ngSwitchCase=\\\"'month'\\\" [(activeDate)]=\\\"activeDate\\\" [selected]=\\\"selected\\\" [dateFilter]=\\\"dateFilter\\\" [maxDate]=\\\"maxDate\\\" [minDate]=\\\"minDate\\\" [dateClass]=\\\"dateClass\\\" (selectedChange)=\\\"_dateSelected($event)\\\" (_userSelection)=\\\"_userSelected()\\\"></mat-month-view><mat-year-view *ngSwitchCase=\\\"'year'\\\" [(activeDate)]=\\\"activeDate\\\" [selected]=\\\"selected\\\" [dateFilter]=\\\"dateFilter\\\" [maxDate]=\\\"maxDate\\\" [minDate]=\\\"minDate\\\" (monthSelected)=\\\"_monthSelectedInYearView($event)\\\" (selectedChange)=\\\"_goToDateInView($event, 'month')\\\"></mat-year-view><mat-multi-year-view *ngSwitchCase=\\\"'multi-year'\\\" [(activeDate)]=\\\"activeDate\\\" [selected]=\\\"selected\\\" [dateFilter]=\\\"dateFilter\\\" [maxDate]=\\\"maxDate\\\" [minDate]=\\\"minDate\\\" (yearSelected)=\\\"_yearSelectedInMultiYearView($event)\\\" (selectedChange)=\\\"_goToDateInView($event, 'year')\\\"></mat-multi-year-view></div>\", host: {\n                    'class': 'mat-calendar'\n                }, exportAs: 'matCalendar', encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, styles: [\".mat-calendar{display:block}.mat-calendar-header{padding:8px 8px 0 8px}.mat-calendar-content{padding:0 8px 8px 8px;outline:0}.mat-calendar-controls{display:flex;margin:5% calc(33% / 7 - 16px)}.mat-calendar-spacer{flex:1 1 auto}.mat-calendar-period-button{min-width:0}.mat-calendar-arrow{display:inline-block;width:0;height:0;border-left:5px solid transparent;border-right:5px solid transparent;border-top-width:5px;border-top-style:solid;margin:0 0 0 5px;vertical-align:middle}.mat-calendar-arrow.mat-calendar-invert{transform:rotate(180deg)}[dir=rtl] .mat-calendar-arrow{margin:0 5px 0 0}.mat-calendar-next-button,.mat-calendar-previous-button{position:relative}.mat-calendar-next-button::after,.mat-calendar-previous-button::after{top:0;left:0;right:0;bottom:0;position:absolute;content:'';margin:15.5px;border:0 solid currentColor;border-top-width:2px}[dir=rtl] .mat-calendar-next-button,[dir=rtl] .mat-calendar-previous-button{transform:rotate(180deg)}.mat-calendar-previous-button::after{border-left-width:2px;transform:translateX(2px) rotate(-45deg)}.mat-calendar-next-button::after{border-right-width:2px;transform:translateX(-2px) rotate(45deg)}.mat-calendar-table{border-spacing:0;border-collapse:collapse;width:100%}.mat-calendar-table-header th{text-align:center;padding:0 0 8px 0}.mat-calendar-table-header-divider{position:relative;height:1px}.mat-calendar-table-header-divider::after{content:'';position:absolute;top:0;left:-8px;right:-8px;height:1px}\"] }]\n    }], function () { return [{ type: MatDatepickerIntl }, { type: ɵngcc2.DateAdapter, decorators: [{\n                type: Optional\n            }] }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_DATE_FORMATS]\n            }] }, { type: ɵngcc0.ChangeDetectorRef }]; }, { startView: [{\n            type: Input\n        }], selectedChange: [{\n            type: Output\n        }], yearSelected: [{\n            type: Output\n        }], monthSelected: [{\n            type: Output\n        }], _userSelection: [{\n            type: Output\n        }], startAt: [{\n            type: Input\n        }], selected: [{\n            type: Input\n        }], minDate: [{\n            type: Input\n        }], maxDate: [{\n            type: Input\n        }], headerComponent: [{\n            type: Input\n        }], dateFilter: [{\n            type: Input\n        }], dateClass: [{\n            type: Input\n        }], monthView: [{\n            type: ViewChild,\n            args: [MatMonthView]\n        }], yearView: [{\n            type: ViewChild,\n            args: [MatYearView]\n        }], multiYearView: [{\n            type: ViewChild,\n            args: [MatMultiYearView]\n        }] }); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Animations used by the Material datepicker.\n * \\@docs-private\n * @type {?}\n */\nconst matDatepickerAnimations = {\n    /**\n     * Transforms the height of the datepicker's calendar.\n     */\n    transformPanel: trigger('transformPanel', [\n        state('void', style({\n            opacity: 0,\n            transform: 'scale(1, 0.8)'\n        })),\n        transition('void => enter', animate('120ms cubic-bezier(0, 0, 0.2, 1)', style({\n            opacity: 1,\n            transform: 'scale(1, 1)'\n        }))),\n        transition('* => void', animate('100ms linear', style({ opacity: 0 })))\n    ]),\n    /**\n     * Fades in the content of the calendar.\n     */\n    fadeInCalendar: trigger('fadeInCalendar', [\n        state('void', style({ opacity: 0 })),\n        state('enter', style({ opacity: 1 })),\n        // TODO(crisbeto): this animation should be removed since it isn't quite on spec, but we\n        // need to keep it until #12440 gets in, otherwise the exit animation will look glitchy.\n        transition('void => *', animate('120ms 100ms cubic-bezier(0.55, 0, 0.55, 0.2)'))\n    ])\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Used to generate a unique ID for each datepicker instance.\n * @type {?}\n */\nlet datepickerUid = 0;\n/**\n * Injection token that determines the scroll handling while the calendar is open.\n * @type {?}\n */\nconst MAT_DATEPICKER_SCROLL_STRATEGY = new InjectionToken('mat-datepicker-scroll-strategy');\n/**\n * \\@docs-private\n * @param {?} overlay\n * @return {?}\n */\nfunction MAT_DATEPICKER_SCROLL_STRATEGY_FACTORY(overlay) {\n    return () => overlay.scrollStrategies.reposition();\n}\n/**\n * \\@docs-private\n * @type {?}\n */\nconst MAT_DATEPICKER_SCROLL_STRATEGY_FACTORY_PROVIDER = {\n    provide: MAT_DATEPICKER_SCROLL_STRATEGY,\n    deps: [Overlay],\n    useFactory: MAT_DATEPICKER_SCROLL_STRATEGY_FACTORY,\n};\n// Boilerplate for applying mixins to MatDatepickerContent.\n/**\n * \\@docs-private\n */\nclass MatDatepickerContentBase {\n    /**\n     * @param {?} _elementRef\n     */\n    constructor(_elementRef) {\n        this._elementRef = _elementRef;\n    }\n}\n/** @type {?} */\nconst _MatDatepickerContentMixinBase = mixinColor(MatDatepickerContentBase);\n/**\n * Component used as the content for the datepicker dialog and popup. We use this instead of using\n * MatCalendar directly as the content so we can control the initial focus. This also gives us a\n * place to put additional features of the popup that are not part of the calendar itself in the\n * future. (e.g. confirmation buttons).\n * \\@docs-private\n * @template D\n */\nclass MatDatepickerContent extends _MatDatepickerContentMixinBase {\n    /**\n     * @param {?} elementRef\n     */\n    constructor(elementRef) {\n        super(elementRef);\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterViewInit() {\n        this._calendar.focusActiveCell();\n    }\n}\nMatDatepickerContent.ɵfac = function MatDatepickerContent_Factory(t) { return new (t || MatDatepickerContent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\nMatDatepickerContent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: MatDatepickerContent, selectors: [[\"mat-datepicker-content\"]], viewQuery: function MatDatepickerContent_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(MatCalendar, 5);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._calendar = _t.first);\n    } }, hostAttrs: [1, \"mat-datepicker-content\"], hostVars: 3, hostBindings: function MatDatepickerContent_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵsyntheticHostProperty(\"@transformPanel\", \"enter\");\n        ɵngcc0.ɵɵclassProp(\"mat-datepicker-content-touch\", ctx.datepicker.touchUi);\n    } }, inputs: { color: \"color\" }, exportAs: [\"matDatepickerContent\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature], decls: 1, vars: 11, consts: [[\"cdkTrapFocus\", \"\", 3, \"id\", \"ngClass\", \"startAt\", \"startView\", \"minDate\", \"maxDate\", \"dateFilter\", \"headerComponent\", \"selected\", \"dateClass\", \"selectedChange\", \"yearSelected\", \"monthSelected\", \"_userSelection\"]], template: function MatDatepickerContent_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"mat-calendar\", 0);\n        ɵngcc0.ɵɵlistener(\"selectedChange\", function MatDatepickerContent_Template_mat_calendar_selectedChange_0_listener($event) { return ctx.datepicker.select($event); })(\"yearSelected\", function MatDatepickerContent_Template_mat_calendar_yearSelected_0_listener($event) { return ctx.datepicker._selectYear($event); })(\"monthSelected\", function MatDatepickerContent_Template_mat_calendar_monthSelected_0_listener($event) { return ctx.datepicker._selectMonth($event); })(\"_userSelection\", function MatDatepickerContent_Template_mat_calendar__userSelection_0_listener() { return ctx.datepicker.close(); });\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"id\", ctx.datepicker.id)(\"ngClass\", ctx.datepicker.panelClass)(\"startAt\", ctx.datepicker.startAt)(\"startView\", ctx.datepicker.startView)(\"minDate\", ctx.datepicker._minDate)(\"maxDate\", ctx.datepicker._maxDate)(\"dateFilter\", ctx.datepicker._dateFilter)(\"headerComponent\", ctx.datepicker.calendarHeaderComponent)(\"selected\", ctx.datepicker._selected)(\"dateClass\", ctx.datepicker.dateClass)(\"@fadeInCalendar\", \"enter\");\n    } }, dependencies: [ɵngcc1.NgClass, ɵngcc5.CdkTrapFocus, MatCalendar], styles: [\".mat-datepicker-content{display:block;border-radius:4px}.mat-datepicker-content .mat-calendar{width:296px;height:354px}.mat-datepicker-content-touch{display:block;max-height:80vh;overflow:auto;margin:-24px}.mat-datepicker-content-touch .mat-calendar{min-width:250px;min-height:312px;max-width:750px;max-height:788px}@media all and (orientation:landscape){.mat-datepicker-content-touch .mat-calendar{width:64vh;height:80vh}}@media all and (orientation:portrait){.mat-datepicker-content-touch .mat-calendar{width:80vw;height:100vw}}\"], encapsulation: 2, data: { animation: [\n            matDatepickerAnimations.transformPanel,\n            matDatepickerAnimations.fadeInCalendar,\n        ] }, changeDetection: 0 });\n/** @nocollapse */\nMatDatepickerContent.ctorParameters = () => [\n    { type: ElementRef }\n];\nMatDatepickerContent.propDecorators = {\n    _calendar: [{ type: ViewChild, args: [MatCalendar,] }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatDatepickerContent, [{\n        type: Component,\n        args: [{ selector: 'mat-datepicker-content', template: \"<mat-calendar cdkTrapFocus [id]=\\\"datepicker.id\\\" [ngClass]=\\\"datepicker.panelClass\\\" [startAt]=\\\"datepicker.startAt\\\" [startView]=\\\"datepicker.startView\\\" [minDate]=\\\"datepicker._minDate\\\" [maxDate]=\\\"datepicker._maxDate\\\" [dateFilter]=\\\"datepicker._dateFilter\\\" [headerComponent]=\\\"datepicker.calendarHeaderComponent\\\" [selected]=\\\"datepicker._selected\\\" [dateClass]=\\\"datepicker.dateClass\\\" [@fadeInCalendar]=\\\"'enter'\\\" (selectedChange)=\\\"datepicker.select($event)\\\" (yearSelected)=\\\"datepicker._selectYear($event)\\\" (monthSelected)=\\\"datepicker._selectMonth($event)\\\" (_userSelection)=\\\"datepicker.close()\\\"></mat-calendar>\", host: {\n                    'class': 'mat-datepicker-content',\n                    '[@transformPanel]': '\"enter\"',\n                    '[class.mat-datepicker-content-touch]': 'datepicker.touchUi'\n                }, animations: [\n                    matDatepickerAnimations.transformPanel,\n                    matDatepickerAnimations.fadeInCalendar,\n                ], exportAs: 'matDatepickerContent', encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, inputs: ['color'], styles: [\".mat-datepicker-content{display:block;border-radius:4px}.mat-datepicker-content .mat-calendar{width:296px;height:354px}.mat-datepicker-content-touch{display:block;max-height:80vh;overflow:auto;margin:-24px}.mat-datepicker-content-touch .mat-calendar{min-width:250px;min-height:312px;max-width:750px;max-height:788px}@media all and (orientation:landscape){.mat-datepicker-content-touch .mat-calendar{width:64vh;height:80vh}}@media all and (orientation:portrait){.mat-datepicker-content-touch .mat-calendar{width:80vw;height:100vw}}\"] }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }]; }, { _calendar: [{\n            type: ViewChild,\n            args: [MatCalendar]\n        }] }); })();\n// TODO(mmalerba): We use a component instead of a directive here so the user can use implicit\n// template reference variables (e.g. #d vs #d=\"matDatepicker\"). We can change this to a directive\n// if angular adds support for `exportAs: '$implicit'` on directives.\n/**\n * Component responsible for managing the datepicker popup/dialog.\n * @template D\n */\nclass MatDatepicker {\n    /**\n     * @param {?} _dialog\n     * @param {?} _overlay\n     * @param {?} _ngZone\n     * @param {?} _viewContainerRef\n     * @param {?} scrollStrategy\n     * @param {?} _dateAdapter\n     * @param {?} _dir\n     * @param {?} _document\n     */\n    constructor(_dialog, _overlay, _ngZone, _viewContainerRef, scrollStrategy, _dateAdapter, _dir, _document) {\n        this._dialog = _dialog;\n        this._overlay = _overlay;\n        this._ngZone = _ngZone;\n        this._viewContainerRef = _viewContainerRef;\n        this._dateAdapter = _dateAdapter;\n        this._dir = _dir;\n        this._document = _document;\n        /**\n         * The view that the calendar should start in.\n         */\n        this.startView = 'month';\n        this._touchUi = false;\n        /**\n         * Emits selected year in multiyear view.\n         * This doesn't imply a change on the selected date.\n         */\n        this.yearSelected = new EventEmitter();\n        /**\n         * Emits selected month in year view.\n         * This doesn't imply a change on the selected date.\n         */\n        this.monthSelected = new EventEmitter();\n        /**\n         * Emits when the datepicker has been opened.\n         */\n        this.openedStream = new EventEmitter();\n        /**\n         * Emits when the datepicker has been closed.\n         */\n        this.closedStream = new EventEmitter();\n        this._opened = false;\n        /**\n         * The id for the datepicker calendar.\n         */\n        this.id = `mat-datepicker-${datepickerUid++}`;\n        this._validSelected = null;\n        /**\n         * The element that was focused before the datepicker was opened.\n         */\n        this._focusedElementBeforeOpen = null;\n        /**\n         * Subscription to value changes in the associated input element.\n         */\n        this._inputSubscription = Subscription.EMPTY;\n        /**\n         * Emits when the datepicker is disabled.\n         */\n        this._disabledChange = new Subject();\n        /**\n         * Emits new selected date when selected date changes.\n         */\n        this._selectedChanged = new Subject();\n        if (!this._dateAdapter) {\n            throw createMissingDateImplError('DateAdapter');\n        }\n        this._scrollStrategy = scrollStrategy;\n    }\n    /**\n     * The date to open the calendar to initially.\n     * @return {?}\n     */\n    get startAt() {\n        // If an explicit startAt is set we start there, otherwise we start at whatever the currently\n        // selected value is.\n        return this._startAt || (this._datepickerInput ? this._datepickerInput.value : null);\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set startAt(value) {\n        this._startAt = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n    }\n    /**\n     * Color palette to use on the datepicker's calendar.\n     * @return {?}\n     */\n    get color() {\n        return this._color ||\n            (this._datepickerInput ? this._datepickerInput._getThemePalette() : undefined);\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set color(value) {\n        this._color = value;\n    }\n    /**\n     * Whether the calendar UI is in touch mode. In touch mode the calendar opens in a dialog rather\n     * than a popup and elements have more padding to allow for bigger touch targets.\n     * @return {?}\n     */\n    get touchUi() { return this._touchUi; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set touchUi(value) {\n        this._touchUi = coerceBooleanProperty(value);\n    }\n    /**\n     * Whether the datepicker pop-up should be disabled.\n     * @return {?}\n     */\n    get disabled() {\n        return this._disabled === undefined && this._datepickerInput ?\n            this._datepickerInput.disabled : !!this._disabled;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set disabled(value) {\n        /** @type {?} */\n        const newValue = coerceBooleanProperty(value);\n        if (newValue !== this._disabled) {\n            this._disabled = newValue;\n            this._disabledChange.next(newValue);\n        }\n    }\n    /**\n     * Whether the calendar is open.\n     * @return {?}\n     */\n    get opened() { return this._opened; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set opened(value) { value ? this.open() : this.close(); }\n    /**\n     * The currently selected date.\n     * @return {?}\n     */\n    get _selected() { return this._validSelected; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set _selected(value) { this._validSelected = value; }\n    /**\n     * The minimum selectable date.\n     * @return {?}\n     */\n    get _minDate() {\n        return this._datepickerInput && this._datepickerInput.min;\n    }\n    /**\n     * The maximum selectable date.\n     * @return {?}\n     */\n    get _maxDate() {\n        return this._datepickerInput && this._datepickerInput.max;\n    }\n    /**\n     * @return {?}\n     */\n    get _dateFilter() {\n        return this._datepickerInput && this._datepickerInput._dateFilter;\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this.close();\n        this._inputSubscription.unsubscribe();\n        this._disabledChange.complete();\n        if (this._popupRef) {\n            this._popupRef.dispose();\n            this._popupComponentRef = null;\n        }\n    }\n    /**\n     * Selects the given date\n     * @param {?} date\n     * @return {?}\n     */\n    select(date) {\n        /** @type {?} */\n        let oldValue = this._selected;\n        this._selected = date;\n        if (!this._dateAdapter.sameDate(oldValue, this._selected)) {\n            this._selectedChanged.next(date);\n        }\n    }\n    /**\n     * Emits the selected year in multiyear view\n     * @param {?} normalizedYear\n     * @return {?}\n     */\n    _selectYear(normalizedYear) {\n        this.yearSelected.emit(normalizedYear);\n    }\n    /**\n     * Emits selected month in year view\n     * @param {?} normalizedMonth\n     * @return {?}\n     */\n    _selectMonth(normalizedMonth) {\n        this.monthSelected.emit(normalizedMonth);\n    }\n    /**\n     * Register an input with this datepicker.\n     * @param {?} input The datepicker input to register with this datepicker.\n     * @return {?}\n     */\n    _registerInput(input) {\n        if (this._datepickerInput) {\n            throw Error('A MatDatepicker can only be associated with a single input.');\n        }\n        this._datepickerInput = input;\n        this._inputSubscription =\n            this._datepickerInput._valueChange.subscribe((value) => this._selected = value);\n    }\n    /**\n     * Open the calendar.\n     * @return {?}\n     */\n    open() {\n        if (this._opened || this.disabled) {\n            return;\n        }\n        if (!this._datepickerInput) {\n            throw Error('Attempted to open an MatDatepicker with no associated input.');\n        }\n        if (this._document) {\n            this._focusedElementBeforeOpen = this._document.activeElement;\n        }\n        this.touchUi ? this._openAsDialog() : this._openAsPopup();\n        this._opened = true;\n        this.openedStream.emit();\n    }\n    /**\n     * Close the calendar.\n     * @return {?}\n     */\n    close() {\n        if (!this._opened) {\n            return;\n        }\n        if (this._popupRef && this._popupRef.hasAttached()) {\n            this._popupRef.detach();\n        }\n        if (this._dialogRef) {\n            this._dialogRef.close();\n            this._dialogRef = null;\n        }\n        if (this._calendarPortal && this._calendarPortal.isAttached) {\n            this._calendarPortal.detach();\n        }\n        /** @type {?} */\n        const completeClose = () => {\n            // The `_opened` could've been reset already if\n            // we got two events in quick succession.\n            if (this._opened) {\n                this._opened = false;\n                this.closedStream.emit();\n                this._focusedElementBeforeOpen = null;\n            }\n        };\n        if (this._focusedElementBeforeOpen &&\n            typeof this._focusedElementBeforeOpen.focus === 'function') {\n            // Because IE moves focus asynchronously, we can't count on it being restored before we've\n            // marked the datepicker as closed. If the event fires out of sequence and the element that\n            // we're refocusing opens the datepicker on focus, the user could be stuck with not being\n            // able to close the calendar at all. We work around it by making the logic, that marks\n            // the datepicker as closed, async as well.\n            this._focusedElementBeforeOpen.focus();\n            setTimeout(completeClose);\n        }\n        else {\n            completeClose();\n        }\n    }\n    /**\n     * Open the calendar as a dialog.\n     * @private\n     * @return {?}\n     */\n    _openAsDialog() {\n        // Usually this would be handled by `open` which ensures that we can only have one overlay\n        // open at a time, however since we reset the variables in async handlers some overlays\n        // may slip through if the user opens and closes multiple times in quick succession (e.g.\n        // by holding down the enter key).\n        if (this._dialogRef) {\n            this._dialogRef.close();\n        }\n        this._dialogRef = this._dialog.open(MatDatepickerContent, {\n            direction: this._dir ? this._dir.value : 'ltr',\n            viewContainerRef: this._viewContainerRef,\n            panelClass: 'mat-datepicker-dialog',\n        });\n        this._dialogRef.afterClosed().subscribe(() => this.close());\n        this._dialogRef.componentInstance.datepicker = this;\n        this._setColor();\n    }\n    /**\n     * Open the calendar as a popup.\n     * @private\n     * @return {?}\n     */\n    _openAsPopup() {\n        if (!this._calendarPortal) {\n            this._calendarPortal = new ComponentPortal(MatDatepickerContent, this._viewContainerRef);\n        }\n        if (!this._popupRef) {\n            this._createPopup();\n        }\n        if (!this._popupRef.hasAttached()) {\n            this._popupComponentRef = this._popupRef.attach(this._calendarPortal);\n            this._popupComponentRef.instance.datepicker = this;\n            this._setColor();\n            // Update the position once the calendar has rendered.\n            this._ngZone.onStable.asObservable().pipe(take(1)).subscribe(() => {\n                this._popupRef.updatePosition();\n            });\n        }\n    }\n    /**\n     * Create the popup.\n     * @private\n     * @return {?}\n     */\n    _createPopup() {\n        /** @type {?} */\n        const overlayConfig = new OverlayConfig({\n            positionStrategy: this._createPopupPositionStrategy(),\n            hasBackdrop: true,\n            backdropClass: 'mat-overlay-transparent-backdrop',\n            direction: this._dir,\n            scrollStrategy: this._scrollStrategy(),\n            panelClass: 'mat-datepicker-popup',\n        });\n        this._popupRef = this._overlay.create(overlayConfig);\n        this._popupRef.overlayElement.setAttribute('role', 'dialog');\n        merge(this._popupRef.backdropClick(), this._popupRef.detachments(), this._popupRef.keydownEvents().pipe(filter(event => {\n            // Closing on alt + up is only valid when there's an input associated with the datepicker.\n            return event.keyCode === ESCAPE ||\n                (this._datepickerInput && event.altKey && event.keyCode === UP_ARROW);\n        }))).subscribe(() => this.close());\n    }\n    /**\n     * Create the popup PositionStrategy.\n     * @private\n     * @return {?}\n     */\n    _createPopupPositionStrategy() {\n        return this._overlay.position()\n            .flexibleConnectedTo(this._datepickerInput.getConnectedOverlayOrigin())\n            .withTransformOriginOn('.mat-datepicker-content')\n            .withFlexibleDimensions(false)\n            .withViewportMargin(8)\n            .withLockedPosition()\n            .withPositions([\n            {\n                originX: 'start',\n                originY: 'bottom',\n                overlayX: 'start',\n                overlayY: 'top'\n            },\n            {\n                originX: 'start',\n                originY: 'top',\n                overlayX: 'start',\n                overlayY: 'bottom'\n            },\n            {\n                originX: 'end',\n                originY: 'bottom',\n                overlayX: 'end',\n                overlayY: 'top'\n            },\n            {\n                originX: 'end',\n                originY: 'top',\n                overlayX: 'end',\n                overlayY: 'bottom'\n            }\n        ]);\n    }\n    /**\n     * @private\n     * @param {?} obj The object to check.\n     * @return {?} The given object if it is both a date instance and valid, otherwise null.\n     */\n    _getValidDateOrNull(obj) {\n        return (this._dateAdapter.isDateInstance(obj) && this._dateAdapter.isValid(obj)) ? obj : null;\n    }\n    /**\n     * Passes the current theme color along to the calendar overlay.\n     * @private\n     * @return {?}\n     */\n    _setColor() {\n        /** @type {?} */\n        const color = this.color;\n        if (this._popupComponentRef) {\n            this._popupComponentRef.instance.color = color;\n        }\n        if (this._dialogRef) {\n            this._dialogRef.componentInstance.color = color;\n        }\n    }\n}\nMatDatepicker.ɵfac = function MatDatepicker_Factory(t) { return new (t || MatDatepicker)(ɵngcc0.ɵɵdirectiveInject(ɵngcc7.MatDialog), ɵngcc0.ɵɵdirectiveInject(ɵngcc8.Overlay), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(MAT_DATEPICKER_SCROLL_STRATEGY), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.DateAdapter, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc3.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(DOCUMENT, 8)); };\nMatDatepicker.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: MatDatepicker, selectors: [[\"mat-datepicker\"]], inputs: { startView: \"startView\", startAt: \"startAt\", color: \"color\", touchUi: \"touchUi\", disabled: \"disabled\", opened: \"opened\", calendarHeaderComponent: \"calendarHeaderComponent\", panelClass: \"panelClass\", dateClass: \"dateClass\" }, outputs: { yearSelected: \"yearSelected\", monthSelected: \"monthSelected\", openedStream: \"opened\", closedStream: \"closed\" }, exportAs: [\"matDatepicker\"], decls: 0, vars: 0, template: function MatDatepicker_Template(rf, ctx) { }, encapsulation: 2, changeDetection: 0 });\n/** @nocollapse */\nMatDatepicker.ctorParameters = () => [\n    { type: MatDialog },\n    { type: Overlay },\n    { type: NgZone },\n    { type: ViewContainerRef },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_DATEPICKER_SCROLL_STRATEGY,] }] },\n    { type: DateAdapter, decorators: [{ type: Optional }] },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [DOCUMENT,] }] }\n];\nMatDatepicker.propDecorators = {\n    calendarHeaderComponent: [{ type: Input }],\n    startAt: [{ type: Input }],\n    startView: [{ type: Input }],\n    color: [{ type: Input }],\n    touchUi: [{ type: Input }],\n    disabled: [{ type: Input }],\n    yearSelected: [{ type: Output }],\n    monthSelected: [{ type: Output }],\n    panelClass: [{ type: Input }],\n    dateClass: [{ type: Input }],\n    openedStream: [{ type: Output, args: ['opened',] }],\n    closedStream: [{ type: Output, args: ['closed',] }],\n    opened: [{ type: Input }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatDatepicker, [{\n        type: Component,\n        args: [{ selector: 'mat-datepicker',\n                template: '',\n                exportAs: 'matDatepicker',\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                encapsulation: ViewEncapsulation.None\n            }]\n    }], function () { return [{ type: ɵngcc7.MatDialog }, { type: ɵngcc8.Overlay }, { type: ɵngcc0.NgZone }, { type: ɵngcc0.ViewContainerRef }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_DATEPICKER_SCROLL_STRATEGY]\n            }] }, { type: ɵngcc2.DateAdapter, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc3.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [DOCUMENT]\n            }] }]; }, { startView: [{\n            type: Input\n        }], yearSelected: [{\n            type: Output\n        }], monthSelected: [{\n            type: Output\n        }], openedStream: [{\n            type: Output,\n            args: ['opened']\n        }], closedStream: [{\n            type: Output,\n            args: ['closed']\n        }], startAt: [{\n            type: Input\n        }], color: [{\n            type: Input\n        }], touchUi: [{\n            type: Input\n        }], disabled: [{\n            type: Input\n        }], opened: [{\n            type: Input\n        }], calendarHeaderComponent: [{\n            type: Input\n        }], panelClass: [{\n            type: Input\n        }], dateClass: [{\n            type: Input\n        }] }); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * \\@docs-private\n * @type {?}\n */\nconst MAT_DATEPICKER_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => MatDatepickerInput),\n    multi: true\n};\n/**\n * \\@docs-private\n * @type {?}\n */\nconst MAT_DATEPICKER_VALIDATORS = {\n    provide: NG_VALIDATORS,\n    useExisting: forwardRef(() => MatDatepickerInput),\n    multi: true\n};\n/**\n * An event used for datepicker input and change events. We don't always have access to a native\n * input or change event because the event may have been triggered by the user clicking on the\n * calendar popup. For consistency, we always use MatDatepickerInputEvent instead.\n * @template D\n */\nclass MatDatepickerInputEvent {\n    /**\n     * @param {?} target\n     * @param {?} targetElement\n     */\n    constructor(target, targetElement) {\n        this.target = target;\n        this.targetElement = targetElement;\n        this.value = this.target.value;\n    }\n}\n/**\n * Directive used to connect an input to a MatDatepicker.\n * @template D\n */\nclass MatDatepickerInput {\n    /**\n     * @param {?} _elementRef\n     * @param {?} _dateAdapter\n     * @param {?} _dateFormats\n     * @param {?} _formField\n     */\n    constructor(_elementRef, _dateAdapter, _dateFormats, _formField) {\n        this._elementRef = _elementRef;\n        this._dateAdapter = _dateAdapter;\n        this._dateFormats = _dateFormats;\n        this._formField = _formField;\n        /**\n         * Emits when a `change` event is fired on this `<input>`.\n         */\n        this.dateChange = new EventEmitter();\n        /**\n         * Emits when an `input` event is fired on this `<input>`.\n         */\n        this.dateInput = new EventEmitter();\n        /**\n         * Emits when the value changes (either due to user input or programmatic change).\n         */\n        this._valueChange = new EventEmitter();\n        /**\n         * Emits when the disabled state has changed\n         */\n        this._disabledChange = new EventEmitter();\n        this._onTouched = () => { };\n        this._cvaOnChange = () => { };\n        this._validatorOnChange = () => { };\n        this._datepickerSubscription = Subscription.EMPTY;\n        this._localeSubscription = Subscription.EMPTY;\n        /**\n         * The form control validator for whether the input parses.\n         */\n        this._parseValidator = () => {\n            return this._lastValueValid ?\n                null : { 'matDatepickerParse': { 'text': this._elementRef.nativeElement.value } };\n        };\n        /**\n         * The form control validator for the min date.\n         */\n        this._minValidator = (control) => {\n            /** @type {?} */\n            const controlValue = this._getValidDateOrNull(this._dateAdapter.deserialize(control.value));\n            return (!this.min || !controlValue ||\n                this._dateAdapter.compareDate(this.min, controlValue) <= 0) ?\n                null : { 'matDatepickerMin': { 'min': this.min, 'actual': controlValue } };\n        };\n        /**\n         * The form control validator for the max date.\n         */\n        this._maxValidator = (control) => {\n            /** @type {?} */\n            const controlValue = this._getValidDateOrNull(this._dateAdapter.deserialize(control.value));\n            return (!this.max || !controlValue ||\n                this._dateAdapter.compareDate(this.max, controlValue) >= 0) ?\n                null : { 'matDatepickerMax': { 'max': this.max, 'actual': controlValue } };\n        };\n        /**\n         * The form control validator for the date filter.\n         */\n        this._filterValidator = (control) => {\n            /** @type {?} */\n            const controlValue = this._getValidDateOrNull(this._dateAdapter.deserialize(control.value));\n            return !this._dateFilter || !controlValue || this._dateFilter(controlValue) ?\n                null : { 'matDatepickerFilter': true };\n        };\n        /**\n         * The combined form control validator for this input.\n         */\n        this._validator = Validators.compose([this._parseValidator, this._minValidator, this._maxValidator, this._filterValidator]);\n        /**\n         * Whether the last value set on the input was valid.\n         */\n        this._lastValueValid = false;\n        if (!this._dateAdapter) {\n            throw createMissingDateImplError('DateAdapter');\n        }\n        if (!this._dateFormats) {\n            throw createMissingDateImplError('MAT_DATE_FORMATS');\n        }\n        // Update the displayed date when the locale changes.\n        this._localeSubscription = _dateAdapter.localeChanges.subscribe(() => {\n            this.value = this.value;\n        });\n    }\n    /**\n     * The datepicker that this input is associated with.\n     * @param {?} value\n     * @return {?}\n     */\n    set matDatepicker(value) {\n        if (!value) {\n            return;\n        }\n        this._datepicker = value;\n        this._datepicker._registerInput(this);\n        this._datepickerSubscription.unsubscribe();\n        this._datepickerSubscription = this._datepicker._selectedChanged.subscribe((selected) => {\n            this.value = selected;\n            this._cvaOnChange(selected);\n            this._onTouched();\n            this.dateInput.emit(new MatDatepickerInputEvent(this, this._elementRef.nativeElement));\n            this.dateChange.emit(new MatDatepickerInputEvent(this, this._elementRef.nativeElement));\n        });\n    }\n    /**\n     * Function that can be used to filter out dates within the datepicker.\n     * @param {?} value\n     * @return {?}\n     */\n    set matDatepickerFilter(value) {\n        this._dateFilter = value;\n        this._validatorOnChange();\n    }\n    /**\n     * The value of the input.\n     * @return {?}\n     */\n    get value() { return this._value; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set value(value) {\n        value = this._dateAdapter.deserialize(value);\n        this._lastValueValid = !value || this._dateAdapter.isValid(value);\n        value = this._getValidDateOrNull(value);\n        /** @type {?} */\n        const oldDate = this.value;\n        this._value = value;\n        this._formatValue(value);\n        if (!this._dateAdapter.sameDate(oldDate, value)) {\n            this._valueChange.emit(value);\n        }\n    }\n    /**\n     * The minimum valid date.\n     * @return {?}\n     */\n    get min() { return this._min; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set min(value) {\n        this._min = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n        this._validatorOnChange();\n    }\n    /**\n     * The maximum valid date.\n     * @return {?}\n     */\n    get max() { return this._max; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set max(value) {\n        this._max = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n        this._validatorOnChange();\n    }\n    /**\n     * Whether the datepicker-input is disabled.\n     * @return {?}\n     */\n    get disabled() { return !!this._disabled; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set disabled(value) {\n        /** @type {?} */\n        const newValue = coerceBooleanProperty(value);\n        /** @type {?} */\n        const element = this._elementRef.nativeElement;\n        if (this._disabled !== newValue) {\n            this._disabled = newValue;\n            this._disabledChange.emit(newValue);\n        }\n        // We need to null check the `blur` method, because it's undefined during SSR.\n        if (newValue && element.blur) {\n            // Normally, native input elements automatically blur if they turn disabled. This behavior\n            // is problematic, because it would mean that it triggers another change detection cycle,\n            // which then causes a changed after checked error if the input element was focused before.\n            element.blur();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._datepickerSubscription.unsubscribe();\n        this._localeSubscription.unsubscribe();\n        this._valueChange.complete();\n        this._disabledChange.complete();\n    }\n    /**\n     * \\@docs-private\n     * @param {?} fn\n     * @return {?}\n     */\n    registerOnValidatorChange(fn) {\n        this._validatorOnChange = fn;\n    }\n    /**\n     * \\@docs-private\n     * @param {?} c\n     * @return {?}\n     */\n    validate(c) {\n        return this._validator ? this._validator(c) : null;\n    }\n    /**\n     * @deprecated\n     * \\@breaking-change 8.0.0 Use `getConnectedOverlayOrigin` instead\n     * @return {?}\n     */\n    getPopupConnectionElementRef() {\n        return this.getConnectedOverlayOrigin();\n    }\n    /**\n     * Gets the element that the datepicker popup should be connected to.\n     * @return {?} The element to connect the popup to.\n     */\n    getConnectedOverlayOrigin() {\n        return this._formField ? this._formField.getConnectedOverlayOrigin() : this._elementRef;\n    }\n    // Implemented as part of ControlValueAccessor.\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    writeValue(value) {\n        this.value = value;\n    }\n    // Implemented as part of ControlValueAccessor.\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    registerOnChange(fn) {\n        this._cvaOnChange = fn;\n    }\n    // Implemented as part of ControlValueAccessor.\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    registerOnTouched(fn) {\n        this._onTouched = fn;\n    }\n    // Implemented as part of ControlValueAccessor.\n    /**\n     * @param {?} isDisabled\n     * @return {?}\n     */\n    setDisabledState(isDisabled) {\n        this.disabled = isDisabled;\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    _onKeydown(event) {\n        /** @type {?} */\n        const isAltDownArrow = event.altKey && event.keyCode === DOWN_ARROW;\n        if (this._datepicker && isAltDownArrow && !this._elementRef.nativeElement.readOnly) {\n            this._datepicker.open();\n            event.preventDefault();\n        }\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    _onInput(value) {\n        /** @type {?} */\n        let date = this._dateAdapter.parse(value, this._dateFormats.parse.dateInput);\n        this._lastValueValid = !date || this._dateAdapter.isValid(date);\n        date = this._getValidDateOrNull(date);\n        if (!this._dateAdapter.sameDate(date, this._value)) {\n            this._value = date;\n            this._cvaOnChange(date);\n            this._valueChange.emit(date);\n            this.dateInput.emit(new MatDatepickerInputEvent(this, this._elementRef.nativeElement));\n        }\n        else {\n            this._validatorOnChange();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    _onChange() {\n        this.dateChange.emit(new MatDatepickerInputEvent(this, this._elementRef.nativeElement));\n    }\n    /**\n     * Returns the palette used by the input's form field, if any.\n     * @return {?}\n     */\n    _getThemePalette() {\n        return this._formField ? this._formField.color : undefined;\n    }\n    /**\n     * Handles blur events on the input.\n     * @return {?}\n     */\n    _onBlur() {\n        // Reformat the input only if we have a valid value.\n        if (this.value) {\n            this._formatValue(this.value);\n        }\n        this._onTouched();\n    }\n    /**\n     * Formats a value and sets it on the input element.\n     * @private\n     * @param {?} value\n     * @return {?}\n     */\n    _formatValue(value) {\n        this._elementRef.nativeElement.value =\n            value ? this._dateAdapter.format(value, this._dateFormats.display.dateInput) : '';\n    }\n    /**\n     * @private\n     * @param {?} obj The object to check.\n     * @return {?} The given object if it is both a date instance and valid, otherwise null.\n     */\n    _getValidDateOrNull(obj) {\n        return (this._dateAdapter.isDateInstance(obj) && this._dateAdapter.isValid(obj)) ? obj : null;\n    }\n}\nMatDatepickerInput.ɵfac = function MatDatepickerInput_Factory(t) { return new (t || MatDatepickerInput)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.DateAdapter, 8), ɵngcc0.ɵɵdirectiveInject(MAT_DATE_FORMATS, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc9.MatFormField, 8)); };\nMatDatepickerInput.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: MatDatepickerInput, selectors: [[\"input\", \"matDatepicker\", \"\"]], hostVars: 5, hostBindings: function MatDatepickerInput_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"input\", function MatDatepickerInput_input_HostBindingHandler($event) { return ctx._onInput($event.target.value); })(\"change\", function MatDatepickerInput_change_HostBindingHandler() { return ctx._onChange(); })(\"blur\", function MatDatepickerInput_blur_HostBindingHandler() { return ctx._onBlur(); })(\"keydown\", function MatDatepickerInput_keydown_HostBindingHandler($event) { return ctx._onKeydown($event); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵhostProperty(\"disabled\", ctx.disabled);\n        ɵngcc0.ɵɵattribute(\"aria-haspopup\", true)(\"aria-owns\", (ctx._datepicker == null ? null : ctx._datepicker.opened) && ctx._datepicker.id || null)(\"min\", ctx.min ? ctx._dateAdapter.toIso8601(ctx.min) : null)(\"max\", ctx.max ? ctx._dateAdapter.toIso8601(ctx.max) : null);\n    } }, inputs: { value: \"value\", matDatepicker: \"matDatepicker\", matDatepickerFilter: \"matDatepickerFilter\", min: \"min\", max: \"max\", disabled: \"disabled\" }, outputs: { dateChange: \"dateChange\", dateInput: \"dateInput\" }, exportAs: [\"matDatepickerInput\"], features: [ɵngcc0.ɵɵProvidersFeature([\n            MAT_DATEPICKER_VALUE_ACCESSOR,\n            MAT_DATEPICKER_VALIDATORS,\n            { provide: MAT_INPUT_VALUE_ACCESSOR, useExisting: MatDatepickerInput },\n        ])] });\n/** @nocollapse */\nMatDatepickerInput.ctorParameters = () => [\n    { type: ElementRef },\n    { type: DateAdapter, decorators: [{ type: Optional }] },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_DATE_FORMATS,] }] },\n    { type: MatFormField, decorators: [{ type: Optional }] }\n];\nMatDatepickerInput.propDecorators = {\n    matDatepicker: [{ type: Input }],\n    matDatepickerFilter: [{ type: Input }],\n    value: [{ type: Input }],\n    min: [{ type: Input }],\n    max: [{ type: Input }],\n    disabled: [{ type: Input }],\n    dateChange: [{ type: Output }],\n    dateInput: [{ type: Output }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatDatepickerInput, [{\n        type: Directive,\n        args: [{\n                selector: 'input[matDatepicker]',\n                providers: [\n                    MAT_DATEPICKER_VALUE_ACCESSOR,\n                    MAT_DATEPICKER_VALIDATORS,\n                    { provide: MAT_INPUT_VALUE_ACCESSOR, useExisting: MatDatepickerInput },\n                ],\n                host: {\n                    '[attr.aria-haspopup]': 'true',\n                    '[attr.aria-owns]': '(_datepicker?.opened && _datepicker.id) || null',\n                    '[attr.min]': 'min ? _dateAdapter.toIso8601(min) : null',\n                    '[attr.max]': 'max ? _dateAdapter.toIso8601(max) : null',\n                    '[disabled]': 'disabled',\n                    '(input)': '_onInput($event.target.value)',\n                    '(change)': '_onChange()',\n                    '(blur)': '_onBlur()',\n                    '(keydown)': '_onKeydown($event)'\n                },\n                exportAs: 'matDatepickerInput'\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc2.DateAdapter, decorators: [{\n                type: Optional\n            }] }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_DATE_FORMATS]\n            }] }, { type: ɵngcc9.MatFormField, decorators: [{\n                type: Optional\n            }] }]; }, { dateChange: [{\n            type: Output\n        }], dateInput: [{\n            type: Output\n        }], value: [{\n            type: Input\n        }], matDatepicker: [{\n            type: Input\n        }], matDatepickerFilter: [{\n            type: Input\n        }], min: [{\n            type: Input\n        }], max: [{\n            type: Input\n        }], disabled: [{\n            type: Input\n        }] }); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Can be used to override the icon of a `matDatepickerToggle`.\n */\nclass MatDatepickerToggleIcon {\n}\nMatDatepickerToggleIcon.ɵfac = function MatDatepickerToggleIcon_Factory(t) { return new (t || MatDatepickerToggleIcon)(); };\nMatDatepickerToggleIcon.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: MatDatepickerToggleIcon, selectors: [[\"\", \"matDatepickerToggleIcon\", \"\"]] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatDatepickerToggleIcon, [{\n        type: Directive,\n        args: [{\n                selector: '[matDatepickerToggleIcon]'\n            }]\n    }], null, null); })();\n/**\n * @template D\n */\nclass MatDatepickerToggle {\n    /**\n     * @param {?} _intl\n     * @param {?} _changeDetectorRef\n     * @param {?} defaultTabIndex\n     */\n    constructor(_intl, _changeDetectorRef, defaultTabIndex) {\n        this._intl = _intl;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._stateChanges = Subscription.EMPTY;\n        /** @type {?} */\n        const parsedTabIndex = Number(defaultTabIndex);\n        this.tabIndex = (parsedTabIndex || parsedTabIndex === 0) ? parsedTabIndex : null;\n    }\n    /**\n     * Whether the toggle button is disabled.\n     * @return {?}\n     */\n    get disabled() {\n        if (this._disabled === undefined && this.datepicker) {\n            return this.datepicker.disabled;\n        }\n        return !!this._disabled;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set disabled(value) {\n        this._disabled = coerceBooleanProperty(value);\n    }\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    ngOnChanges(changes) {\n        if (changes['datepicker']) {\n            this._watchStateChanges();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._stateChanges.unsubscribe();\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        this._watchStateChanges();\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    _open(event) {\n        if (this.datepicker && !this.disabled) {\n            this.datepicker.open();\n            event.stopPropagation();\n        }\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _watchStateChanges() {\n        /** @type {?} */\n        const datepickerDisabled = this.datepicker ? this.datepicker._disabledChange : of();\n        /** @type {?} */\n        const inputDisabled = this.datepicker && this.datepicker._datepickerInput ?\n            this.datepicker._datepickerInput._disabledChange : of();\n        /** @type {?} */\n        const datepickerToggled = this.datepicker ?\n            merge(this.datepicker.openedStream, this.datepicker.closedStream) :\n            of();\n        this._stateChanges.unsubscribe();\n        this._stateChanges = merge(this._intl.changes, datepickerDisabled, inputDisabled, datepickerToggled).subscribe(() => this._changeDetectorRef.markForCheck());\n    }\n}\nMatDatepickerToggle.ɵfac = function MatDatepickerToggle_Factory(t) { return new (t || MatDatepickerToggle)(ɵngcc0.ɵɵdirectiveInject(MatDatepickerIntl), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵinjectAttribute('tabindex')); };\nMatDatepickerToggle.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: MatDatepickerToggle, selectors: [[\"mat-datepicker-toggle\"]], contentQueries: function MatDatepickerToggle_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatDatepickerToggleIcon, 5);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._customIcon = _t.first);\n    } }, viewQuery: function MatDatepickerToggle_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(_c2, 5);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._button = _t.first);\n    } }, hostAttrs: [1, \"mat-datepicker-toggle\"], hostVars: 7, hostBindings: function MatDatepickerToggle_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"focus\", function MatDatepickerToggle_focus_HostBindingHandler() { return ctx._button.focus(); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"tabindex\", -1);\n        ɵngcc0.ɵɵclassProp(\"mat-datepicker-toggle-active\", ctx.datepicker && ctx.datepicker.opened)(\"mat-accent\", ctx.datepicker && ctx.datepicker.color === \"accent\")(\"mat-warn\", ctx.datepicker && ctx.datepicker.color === \"warn\");\n    } }, inputs: { tabIndex: \"tabIndex\", disabled: \"disabled\", datepicker: [\"for\", \"datepicker\"], disableRipple: \"disableRipple\" }, exportAs: [\"matDatepickerToggle\"], features: [ɵngcc0.ɵɵNgOnChangesFeature], ngContentSelectors: _c4, decls: 4, vars: 5, consts: [[\"mat-icon-button\", \"\", \"type\", \"button\", \"aria-haspopup\", \"true\", 3, \"disabled\", \"disableRipple\", \"click\"], [\"button\", \"\"], [\"class\", \"mat-datepicker-toggle-default-icon\", \"viewBox\", \"0 0 24 24\", \"width\", \"24px\", \"height\", \"24px\", \"fill\", \"currentColor\", \"focusable\", \"false\", 4, \"ngIf\"], [\"viewBox\", \"0 0 24 24\", \"width\", \"24px\", \"height\", \"24px\", \"fill\", \"currentColor\", \"focusable\", \"false\", 1, \"mat-datepicker-toggle-default-icon\"], [\"d\", \"M19 3h-1V1h-2v2H8V1H6v2H5c-1.11 0-1.99.9-1.99 2L3 19c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm0 16H5V8h14v11zM7 10h5v5H7z\"]], template: function MatDatepickerToggle_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c3);\n        ɵngcc0.ɵɵelementStart(0, \"button\", 0, 1);\n        ɵngcc0.ɵɵlistener(\"click\", function MatDatepickerToggle_Template_button_click_0_listener($event) { return ctx._open($event); });\n        ɵngcc0.ɵɵtemplate(2, MatDatepickerToggle__svg_svg_2_Template, 2, 0, \"svg\", 2);\n        ɵngcc0.ɵɵprojection(3);\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"disabled\", ctx.disabled)(\"disableRipple\", ctx.disableRipple);\n        ɵngcc0.ɵɵattribute(\"aria-label\", ctx._intl.openCalendarLabel)(\"tabindex\", ctx.disabled ? -1 : ctx.tabIndex);\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵproperty(\"ngIf\", !ctx._customIcon);\n    } }, dependencies: [ɵngcc1.NgIf, ɵngcc4.MatButton], styles: [\".mat-form-field-appearance-legacy .mat-form-field-prefix .mat-datepicker-toggle-default-icon,.mat-form-field-appearance-legacy .mat-form-field-suffix .mat-datepicker-toggle-default-icon{width:1em}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-datepicker-toggle-default-icon,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-datepicker-toggle-default-icon{display:block;width:1.5em;height:1.5em}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-icon-button .mat-datepicker-toggle-default-icon,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-icon-button .mat-datepicker-toggle-default-icon{margin:auto}\"], encapsulation: 2, changeDetection: 0 });\n/** @nocollapse */\nMatDatepickerToggle.ctorParameters = () => [\n    { type: MatDatepickerIntl },\n    { type: ChangeDetectorRef },\n    { type: String, decorators: [{ type: Attribute, args: ['tabindex',] }] }\n];\nMatDatepickerToggle.propDecorators = {\n    datepicker: [{ type: Input, args: ['for',] }],\n    tabIndex: [{ type: Input }],\n    disabled: [{ type: Input }],\n    disableRipple: [{ type: Input }],\n    _customIcon: [{ type: ContentChild, args: [MatDatepickerToggleIcon,] }],\n    _button: [{ type: ViewChild, args: ['button',] }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatDatepickerToggle, [{\n        type: Component,\n        args: [{ selector: 'mat-datepicker-toggle', template: \"<button #button mat-icon-button type=\\\"button\\\" aria-haspopup=\\\"true\\\" [attr.aria-label]=\\\"_intl.openCalendarLabel\\\" [attr.tabindex]=\\\"disabled ? -1 : tabIndex\\\" [disabled]=\\\"disabled\\\" [disableRipple]=\\\"disableRipple\\\" (click)=\\\"_open($event)\\\"><svg *ngIf=\\\"!_customIcon\\\" class=\\\"mat-datepicker-toggle-default-icon\\\" viewBox=\\\"0 0 24 24\\\" width=\\\"24px\\\" height=\\\"24px\\\" fill=\\\"currentColor\\\" focusable=\\\"false\\\"><path d=\\\"M19 3h-1V1h-2v2H8V1H6v2H5c-1.11 0-1.99.9-1.99 2L3 19c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm0 16H5V8h14v11zM7 10h5v5H7z\\\"/></svg><ng-content select=\\\"[matDatepickerToggleIcon]\\\"></ng-content></button>\", host: {\n                    'class': 'mat-datepicker-toggle',\n                    // Always set the tabindex to -1 so that it doesn't overlap with any custom tabindex the\n                    // consumer may have provided, while still being able to receive focus.\n                    '[attr.tabindex]': '-1',\n                    '[class.mat-datepicker-toggle-active]': 'datepicker && datepicker.opened',\n                    '[class.mat-accent]': 'datepicker && datepicker.color === \"accent\"',\n                    '[class.mat-warn]': 'datepicker && datepicker.color === \"warn\"',\n                    '(focus)': '_button.focus()'\n                }, exportAs: 'matDatepickerToggle', encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, styles: [\".mat-form-field-appearance-legacy .mat-form-field-prefix .mat-datepicker-toggle-default-icon,.mat-form-field-appearance-legacy .mat-form-field-suffix .mat-datepicker-toggle-default-icon{width:1em}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-datepicker-toggle-default-icon,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-datepicker-toggle-default-icon{display:block;width:1.5em;height:1.5em}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-icon-button .mat-datepicker-toggle-default-icon,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-icon-button .mat-datepicker-toggle-default-icon{margin:auto}\"] }]\n    }], function () { return [{ type: MatDatepickerIntl }, { type: ɵngcc0.ChangeDetectorRef }, { type: String, decorators: [{\n                type: Attribute,\n                args: ['tabindex']\n            }] }]; }, { tabIndex: [{\n            type: Input\n        }], disabled: [{\n            type: Input\n        }], datepicker: [{\n            type: Input,\n            args: ['for']\n        }], disableRipple: [{\n            type: Input\n        }], _customIcon: [{\n            type: ContentChild,\n            args: [MatDatepickerToggleIcon]\n        }], _button: [{\n            type: ViewChild,\n            args: ['button']\n        }] }); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass MatDatepickerModule {\n}\nMatDatepickerModule.ɵfac = function MatDatepickerModule_Factory(t) { return new (t || MatDatepickerModule)(); };\nMatDatepickerModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: MatDatepickerModule });\nMatDatepickerModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ providers: [\n        MatDatepickerIntl,\n        MAT_DATEPICKER_SCROLL_STRATEGY_FACTORY_PROVIDER,\n    ], imports: [CommonModule,\n        MatButtonModule,\n        MatDialogModule,\n        OverlayModule,\n        A11yModule,\n        PortalModule] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatDatepickerModule, [{\n        type: NgModule,\n        args: [{\n                imports: [\n                    CommonModule,\n                    MatButtonModule,\n                    MatDialogModule,\n                    OverlayModule,\n                    A11yModule,\n                    PortalModule,\n                ],\n                exports: [\n                    MatCalendar,\n                    MatCalendarBody,\n                    MatDatepicker,\n                    MatDatepickerContent,\n                    MatDatepickerInput,\n                    MatDatepickerToggle,\n                    MatDatepickerToggleIcon,\n                    MatMonthView,\n                    MatYearView,\n                    MatMultiYearView,\n                    MatCalendarHeader,\n                ],\n                declarations: [\n                    MatCalendar,\n                    MatCalendarBody,\n                    MatDatepicker,\n                    MatDatepickerContent,\n                    MatDatepickerInput,\n                    MatDatepickerToggle,\n                    MatDatepickerToggleIcon,\n                    MatMonthView,\n                    MatYearView,\n                    MatMultiYearView,\n                    MatCalendarHeader,\n                ],\n                providers: [\n                    MatDatepickerIntl,\n                    MAT_DATEPICKER_SCROLL_STRATEGY_FACTORY_PROVIDER,\n                ],\n                entryComponents: [\n                    MatDatepickerContent,\n                    MatCalendarHeader,\n                ]\n            }]\n    }], null, null); })();\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatDatepickerModule, { declarations: function () { return [MatCalendar, MatCalendarBody, MatDatepicker, MatDatepickerContent, MatDatepickerInput, MatDatepickerToggle, MatDatepickerToggleIcon, MatMonthView, MatYearView, MatMultiYearView, MatCalendarHeader]; }, imports: function () { return [CommonModule,\n        MatButtonModule,\n        MatDialogModule,\n        OverlayModule,\n        A11yModule,\n        PortalModule]; }, exports: function () { return [MatCalendar, MatCalendarBody, MatDatepicker, MatDatepickerContent, MatDatepickerInput, MatDatepickerToggle, MatDatepickerToggleIcon, MatMonthView, MatYearView, MatMultiYearView, MatCalendarHeader]; } }); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\nexport { MatDatepickerModule, MatCalendarHeader, MatCalendar, MatCalendarCell, MatCalendarBody, MAT_DATEPICKER_SCROLL_STRATEGY_FACTORY, MAT_DATEPICKER_SCROLL_STRATEGY, MAT_DATEPICKER_SCROLL_STRATEGY_FACTORY_PROVIDER, MatDatepickerContentBase, _MatDatepickerContentMixinBase, MatDatepickerContent, MatDatepicker, matDatepickerAnimations, MAT_DATEPICKER_VALUE_ACCESSOR, MAT_DATEPICKER_VALIDATORS, MatDatepickerInputEvent, MatDatepickerInput, MatDatepickerIntl, MatDatepickerToggleIcon, MatDatepickerToggle, MatMonthView, MatYearView, MatMultiYearView as ɵa34 };\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}