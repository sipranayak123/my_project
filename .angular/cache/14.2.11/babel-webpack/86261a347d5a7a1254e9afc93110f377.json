{"ast":null,"code":"/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { NgModule, InjectionToken, Optional, Inject, isDevMode, inject, LOCALE_ID, Injectable, Directive, ElementRef, Input, NgZone, Component, ViewEncapsulation, ChangeDetectionStrategy, ChangeDetectorRef, EventEmitter, Output, defineInjectable } from '@angular/core';\nimport { HAMMER_LOADER, HammerGestureConfig } from '@angular/platform-browser';\nimport { BidiModule } from '@angular/cdk/bidi';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { Subject, Observable } from 'rxjs';\nimport { Platform, PlatformModule, normalizePassiveListenerOptions } from '@angular/cdk/platform';\nimport { startWith } from 'rxjs/operators';\nimport { isFakeMousedownFromScreenReader } from '@angular/cdk/a11y';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\nimport { ENTER, SPACE, hasModifierKey } from '@angular/cdk/keycodes';\nimport { CommonModule } from '@angular/common';\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * \\@docs-private\n */\n\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/platform';\nimport * as ɵngcc2 from '@angular/common';\nconst _c0 = [\"*\", [[\"mat-option\"], [\"ng-container\"]]];\nconst _c1 = [\"*\", \"mat-option, ng-container\"];\n\nfunction MatOption_mat_pseudo_checkbox_0_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"mat-pseudo-checkbox\", 3);\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"state\", ctx_r0.selected ? \"checked\" : \"\")(\"disabled\", ctx_r0.disabled);\n  }\n}\n\nconst _c2 = [\"*\"];\n\nclass AnimationCurves {}\n\nAnimationCurves.STANDARD_CURVE = 'cubic-bezier(0.4,0.0,0.2,1)';\nAnimationCurves.DECELERATION_CURVE = 'cubic-bezier(0.0,0.0,0.2,1)';\nAnimationCurves.ACCELERATION_CURVE = 'cubic-bezier(0.4,0.0,1,1)';\nAnimationCurves.SHARP_CURVE = 'cubic-bezier(0.4,0.0,0.6,1)';\n/**\n * \\@docs-private\n */\n\nclass AnimationDurations {}\n\nAnimationDurations.COMPLEX = '375ms';\nAnimationDurations.ENTERING = '225ms';\nAnimationDurations.EXITING = '195ms';\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Injection token that configures whether the Material sanity checks are enabled.\n * @type {?}\n */\n\nconst MATERIAL_SANITY_CHECKS = new InjectionToken('mat-sanity-checks', {\n  providedIn: 'root',\n  factory: MATERIAL_SANITY_CHECKS_FACTORY\n});\n/**\n * \\@docs-private\n * @return {?}\n */\n\nfunction MATERIAL_SANITY_CHECKS_FACTORY() {\n  return true;\n}\n/**\n * Module that captures anything that should be loaded and/or run for *all* Angular Material\n * components. This includes Bidi, etc.\n *\n * This module should be imported to each top-level component module (e.g., MatTabsModule).\n */\n\n\nclass MatCommonModule {\n  /**\n   * @param {?} _sanityChecksEnabled\n   * @param {?=} _hammerLoader\n   */\n  constructor(_sanityChecksEnabled, _hammerLoader) {\n    this._sanityChecksEnabled = _sanityChecksEnabled;\n    this._hammerLoader = _hammerLoader;\n    /**\n     * Whether we've done the global sanity checks (e.g. a theme is loaded, there is a doctype).\n     */\n\n    this._hasDoneGlobalChecks = false;\n    /**\n     * Whether we've already checked for HammerJs availability.\n     */\n\n    this._hasCheckedHammer = false;\n    /**\n     * Reference to the global `document` object.\n     */\n\n    this._document = typeof document === 'object' && document ? document : null;\n    /**\n     * Reference to the global 'window' object.\n     */\n\n    this._window = typeof window === 'object' && window ? window : null;\n\n    if (this._areChecksEnabled() && !this._hasDoneGlobalChecks) {\n      this._checkDoctypeIsDefined();\n\n      this._checkThemeIsPresent();\n\n      this._hasDoneGlobalChecks = true;\n    }\n  }\n  /**\n   * Whether any sanity checks are enabled\n   * @private\n   * @return {?}\n   */\n\n\n  _areChecksEnabled() {\n    return this._sanityChecksEnabled && isDevMode() && !this._isTestEnv();\n  }\n  /**\n   * Whether the code is running in tests.\n   * @private\n   * @return {?}\n   */\n\n\n  _isTestEnv() {\n    /** @type {?} */\n    const window =\n    /** @type {?} */\n    this._window;\n    return window && (window.__karma__ || window.jasmine);\n  }\n  /**\n   * @private\n   * @return {?}\n   */\n\n\n  _checkDoctypeIsDefined() {\n    if (this._document && !this._document.doctype) {\n      console.warn('Current document does not have a doctype. This may cause ' + 'some Angular Material components not to behave as expected.');\n    }\n  }\n  /**\n   * @private\n   * @return {?}\n   */\n\n\n  _checkThemeIsPresent() {\n    // We need to assert that the `body` is defined, because these checks run very early\n    // and the `body` won't be defined if the consumer put their scripts in the `head`.\n    if (!this._document || !this._document.body || typeof getComputedStyle !== 'function') {\n      return;\n    }\n    /** @type {?} */\n\n\n    const testElement = this._document.createElement('div');\n\n    testElement.classList.add('mat-theme-loaded-marker');\n\n    this._document.body.appendChild(testElement);\n    /** @type {?} */\n\n\n    const computedStyle = getComputedStyle(testElement); // In some situations the computed style of the test element can be null. For example in\n    // Firefox, the computed style is null if an application is running inside of a hidden iframe.\n    // See: https://bugzilla.mozilla.org/show_bug.cgi?id=548397\n\n    if (computedStyle && computedStyle.display !== 'none') {\n      console.warn('Could not find Angular Material core theme. Most Material ' + 'components may not work as expected. For more info refer ' + 'to the theming guide: https://material.angular.io/guide/theming');\n    }\n\n    this._document.body.removeChild(testElement);\n  }\n  /**\n   * Checks whether HammerJS is available.\n   * @return {?}\n   */\n\n\n  _checkHammerIsAvailable() {\n    if (this._hasCheckedHammer || !this._window) {\n      return;\n    }\n\n    if (this._areChecksEnabled() && !\n    /** @type {?} */\n    this._window['Hammer'] && !this._hammerLoader) {\n      console.warn('Could not find HammerJS. Certain Angular Material components may not work correctly.');\n    }\n\n    this._hasCheckedHammer = true;\n  }\n\n}\n\nMatCommonModule.ɵfac = function MatCommonModule_Factory(t) {\n  return new (t || MatCommonModule)(ɵngcc0.ɵɵinject(MATERIAL_SANITY_CHECKS, 8), ɵngcc0.ɵɵinject(HAMMER_LOADER, 8));\n};\n\nMatCommonModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n  type: MatCommonModule\n});\nMatCommonModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n  imports: [BidiModule, BidiModule]\n});\n/** @nocollapse */\n\nMatCommonModule.ctorParameters = () => [{\n  type: Boolean,\n  decorators: [{\n    type: Optional\n  }, {\n    type: Inject,\n    args: [MATERIAL_SANITY_CHECKS]\n  }]\n}, {\n  type: undefined,\n  decorators: [{\n    type: Optional\n  }, {\n    type: Inject,\n    args: [HAMMER_LOADER]\n  }]\n}];\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatCommonModule, [{\n    type: NgModule,\n    args: [{\n      imports: [BidiModule],\n      exports: [BidiModule]\n    }]\n  }], function () {\n    return [{\n      type: Boolean,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [MATERIAL_SANITY_CHECKS]\n      }]\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [HAMMER_LOADER]\n      }]\n    }];\n  }, null);\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatCommonModule, {\n    imports: function () {\n      return [BidiModule];\n    },\n    exports: function () {\n      return [BidiModule];\n    }\n  });\n})();\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Mixin to augment a directive with a `disabled` property.\n * @template T\n * @param {?} base\n * @return {?}\n */\n\n\nfunction mixinDisabled(base) {\n  return class extends base {\n    /**\n     * @param {...?} args\n     */\n    constructor(...args) {\n      super(...args);\n      this._disabled = false;\n    }\n    /**\n     * @return {?}\n     */\n\n\n    get disabled() {\n      return this._disabled;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n\n\n    set disabled(value) {\n      this._disabled = coerceBooleanProperty(value);\n    }\n\n  };\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Mixin to augment a directive with a `color` property.\n * @template T\n * @param {?} base\n * @param {?=} defaultColor\n * @return {?}\n */\n\n\nfunction mixinColor(base, defaultColor) {\n  return class extends base {\n    /**\n     * @return {?}\n     */\n    get color() {\n      return this._color;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n\n\n    set color(value) {\n      /** @type {?} */\n      const colorPalette = value || defaultColor;\n\n      if (colorPalette !== this._color) {\n        if (this._color) {\n          this._elementRef.nativeElement.classList.remove(`mat-${this._color}`);\n        }\n\n        if (colorPalette) {\n          this._elementRef.nativeElement.classList.add(`mat-${colorPalette}`);\n        }\n\n        this._color = colorPalette;\n      }\n    }\n    /**\n     * @param {...?} args\n     */\n\n\n    constructor(...args) {\n      super(...args); // Set the default color that can be specified from the mixin.\n\n      this.color = defaultColor;\n    }\n\n  };\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Mixin to augment a directive with a `disableRipple` property.\n * @template T\n * @param {?} base\n * @return {?}\n */\n\n\nfunction mixinDisableRipple(base) {\n  return class extends base {\n    /**\n     * @param {...?} args\n     */\n    constructor(...args) {\n      super(...args);\n      this._disableRipple = false;\n    }\n    /**\n     * Whether the ripple effect is disabled or not.\n     * @return {?}\n     */\n\n\n    get disableRipple() {\n      return this._disableRipple;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n\n\n    set disableRipple(value) {\n      this._disableRipple = coerceBooleanProperty(value);\n    }\n\n  };\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Mixin to augment a directive with a `tabIndex` property.\n * @template T\n * @param {?} base\n * @param {?=} defaultTabIndex\n * @return {?}\n */\n\n\nfunction mixinTabIndex(base, defaultTabIndex = 0) {\n  return class extends base {\n    /**\n     * @param {...?} args\n     */\n    constructor(...args) {\n      super(...args);\n      this._tabIndex = defaultTabIndex;\n    }\n    /**\n     * @return {?}\n     */\n\n\n    get tabIndex() {\n      return this.disabled ? -1 : this._tabIndex;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n\n\n    set tabIndex(value) {\n      // If the specified tabIndex value is null or undefined, fall back to the default value.\n      this._tabIndex = value != null ? value : defaultTabIndex;\n    }\n\n  };\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Mixin to augment a directive with updateErrorState method.\n * For component with `errorState` and need to update `errorState`.\n * @template T\n * @param {?} base\n * @return {?}\n */\n\n\nfunction mixinErrorState(base) {\n  return class extends base {\n    /**\n     * @param {...?} args\n     */\n    constructor(...args) {\n      super(...args);\n      /**\n       * Whether the component is in an error state.\n       */\n\n      this.errorState = false;\n      /**\n       * Stream that emits whenever the state of the input changes such that the wrapping\n       * `MatFormField` needs to run change detection.\n       */\n\n      this.stateChanges = new Subject();\n    }\n    /**\n     * @return {?}\n     */\n\n\n    updateErrorState() {\n      /** @type {?} */\n      const oldState = this.errorState;\n      /** @type {?} */\n\n      const parent = this._parentFormGroup || this._parentForm;\n      /** @type {?} */\n\n      const matcher = this.errorStateMatcher || this._defaultErrorStateMatcher;\n      /** @type {?} */\n\n      const control = this.ngControl ?\n      /** @type {?} */\n      this.ngControl.control : null;\n      /** @type {?} */\n\n      const newState = matcher.isErrorState(control, parent);\n\n      if (newState !== oldState) {\n        this.errorState = newState;\n        this.stateChanges.next();\n      }\n    }\n\n  };\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Mixin to augment a directive with an initialized property that will emits when ngOnInit ends.\n * @template T\n * @param {?} base\n * @return {?}\n */\n\n\nfunction mixinInitialized(base) {\n  return class extends base {\n    /**\n     * @param {...?} args\n     */\n    constructor(...args) {\n      super(...args);\n      /**\n       * Whether this directive has been marked as initialized.\n       */\n\n      this._isInitialized = false;\n      /**\n       * List of subscribers that subscribed before the directive was initialized. Should be notified\n       * during _markInitialized. Set to null after pending subscribers are notified, and should\n       * not expect to be populated after.\n       */\n\n      this._pendingSubscribers = [];\n      /**\n       * Observable stream that emits when the directive initializes. If already initialized, the\n       * subscriber is stored to be notified once _markInitialized is called.\n       */\n\n      this.initialized = new Observable(subscriber => {\n        // If initialized, immediately notify the subscriber. Otherwise store the subscriber to notify\n        // when _markInitialized is called.\n        if (this._isInitialized) {\n          this._notifySubscriber(subscriber);\n        } else {\n          /** @type {?} */\n          this._pendingSubscribers.push(subscriber);\n        }\n      });\n    }\n    /**\n     * Marks the state as initialized and notifies pending subscribers. Should be called at the end\n     * of ngOnInit.\n     * \\@docs-private\n     * @return {?}\n     */\n\n\n    _markInitialized() {\n      if (this._isInitialized) {\n        throw Error('This directive has already been marked as initialized and ' + 'should not be called twice.');\n      }\n\n      this._isInitialized = true;\n\n      /** @type {?} */\n      this._pendingSubscribers.forEach(this._notifySubscriber);\n\n      this._pendingSubscribers = null;\n    }\n    /**\n     * Emits and completes the subscriber stream (should only emit once).\n     * @param {?} subscriber\n     * @return {?}\n     */\n\n\n    _notifySubscriber(subscriber) {\n      subscriber.next();\n      subscriber.complete();\n    }\n\n  };\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * InjectionToken for datepicker that can be used to override default locale code.\n * @type {?}\n */\n\n\nconst MAT_DATE_LOCALE = new InjectionToken('MAT_DATE_LOCALE', {\n  providedIn: 'root',\n  factory: MAT_DATE_LOCALE_FACTORY\n});\n/**\n * \\@docs-private\n * @return {?}\n */\n\nfunction MAT_DATE_LOCALE_FACTORY() {\n  return inject(LOCALE_ID);\n}\n/**\n * No longer needed since MAT_DATE_LOCALE has been changed to a scoped injectable.\n * If you are importing and providing this in your code you can simply remove it.\n * @deprecated\n * \\@breaking-change 8.0.0\n * @type {?}\n */\n\n\nconst MAT_DATE_LOCALE_PROVIDER = {\n  provide: MAT_DATE_LOCALE,\n  useExisting: LOCALE_ID\n};\n/**\n * Adapts type `D` to be usable as a date by cdk-based components that work with dates.\n * @abstract\n * @template D\n */\n\nclass DateAdapter {\n  constructor() {\n    this._localeChanges = new Subject();\n  }\n  /**\n   * A stream that emits when the locale changes.\n   * @return {?}\n   */\n\n\n  get localeChanges() {\n    return this._localeChanges;\n  }\n  /**\n   * Attempts to deserialize a value to a valid date object. This is different from parsing in that\n   * deserialize should only accept non-ambiguous, locale-independent formats (e.g. a ISO 8601\n   * string). The default implementation does not allow any deserialization, it simply checks that\n   * the given value is already a valid date object or null. The `<mat-datepicker>` will call this\n   * method on all of it's `\\@Input()` properties that accept dates. It is therefore possible to\n   * support passing values from your backend directly to these properties by overriding this method\n   * to also deserialize the format used by your backend.\n   * @param {?} value The value to be deserialized into a date object.\n   * @return {?} The deserialized date object, either a valid date, null if the value can be\n   *     deserialized into a null date (e.g. the empty string), or an invalid date.\n   */\n\n\n  deserialize(value) {\n    if (value == null || this.isDateInstance(value) && this.isValid(value)) {\n      return value;\n    }\n\n    return this.invalid();\n  }\n  /**\n   * Sets the locale used for all dates.\n   * @param {?} locale The new locale.\n   * @return {?}\n   */\n\n\n  setLocale(locale) {\n    this.locale = locale;\n\n    this._localeChanges.next();\n  }\n  /**\n   * Compares two dates.\n   * @param {?} first The first date to compare.\n   * @param {?} second The second date to compare.\n   * @return {?} 0 if the dates are equal, a number less than 0 if the first date is earlier,\n   *     a number greater than 0 if the first date is later.\n   */\n\n\n  compareDate(first, second) {\n    return this.getYear(first) - this.getYear(second) || this.getMonth(first) - this.getMonth(second) || this.getDate(first) - this.getDate(second);\n  }\n  /**\n   * Checks if two dates are equal.\n   * @param {?} first The first date to check.\n   * @param {?} second The second date to check.\n   * @return {?} Whether the two dates are equal.\n   *     Null dates are considered equal to other null dates.\n   */\n\n\n  sameDate(first, second) {\n    if (first && second) {\n      /** @type {?} */\n      let firstValid = this.isValid(first);\n      /** @type {?} */\n\n      let secondValid = this.isValid(second);\n\n      if (firstValid && secondValid) {\n        return !this.compareDate(first, second);\n      }\n\n      return firstValid == secondValid;\n    }\n\n    return first == second;\n  }\n  /**\n   * Clamp the given date between min and max dates.\n   * @param {?} date The date to clamp.\n   * @param {?=} min The minimum value to allow. If null or omitted no min is enforced.\n   * @param {?=} max The maximum value to allow. If null or omitted no max is enforced.\n   * @return {?} `min` if `date` is less than `min`, `max` if date is greater than `max`,\n   *     otherwise `date`.\n   */\n\n\n  clampDate(date, min, max) {\n    if (min && this.compareDate(date, min) < 0) {\n      return min;\n    }\n\n    if (max && this.compareDate(date, max) > 0) {\n      return max;\n    }\n\n    return date;\n  }\n\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/** @type {?} */\n\n\nconst MAT_DATE_FORMATS = new InjectionToken('mat-date-formats');\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// TODO(mmalerba): Remove when we no longer support safari 9.\n\n/**\n * Whether the browser supports the Intl API.\n * @type {?}\n */\n\nlet SUPPORTS_INTL_API; // We need a try/catch around the reference to `Intl`, because accessing it in some cases can\n// cause IE to throw. These cases are tied to particular versions of Windows and can happen if\n// the consumer is providing a polyfilled `Map`. See:\n// https://github.com/Microsoft/ChakraCore/issues/3189\n// https://github.com/angular/material2/issues/15687\n\ntry {\n  SUPPORTS_INTL_API = typeof Intl != 'undefined';\n} catch (_a) {\n  SUPPORTS_INTL_API = false;\n}\n/**\n * The default month names to use if Intl API is not available.\n * @type {?}\n */\n\n\nconst DEFAULT_MONTH_NAMES = {\n  'long': ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'],\n  'short': ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\n  'narrow': ['J', 'F', 'M', 'A', 'M', 'J', 'J', 'A', 'S', 'O', 'N', 'D']\n};\n\nconst ɵ0 = i => String(i + 1);\n/**\n * The default date names to use if Intl API is not available.\n * @type {?}\n */\n\n\nconst DEFAULT_DATE_NAMES = range(31, ɵ0);\n/**\n * The default day of the week names to use if Intl API is not available.\n * @type {?}\n */\n\nconst DEFAULT_DAY_OF_WEEK_NAMES = {\n  'long': ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'],\n  'short': ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],\n  'narrow': ['S', 'M', 'T', 'W', 'T', 'F', 'S']\n};\n/**\n * Matches strings that have the form of a valid RFC 3339 string\n * (https://tools.ietf.org/html/rfc3339). Note that the string may not actually be a valid date\n * because the regex will match strings an with out of bounds month, date, etc.\n * @type {?}\n */\n\nconst ISO_8601_REGEX = /^\\d{4}-\\d{2}-\\d{2}(?:T\\d{2}:\\d{2}:\\d{2}(?:\\.\\d+)?(?:Z|(?:(?:\\+|-)\\d{2}:\\d{2}))?)?$/;\n/**\n * Creates an array and fills it with values.\n * @template T\n * @param {?} length\n * @param {?} valueFunction\n * @return {?}\n */\n\nfunction range(length, valueFunction) {\n  /** @type {?} */\n  const valuesArray = Array(length);\n\n  for (let i = 0; i < length; i++) {\n    valuesArray[i] = valueFunction(i);\n  }\n\n  return valuesArray;\n}\n/**\n * Adapts the native JS Date for use with cdk-based components that work with dates.\n */\n\n\nclass NativeDateAdapter extends DateAdapter {\n  /**\n   * @param {?} matDateLocale\n   * @param {?} platform\n   */\n  constructor(matDateLocale, platform) {\n    super();\n    /**\n     * Whether to use `timeZone: 'utc'` with `Intl.DateTimeFormat` when formatting dates.\n     * Without this `Intl.DateTimeFormat` sometimes chooses the wrong timeZone, which can throw off\n     * the result. (e.g. in the en-US locale `new Date(1800, 7, 14).toLocaleDateString()`\n     * will produce `'8/13/1800'`.\n     *\n     * TODO(mmalerba): drop this variable. It's not being used in the code right now. We're now\n     * getting the string representation of a Date object from it's utc representation. We're keeping\n     * it here for sometime, just for precaution, in case we decide to revert some of these changes\n     * though.\n     */\n\n    this.useUtcForDisplay = true;\n    super.setLocale(matDateLocale); // IE does its own time zone correction, so we disable this on IE.\n\n    this.useUtcForDisplay = !platform.TRIDENT;\n    this._clampDate = platform.TRIDENT || platform.EDGE;\n  }\n  /**\n   * @param {?} date\n   * @return {?}\n   */\n\n\n  getYear(date) {\n    return date.getFullYear();\n  }\n  /**\n   * @param {?} date\n   * @return {?}\n   */\n\n\n  getMonth(date) {\n    return date.getMonth();\n  }\n  /**\n   * @param {?} date\n   * @return {?}\n   */\n\n\n  getDate(date) {\n    return date.getDate();\n  }\n  /**\n   * @param {?} date\n   * @return {?}\n   */\n\n\n  getDayOfWeek(date) {\n    return date.getDay();\n  }\n  /**\n   * @param {?} style\n   * @return {?}\n   */\n\n\n  getMonthNames(style) {\n    if (SUPPORTS_INTL_API) {\n      /** @type {?} */\n      const dtf = new Intl.DateTimeFormat(this.locale, {\n        month: style,\n        timeZone: 'utc'\n      });\n      return range(12, i => this._stripDirectionalityCharacters(this._format(dtf, new Date(2017, i, 1))));\n    }\n\n    return DEFAULT_MONTH_NAMES[style];\n  }\n  /**\n   * @return {?}\n   */\n\n\n  getDateNames() {\n    if (SUPPORTS_INTL_API) {\n      /** @type {?} */\n      const dtf = new Intl.DateTimeFormat(this.locale, {\n        day: 'numeric',\n        timeZone: 'utc'\n      });\n      return range(31, i => this._stripDirectionalityCharacters(this._format(dtf, new Date(2017, 0, i + 1))));\n    }\n\n    return DEFAULT_DATE_NAMES;\n  }\n  /**\n   * @param {?} style\n   * @return {?}\n   */\n\n\n  getDayOfWeekNames(style) {\n    if (SUPPORTS_INTL_API) {\n      /** @type {?} */\n      const dtf = new Intl.DateTimeFormat(this.locale, {\n        weekday: style,\n        timeZone: 'utc'\n      });\n      return range(7, i => this._stripDirectionalityCharacters(this._format(dtf, new Date(2017, 0, i + 1))));\n    }\n\n    return DEFAULT_DAY_OF_WEEK_NAMES[style];\n  }\n  /**\n   * @param {?} date\n   * @return {?}\n   */\n\n\n  getYearName(date) {\n    if (SUPPORTS_INTL_API) {\n      /** @type {?} */\n      const dtf = new Intl.DateTimeFormat(this.locale, {\n        year: 'numeric',\n        timeZone: 'utc'\n      });\n      return this._stripDirectionalityCharacters(this._format(dtf, date));\n    }\n\n    return String(this.getYear(date));\n  }\n  /**\n   * @return {?}\n   */\n\n\n  getFirstDayOfWeek() {\n    // We can't tell using native JS Date what the first day of the week is, we default to Sunday.\n    return 0;\n  }\n  /**\n   * @param {?} date\n   * @return {?}\n   */\n\n\n  getNumDaysInMonth(date) {\n    return this.getDate(this._createDateWithOverflow(this.getYear(date), this.getMonth(date) + 1, 0));\n  }\n  /**\n   * @param {?} date\n   * @return {?}\n   */\n\n\n  clone(date) {\n    return new Date(date.getTime());\n  }\n  /**\n   * @param {?} year\n   * @param {?} month\n   * @param {?} date\n   * @return {?}\n   */\n\n\n  createDate(year, month, date) {\n    // Check for invalid month and date (except upper bound on date which we have to check after\n    // creating the Date).\n    if (month < 0 || month > 11) {\n      throw Error(`Invalid month index \"${month}\". Month index has to be between 0 and 11.`);\n    }\n\n    if (date < 1) {\n      throw Error(`Invalid date \"${date}\". Date has to be greater than 0.`);\n    }\n    /** @type {?} */\n\n\n    let result = this._createDateWithOverflow(year, month, date); // Check that the date wasn't above the upper bound for the month, causing the month to overflow\n\n\n    if (result.getMonth() != month) {\n      throw Error(`Invalid date \"${date}\" for month with index \"${month}\".`);\n    }\n\n    return result;\n  }\n  /**\n   * @return {?}\n   */\n\n\n  today() {\n    return new Date();\n  }\n  /**\n   * @param {?} value\n   * @return {?}\n   */\n\n\n  parse(value) {\n    // We have no way using the native JS Date to set the parse format or locale, so we ignore these\n    // parameters.\n    if (typeof value == 'number') {\n      return new Date(value);\n    }\n\n    return value ? new Date(Date.parse(value)) : null;\n  }\n  /**\n   * @param {?} date\n   * @param {?} displayFormat\n   * @return {?}\n   */\n\n\n  format(date, displayFormat) {\n    if (!this.isValid(date)) {\n      throw Error('NativeDateAdapter: Cannot format invalid date.');\n    }\n\n    if (SUPPORTS_INTL_API) {\n      // On IE and Edge the i18n API will throw a hard error that can crash the entire app\n      // if we attempt to format a date whose year is less than 1 or greater than 9999.\n      if (this._clampDate && (date.getFullYear() < 1 || date.getFullYear() > 9999)) {\n        date = this.clone(date);\n        date.setFullYear(Math.max(1, Math.min(9999, date.getFullYear())));\n      }\n\n      displayFormat = Object.assign({}, displayFormat, {\n        timeZone: 'utc'\n      });\n      /** @type {?} */\n\n      const dtf = new Intl.DateTimeFormat(this.locale, displayFormat);\n      return this._stripDirectionalityCharacters(this._format(dtf, date));\n    }\n\n    return this._stripDirectionalityCharacters(date.toDateString());\n  }\n  /**\n   * @param {?} date\n   * @param {?} years\n   * @return {?}\n   */\n\n\n  addCalendarYears(date, years) {\n    return this.addCalendarMonths(date, years * 12);\n  }\n  /**\n   * @param {?} date\n   * @param {?} months\n   * @return {?}\n   */\n\n\n  addCalendarMonths(date, months) {\n    /** @type {?} */\n    let newDate = this._createDateWithOverflow(this.getYear(date), this.getMonth(date) + months, this.getDate(date)); // It's possible to wind up in the wrong month if the original month has more days than the new\n    // month. In this case we want to go to the last day of the desired month.\n    // Note: the additional + 12 % 12 ensures we end up with a positive number, since JS % doesn't\n    // guarantee this.\n\n\n    if (this.getMonth(newDate) != ((this.getMonth(date) + months) % 12 + 12) % 12) {\n      newDate = this._createDateWithOverflow(this.getYear(newDate), this.getMonth(newDate), 0);\n    }\n\n    return newDate;\n  }\n  /**\n   * @param {?} date\n   * @param {?} days\n   * @return {?}\n   */\n\n\n  addCalendarDays(date, days) {\n    return this._createDateWithOverflow(this.getYear(date), this.getMonth(date), this.getDate(date) + days);\n  }\n  /**\n   * @param {?} date\n   * @return {?}\n   */\n\n\n  toIso8601(date) {\n    return [date.getUTCFullYear(), this._2digit(date.getUTCMonth() + 1), this._2digit(date.getUTCDate())].join('-');\n  }\n  /**\n   * Returns the given value if given a valid Date or null. Deserializes valid ISO 8601 strings\n   * (https://www.ietf.org/rfc/rfc3339.txt) into valid Dates and empty string into null. Returns an\n   * invalid date for all other values.\n   * @param {?} value\n   * @return {?}\n   */\n\n\n  deserialize(value) {\n    if (typeof value === 'string') {\n      if (!value) {\n        return null;\n      } // The `Date` constructor accepts formats other than ISO 8601, so we need to make sure the\n      // string is the right format first.\n\n\n      if (ISO_8601_REGEX.test(value)) {\n        /** @type {?} */\n        let date = new Date(value);\n\n        if (this.isValid(date)) {\n          return date;\n        }\n      }\n    }\n\n    return super.deserialize(value);\n  }\n  /**\n   * @param {?} obj\n   * @return {?}\n   */\n\n\n  isDateInstance(obj) {\n    return obj instanceof Date;\n  }\n  /**\n   * @param {?} date\n   * @return {?}\n   */\n\n\n  isValid(date) {\n    return !isNaN(date.getTime());\n  }\n  /**\n   * @return {?}\n   */\n\n\n  invalid() {\n    return new Date(NaN);\n  }\n  /**\n   * Creates a date but allows the month and date to overflow.\n   * @private\n   * @param {?} year\n   * @param {?} month\n   * @param {?} date\n   * @return {?}\n   */\n\n\n  _createDateWithOverflow(year, month, date) {\n    /** @type {?} */\n    const result = new Date(year, month, date); // We need to correct for the fact that JS native Date treats years in range [0, 99] as\n    // abbreviations for 19xx.\n\n    if (year >= 0 && year < 100) {\n      result.setFullYear(this.getYear(result) - 1900);\n    }\n\n    return result;\n  }\n  /**\n   * Pads a number to make it two digits.\n   * @private\n   * @param {?} n The number to pad.\n   * @return {?} The padded number.\n   */\n\n\n  _2digit(n) {\n    return ('00' + n).slice(-2);\n  }\n  /**\n   * Strip out unicode LTR and RTL characters. Edge and IE insert these into formatted dates while\n   * other browsers do not. We remove them to make output consistent and because they interfere with\n   * date parsing.\n   * @private\n   * @param {?} str The string to strip direction characters from.\n   * @return {?} The stripped string.\n   */\n\n\n  _stripDirectionalityCharacters(str) {\n    return str.replace(/[\\u200e\\u200f]/g, '');\n  }\n  /**\n   * When converting Date object to string, javascript built-in functions may return wrong\n   * results because it applies its internal DST rules. The DST rules around the world change\n   * very frequently, and the current valid rule is not always valid in previous years though.\n   * We work around this problem building a new Date object which has its internal UTC\n   * representation with the local date and time.\n   * @private\n   * @param {?} dtf Intl.DateTimeFormat object, containg the desired string format. It must have\n   *    timeZone set to 'utc' to work fine.\n   * @param {?} date Date from which we want to get the string representation according to dtf\n   * @return {?} A Date object with its UTC representation based on the passed in date info\n   */\n\n\n  _format(dtf, date) {\n    /** @type {?} */\n    const d = new Date(Date.UTC(date.getFullYear(), date.getMonth(), date.getDate(), date.getHours(), date.getMinutes(), date.getSeconds(), date.getMilliseconds()));\n    return dtf.format(d);\n  }\n\n}\n\nNativeDateAdapter.ɵfac = function NativeDateAdapter_Factory(t) {\n  return new (t || NativeDateAdapter)(ɵngcc0.ɵɵinject(MAT_DATE_LOCALE, 8), ɵngcc0.ɵɵinject(ɵngcc1.Platform));\n};\n\nNativeDateAdapter.ɵprov = /*@__PURE__*/ɵngcc0.ɵɵdefineInjectable({\n  token: NativeDateAdapter,\n  factory: NativeDateAdapter.ɵfac\n});\n/** @nocollapse */\n\nNativeDateAdapter.ctorParameters = () => [{\n  type: String,\n  decorators: [{\n    type: Optional\n  }, {\n    type: Inject,\n    args: [MAT_DATE_LOCALE]\n  }]\n}, {\n  type: Platform\n}];\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NativeDateAdapter, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: String,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [MAT_DATE_LOCALE]\n      }]\n    }, {\n      type: ɵngcc1.Platform\n    }];\n  }, null);\n})();\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/** @type {?} */\n\n\nconst MAT_NATIVE_DATE_FORMATS = {\n  parse: {\n    dateInput: null\n  },\n  display: {\n    dateInput: {\n      year: 'numeric',\n      month: 'numeric',\n      day: 'numeric'\n    },\n    monthYearLabel: {\n      year: 'numeric',\n      month: 'short'\n    },\n    dateA11yLabel: {\n      year: 'numeric',\n      month: 'long',\n      day: 'numeric'\n    },\n    monthYearA11yLabel: {\n      year: 'numeric',\n      month: 'long'\n    }\n  }\n};\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\nclass NativeDateModule {}\n\nNativeDateModule.ɵfac = function NativeDateModule_Factory(t) {\n  return new (t || NativeDateModule)();\n};\n\nNativeDateModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n  type: NativeDateModule\n});\nNativeDateModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n  providers: [{\n    provide: DateAdapter,\n    useClass: NativeDateAdapter\n  }],\n  imports: [PlatformModule]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NativeDateModule, [{\n    type: NgModule,\n    args: [{\n      imports: [PlatformModule],\n      providers: [{\n        provide: DateAdapter,\n        useClass: NativeDateAdapter\n      }]\n    }]\n  }], null, null);\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NativeDateModule, {\n    imports: function () {\n      return [PlatformModule];\n    }\n  });\n})();\n\nconst ɵ0$1 = MAT_NATIVE_DATE_FORMATS;\n\nclass MatNativeDateModule {}\n\nMatNativeDateModule.ɵfac = function MatNativeDateModule_Factory(t) {\n  return new (t || MatNativeDateModule)();\n};\n\nMatNativeDateModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n  type: MatNativeDateModule\n});\nMatNativeDateModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n  providers: [{\n    provide: MAT_DATE_FORMATS,\n    useValue: ɵ0$1\n  }],\n  imports: [NativeDateModule]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatNativeDateModule, [{\n    type: NgModule,\n    args: [{\n      imports: [NativeDateModule],\n      providers: [{\n        provide: MAT_DATE_FORMATS,\n        useValue: ɵ0$1\n      }]\n    }]\n  }], null, null);\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatNativeDateModule, {\n    imports: [NativeDateModule]\n  });\n})();\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Error state matcher that matches when a control is invalid and dirty.\n */\n\n\nclass ShowOnDirtyErrorStateMatcher {\n  /**\n   * @param {?} control\n   * @param {?} form\n   * @return {?}\n   */\n  isErrorState(control, form) {\n    return !!(control && control.invalid && (control.dirty || form && form.submitted));\n  }\n\n}\n\nShowOnDirtyErrorStateMatcher.ɵfac = function ShowOnDirtyErrorStateMatcher_Factory(t) {\n  return new (t || ShowOnDirtyErrorStateMatcher)();\n};\n\nShowOnDirtyErrorStateMatcher.ɵprov = /*@__PURE__*/ɵngcc0.ɵɵdefineInjectable({\n  token: ShowOnDirtyErrorStateMatcher,\n  factory: ShowOnDirtyErrorStateMatcher.ɵfac\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ShowOnDirtyErrorStateMatcher, [{\n    type: Injectable\n  }], null, null);\n})();\n/**\n * Provider that defines how form controls behave with regards to displaying error messages.\n */\n\n\nclass ErrorStateMatcher {\n  /**\n   * @param {?} control\n   * @param {?} form\n   * @return {?}\n   */\n  isErrorState(control, form) {\n    return !!(control && control.invalid && (control.touched || form && form.submitted));\n  }\n\n}\n\nErrorStateMatcher.ɵfac = function ErrorStateMatcher_Factory(t) {\n  return new (t || ErrorStateMatcher)();\n};\n\nErrorStateMatcher.ɵprov = /*@__PURE__*/ɵngcc0.ɵɵdefineInjectable({\n  token: ErrorStateMatcher,\n  factory: ErrorStateMatcher.ɵfac,\n  providedIn: 'root'\n});\n/** @nocollapse */\n\nErrorStateMatcher.ngInjectableDef = defineInjectable({\n  factory: function ErrorStateMatcher_Factory() {\n    return new ErrorStateMatcher();\n  },\n  token: ErrorStateMatcher,\n  providedIn: \"root\"\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ErrorStateMatcher, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], null, null);\n})();\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Injection token that can be used to provide options to the Hammerjs instance.\n * More info at http://hammerjs.github.io/api/.\n * @type {?}\n */\n\n\nconst MAT_HAMMER_OPTIONS = new InjectionToken('MAT_HAMMER_OPTIONS');\n/** @type {?} */\n\nconst ANGULAR_MATERIAL_SUPPORTED_HAMMER_GESTURES = ['longpress', 'slide', 'slidestart', 'slideend', 'slideright', 'slideleft'];\n\nconst ɵ0$2 = () => {},\n      ɵ1 = () => {};\n/**\n * Fake HammerInstance that is used when a Hammer instance is requested when HammerJS has not\n * been loaded on the page.\n * @type {?}\n */\n\n\nconst noopHammerInstance = {\n  on: ɵ0$2,\n  off: ɵ1\n};\n/**\n * Adjusts configuration of our gesture library, Hammer.\n */\n\nclass GestureConfig extends HammerGestureConfig {\n  /**\n   * @param {?=} _hammerOptions\n   * @param {?=} commonModule\n   */\n  constructor(_hammerOptions, commonModule) {\n    super();\n    this._hammerOptions = _hammerOptions;\n    /**\n     * List of new event names to add to the gesture support list\n     */\n\n    this.events = ANGULAR_MATERIAL_SUPPORTED_HAMMER_GESTURES;\n\n    if (commonModule) {\n      commonModule._checkHammerIsAvailable();\n    }\n  }\n  /**\n   * Builds Hammer instance manually to add custom recognizers that match the Material Design spec.\n   *\n   * Our gesture names come from the Material Design gestures spec:\n   * https://material.io/design/#gestures-touch-mechanics\n   *\n   * More information on default recognizers can be found in Hammer docs:\n   * http://hammerjs.github.io/recognizer-pan/\n   * http://hammerjs.github.io/recognizer-press/\n   *\n   * @param {?} element Element to which to assign the new HammerJS gestures.\n   * @return {?} Newly-created HammerJS instance.\n   */\n\n\n  buildHammer(element) {\n    /** @type {?} */\n    const hammer = typeof window !== 'undefined' ?\n    /** @type {?} */\n    window.Hammer : null;\n\n    if (!hammer) {\n      // If HammerJS is not loaded here, return the noop HammerInstance. This is necessary to\n      // ensure that omitting HammerJS completely will not cause any errors while *also* supporting\n      // the lazy-loading of HammerJS via the HAMMER_LOADER token introduced in Angular 6.1.\n      // Because we can't depend on HAMMER_LOADER's existance until 7.0, we have to always set\n      // `this.events` to the set we support, instead of conditionally setting it to `[]` if\n      // `HAMMER_LOADER` is present (and then throwing an Error here if `window.Hammer` is\n      // undefined).\n      // @breaking-change 8.0.0\n      return noopHammerInstance;\n    }\n    /** @type {?} */\n\n\n    const mc = new hammer(element, this._hammerOptions || undefined); // Default Hammer Recognizers.\n\n    /** @type {?} */\n\n    const pan = new hammer.Pan();\n    /** @type {?} */\n\n    const swipe = new hammer.Swipe();\n    /** @type {?} */\n\n    const press = new hammer.Press(); // Notice that a HammerJS recognizer can only depend on one other recognizer once.\n    // Otherwise the previous `recognizeWith` will be dropped.\n    // TODO: Confirm threshold numbers with Material Design UX Team\n\n    /** @type {?} */\n\n    const slide = this._createRecognizer(pan, {\n      event: 'slide',\n      threshold: 0\n    }, swipe);\n    /** @type {?} */\n\n\n    const longpress = this._createRecognizer(press, {\n      event: 'longpress',\n      time: 500\n    }); // Overwrite the default `pan` event to use the swipe event.\n\n\n    pan.recognizeWith(swipe); // Since the slide event threshold is set to zero, the slide recognizer can fire and\n    // accidentally reset the longpress recognizer. In order to make sure that the two\n    // recognizers can run simultaneously but don't affect each other, we allow the slide\n    // recognizer to recognize while a longpress is being processed.\n    // See: https://github.com/hammerjs/hammer.js/blob/master/src/manager.js#L123-L124\n\n    longpress.recognizeWith(slide); // Add customized gestures to Hammer manager\n\n    mc.add([swipe, press, pan, slide, longpress]);\n    return (\n      /** @type {?} */\n      mc\n    );\n  }\n  /**\n   * Creates a new recognizer, without affecting the default recognizers of HammerJS\n   * @private\n   * @param {?} base\n   * @param {?} options\n   * @param {...?} inheritances\n   * @return {?}\n   */\n\n\n  _createRecognizer(base, options, ...inheritances) {\n    /** @type {?} */\n    let recognizer = new\n    /** @type {?} */\n    base.constructor(options);\n    inheritances.push(base);\n    inheritances.forEach(item => recognizer.recognizeWith(item));\n    return recognizer;\n  }\n\n}\n\nGestureConfig.ɵfac = function GestureConfig_Factory(t) {\n  return new (t || GestureConfig)(ɵngcc0.ɵɵinject(MAT_HAMMER_OPTIONS, 8), ɵngcc0.ɵɵinject(MatCommonModule, 8));\n};\n\nGestureConfig.ɵprov = /*@__PURE__*/ɵngcc0.ɵɵdefineInjectable({\n  token: GestureConfig,\n  factory: GestureConfig.ɵfac\n});\n/** @nocollapse */\n\nGestureConfig.ctorParameters = () => [{\n  type: undefined,\n  decorators: [{\n    type: Optional\n  }, {\n    type: Inject,\n    args: [MAT_HAMMER_OPTIONS]\n  }]\n}, {\n  type: MatCommonModule,\n  decorators: [{\n    type: Optional\n  }]\n}];\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(GestureConfig, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [MAT_HAMMER_OPTIONS]\n      }]\n    }, {\n      type: MatCommonModule,\n      decorators: [{\n        type: Optional\n      }]\n    }];\n  }, null);\n})();\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Shared directive to count lines inside a text area, such as a list item.\n * Line elements can be extracted with a \\@ContentChildren(MatLine) query, then\n * counted by checking the query list's length.\n */\n\n\nclass MatLine {}\n\nMatLine.ɵfac = function MatLine_Factory(t) {\n  return new (t || MatLine)();\n};\n\nMatLine.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n  type: MatLine,\n  selectors: [[\"\", \"mat-line\", \"\"], [\"\", \"matLine\", \"\"]],\n  hostAttrs: [1, \"mat-line\"]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatLine, [{\n    type: Directive,\n    args: [{\n      selector: '[mat-line], [matLine]',\n      host: {\n        'class': 'mat-line'\n      }\n    }]\n  }], null, null);\n})();\n/**\n * Helper that takes a query list of lines and sets the correct class on the host.\n * \\@docs-private\n * @param {?} lines\n * @param {?} element\n * @return {?}\n */\n\n\nfunction setLines(lines, element) {\n  // Note: doesn't need to unsubscribe, because `changes`\n  // gets completed by Angular when the view is destroyed.\n  lines.changes.pipe(startWith(lines)).subscribe(({\n    length\n  }) => {\n    setClass(element, 'mat-2-line', false);\n    setClass(element, 'mat-3-line', false);\n    setClass(element, 'mat-multi-line', false);\n\n    if (length === 2 || length === 3) {\n      setClass(element, `mat-${length}-line`, true);\n    } else if (length > 3) {\n      setClass(element, `mat-multi-line`, true);\n    }\n  });\n}\n/**\n * Adds or removes a class from an element.\n * @param {?} element\n * @param {?} className\n * @param {?} isAdd\n * @return {?}\n */\n\n\nfunction setClass(element, className, isAdd) {\n  /** @type {?} */\n  const classList = element.nativeElement.classList;\n  isAdd ? classList.add(className) : classList.remove(className);\n}\n/**\n * Helper that takes a query list of lines and sets the correct class on the host.\n * \\@docs-private\n * @deprecated Use `setLines` instead.\n * \\@breaking-change 8.0.0\n */\n\n\nclass MatLineSetter {\n  /**\n   * @param {?} lines\n   * @param {?} element\n   */\n  constructor(lines, element) {\n    setLines(lines, element);\n  }\n\n}\n\nclass MatLineModule {}\n\nMatLineModule.ɵfac = function MatLineModule_Factory(t) {\n  return new (t || MatLineModule)();\n};\n\nMatLineModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n  type: MatLineModule\n});\nMatLineModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n  imports: [MatCommonModule, MatCommonModule]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatLineModule, [{\n    type: NgModule,\n    args: [{\n      imports: [MatCommonModule],\n      exports: [MatLine, MatCommonModule],\n      declarations: [MatLine]\n    }]\n  }], null, null);\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatLineModule, {\n    declarations: [MatLine],\n    imports: [MatCommonModule],\n    exports: [MatLine, MatCommonModule]\n  });\n})();\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/** @enum {number} */\n\n\nconst RippleState = {\n  FADING_IN: 0,\n  VISIBLE: 1,\n  FADING_OUT: 2,\n  HIDDEN: 3\n};\nRippleState[RippleState.FADING_IN] = 'FADING_IN';\nRippleState[RippleState.VISIBLE] = 'VISIBLE';\nRippleState[RippleState.FADING_OUT] = 'FADING_OUT';\nRippleState[RippleState.HIDDEN] = 'HIDDEN';\n/**\n * Reference to a previously launched ripple element.\n */\n\nclass RippleRef {\n  /**\n   * @param {?} _renderer\n   * @param {?} element\n   * @param {?} config\n   */\n  constructor(_renderer, element, config) {\n    this._renderer = _renderer;\n    this.element = element;\n    this.config = config;\n    /**\n     * Current state of the ripple.\n     */\n\n    this.state = RippleState.HIDDEN;\n  }\n  /**\n   * Fades out the ripple element.\n   * @return {?}\n   */\n\n\n  fadeOut() {\n    this._renderer.fadeOutRipple(this);\n  }\n\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Default ripple animation configuration for ripples without an explicit\n * animation config specified.\n * @type {?}\n */\n\n\nconst defaultRippleAnimationConfig = {\n  enterDuration: 450,\n  exitDuration: 400\n};\n/**\n * Timeout for ignoring mouse events. Mouse events will be temporary ignored after touch\n * events to avoid synthetic mouse events.\n * @type {?}\n */\n\nconst ignoreMouseEventsTimeout = 800;\n/**\n * Options that apply to all the event listeners that are bound by the ripple renderer.\n * @type {?}\n */\n\nconst passiveEventOptions = normalizePassiveListenerOptions({\n  passive: true\n});\n/**\n * Helper service that performs DOM manipulations. Not intended to be used outside this module.\n * The constructor takes a reference to the ripple directive's host element and a map of DOM\n * event handlers to be installed on the element that triggers ripple animations.\n * This will eventually become a custom renderer once Angular support exists.\n * \\@docs-private\n */\n\nclass RippleRenderer {\n  /**\n   * @param {?} _target\n   * @param {?} _ngZone\n   * @param {?} elementRef\n   * @param {?} platform\n   */\n  constructor(_target, _ngZone, elementRef, platform) {\n    this._target = _target;\n    this._ngZone = _ngZone;\n    /**\n     * Whether the pointer is currently down or not.\n     */\n\n    this._isPointerDown = false;\n    /**\n     * Events to be registered on the trigger element.\n     */\n\n    this._triggerEvents = new Map();\n    /**\n     * Set of currently active ripple references.\n     */\n\n    this._activeRipples = new Set();\n    /**\n     * Function being called whenever the trigger is being pressed using mouse.\n     */\n\n    this.onMousedown = event => {\n      // Screen readers will fire fake mouse events for space/enter. Skip launching a\n      // ripple in this case for consistency with the non-screen-reader experience.\n\n      /** @type {?} */\n      const isFakeMousedown = isFakeMousedownFromScreenReader(event);\n      /** @type {?} */\n\n      const isSyntheticEvent = this._lastTouchStartEvent && Date.now() < this._lastTouchStartEvent + ignoreMouseEventsTimeout;\n\n      if (!this._target.rippleDisabled && !isFakeMousedown && !isSyntheticEvent) {\n        this._isPointerDown = true;\n        this.fadeInRipple(event.clientX, event.clientY, this._target.rippleConfig);\n      }\n    };\n    /**\n     * Function being called whenever the trigger is being pressed using touch.\n     */\n\n\n    this.onTouchStart = event => {\n      if (!this._target.rippleDisabled) {\n        // Some browsers fire mouse events after a `touchstart` event. Those synthetic mouse\n        // events will launch a second ripple if we don't ignore mouse events for a specific\n        // time after a touchstart event.\n        this._lastTouchStartEvent = Date.now();\n        this._isPointerDown = true; // Use `changedTouches` so we skip any touches where the user put\n        // their finger down, but used another finger to tap the element again.\n\n        /** @type {?} */\n\n        const touches = event.changedTouches;\n\n        for (let i = 0; i < touches.length; i++) {\n          this.fadeInRipple(touches[i].clientX, touches[i].clientY, this._target.rippleConfig);\n        }\n      }\n    };\n    /**\n     * Function being called whenever the trigger is being released.\n     */\n\n\n    this.onPointerUp = () => {\n      if (!this._isPointerDown) {\n        return;\n      }\n\n      this._isPointerDown = false; // Fade-out all ripples that are visible and not persistent.\n\n      this._activeRipples.forEach(ripple => {\n        // By default, only ripples that are completely visible will fade out on pointer release.\n        // If the `terminateOnPointerUp` option is set, ripples that still fade in will also fade out.\n\n        /** @type {?} */\n        const isVisible = ripple.state === RippleState.VISIBLE || ripple.config.terminateOnPointerUp && ripple.state === RippleState.FADING_IN;\n\n        if (!ripple.config.persistent && isVisible) {\n          ripple.fadeOut();\n        }\n      });\n    }; // Only do anything if we're on the browser.\n\n\n    if (platform.isBrowser) {\n      this._containerElement = elementRef.nativeElement; // Specify events which need to be registered on the trigger.\n\n      this._triggerEvents.set('mousedown', this.onMousedown).set('mouseup', this.onPointerUp).set('mouseleave', this.onPointerUp).set('touchstart', this.onTouchStart).set('touchend', this.onPointerUp).set('touchcancel', this.onPointerUp);\n    }\n  }\n  /**\n   * Fades in a ripple at the given coordinates.\n   * @param {?} x Coordinate within the element, along the X axis at which to start the ripple.\n   * @param {?} y Coordinate within the element, along the Y axis at which to start the ripple.\n   * @param {?=} config Extra ripple options.\n   * @return {?}\n   */\n\n\n  fadeInRipple(x, y, config = {}) {\n    /** @type {?} */\n    const containerRect = this._containerRect = this._containerRect || this._containerElement.getBoundingClientRect();\n    /** @type {?} */\n\n\n    const animationConfig = Object.assign({}, defaultRippleAnimationConfig, config.animation);\n\n    if (config.centered) {\n      x = containerRect.left + containerRect.width / 2;\n      y = containerRect.top + containerRect.height / 2;\n    }\n    /** @type {?} */\n\n\n    const radius = config.radius || distanceToFurthestCorner(x, y, containerRect);\n    /** @type {?} */\n\n    const offsetX = x - containerRect.left;\n    /** @type {?} */\n\n    const offsetY = y - containerRect.top;\n    /** @type {?} */\n\n    const duration = animationConfig.enterDuration;\n    /** @type {?} */\n\n    const ripple = document.createElement('div');\n    ripple.classList.add('mat-ripple-element');\n    ripple.style.left = `${offsetX - radius}px`;\n    ripple.style.top = `${offsetY - radius}px`;\n    ripple.style.height = `${radius * 2}px`;\n    ripple.style.width = `${radius * 2}px`; // If the color is not set, the default CSS color will be used.\n\n    ripple.style.backgroundColor = config.color || null;\n    ripple.style.transitionDuration = `${duration}ms`;\n\n    this._containerElement.appendChild(ripple); // By default the browser does not recalculate the styles of dynamically created\n    // ripple elements. This is critical because then the `scale` would not animate properly.\n\n\n    enforceStyleRecalculation(ripple);\n    ripple.style.transform = 'scale(1)'; // Exposed reference to the ripple that will be returned.\n\n    /** @type {?} */\n\n    const rippleRef = new RippleRef(this, ripple, config);\n    rippleRef.state = RippleState.FADING_IN; // Add the ripple reference to the list of all active ripples.\n\n    this._activeRipples.add(rippleRef);\n\n    if (!config.persistent) {\n      this._mostRecentTransientRipple = rippleRef;\n    } // Wait for the ripple element to be completely faded in.\n    // Once it's faded in, the ripple can be hidden immediately if the mouse is released.\n\n\n    this.runTimeoutOutsideZone(() => {\n      /** @type {?} */\n      const isMostRecentTransientRipple = rippleRef === this._mostRecentTransientRipple;\n      rippleRef.state = RippleState.VISIBLE; // When the timer runs out while the user has kept their pointer down, we want to\n      // keep only the persistent ripples and the latest transient ripple. We do this,\n      // because we don't want stacked transient ripples to appear after their enter\n      // animation has finished.\n\n      if (!config.persistent && (!isMostRecentTransientRipple || !this._isPointerDown)) {\n        rippleRef.fadeOut();\n      }\n    }, duration);\n    return rippleRef;\n  }\n  /**\n   * Fades out a ripple reference.\n   * @param {?} rippleRef\n   * @return {?}\n   */\n\n\n  fadeOutRipple(rippleRef) {\n    /** @type {?} */\n    const wasActive = this._activeRipples.delete(rippleRef);\n\n    if (rippleRef === this._mostRecentTransientRipple) {\n      this._mostRecentTransientRipple = null;\n    } // Clear out the cached bounding rect if we have no more ripples.\n\n\n    if (!this._activeRipples.size) {\n      this._containerRect = null;\n    } // For ripples that are not active anymore, don't re-run the fade-out animation.\n\n\n    if (!wasActive) {\n      return;\n    }\n    /** @type {?} */\n\n\n    const rippleEl = rippleRef.element;\n    /** @type {?} */\n\n    const animationConfig = Object.assign({}, defaultRippleAnimationConfig, rippleRef.config.animation);\n    rippleEl.style.transitionDuration = `${animationConfig.exitDuration}ms`;\n    rippleEl.style.opacity = '0';\n    rippleRef.state = RippleState.FADING_OUT; // Once the ripple faded out, the ripple can be safely removed from the DOM.\n\n    this.runTimeoutOutsideZone(() => {\n      rippleRef.state = RippleState.HIDDEN;\n\n      /** @type {?} */\n      rippleEl.parentNode.removeChild(rippleEl);\n    }, animationConfig.exitDuration);\n  }\n  /**\n   * Fades out all currently active ripples.\n   * @return {?}\n   */\n\n\n  fadeOutAll() {\n    this._activeRipples.forEach(ripple => ripple.fadeOut());\n  }\n  /**\n   * Sets up the trigger event listeners\n   * @param {?} element\n   * @return {?}\n   */\n\n\n  setupTriggerEvents(element) {\n    if (!element || element === this._triggerElement) {\n      return;\n    } // Remove all previously registered event listeners from the trigger element.\n\n\n    this._removeTriggerEvents();\n\n    this._ngZone.runOutsideAngular(() => {\n      this._triggerEvents.forEach((fn, type) => {\n        element.addEventListener(type, fn, passiveEventOptions);\n      });\n    });\n\n    this._triggerElement = element;\n  }\n  /**\n   * Runs a timeout outside of the Angular zone to avoid triggering the change detection.\n   * @private\n   * @param {?} fn\n   * @param {?=} delay\n   * @return {?}\n   */\n\n\n  runTimeoutOutsideZone(fn, delay = 0) {\n    this._ngZone.runOutsideAngular(() => setTimeout(fn, delay));\n  }\n  /**\n   * Removes previously registered event listeners from the trigger element.\n   * @return {?}\n   */\n\n\n  _removeTriggerEvents() {\n    if (this._triggerElement) {\n      this._triggerEvents.forEach((fn, type) => {\n        /** @type {?} */\n        this._triggerElement.removeEventListener(type, fn, passiveEventOptions);\n      });\n    }\n  }\n\n}\n/**\n * Enforces a style recalculation of a DOM element by computing its styles.\n * @param {?} element\n * @return {?}\n */\n\n\nfunction enforceStyleRecalculation(element) {\n  // Enforce a style recalculation by calling `getComputedStyle` and accessing any property.\n  // Calling `getPropertyValue` is important to let optimizers know that this is not a noop.\n  // See: https://gist.github.com/paulirish/5d52fb081b3570c81e3a\n  window.getComputedStyle(element).getPropertyValue('opacity');\n}\n/**\n * Returns the distance from the point (x, y) to the furthest corner of a rectangle.\n * @param {?} x\n * @param {?} y\n * @param {?} rect\n * @return {?}\n */\n\n\nfunction distanceToFurthestCorner(x, y, rect) {\n  /** @type {?} */\n  const distX = Math.max(Math.abs(x - rect.left), Math.abs(x - rect.right));\n  /** @type {?} */\n\n  const distY = Math.max(Math.abs(y - rect.top), Math.abs(y - rect.bottom));\n  return Math.sqrt(distX * distX + distY * distY);\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Injection token that can be used to specify the global ripple options.\n * @type {?}\n */\n\n\nconst MAT_RIPPLE_GLOBAL_OPTIONS = new InjectionToken('mat-ripple-global-options');\n\nclass MatRipple {\n  /**\n   * @param {?} _elementRef\n   * @param {?} ngZone\n   * @param {?} platform\n   * @param {?=} globalOptions\n   * @param {?=} animationMode\n   */\n  constructor(_elementRef, ngZone, platform, globalOptions, animationMode) {\n    this._elementRef = _elementRef;\n    /**\n     * If set, the radius in pixels of foreground ripples when fully expanded. If unset, the radius\n     * will be the distance from the center of the ripple to the furthest corner of the host element's\n     * bounding rectangle.\n     */\n\n    this.radius = 0;\n    this._disabled = false;\n    /**\n     * Whether ripple directive is initialized and the input bindings are set.\n     */\n\n    this._isInitialized = false;\n    this._globalOptions = globalOptions || {};\n    this._rippleRenderer = new RippleRenderer(this, ngZone, _elementRef, platform);\n\n    if (animationMode === 'NoopAnimations') {\n      this._globalOptions.animation = {\n        enterDuration: 0,\n        exitDuration: 0\n      };\n    }\n  }\n  /**\n   * Whether click events will not trigger the ripple. Ripples can be still launched manually\n   * by using the `launch()` method.\n   * @return {?}\n   */\n\n\n  get disabled() {\n    return this._disabled;\n  }\n  /**\n   * @param {?} value\n   * @return {?}\n   */\n\n\n  set disabled(value) {\n    this._disabled = value;\n\n    this._setupTriggerEventsIfEnabled();\n  }\n  /**\n   * The element that triggers the ripple when click events are received.\n   * Defaults to the directive's host element.\n   * @return {?}\n   */\n\n\n  get trigger() {\n    return this._trigger || this._elementRef.nativeElement;\n  }\n  /**\n   * @param {?} trigger\n   * @return {?}\n   */\n\n\n  set trigger(trigger) {\n    this._trigger = trigger;\n\n    this._setupTriggerEventsIfEnabled();\n  }\n  /**\n   * @return {?}\n   */\n\n\n  ngOnInit() {\n    this._isInitialized = true;\n\n    this._setupTriggerEventsIfEnabled();\n  }\n  /**\n   * @return {?}\n   */\n\n\n  ngOnDestroy() {\n    this._rippleRenderer._removeTriggerEvents();\n  }\n  /**\n   * Fades out all currently showing ripple elements.\n   * @return {?}\n   */\n\n\n  fadeOutAll() {\n    this._rippleRenderer.fadeOutAll();\n  }\n  /**\n   * Ripple configuration from the directive's input values.\n   * \\@docs-private Implemented as part of RippleTarget\n   * @return {?}\n   */\n\n\n  get rippleConfig() {\n    return {\n      centered: this.centered,\n      radius: this.radius,\n      color: this.color,\n      animation: Object.assign({}, this._globalOptions.animation, this.animation),\n      terminateOnPointerUp: this._globalOptions.terminateOnPointerUp\n    };\n  }\n  /**\n   * Whether ripples on pointer-down are disabled or not.\n   * \\@docs-private Implemented as part of RippleTarget\n   * @return {?}\n   */\n\n\n  get rippleDisabled() {\n    return this.disabled || !!this._globalOptions.disabled;\n  }\n  /**\n   * Sets up the trigger event listeners if ripples are enabled.\n   * @private\n   * @return {?}\n   */\n\n\n  _setupTriggerEventsIfEnabled() {\n    if (!this.disabled && this._isInitialized) {\n      this._rippleRenderer.setupTriggerEvents(this.trigger);\n    }\n  }\n  /**\n   * Launches a manual ripple at the specified coordinated or just by the ripple config.\n   * @param {?} configOrX\n   * @param {?=} y\n   * @param {?=} config\n   * @return {?}\n   */\n\n\n  launch(configOrX, y = 0, config) {\n    if (typeof configOrX === 'number') {\n      return this._rippleRenderer.fadeInRipple(configOrX, y, Object.assign({}, this.rippleConfig, config));\n    } else {\n      return this._rippleRenderer.fadeInRipple(0, 0, Object.assign({}, this.rippleConfig, configOrX));\n    }\n  }\n\n}\n\nMatRipple.ɵfac = function MatRipple_Factory(t) {\n  return new (t || MatRipple)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Platform), ɵngcc0.ɵɵdirectiveInject(MAT_RIPPLE_GLOBAL_OPTIONS, 8), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8));\n};\n\nMatRipple.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n  type: MatRipple,\n  selectors: [[\"\", \"mat-ripple\", \"\"], [\"\", \"matRipple\", \"\"]],\n  hostAttrs: [1, \"mat-ripple\"],\n  hostVars: 2,\n  hostBindings: function MatRipple_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      ɵngcc0.ɵɵclassProp(\"mat-ripple-unbounded\", ctx.unbounded);\n    }\n  },\n  inputs: {\n    radius: [\"matRippleRadius\", \"radius\"],\n    disabled: [\"matRippleDisabled\", \"disabled\"],\n    trigger: [\"matRippleTrigger\", \"trigger\"],\n    color: [\"matRippleColor\", \"color\"],\n    unbounded: [\"matRippleUnbounded\", \"unbounded\"],\n    centered: [\"matRippleCentered\", \"centered\"],\n    animation: [\"matRippleAnimation\", \"animation\"]\n  },\n  exportAs: [\"matRipple\"]\n});\n/** @nocollapse */\n\nMatRipple.ctorParameters = () => [{\n  type: ElementRef\n}, {\n  type: NgZone\n}, {\n  type: Platform\n}, {\n  type: undefined,\n  decorators: [{\n    type: Optional\n  }, {\n    type: Inject,\n    args: [MAT_RIPPLE_GLOBAL_OPTIONS]\n  }]\n}, {\n  type: String,\n  decorators: [{\n    type: Optional\n  }, {\n    type: Inject,\n    args: [ANIMATION_MODULE_TYPE]\n  }]\n}];\n\nMatRipple.propDecorators = {\n  color: [{\n    type: Input,\n    args: ['matRippleColor']\n  }],\n  unbounded: [{\n    type: Input,\n    args: ['matRippleUnbounded']\n  }],\n  centered: [{\n    type: Input,\n    args: ['matRippleCentered']\n  }],\n  radius: [{\n    type: Input,\n    args: ['matRippleRadius']\n  }],\n  animation: [{\n    type: Input,\n    args: ['matRippleAnimation']\n  }],\n  disabled: [{\n    type: Input,\n    args: ['matRippleDisabled']\n  }],\n  trigger: [{\n    type: Input,\n    args: ['matRippleTrigger']\n  }]\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatRipple, [{\n    type: Directive,\n    args: [{\n      selector: '[mat-ripple], [matRipple]',\n      exportAs: 'matRipple',\n      host: {\n        'class': 'mat-ripple',\n        '[class.mat-ripple-unbounded]': 'unbounded'\n      }\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.ElementRef\n    }, {\n      type: ɵngcc0.NgZone\n    }, {\n      type: ɵngcc1.Platform\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [MAT_RIPPLE_GLOBAL_OPTIONS]\n      }]\n    }, {\n      type: String,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [ANIMATION_MODULE_TYPE]\n      }]\n    }];\n  }, {\n    radius: [{\n      type: Input,\n      args: ['matRippleRadius']\n    }],\n    disabled: [{\n      type: Input,\n      args: ['matRippleDisabled']\n    }],\n    trigger: [{\n      type: Input,\n      args: ['matRippleTrigger']\n    }],\n    color: [{\n      type: Input,\n      args: ['matRippleColor']\n    }],\n    unbounded: [{\n      type: Input,\n      args: ['matRippleUnbounded']\n    }],\n    centered: [{\n      type: Input,\n      args: ['matRippleCentered']\n    }],\n    animation: [{\n      type: Input,\n      args: ['matRippleAnimation']\n    }]\n  });\n})();\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n\nclass MatRippleModule {}\n\nMatRippleModule.ɵfac = function MatRippleModule_Factory(t) {\n  return new (t || MatRippleModule)();\n};\n\nMatRippleModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n  type: MatRippleModule\n});\nMatRippleModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n  imports: [MatCommonModule, PlatformModule, MatCommonModule]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatRippleModule, [{\n    type: NgModule,\n    args: [{\n      imports: [MatCommonModule, PlatformModule],\n      exports: [MatRipple, MatCommonModule],\n      declarations: [MatRipple]\n    }]\n  }], null, null);\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatRippleModule, {\n    declarations: function () {\n      return [MatRipple];\n    },\n    imports: function () {\n      return [MatCommonModule, PlatformModule];\n    },\n    exports: function () {\n      return [MatRipple, MatCommonModule];\n    }\n  });\n})();\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Component that shows a simplified checkbox without including any kind of \"real\" checkbox.\n * Meant to be used when the checkbox is purely decorative and a large number of them will be\n * included, such as for the options in a multi-select. Uses no SVGs or complex animations.\n * Note that theming is meant to be handled by the parent element, e.g.\n * `mat-primary .mat-pseudo-checkbox`.\n *\n * Note that this component will be completely invisible to screen-reader users. This is *not*\n * interchangeable with `<mat-checkbox>` and should *not* be used if the user would directly\n * interact with the checkbox. The pseudo-checkbox should only be used as an implementation detail\n * of more complex components that appropriately handle selected / checked state.\n * \\@docs-private\n */\n\n\nclass MatPseudoCheckbox {\n  /**\n   * @param {?=} _animationMode\n   */\n  constructor(_animationMode) {\n    this._animationMode = _animationMode;\n    /**\n     * Display state of the checkbox.\n     */\n\n    this.state = 'unchecked';\n    /**\n     * Whether the checkbox is disabled.\n     */\n\n    this.disabled = false;\n  }\n\n}\n\nMatPseudoCheckbox.ɵfac = function MatPseudoCheckbox_Factory(t) {\n  return new (t || MatPseudoCheckbox)(ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8));\n};\n\nMatPseudoCheckbox.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n  type: MatPseudoCheckbox,\n  selectors: [[\"mat-pseudo-checkbox\"]],\n  hostAttrs: [1, \"mat-pseudo-checkbox\"],\n  hostVars: 8,\n  hostBindings: function MatPseudoCheckbox_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      ɵngcc0.ɵɵclassProp(\"mat-pseudo-checkbox-indeterminate\", ctx.state === \"indeterminate\")(\"mat-pseudo-checkbox-checked\", ctx.state === \"checked\")(\"mat-pseudo-checkbox-disabled\", ctx.disabled)(\"_mat-animation-noopable\", ctx._animationMode === \"NoopAnimations\");\n    }\n  },\n  inputs: {\n    state: \"state\",\n    disabled: \"disabled\"\n  },\n  decls: 0,\n  vars: 0,\n  template: function MatPseudoCheckbox_Template(rf, ctx) {},\n  styles: [\".mat-pseudo-checkbox{width:16px;height:16px;border:2px solid;border-radius:2px;cursor:pointer;display:inline-block;vertical-align:middle;box-sizing:border-box;position:relative;flex-shrink:0;transition:border-color 90ms cubic-bezier(0,0,.2,.1),background-color 90ms cubic-bezier(0,0,.2,.1)}.mat-pseudo-checkbox::after{position:absolute;opacity:0;content:'';border-bottom:2px solid currentColor;transition:opacity 90ms cubic-bezier(0,0,.2,.1)}.mat-pseudo-checkbox.mat-pseudo-checkbox-checked,.mat-pseudo-checkbox.mat-pseudo-checkbox-indeterminate{border-color:transparent}._mat-animation-noopable.mat-pseudo-checkbox{transition:none;animation:none}._mat-animation-noopable.mat-pseudo-checkbox::after{transition:none}.mat-pseudo-checkbox-disabled{cursor:default}.mat-pseudo-checkbox-indeterminate::after{top:5px;left:1px;width:10px;opacity:1;border-radius:2px}.mat-pseudo-checkbox-checked::after{top:2.4px;left:1px;width:8px;height:3px;border-left:2px solid currentColor;transform:rotate(-45deg);opacity:1;box-sizing:content-box}\"],\n  encapsulation: 2,\n  changeDetection: 0\n});\n/** @nocollapse */\n\nMatPseudoCheckbox.ctorParameters = () => [{\n  type: String,\n  decorators: [{\n    type: Optional\n  }, {\n    type: Inject,\n    args: [ANIMATION_MODULE_TYPE]\n  }]\n}];\n\nMatPseudoCheckbox.propDecorators = {\n  state: [{\n    type: Input\n  }],\n  disabled: [{\n    type: Input\n  }]\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatPseudoCheckbox, [{\n    type: Component,\n    args: [{\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      selector: 'mat-pseudo-checkbox',\n      template: '',\n      host: {\n        'class': 'mat-pseudo-checkbox',\n        '[class.mat-pseudo-checkbox-indeterminate]': 'state === \"indeterminate\"',\n        '[class.mat-pseudo-checkbox-checked]': 'state === \"checked\"',\n        '[class.mat-pseudo-checkbox-disabled]': 'disabled',\n        '[class._mat-animation-noopable]': '_animationMode === \"NoopAnimations\"'\n      },\n      styles: [\".mat-pseudo-checkbox{width:16px;height:16px;border:2px solid;border-radius:2px;cursor:pointer;display:inline-block;vertical-align:middle;box-sizing:border-box;position:relative;flex-shrink:0;transition:border-color 90ms cubic-bezier(0,0,.2,.1),background-color 90ms cubic-bezier(0,0,.2,.1)}.mat-pseudo-checkbox::after{position:absolute;opacity:0;content:'';border-bottom:2px solid currentColor;transition:opacity 90ms cubic-bezier(0,0,.2,.1)}.mat-pseudo-checkbox.mat-pseudo-checkbox-checked,.mat-pseudo-checkbox.mat-pseudo-checkbox-indeterminate{border-color:transparent}._mat-animation-noopable.mat-pseudo-checkbox{transition:none;animation:none}._mat-animation-noopable.mat-pseudo-checkbox::after{transition:none}.mat-pseudo-checkbox-disabled{cursor:default}.mat-pseudo-checkbox-indeterminate::after{top:5px;left:1px;width:10px;opacity:1;border-radius:2px}.mat-pseudo-checkbox-checked::after{top:2.4px;left:1px;width:8px;height:3px;border-left:2px solid currentColor;transform:rotate(-45deg);opacity:1;box-sizing:content-box}\"]\n    }]\n  }], function () {\n    return [{\n      type: String,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [ANIMATION_MODULE_TYPE]\n      }]\n    }];\n  }, {\n    state: [{\n      type: Input\n    }],\n    disabled: [{\n      type: Input\n    }]\n  });\n})();\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n\nclass MatPseudoCheckboxModule {}\n\nMatPseudoCheckboxModule.ɵfac = function MatPseudoCheckboxModule_Factory(t) {\n  return new (t || MatPseudoCheckboxModule)();\n};\n\nMatPseudoCheckboxModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n  type: MatPseudoCheckboxModule\n});\nMatPseudoCheckboxModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatPseudoCheckboxModule, [{\n    type: NgModule,\n    args: [{\n      exports: [MatPseudoCheckbox],\n      declarations: [MatPseudoCheckbox]\n    }]\n  }], null, null);\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatPseudoCheckboxModule, {\n    declarations: [MatPseudoCheckbox],\n    exports: [MatPseudoCheckbox]\n  });\n})();\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// Boilerplate for applying mixins to MatOptgroup.\n\n/**\n * \\@docs-private\n */\n\n\nclass MatOptgroupBase {}\n/** @type {?} */\n\n\nconst _MatOptgroupMixinBase = mixinDisabled(MatOptgroupBase); // Counter for unique group ids.\n\n/** @type {?} */\n\n\nlet _uniqueOptgroupIdCounter = 0;\n/**\n * Component that is used to group instances of `mat-option`.\n */\n\nclass MatOptgroup extends _MatOptgroupMixinBase {\n  constructor() {\n    super(...arguments);\n    /**\n     * Unique id for the underlying label.\n     */\n\n    this._labelId = `mat-optgroup-label-${_uniqueOptgroupIdCounter++}`;\n  }\n\n}\n\nMatOptgroup.ɵfac = /*@__PURE__*/function () {\n  let ɵMatOptgroup_BaseFactory;\n  return function MatOptgroup_Factory(t) {\n    return (ɵMatOptgroup_BaseFactory || (ɵMatOptgroup_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatOptgroup)))(t || MatOptgroup);\n  };\n}();\n\nMatOptgroup.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n  type: MatOptgroup,\n  selectors: [[\"mat-optgroup\"]],\n  hostAttrs: [\"role\", \"group\", 1, \"mat-optgroup\"],\n  hostVars: 4,\n  hostBindings: function MatOptgroup_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      ɵngcc0.ɵɵattribute(\"aria-disabled\", ctx.disabled.toString())(\"aria-labelledby\", ctx._labelId);\n      ɵngcc0.ɵɵclassProp(\"mat-optgroup-disabled\", ctx.disabled);\n    }\n  },\n  inputs: {\n    disabled: \"disabled\",\n    label: \"label\"\n  },\n  exportAs: [\"matOptgroup\"],\n  features: [ɵngcc0.ɵɵInheritDefinitionFeature],\n  ngContentSelectors: _c1,\n  decls: 4,\n  vars: 2,\n  consts: [[1, \"mat-optgroup-label\", 3, \"id\"]],\n  template: function MatOptgroup_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵprojectionDef(_c0);\n      ɵngcc0.ɵɵelementStart(0, \"label\", 0);\n      ɵngcc0.ɵɵtext(1);\n      ɵngcc0.ɵɵprojection(2);\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵprojection(3, 1);\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵproperty(\"id\", ctx._labelId);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵtextInterpolate(ctx.label);\n    }\n  },\n  styles: [\".mat-optgroup-label{white-space:nowrap;overflow:hidden;text-overflow:ellipsis;display:block;line-height:48px;height:48px;padding:0 16px;text-align:left;text-decoration:none;max-width:100%;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:default}.mat-optgroup-label[disabled]{cursor:default}[dir=rtl] .mat-optgroup-label{text-align:right}.mat-optgroup-label .mat-icon{margin-right:16px;vertical-align:middle}.mat-optgroup-label .mat-icon svg{vertical-align:top}[dir=rtl] .mat-optgroup-label .mat-icon{margin-left:16px;margin-right:0}\"],\n  encapsulation: 2,\n  changeDetection: 0\n});\nMatOptgroup.propDecorators = {\n  label: [{\n    type: Input\n  }]\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatOptgroup, [{\n    type: Component,\n    args: [{\n      selector: 'mat-optgroup',\n      exportAs: 'matOptgroup',\n      template: \"<label class=\\\"mat-optgroup-label\\\" [id]=\\\"_labelId\\\">{{ label }}<ng-content></ng-content></label><ng-content select=\\\"mat-option, ng-container\\\"></ng-content>\",\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      inputs: ['disabled'],\n      host: {\n        'class': 'mat-optgroup',\n        'role': 'group',\n        '[class.mat-optgroup-disabled]': 'disabled',\n        '[attr.aria-disabled]': 'disabled.toString()',\n        '[attr.aria-labelledby]': '_labelId'\n      },\n      styles: [\".mat-optgroup-label{white-space:nowrap;overflow:hidden;text-overflow:ellipsis;display:block;line-height:48px;height:48px;padding:0 16px;text-align:left;text-decoration:none;max-width:100%;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:default}.mat-optgroup-label[disabled]{cursor:default}[dir=rtl] .mat-optgroup-label{text-align:right}.mat-optgroup-label .mat-icon{margin-right:16px;vertical-align:middle}.mat-optgroup-label .mat-icon svg{vertical-align:top}[dir=rtl] .mat-optgroup-label .mat-icon{margin-left:16px;margin-right:0}\"]\n    }]\n  }], null, {\n    label: [{\n      type: Input\n    }]\n  });\n})();\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Option IDs need to be unique across components, so this counter exists outside of\n * the component definition.\n * @type {?}\n */\n\n\nlet _uniqueIdCounter = 0;\n/**\n * Event object emitted by MatOption when selected or deselected.\n */\n\nclass MatOptionSelectionChange {\n  /**\n   * @param {?} source\n   * @param {?=} isUserInput\n   */\n  constructor(source, isUserInput = false) {\n    this.source = source;\n    this.isUserInput = isUserInput;\n  }\n\n}\n/**\n * Injection token used to provide the parent component to options.\n * @type {?}\n */\n\n\nconst MAT_OPTION_PARENT_COMPONENT = new InjectionToken('MAT_OPTION_PARENT_COMPONENT');\n/**\n * Single option inside of a `<mat-select>` element.\n */\n\nclass MatOption {\n  /**\n   * @param {?} _element\n   * @param {?} _changeDetectorRef\n   * @param {?} _parent\n   * @param {?} group\n   */\n  constructor(_element, _changeDetectorRef, _parent, group) {\n    this._element = _element;\n    this._changeDetectorRef = _changeDetectorRef;\n    this._parent = _parent;\n    this.group = group;\n    this._selected = false;\n    this._active = false;\n    this._disabled = false;\n    this._mostRecentViewValue = '';\n    /**\n     * The unique ID of the option.\n     */\n\n    this.id = `mat-option-${_uniqueIdCounter++}`;\n    /**\n     * Event emitted when the option is selected or deselected.\n     */\n    // tslint:disable-next-line:no-output-on-prefix\n\n    this.onSelectionChange = new EventEmitter();\n    /**\n     * Emits when the state of the option changes and any parents have to be notified.\n     */\n\n    this._stateChanges = new Subject();\n  }\n  /**\n   * Whether the wrapping component is in multiple selection mode.\n   * @return {?}\n   */\n\n\n  get multiple() {\n    return this._parent && this._parent.multiple;\n  }\n  /**\n   * Whether or not the option is currently selected.\n   * @return {?}\n   */\n\n\n  get selected() {\n    return this._selected;\n  }\n  /**\n   * Whether the option is disabled.\n   * @return {?}\n   */\n\n\n  get disabled() {\n    return this.group && this.group.disabled || this._disabled;\n  }\n  /**\n   * @param {?} value\n   * @return {?}\n   */\n\n\n  set disabled(value) {\n    this._disabled = coerceBooleanProperty(value);\n  }\n  /**\n   * Whether ripples for the option are disabled.\n   * @return {?}\n   */\n\n\n  get disableRipple() {\n    return this._parent && this._parent.disableRipple;\n  }\n  /**\n   * Whether or not the option is currently active and ready to be selected.\n   * An active option displays styles as if it is focused, but the\n   * focus is actually retained somewhere else. This comes in handy\n   * for components like autocomplete where focus must remain on the input.\n   * @return {?}\n   */\n\n\n  get active() {\n    return this._active;\n  }\n  /**\n   * The displayed value of the option. It is necessary to show the selected option in the\n   * select's trigger.\n   * @return {?}\n   */\n\n\n  get viewValue() {\n    // TODO(kara): Add input property alternative for node envs.\n    return (this._getHostElement().textContent || '').trim();\n  }\n  /**\n   * Selects the option.\n   * @return {?}\n   */\n\n\n  select() {\n    if (!this._selected) {\n      this._selected = true;\n\n      this._changeDetectorRef.markForCheck();\n\n      this._emitSelectionChangeEvent();\n    }\n  }\n  /**\n   * Deselects the option.\n   * @return {?}\n   */\n\n\n  deselect() {\n    if (this._selected) {\n      this._selected = false;\n\n      this._changeDetectorRef.markForCheck();\n\n      this._emitSelectionChangeEvent();\n    }\n  }\n  /**\n   * Sets focus onto this option.\n   * @return {?}\n   */\n\n\n  focus() {\n    /** @type {?} */\n    const element = this._getHostElement();\n\n    if (typeof element.focus === 'function') {\n      element.focus();\n    }\n  }\n  /**\n   * This method sets display styles on the option to make it appear\n   * active. This is used by the ActiveDescendantKeyManager so key\n   * events will display the proper options as active on arrow key events.\n   * @return {?}\n   */\n\n\n  setActiveStyles() {\n    if (!this._active) {\n      this._active = true;\n\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n  /**\n   * This method removes display styles on the option that made it appear\n   * active. This is used by the ActiveDescendantKeyManager so key\n   * events will display the proper options as active on arrow key events.\n   * @return {?}\n   */\n\n\n  setInactiveStyles() {\n    if (this._active) {\n      this._active = false;\n\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n  /**\n   * Gets the label to be used when determining whether the option should be focused.\n   * @return {?}\n   */\n\n\n  getLabel() {\n    return this.viewValue;\n  }\n  /**\n   * Ensures the option is selected when activated from the keyboard.\n   * @param {?} event\n   * @return {?}\n   */\n\n\n  _handleKeydown(event) {\n    if ((event.keyCode === ENTER || event.keyCode === SPACE) && !hasModifierKey(event)) {\n      this._selectViaInteraction(); // Prevent the page from scrolling down and form submits.\n\n\n      event.preventDefault();\n    }\n  }\n  /**\n   * `Selects the option while indicating the selection came from the user. Used to\n   * determine if the select's view -> model callback should be invoked.`\n   * @return {?}\n   */\n\n\n  _selectViaInteraction() {\n    if (!this.disabled) {\n      this._selected = this.multiple ? !this._selected : true;\n\n      this._changeDetectorRef.markForCheck();\n\n      this._emitSelectionChangeEvent(true);\n    }\n  }\n  /**\n   * Gets the `aria-selected` value for the option. We explicitly omit the `aria-selected`\n   * attribute from single-selection, unselected options. Including the `aria-selected=\"false\"`\n   * attributes adds a significant amount of noise to screen-reader users without providing useful\n   * information.\n   * @return {?}\n   */\n\n\n  _getAriaSelected() {\n    return this.selected || (this.multiple ? false : null);\n  }\n  /**\n   * Returns the correct tabindex for the option depending on disabled state.\n   * @return {?}\n   */\n\n\n  _getTabIndex() {\n    return this.disabled ? '-1' : '0';\n  }\n  /**\n   * Gets the host DOM element.\n   * @return {?}\n   */\n\n\n  _getHostElement() {\n    return this._element.nativeElement;\n  }\n  /**\n   * @return {?}\n   */\n\n\n  ngAfterViewChecked() {\n    // Since parent components could be using the option's label to display the selected values\n    // (e.g. `mat-select`) and they don't have a way of knowing if the option's label has changed\n    // we have to check for changes in the DOM ourselves and dispatch an event. These checks are\n    // relatively cheap, however we still limit them only to selected options in order to avoid\n    // hitting the DOM too often.\n    if (this._selected) {\n      /** @type {?} */\n      const viewValue = this.viewValue;\n\n      if (viewValue !== this._mostRecentViewValue) {\n        this._mostRecentViewValue = viewValue;\n\n        this._stateChanges.next();\n      }\n    }\n  }\n  /**\n   * @return {?}\n   */\n\n\n  ngOnDestroy() {\n    this._stateChanges.complete();\n  }\n  /**\n   * Emits the selection change event.\n   * @private\n   * @param {?=} isUserInput\n   * @return {?}\n   */\n\n\n  _emitSelectionChangeEvent(isUserInput = false) {\n    this.onSelectionChange.emit(new MatOptionSelectionChange(this, isUserInput));\n  }\n\n}\n\nMatOption.ɵfac = function MatOption_Factory(t) {\n  return new (t || MatOption)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(MAT_OPTION_PARENT_COMPONENT, 8), ɵngcc0.ɵɵdirectiveInject(MatOptgroup, 8));\n};\n\nMatOption.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n  type: MatOption,\n  selectors: [[\"mat-option\"]],\n  hostAttrs: [\"role\", \"option\", 1, \"mat-option\"],\n  hostVars: 12,\n  hostBindings: function MatOption_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵlistener(\"click\", function MatOption_click_HostBindingHandler() {\n        return ctx._selectViaInteraction();\n      })(\"keydown\", function MatOption_keydown_HostBindingHandler($event) {\n        return ctx._handleKeydown($event);\n      });\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵhostProperty(\"id\", ctx.id);\n      ɵngcc0.ɵɵattribute(\"tabindex\", ctx._getTabIndex())(\"aria-selected\", ctx._getAriaSelected())(\"aria-disabled\", ctx.disabled.toString());\n      ɵngcc0.ɵɵclassProp(\"mat-selected\", ctx.selected)(\"mat-option-multiple\", ctx.multiple)(\"mat-active\", ctx.active)(\"mat-option-disabled\", ctx.disabled);\n    }\n  },\n  inputs: {\n    id: \"id\",\n    disabled: \"disabled\",\n    value: \"value\"\n  },\n  outputs: {\n    onSelectionChange: \"onSelectionChange\"\n  },\n  exportAs: [\"matOption\"],\n  ngContentSelectors: _c2,\n  decls: 4,\n  vars: 3,\n  consts: [[\"class\", \"mat-option-pseudo-checkbox\", 3, \"state\", \"disabled\", 4, \"ngIf\"], [1, \"mat-option-text\"], [\"mat-ripple\", \"\", 1, \"mat-option-ripple\", 3, \"matRippleTrigger\", \"matRippleDisabled\"], [1, \"mat-option-pseudo-checkbox\", 3, \"state\", \"disabled\"]],\n  template: function MatOption_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵprojectionDef();\n      ɵngcc0.ɵɵtemplate(0, MatOption_mat_pseudo_checkbox_0_Template, 1, 2, \"mat-pseudo-checkbox\", 0);\n      ɵngcc0.ɵɵelementStart(1, \"span\", 1);\n      ɵngcc0.ɵɵprojection(2);\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵelement(3, \"div\", 2);\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵproperty(\"ngIf\", ctx.multiple);\n      ɵngcc0.ɵɵadvance(3);\n      ɵngcc0.ɵɵproperty(\"matRippleTrigger\", ctx._getHostElement())(\"matRippleDisabled\", ctx.disabled || ctx.disableRipple);\n    }\n  },\n  dependencies: [MatRipple, ɵngcc2.NgIf, MatPseudoCheckbox],\n  styles: [\".mat-option{white-space:nowrap;overflow:hidden;text-overflow:ellipsis;display:block;line-height:48px;height:48px;padding:0 16px;text-align:left;text-decoration:none;max-width:100%;position:relative;cursor:pointer;outline:0;display:flex;flex-direction:row;max-width:100%;box-sizing:border-box;align-items:center;-webkit-tap-highlight-color:transparent}.mat-option[disabled]{cursor:default}[dir=rtl] .mat-option{text-align:right}.mat-option .mat-icon{margin-right:16px;vertical-align:middle}.mat-option .mat-icon svg{vertical-align:top}[dir=rtl] .mat-option .mat-icon{margin-left:16px;margin-right:0}.mat-option[aria-disabled=true]{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:default}.mat-optgroup .mat-option:not(.mat-option-multiple){padding-left:32px}[dir=rtl] .mat-optgroup .mat-option:not(.mat-option-multiple){padding-left:16px;padding-right:32px}@media (-ms-high-contrast:active){.mat-option{margin:0 1px}.mat-option.mat-active{border:solid 1px currentColor;margin:0}}.mat-option-text{display:inline-block;flex-grow:1;overflow:hidden;text-overflow:ellipsis}.mat-option .mat-option-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}@media (-ms-high-contrast:active){.mat-option .mat-option-ripple{opacity:.5}}.mat-option-pseudo-checkbox{margin-right:8px}[dir=rtl] .mat-option-pseudo-checkbox{margin-left:8px;margin-right:0}\"],\n  encapsulation: 2,\n  changeDetection: 0\n});\n/** @nocollapse */\n\nMatOption.ctorParameters = () => [{\n  type: ElementRef\n}, {\n  type: ChangeDetectorRef\n}, {\n  type: undefined,\n  decorators: [{\n    type: Optional\n  }, {\n    type: Inject,\n    args: [MAT_OPTION_PARENT_COMPONENT]\n  }]\n}, {\n  type: MatOptgroup,\n  decorators: [{\n    type: Optional\n  }]\n}];\n\nMatOption.propDecorators = {\n  value: [{\n    type: Input\n  }],\n  id: [{\n    type: Input\n  }],\n  disabled: [{\n    type: Input\n  }],\n  onSelectionChange: [{\n    type: Output\n  }]\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatOption, [{\n    type: Component,\n    args: [{\n      selector: 'mat-option',\n      exportAs: 'matOption',\n      host: {\n        'role': 'option',\n        '[attr.tabindex]': '_getTabIndex()',\n        '[class.mat-selected]': 'selected',\n        '[class.mat-option-multiple]': 'multiple',\n        '[class.mat-active]': 'active',\n        '[id]': 'id',\n        '[attr.aria-selected]': '_getAriaSelected()',\n        '[attr.aria-disabled]': 'disabled.toString()',\n        '[class.mat-option-disabled]': 'disabled',\n        '(click)': '_selectViaInteraction()',\n        '(keydown)': '_handleKeydown($event)',\n        'class': 'mat-option'\n      },\n      template: \"<mat-pseudo-checkbox *ngIf=\\\"multiple\\\" class=\\\"mat-option-pseudo-checkbox\\\" [state]=\\\"selected ? 'checked' : ''\\\" [disabled]=\\\"disabled\\\"></mat-pseudo-checkbox><span class=\\\"mat-option-text\\\"><ng-content></ng-content></span><div class=\\\"mat-option-ripple\\\" mat-ripple [matRippleTrigger]=\\\"_getHostElement()\\\" [matRippleDisabled]=\\\"disabled || disableRipple\\\"></div>\",\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      styles: [\".mat-option{white-space:nowrap;overflow:hidden;text-overflow:ellipsis;display:block;line-height:48px;height:48px;padding:0 16px;text-align:left;text-decoration:none;max-width:100%;position:relative;cursor:pointer;outline:0;display:flex;flex-direction:row;max-width:100%;box-sizing:border-box;align-items:center;-webkit-tap-highlight-color:transparent}.mat-option[disabled]{cursor:default}[dir=rtl] .mat-option{text-align:right}.mat-option .mat-icon{margin-right:16px;vertical-align:middle}.mat-option .mat-icon svg{vertical-align:top}[dir=rtl] .mat-option .mat-icon{margin-left:16px;margin-right:0}.mat-option[aria-disabled=true]{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:default}.mat-optgroup .mat-option:not(.mat-option-multiple){padding-left:32px}[dir=rtl] .mat-optgroup .mat-option:not(.mat-option-multiple){padding-left:16px;padding-right:32px}@media (-ms-high-contrast:active){.mat-option{margin:0 1px}.mat-option.mat-active{border:solid 1px currentColor;margin:0}}.mat-option-text{display:inline-block;flex-grow:1;overflow:hidden;text-overflow:ellipsis}.mat-option .mat-option-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}@media (-ms-high-contrast:active){.mat-option .mat-option-ripple{opacity:.5}}.mat-option-pseudo-checkbox{margin-right:8px}[dir=rtl] .mat-option-pseudo-checkbox{margin-left:8px;margin-right:0}\"]\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.ElementRef\n    }, {\n      type: ɵngcc0.ChangeDetectorRef\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [MAT_OPTION_PARENT_COMPONENT]\n      }]\n    }, {\n      type: MatOptgroup,\n      decorators: [{\n        type: Optional\n      }]\n    }];\n  }, {\n    id: [{\n      type: Input\n    }],\n    onSelectionChange: [{\n      type: Output\n    }],\n    disabled: [{\n      type: Input\n    }],\n    value: [{\n      type: Input\n    }]\n  });\n})();\n/**\n * Counts the amount of option group labels that precede the specified option.\n * \\@docs-private\n * @param {?} optionIndex Index of the option at which to start counting.\n * @param {?} options Flat list of all of the options.\n * @param {?} optionGroups Flat list of all of the option groups.\n * @return {?}\n */\n\n\nfunction _countGroupLabelsBeforeOption(optionIndex, options, optionGroups) {\n  if (optionGroups.length) {\n    /** @type {?} */\n    let optionsArray = options.toArray();\n    /** @type {?} */\n\n    let groups = optionGroups.toArray();\n    /** @type {?} */\n\n    let groupCounter = 0;\n\n    for (let i = 0; i < optionIndex + 1; i++) {\n      if (optionsArray[i].group && optionsArray[i].group === groups[groupCounter]) {\n        groupCounter++;\n      }\n    }\n\n    return groupCounter;\n  }\n\n  return 0;\n}\n/**\n * Determines the position to which to scroll a panel in order for an option to be into view.\n * \\@docs-private\n * @param {?} optionIndex Index of the option to be scrolled into the view.\n * @param {?} optionHeight Height of the options.\n * @param {?} currentScrollPosition Current scroll position of the panel.\n * @param {?} panelHeight Height of the panel.\n * @return {?}\n */\n\n\nfunction _getOptionScrollPosition(optionIndex, optionHeight, currentScrollPosition, panelHeight) {\n  /** @type {?} */\n  const optionOffset = optionIndex * optionHeight;\n\n  if (optionOffset < currentScrollPosition) {\n    return optionOffset;\n  }\n\n  if (optionOffset + optionHeight > currentScrollPosition + panelHeight) {\n    return Math.max(0, optionOffset - panelHeight + optionHeight);\n  }\n\n  return currentScrollPosition;\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n\nclass MatOptionModule {}\n\nMatOptionModule.ɵfac = function MatOptionModule_Factory(t) {\n  return new (t || MatOptionModule)();\n};\n\nMatOptionModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n  type: MatOptionModule\n});\nMatOptionModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n  imports: [MatRippleModule, CommonModule, MatPseudoCheckboxModule]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatOptionModule, [{\n    type: NgModule,\n    args: [{\n      imports: [MatRippleModule, CommonModule, MatPseudoCheckboxModule],\n      exports: [MatOption, MatOptgroup],\n      declarations: [MatOption, MatOptgroup]\n    }]\n  }], null, null);\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatOptionModule, {\n    declarations: function () {\n      return [MatOption, MatOptgroup];\n    },\n    imports: function () {\n      return [MatRippleModule, CommonModule, MatPseudoCheckboxModule];\n    },\n    exports: function () {\n      return [MatOption, MatOptgroup];\n    }\n  });\n})();\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * InjectionToken that can be used to specify the global label options.\n * @type {?}\n */\n\n\nconst MAT_LABEL_GLOBAL_OPTIONS = new InjectionToken('mat-label-global-options');\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * When constructing a Date, the month is zero-based. This can be confusing, since people are\n * used to seeing them one-based. So we create these aliases to make writing the tests easier.\n * \\@docs-private\n * \\@breaking-change 8.0.0 Remove this with V8 since it was only targeted for testing.\n * @type {?}\n */\n\nconst JAN = 0;\n/** @type {?} */\n\nconst FEB = 1;\n/** @type {?} */\n\nconst MAR = 2;\n/** @type {?} */\n\nconst APR = 3;\n/** @type {?} */\n\nconst MAY = 4;\n/** @type {?} */\n\nconst JUN = 5;\n/** @type {?} */\n\nconst JUL = 6;\n/** @type {?} */\n\nconst AUG = 7;\n/** @type {?} */\n\nconst SEP = 8;\n/** @type {?} */\n\nconst OCT = 9;\n/** @type {?} */\n\nconst NOV = 10;\n/** @type {?} */\n\nconst DEC = 11;\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\nexport { AnimationCurves, AnimationDurations, MatCommonModule, MATERIAL_SANITY_CHECKS, mixinDisabled, mixinColor, mixinDisableRipple, mixinTabIndex, mixinErrorState, mixinInitialized, NativeDateModule, MatNativeDateModule, MAT_DATE_LOCALE_FACTORY, MAT_DATE_LOCALE, MAT_DATE_LOCALE_PROVIDER, DateAdapter, MAT_DATE_FORMATS, NativeDateAdapter, MAT_NATIVE_DATE_FORMATS, ShowOnDirtyErrorStateMatcher, ErrorStateMatcher, MAT_HAMMER_OPTIONS, GestureConfig, setLines, MatLine, MatLineSetter, MatLineModule, MatOptionModule, _countGroupLabelsBeforeOption, _getOptionScrollPosition, MatOptionSelectionChange, MAT_OPTION_PARENT_COMPONENT, MatOption, MatOptgroupBase, _MatOptgroupMixinBase, MatOptgroup, MAT_LABEL_GLOBAL_OPTIONS, MatRippleModule, MAT_RIPPLE_GLOBAL_OPTIONS, MatRipple, RippleState, RippleRef, defaultRippleAnimationConfig, RippleRenderer, MatPseudoCheckboxModule, MatPseudoCheckbox, JAN, FEB, MAR, APR, MAY, JUN, JUL, AUG, SEP, OCT, NOV, DEC, MATERIAL_SANITY_CHECKS_FACTORY as ɵa1 };","map":{"version":3,"names":["NgModule","InjectionToken","Optional","Inject","isDevMode","inject","LOCALE_ID","Injectable","Directive","ElementRef","Input","NgZone","Component","ViewEncapsulation","ChangeDetectionStrategy","ChangeDetectorRef","EventEmitter","Output","defineInjectable","HAMMER_LOADER","HammerGestureConfig","BidiModule","coerceBooleanProperty","Subject","Observable","Platform","PlatformModule","normalizePassiveListenerOptions","startWith","isFakeMousedownFromScreenReader","ANIMATION_MODULE_TYPE","ENTER","SPACE","hasModifierKey","CommonModule","ɵngcc0","ɵngcc1","ɵngcc2","_c0","_c1","MatOption_mat_pseudo_checkbox_0_Template","rf","ctx","ɵɵelement","ctx_r0","ɵɵnextContext","ɵɵproperty","selected","disabled","_c2","AnimationCurves","STANDARD_CURVE","DECELERATION_CURVE","ACCELERATION_CURVE","SHARP_CURVE","AnimationDurations","COMPLEX","ENTERING","EXITING","MATERIAL_SANITY_CHECKS","providedIn","factory","MATERIAL_SANITY_CHECKS_FACTORY","MatCommonModule","constructor","_sanityChecksEnabled","_hammerLoader","_hasDoneGlobalChecks","_hasCheckedHammer","_document","document","_window","window","_areChecksEnabled","_checkDoctypeIsDefined","_checkThemeIsPresent","_isTestEnv","__karma__","jasmine","doctype","console","warn","body","getComputedStyle","testElement","createElement","classList","add","appendChild","computedStyle","display","removeChild","_checkHammerIsAvailable","ɵfac","MatCommonModule_Factory","t","ɵɵinject","ɵmod","ɵɵdefineNgModule","type","ɵinj","ɵɵdefineInjector","imports","ctorParameters","Boolean","decorators","args","undefined","ngDevMode","ɵsetClassMetadata","exports","ngJitMode","ɵɵsetNgModuleScope","mixinDisabled","base","_disabled","value","mixinColor","defaultColor","color","_color","colorPalette","_elementRef","nativeElement","remove","mixinDisableRipple","_disableRipple","disableRipple","mixinTabIndex","defaultTabIndex","_tabIndex","tabIndex","mixinErrorState","errorState","stateChanges","updateErrorState","oldState","parent","_parentFormGroup","_parentForm","matcher","errorStateMatcher","_defaultErrorStateMatcher","control","ngControl","newState","isErrorState","next","mixinInitialized","_isInitialized","_pendingSubscribers","initialized","subscriber","_notifySubscriber","push","_markInitialized","Error","forEach","complete","MAT_DATE_LOCALE","MAT_DATE_LOCALE_FACTORY","MAT_DATE_LOCALE_PROVIDER","provide","useExisting","DateAdapter","_localeChanges","localeChanges","deserialize","isDateInstance","isValid","invalid","setLocale","locale","compareDate","first","second","getYear","getMonth","getDate","sameDate","firstValid","secondValid","clampDate","date","min","max","MAT_DATE_FORMATS","SUPPORTS_INTL_API","Intl","_a","DEFAULT_MONTH_NAMES","ɵ0","i","String","DEFAULT_DATE_NAMES","range","DEFAULT_DAY_OF_WEEK_NAMES","ISO_8601_REGEX","length","valueFunction","valuesArray","Array","NativeDateAdapter","matDateLocale","platform","useUtcForDisplay","TRIDENT","_clampDate","EDGE","getFullYear","getDayOfWeek","getDay","getMonthNames","style","dtf","DateTimeFormat","month","timeZone","_stripDirectionalityCharacters","_format","Date","getDateNames","day","getDayOfWeekNames","weekday","getYearName","year","getFirstDayOfWeek","getNumDaysInMonth","_createDateWithOverflow","clone","getTime","createDate","result","today","parse","format","displayFormat","setFullYear","Math","Object","assign","toDateString","addCalendarYears","years","addCalendarMonths","months","newDate","addCalendarDays","days","toIso8601","getUTCFullYear","_2digit","getUTCMonth","getUTCDate","join","test","obj","isNaN","NaN","n","slice","str","replace","d","UTC","getHours","getMinutes","getSeconds","getMilliseconds","NativeDateAdapter_Factory","ɵprov","ɵɵdefineInjectable","token","MAT_NATIVE_DATE_FORMATS","dateInput","monthYearLabel","dateA11yLabel","monthYearA11yLabel","NativeDateModule","NativeDateModule_Factory","providers","useClass","ɵ0$1","MatNativeDateModule","MatNativeDateModule_Factory","useValue","ShowOnDirtyErrorStateMatcher","form","dirty","submitted","ShowOnDirtyErrorStateMatcher_Factory","ErrorStateMatcher","touched","ErrorStateMatcher_Factory","ngInjectableDef","MAT_HAMMER_OPTIONS","ANGULAR_MATERIAL_SUPPORTED_HAMMER_GESTURES","ɵ0$2","ɵ1","noopHammerInstance","on","off","GestureConfig","_hammerOptions","commonModule","events","buildHammer","element","hammer","Hammer","mc","pan","Pan","swipe","Swipe","press","Press","slide","_createRecognizer","event","threshold","longpress","time","recognizeWith","options","inheritances","recognizer","item","GestureConfig_Factory","MatLine","MatLine_Factory","ɵdir","ɵɵdefineDirective","selectors","hostAttrs","selector","host","setLines","lines","changes","pipe","subscribe","setClass","className","isAdd","MatLineSetter","MatLineModule","MatLineModule_Factory","declarations","RippleState","FADING_IN","VISIBLE","FADING_OUT","HIDDEN","RippleRef","_renderer","config","state","fadeOut","fadeOutRipple","defaultRippleAnimationConfig","enterDuration","exitDuration","ignoreMouseEventsTimeout","passiveEventOptions","passive","RippleRenderer","_target","_ngZone","elementRef","_isPointerDown","_triggerEvents","Map","_activeRipples","Set","onMousedown","isFakeMousedown","isSyntheticEvent","_lastTouchStartEvent","now","rippleDisabled","fadeInRipple","clientX","clientY","rippleConfig","onTouchStart","touches","changedTouches","onPointerUp","ripple","isVisible","terminateOnPointerUp","persistent","isBrowser","_containerElement","set","x","y","containerRect","_containerRect","getBoundingClientRect","animationConfig","animation","centered","left","width","top","height","radius","distanceToFurthestCorner","offsetX","offsetY","duration","backgroundColor","transitionDuration","enforceStyleRecalculation","transform","rippleRef","_mostRecentTransientRipple","runTimeoutOutsideZone","isMostRecentTransientRipple","wasActive","delete","size","rippleEl","opacity","parentNode","fadeOutAll","setupTriggerEvents","_triggerElement","_removeTriggerEvents","runOutsideAngular","fn","addEventListener","delay","setTimeout","removeEventListener","getPropertyValue","rect","distX","abs","right","distY","bottom","sqrt","MAT_RIPPLE_GLOBAL_OPTIONS","MatRipple","ngZone","globalOptions","animationMode","_globalOptions","_rippleRenderer","_setupTriggerEventsIfEnabled","trigger","_trigger","ngOnInit","ngOnDestroy","launch","configOrX","MatRipple_Factory","ɵɵdirectiveInject","hostVars","hostBindings","MatRipple_HostBindings","ɵɵclassProp","unbounded","inputs","exportAs","propDecorators","MatRippleModule","MatRippleModule_Factory","MatPseudoCheckbox","_animationMode","MatPseudoCheckbox_Factory","ɵcmp","ɵɵdefineComponent","MatPseudoCheckbox_HostBindings","decls","vars","template","MatPseudoCheckbox_Template","styles","encapsulation","changeDetection","None","OnPush","MatPseudoCheckboxModule","MatPseudoCheckboxModule_Factory","MatOptgroupBase","_MatOptgroupMixinBase","_uniqueOptgroupIdCounter","MatOptgroup","arguments","_labelId","ɵMatOptgroup_BaseFactory","MatOptgroup_Factory","ɵɵgetInheritedFactory","MatOptgroup_HostBindings","ɵɵattribute","toString","label","features","ɵɵInheritDefinitionFeature","ngContentSelectors","consts","MatOptgroup_Template","ɵɵprojectionDef","ɵɵelementStart","ɵɵtext","ɵɵprojection","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate","_uniqueIdCounter","MatOptionSelectionChange","source","isUserInput","MAT_OPTION_PARENT_COMPONENT","MatOption","_element","_changeDetectorRef","_parent","group","_selected","_active","_mostRecentViewValue","id","onSelectionChange","_stateChanges","multiple","active","viewValue","_getHostElement","textContent","trim","select","markForCheck","_emitSelectionChangeEvent","deselect","focus","setActiveStyles","setInactiveStyles","getLabel","_handleKeydown","keyCode","_selectViaInteraction","preventDefault","_getAriaSelected","_getTabIndex","ngAfterViewChecked","emit","MatOption_Factory","MatOption_HostBindings","ɵɵlistener","MatOption_click_HostBindingHandler","MatOption_keydown_HostBindingHandler","$event","ɵɵhostProperty","outputs","MatOption_Template","ɵɵtemplate","dependencies","NgIf","_countGroupLabelsBeforeOption","optionIndex","optionGroups","optionsArray","toArray","groups","groupCounter","_getOptionScrollPosition","optionHeight","currentScrollPosition","panelHeight","optionOffset","MatOptionModule","MatOptionModule_Factory","MAT_LABEL_GLOBAL_OPTIONS","JAN","FEB","MAR","APR","MAY","JUN","JUL","AUG","SEP","OCT","NOV","DEC","ɵa1"],"sources":["/Users/apple/Desktop/zepto/my_project/node_modules/@angular/material/__ivy_ngcc__/esm2015/core.js"],"sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { NgModule, InjectionToken, Optional, Inject, isDevMode, inject, LOCALE_ID, Injectable, Directive, ElementRef, Input, NgZone, Component, ViewEncapsulation, ChangeDetectionStrategy, ChangeDetectorRef, EventEmitter, Output, defineInjectable } from '@angular/core';\nimport { HAMMER_LOADER, HammerGestureConfig } from '@angular/platform-browser';\nimport { BidiModule } from '@angular/cdk/bidi';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { Subject, Observable } from 'rxjs';\nimport { Platform, PlatformModule, normalizePassiveListenerOptions } from '@angular/cdk/platform';\nimport { startWith } from 'rxjs/operators';\nimport { isFakeMousedownFromScreenReader } from '@angular/cdk/a11y';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\nimport { ENTER, SPACE, hasModifierKey } from '@angular/cdk/keycodes';\nimport { CommonModule } from '@angular/common';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * \\@docs-private\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/platform';\nimport * as ɵngcc2 from '@angular/common';\n\nconst _c0 = [\"*\", [[\"mat-option\"], [\"ng-container\"]]];\nconst _c1 = [\"*\", \"mat-option, ng-container\"];\nfunction MatOption_mat_pseudo_checkbox_0_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"mat-pseudo-checkbox\", 3);\n} if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"state\", ctx_r0.selected ? \"checked\" : \"\")(\"disabled\", ctx_r0.disabled);\n} }\nconst _c2 = [\"*\"];\nclass AnimationCurves {\n}\nAnimationCurves.STANDARD_CURVE = 'cubic-bezier(0.4,0.0,0.2,1)';\nAnimationCurves.DECELERATION_CURVE = 'cubic-bezier(0.0,0.0,0.2,1)';\nAnimationCurves.ACCELERATION_CURVE = 'cubic-bezier(0.4,0.0,1,1)';\nAnimationCurves.SHARP_CURVE = 'cubic-bezier(0.4,0.0,0.6,1)';\n/**\n * \\@docs-private\n */\nclass AnimationDurations {\n}\nAnimationDurations.COMPLEX = '375ms';\nAnimationDurations.ENTERING = '225ms';\nAnimationDurations.EXITING = '195ms';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Injection token that configures whether the Material sanity checks are enabled.\n * @type {?}\n */\nconst MATERIAL_SANITY_CHECKS = new InjectionToken('mat-sanity-checks', {\n    providedIn: 'root',\n    factory: MATERIAL_SANITY_CHECKS_FACTORY,\n});\n/**\n * \\@docs-private\n * @return {?}\n */\nfunction MATERIAL_SANITY_CHECKS_FACTORY() {\n    return true;\n}\n/**\n * Module that captures anything that should be loaded and/or run for *all* Angular Material\n * components. This includes Bidi, etc.\n *\n * This module should be imported to each top-level component module (e.g., MatTabsModule).\n */\nclass MatCommonModule {\n    /**\n     * @param {?} _sanityChecksEnabled\n     * @param {?=} _hammerLoader\n     */\n    constructor(_sanityChecksEnabled, _hammerLoader) {\n        this._sanityChecksEnabled = _sanityChecksEnabled;\n        this._hammerLoader = _hammerLoader;\n        /**\n         * Whether we've done the global sanity checks (e.g. a theme is loaded, there is a doctype).\n         */\n        this._hasDoneGlobalChecks = false;\n        /**\n         * Whether we've already checked for HammerJs availability.\n         */\n        this._hasCheckedHammer = false;\n        /**\n         * Reference to the global `document` object.\n         */\n        this._document = typeof document === 'object' && document ? document : null;\n        /**\n         * Reference to the global 'window' object.\n         */\n        this._window = typeof window === 'object' && window ? window : null;\n        if (this._areChecksEnabled() && !this._hasDoneGlobalChecks) {\n            this._checkDoctypeIsDefined();\n            this._checkThemeIsPresent();\n            this._hasDoneGlobalChecks = true;\n        }\n    }\n    /**\n     * Whether any sanity checks are enabled\n     * @private\n     * @return {?}\n     */\n    _areChecksEnabled() {\n        return this._sanityChecksEnabled && isDevMode() && !this._isTestEnv();\n    }\n    /**\n     * Whether the code is running in tests.\n     * @private\n     * @return {?}\n     */\n    _isTestEnv() {\n        /** @type {?} */\n        const window = (/** @type {?} */ (this._window));\n        return window && (window.__karma__ || window.jasmine);\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _checkDoctypeIsDefined() {\n        if (this._document && !this._document.doctype) {\n            console.warn('Current document does not have a doctype. This may cause ' +\n                'some Angular Material components not to behave as expected.');\n        }\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _checkThemeIsPresent() {\n        // We need to assert that the `body` is defined, because these checks run very early\n        // and the `body` won't be defined if the consumer put their scripts in the `head`.\n        if (!this._document || !this._document.body || typeof getComputedStyle !== 'function') {\n            return;\n        }\n        /** @type {?} */\n        const testElement = this._document.createElement('div');\n        testElement.classList.add('mat-theme-loaded-marker');\n        this._document.body.appendChild(testElement);\n        /** @type {?} */\n        const computedStyle = getComputedStyle(testElement);\n        // In some situations the computed style of the test element can be null. For example in\n        // Firefox, the computed style is null if an application is running inside of a hidden iframe.\n        // See: https://bugzilla.mozilla.org/show_bug.cgi?id=548397\n        if (computedStyle && computedStyle.display !== 'none') {\n            console.warn('Could not find Angular Material core theme. Most Material ' +\n                'components may not work as expected. For more info refer ' +\n                'to the theming guide: https://material.angular.io/guide/theming');\n        }\n        this._document.body.removeChild(testElement);\n    }\n    /**\n     * Checks whether HammerJS is available.\n     * @return {?}\n     */\n    _checkHammerIsAvailable() {\n        if (this._hasCheckedHammer || !this._window) {\n            return;\n        }\n        if (this._areChecksEnabled() && !((/** @type {?} */ (this._window)))['Hammer'] && !this._hammerLoader) {\n            console.warn('Could not find HammerJS. Certain Angular Material components may not work correctly.');\n        }\n        this._hasCheckedHammer = true;\n    }\n}\nMatCommonModule.ɵfac = function MatCommonModule_Factory(t) { return new (t || MatCommonModule)(ɵngcc0.ɵɵinject(MATERIAL_SANITY_CHECKS, 8), ɵngcc0.ɵɵinject(HAMMER_LOADER, 8)); };\nMatCommonModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: MatCommonModule });\nMatCommonModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ imports: [BidiModule, BidiModule] });\n/** @nocollapse */\nMatCommonModule.ctorParameters = () => [\n    { type: Boolean, decorators: [{ type: Optional }, { type: Inject, args: [MATERIAL_SANITY_CHECKS,] }] },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [HAMMER_LOADER,] }] }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatCommonModule, [{\n        type: NgModule,\n        args: [{\n                imports: [BidiModule],\n                exports: [BidiModule]\n            }]\n    }], function () { return [{ type: Boolean, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MATERIAL_SANITY_CHECKS]\n            }] }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [HAMMER_LOADER]\n            }] }]; }, null); })();\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatCommonModule, { imports: function () { return [BidiModule]; }, exports: function () { return [BidiModule]; } }); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Mixin to augment a directive with a `disabled` property.\n * @template T\n * @param {?} base\n * @return {?}\n */\nfunction mixinDisabled(base) {\n    return class extends base {\n        /**\n         * @param {...?} args\n         */\n        constructor(...args) {\n            super(...args);\n            this._disabled = false;\n        }\n        /**\n         * @return {?}\n         */\n        get disabled() { return this._disabled; }\n        /**\n         * @param {?} value\n         * @return {?}\n         */\n        set disabled(value) { this._disabled = coerceBooleanProperty(value); }\n    };\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Mixin to augment a directive with a `color` property.\n * @template T\n * @param {?} base\n * @param {?=} defaultColor\n * @return {?}\n */\nfunction mixinColor(base, defaultColor) {\n    return class extends base {\n        /**\n         * @return {?}\n         */\n        get color() { return this._color; }\n        /**\n         * @param {?} value\n         * @return {?}\n         */\n        set color(value) {\n            /** @type {?} */\n            const colorPalette = value || defaultColor;\n            if (colorPalette !== this._color) {\n                if (this._color) {\n                    this._elementRef.nativeElement.classList.remove(`mat-${this._color}`);\n                }\n                if (colorPalette) {\n                    this._elementRef.nativeElement.classList.add(`mat-${colorPalette}`);\n                }\n                this._color = colorPalette;\n            }\n        }\n        /**\n         * @param {...?} args\n         */\n        constructor(...args) {\n            super(...args);\n            // Set the default color that can be specified from the mixin.\n            this.color = defaultColor;\n        }\n    };\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Mixin to augment a directive with a `disableRipple` property.\n * @template T\n * @param {?} base\n * @return {?}\n */\nfunction mixinDisableRipple(base) {\n    return class extends base {\n        /**\n         * @param {...?} args\n         */\n        constructor(...args) {\n            super(...args);\n            this._disableRipple = false;\n        }\n        /**\n         * Whether the ripple effect is disabled or not.\n         * @return {?}\n         */\n        get disableRipple() { return this._disableRipple; }\n        /**\n         * @param {?} value\n         * @return {?}\n         */\n        set disableRipple(value) { this._disableRipple = coerceBooleanProperty(value); }\n    };\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Mixin to augment a directive with a `tabIndex` property.\n * @template T\n * @param {?} base\n * @param {?=} defaultTabIndex\n * @return {?}\n */\nfunction mixinTabIndex(base, defaultTabIndex = 0) {\n    return class extends base {\n        /**\n         * @param {...?} args\n         */\n        constructor(...args) {\n            super(...args);\n            this._tabIndex = defaultTabIndex;\n        }\n        /**\n         * @return {?}\n         */\n        get tabIndex() { return this.disabled ? -1 : this._tabIndex; }\n        /**\n         * @param {?} value\n         * @return {?}\n         */\n        set tabIndex(value) {\n            // If the specified tabIndex value is null or undefined, fall back to the default value.\n            this._tabIndex = value != null ? value : defaultTabIndex;\n        }\n    };\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Mixin to augment a directive with updateErrorState method.\n * For component with `errorState` and need to update `errorState`.\n * @template T\n * @param {?} base\n * @return {?}\n */\nfunction mixinErrorState(base) {\n    return class extends base {\n        /**\n         * @param {...?} args\n         */\n        constructor(...args) {\n            super(...args);\n            /**\n             * Whether the component is in an error state.\n             */\n            this.errorState = false;\n            /**\n             * Stream that emits whenever the state of the input changes such that the wrapping\n             * `MatFormField` needs to run change detection.\n             */\n            this.stateChanges = new Subject();\n        }\n        /**\n         * @return {?}\n         */\n        updateErrorState() {\n            /** @type {?} */\n            const oldState = this.errorState;\n            /** @type {?} */\n            const parent = this._parentFormGroup || this._parentForm;\n            /** @type {?} */\n            const matcher = this.errorStateMatcher || this._defaultErrorStateMatcher;\n            /** @type {?} */\n            const control = this.ngControl ? (/** @type {?} */ (this.ngControl.control)) : null;\n            /** @type {?} */\n            const newState = matcher.isErrorState(control, parent);\n            if (newState !== oldState) {\n                this.errorState = newState;\n                this.stateChanges.next();\n            }\n        }\n    };\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Mixin to augment a directive with an initialized property that will emits when ngOnInit ends.\n * @template T\n * @param {?} base\n * @return {?}\n */\nfunction mixinInitialized(base) {\n    return class extends base {\n        /**\n         * @param {...?} args\n         */\n        constructor(...args) {\n            super(...args);\n            /**\n             * Whether this directive has been marked as initialized.\n             */\n            this._isInitialized = false;\n            /**\n             * List of subscribers that subscribed before the directive was initialized. Should be notified\n             * during _markInitialized. Set to null after pending subscribers are notified, and should\n             * not expect to be populated after.\n             */\n            this._pendingSubscribers = [];\n            /**\n             * Observable stream that emits when the directive initializes. If already initialized, the\n             * subscriber is stored to be notified once _markInitialized is called.\n             */\n            this.initialized = new Observable(subscriber => {\n                // If initialized, immediately notify the subscriber. Otherwise store the subscriber to notify\n                // when _markInitialized is called.\n                if (this._isInitialized) {\n                    this._notifySubscriber(subscriber);\n                }\n                else {\n                    (/** @type {?} */ (this._pendingSubscribers)).push(subscriber);\n                }\n            });\n        }\n        /**\n         * Marks the state as initialized and notifies pending subscribers. Should be called at the end\n         * of ngOnInit.\n         * \\@docs-private\n         * @return {?}\n         */\n        _markInitialized() {\n            if (this._isInitialized) {\n                throw Error('This directive has already been marked as initialized and ' +\n                    'should not be called twice.');\n            }\n            this._isInitialized = true;\n            (/** @type {?} */ (this._pendingSubscribers)).forEach(this._notifySubscriber);\n            this._pendingSubscribers = null;\n        }\n        /**\n         * Emits and completes the subscriber stream (should only emit once).\n         * @param {?} subscriber\n         * @return {?}\n         */\n        _notifySubscriber(subscriber) {\n            subscriber.next();\n            subscriber.complete();\n        }\n    };\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * InjectionToken for datepicker that can be used to override default locale code.\n * @type {?}\n */\nconst MAT_DATE_LOCALE = new InjectionToken('MAT_DATE_LOCALE', {\n    providedIn: 'root',\n    factory: MAT_DATE_LOCALE_FACTORY,\n});\n/**\n * \\@docs-private\n * @return {?}\n */\nfunction MAT_DATE_LOCALE_FACTORY() {\n    return inject(LOCALE_ID);\n}\n/**\n * No longer needed since MAT_DATE_LOCALE has been changed to a scoped injectable.\n * If you are importing and providing this in your code you can simply remove it.\n * @deprecated\n * \\@breaking-change 8.0.0\n * @type {?}\n */\nconst MAT_DATE_LOCALE_PROVIDER = { provide: MAT_DATE_LOCALE, useExisting: LOCALE_ID };\n/**\n * Adapts type `D` to be usable as a date by cdk-based components that work with dates.\n * @abstract\n * @template D\n */\nclass DateAdapter {\n    constructor() {\n        this._localeChanges = new Subject();\n    }\n    /**\n     * A stream that emits when the locale changes.\n     * @return {?}\n     */\n    get localeChanges() { return this._localeChanges; }\n    /**\n     * Attempts to deserialize a value to a valid date object. This is different from parsing in that\n     * deserialize should only accept non-ambiguous, locale-independent formats (e.g. a ISO 8601\n     * string). The default implementation does not allow any deserialization, it simply checks that\n     * the given value is already a valid date object or null. The `<mat-datepicker>` will call this\n     * method on all of it's `\\@Input()` properties that accept dates. It is therefore possible to\n     * support passing values from your backend directly to these properties by overriding this method\n     * to also deserialize the format used by your backend.\n     * @param {?} value The value to be deserialized into a date object.\n     * @return {?} The deserialized date object, either a valid date, null if the value can be\n     *     deserialized into a null date (e.g. the empty string), or an invalid date.\n     */\n    deserialize(value) {\n        if (value == null || this.isDateInstance(value) && this.isValid(value)) {\n            return value;\n        }\n        return this.invalid();\n    }\n    /**\n     * Sets the locale used for all dates.\n     * @param {?} locale The new locale.\n     * @return {?}\n     */\n    setLocale(locale) {\n        this.locale = locale;\n        this._localeChanges.next();\n    }\n    /**\n     * Compares two dates.\n     * @param {?} first The first date to compare.\n     * @param {?} second The second date to compare.\n     * @return {?} 0 if the dates are equal, a number less than 0 if the first date is earlier,\n     *     a number greater than 0 if the first date is later.\n     */\n    compareDate(first, second) {\n        return this.getYear(first) - this.getYear(second) ||\n            this.getMonth(first) - this.getMonth(second) ||\n            this.getDate(first) - this.getDate(second);\n    }\n    /**\n     * Checks if two dates are equal.\n     * @param {?} first The first date to check.\n     * @param {?} second The second date to check.\n     * @return {?} Whether the two dates are equal.\n     *     Null dates are considered equal to other null dates.\n     */\n    sameDate(first, second) {\n        if (first && second) {\n            /** @type {?} */\n            let firstValid = this.isValid(first);\n            /** @type {?} */\n            let secondValid = this.isValid(second);\n            if (firstValid && secondValid) {\n                return !this.compareDate(first, second);\n            }\n            return firstValid == secondValid;\n        }\n        return first == second;\n    }\n    /**\n     * Clamp the given date between min and max dates.\n     * @param {?} date The date to clamp.\n     * @param {?=} min The minimum value to allow. If null or omitted no min is enforced.\n     * @param {?=} max The maximum value to allow. If null or omitted no max is enforced.\n     * @return {?} `min` if `date` is less than `min`, `max` if date is greater than `max`,\n     *     otherwise `date`.\n     */\n    clampDate(date, min, max) {\n        if (min && this.compareDate(date, min) < 0) {\n            return min;\n        }\n        if (max && this.compareDate(date, max) > 0) {\n            return max;\n        }\n        return date;\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst MAT_DATE_FORMATS = new InjectionToken('mat-date-formats');\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// TODO(mmalerba): Remove when we no longer support safari 9.\n/**\n * Whether the browser supports the Intl API.\n * @type {?}\n */\nlet SUPPORTS_INTL_API;\n// We need a try/catch around the reference to `Intl`, because accessing it in some cases can\n// cause IE to throw. These cases are tied to particular versions of Windows and can happen if\n// the consumer is providing a polyfilled `Map`. See:\n// https://github.com/Microsoft/ChakraCore/issues/3189\n// https://github.com/angular/material2/issues/15687\ntry {\n    SUPPORTS_INTL_API = typeof Intl != 'undefined';\n}\ncatch (_a) {\n    SUPPORTS_INTL_API = false;\n}\n/**\n * The default month names to use if Intl API is not available.\n * @type {?}\n */\nconst DEFAULT_MONTH_NAMES = {\n    'long': [\n        'January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September',\n        'October', 'November', 'December'\n    ],\n    'short': ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\n    'narrow': ['J', 'F', 'M', 'A', 'M', 'J', 'J', 'A', 'S', 'O', 'N', 'D']\n};\nconst ɵ0 = i => String(i + 1);\n/**\n * The default date names to use if Intl API is not available.\n * @type {?}\n */\nconst DEFAULT_DATE_NAMES = range(31, ɵ0);\n/**\n * The default day of the week names to use if Intl API is not available.\n * @type {?}\n */\nconst DEFAULT_DAY_OF_WEEK_NAMES = {\n    'long': ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'],\n    'short': ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],\n    'narrow': ['S', 'M', 'T', 'W', 'T', 'F', 'S']\n};\n/**\n * Matches strings that have the form of a valid RFC 3339 string\n * (https://tools.ietf.org/html/rfc3339). Note that the string may not actually be a valid date\n * because the regex will match strings an with out of bounds month, date, etc.\n * @type {?}\n */\nconst ISO_8601_REGEX = /^\\d{4}-\\d{2}-\\d{2}(?:T\\d{2}:\\d{2}:\\d{2}(?:\\.\\d+)?(?:Z|(?:(?:\\+|-)\\d{2}:\\d{2}))?)?$/;\n/**\n * Creates an array and fills it with values.\n * @template T\n * @param {?} length\n * @param {?} valueFunction\n * @return {?}\n */\nfunction range(length, valueFunction) {\n    /** @type {?} */\n    const valuesArray = Array(length);\n    for (let i = 0; i < length; i++) {\n        valuesArray[i] = valueFunction(i);\n    }\n    return valuesArray;\n}\n/**\n * Adapts the native JS Date for use with cdk-based components that work with dates.\n */\nclass NativeDateAdapter extends DateAdapter {\n    /**\n     * @param {?} matDateLocale\n     * @param {?} platform\n     */\n    constructor(matDateLocale, platform) {\n        super();\n        /**\n         * Whether to use `timeZone: 'utc'` with `Intl.DateTimeFormat` when formatting dates.\n         * Without this `Intl.DateTimeFormat` sometimes chooses the wrong timeZone, which can throw off\n         * the result. (e.g. in the en-US locale `new Date(1800, 7, 14).toLocaleDateString()`\n         * will produce `'8/13/1800'`.\n         *\n         * TODO(mmalerba): drop this variable. It's not being used in the code right now. We're now\n         * getting the string representation of a Date object from it's utc representation. We're keeping\n         * it here for sometime, just for precaution, in case we decide to revert some of these changes\n         * though.\n         */\n        this.useUtcForDisplay = true;\n        super.setLocale(matDateLocale);\n        // IE does its own time zone correction, so we disable this on IE.\n        this.useUtcForDisplay = !platform.TRIDENT;\n        this._clampDate = platform.TRIDENT || platform.EDGE;\n    }\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    getYear(date) {\n        return date.getFullYear();\n    }\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    getMonth(date) {\n        return date.getMonth();\n    }\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    getDate(date) {\n        return date.getDate();\n    }\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    getDayOfWeek(date) {\n        return date.getDay();\n    }\n    /**\n     * @param {?} style\n     * @return {?}\n     */\n    getMonthNames(style) {\n        if (SUPPORTS_INTL_API) {\n            /** @type {?} */\n            const dtf = new Intl.DateTimeFormat(this.locale, { month: style, timeZone: 'utc' });\n            return range(12, i => this._stripDirectionalityCharacters(this._format(dtf, new Date(2017, i, 1))));\n        }\n        return DEFAULT_MONTH_NAMES[style];\n    }\n    /**\n     * @return {?}\n     */\n    getDateNames() {\n        if (SUPPORTS_INTL_API) {\n            /** @type {?} */\n            const dtf = new Intl.DateTimeFormat(this.locale, { day: 'numeric', timeZone: 'utc' });\n            return range(31, i => this._stripDirectionalityCharacters(this._format(dtf, new Date(2017, 0, i + 1))));\n        }\n        return DEFAULT_DATE_NAMES;\n    }\n    /**\n     * @param {?} style\n     * @return {?}\n     */\n    getDayOfWeekNames(style) {\n        if (SUPPORTS_INTL_API) {\n            /** @type {?} */\n            const dtf = new Intl.DateTimeFormat(this.locale, { weekday: style, timeZone: 'utc' });\n            return range(7, i => this._stripDirectionalityCharacters(this._format(dtf, new Date(2017, 0, i + 1))));\n        }\n        return DEFAULT_DAY_OF_WEEK_NAMES[style];\n    }\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    getYearName(date) {\n        if (SUPPORTS_INTL_API) {\n            /** @type {?} */\n            const dtf = new Intl.DateTimeFormat(this.locale, { year: 'numeric', timeZone: 'utc' });\n            return this._stripDirectionalityCharacters(this._format(dtf, date));\n        }\n        return String(this.getYear(date));\n    }\n    /**\n     * @return {?}\n     */\n    getFirstDayOfWeek() {\n        // We can't tell using native JS Date what the first day of the week is, we default to Sunday.\n        return 0;\n    }\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    getNumDaysInMonth(date) {\n        return this.getDate(this._createDateWithOverflow(this.getYear(date), this.getMonth(date) + 1, 0));\n    }\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    clone(date) {\n        return new Date(date.getTime());\n    }\n    /**\n     * @param {?} year\n     * @param {?} month\n     * @param {?} date\n     * @return {?}\n     */\n    createDate(year, month, date) {\n        // Check for invalid month and date (except upper bound on date which we have to check after\n        // creating the Date).\n        if (month < 0 || month > 11) {\n            throw Error(`Invalid month index \"${month}\". Month index has to be between 0 and 11.`);\n        }\n        if (date < 1) {\n            throw Error(`Invalid date \"${date}\". Date has to be greater than 0.`);\n        }\n        /** @type {?} */\n        let result = this._createDateWithOverflow(year, month, date);\n        // Check that the date wasn't above the upper bound for the month, causing the month to overflow\n        if (result.getMonth() != month) {\n            throw Error(`Invalid date \"${date}\" for month with index \"${month}\".`);\n        }\n        return result;\n    }\n    /**\n     * @return {?}\n     */\n    today() {\n        return new Date();\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    parse(value) {\n        // We have no way using the native JS Date to set the parse format or locale, so we ignore these\n        // parameters.\n        if (typeof value == 'number') {\n            return new Date(value);\n        }\n        return value ? new Date(Date.parse(value)) : null;\n    }\n    /**\n     * @param {?} date\n     * @param {?} displayFormat\n     * @return {?}\n     */\n    format(date, displayFormat) {\n        if (!this.isValid(date)) {\n            throw Error('NativeDateAdapter: Cannot format invalid date.');\n        }\n        if (SUPPORTS_INTL_API) {\n            // On IE and Edge the i18n API will throw a hard error that can crash the entire app\n            // if we attempt to format a date whose year is less than 1 or greater than 9999.\n            if (this._clampDate && (date.getFullYear() < 1 || date.getFullYear() > 9999)) {\n                date = this.clone(date);\n                date.setFullYear(Math.max(1, Math.min(9999, date.getFullYear())));\n            }\n            displayFormat = Object.assign({}, displayFormat, { timeZone: 'utc' });\n            /** @type {?} */\n            const dtf = new Intl.DateTimeFormat(this.locale, displayFormat);\n            return this._stripDirectionalityCharacters(this._format(dtf, date));\n        }\n        return this._stripDirectionalityCharacters(date.toDateString());\n    }\n    /**\n     * @param {?} date\n     * @param {?} years\n     * @return {?}\n     */\n    addCalendarYears(date, years) {\n        return this.addCalendarMonths(date, years * 12);\n    }\n    /**\n     * @param {?} date\n     * @param {?} months\n     * @return {?}\n     */\n    addCalendarMonths(date, months) {\n        /** @type {?} */\n        let newDate = this._createDateWithOverflow(this.getYear(date), this.getMonth(date) + months, this.getDate(date));\n        // It's possible to wind up in the wrong month if the original month has more days than the new\n        // month. In this case we want to go to the last day of the desired month.\n        // Note: the additional + 12 % 12 ensures we end up with a positive number, since JS % doesn't\n        // guarantee this.\n        if (this.getMonth(newDate) != ((this.getMonth(date) + months) % 12 + 12) % 12) {\n            newDate = this._createDateWithOverflow(this.getYear(newDate), this.getMonth(newDate), 0);\n        }\n        return newDate;\n    }\n    /**\n     * @param {?} date\n     * @param {?} days\n     * @return {?}\n     */\n    addCalendarDays(date, days) {\n        return this._createDateWithOverflow(this.getYear(date), this.getMonth(date), this.getDate(date) + days);\n    }\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    toIso8601(date) {\n        return [\n            date.getUTCFullYear(),\n            this._2digit(date.getUTCMonth() + 1),\n            this._2digit(date.getUTCDate())\n        ].join('-');\n    }\n    /**\n     * Returns the given value if given a valid Date or null. Deserializes valid ISO 8601 strings\n     * (https://www.ietf.org/rfc/rfc3339.txt) into valid Dates and empty string into null. Returns an\n     * invalid date for all other values.\n     * @param {?} value\n     * @return {?}\n     */\n    deserialize(value) {\n        if (typeof value === 'string') {\n            if (!value) {\n                return null;\n            }\n            // The `Date` constructor accepts formats other than ISO 8601, so we need to make sure the\n            // string is the right format first.\n            if (ISO_8601_REGEX.test(value)) {\n                /** @type {?} */\n                let date = new Date(value);\n                if (this.isValid(date)) {\n                    return date;\n                }\n            }\n        }\n        return super.deserialize(value);\n    }\n    /**\n     * @param {?} obj\n     * @return {?}\n     */\n    isDateInstance(obj) {\n        return obj instanceof Date;\n    }\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    isValid(date) {\n        return !isNaN(date.getTime());\n    }\n    /**\n     * @return {?}\n     */\n    invalid() {\n        return new Date(NaN);\n    }\n    /**\n     * Creates a date but allows the month and date to overflow.\n     * @private\n     * @param {?} year\n     * @param {?} month\n     * @param {?} date\n     * @return {?}\n     */\n    _createDateWithOverflow(year, month, date) {\n        /** @type {?} */\n        const result = new Date(year, month, date);\n        // We need to correct for the fact that JS native Date treats years in range [0, 99] as\n        // abbreviations for 19xx.\n        if (year >= 0 && year < 100) {\n            result.setFullYear(this.getYear(result) - 1900);\n        }\n        return result;\n    }\n    /**\n     * Pads a number to make it two digits.\n     * @private\n     * @param {?} n The number to pad.\n     * @return {?} The padded number.\n     */\n    _2digit(n) {\n        return ('00' + n).slice(-2);\n    }\n    /**\n     * Strip out unicode LTR and RTL characters. Edge and IE insert these into formatted dates while\n     * other browsers do not. We remove them to make output consistent and because they interfere with\n     * date parsing.\n     * @private\n     * @param {?} str The string to strip direction characters from.\n     * @return {?} The stripped string.\n     */\n    _stripDirectionalityCharacters(str) {\n        return str.replace(/[\\u200e\\u200f]/g, '');\n    }\n    /**\n     * When converting Date object to string, javascript built-in functions may return wrong\n     * results because it applies its internal DST rules. The DST rules around the world change\n     * very frequently, and the current valid rule is not always valid in previous years though.\n     * We work around this problem building a new Date object which has its internal UTC\n     * representation with the local date and time.\n     * @private\n     * @param {?} dtf Intl.DateTimeFormat object, containg the desired string format. It must have\n     *    timeZone set to 'utc' to work fine.\n     * @param {?} date Date from which we want to get the string representation according to dtf\n     * @return {?} A Date object with its UTC representation based on the passed in date info\n     */\n    _format(dtf, date) {\n        /** @type {?} */\n        const d = new Date(Date.UTC(date.getFullYear(), date.getMonth(), date.getDate(), date.getHours(), date.getMinutes(), date.getSeconds(), date.getMilliseconds()));\n        return dtf.format(d);\n    }\n}\nNativeDateAdapter.ɵfac = function NativeDateAdapter_Factory(t) { return new (t || NativeDateAdapter)(ɵngcc0.ɵɵinject(MAT_DATE_LOCALE, 8), ɵngcc0.ɵɵinject(ɵngcc1.Platform)); };\nNativeDateAdapter.ɵprov = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjectable({ token: NativeDateAdapter, factory: NativeDateAdapter.ɵfac });\n/** @nocollapse */\nNativeDateAdapter.ctorParameters = () => [\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [MAT_DATE_LOCALE,] }] },\n    { type: Platform }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NativeDateAdapter, [{\n        type: Injectable\n    }], function () { return [{ type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_DATE_LOCALE]\n            }] }, { type: ɵngcc1.Platform }]; }, null); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/** @type {?} */\nconst MAT_NATIVE_DATE_FORMATS = {\n    parse: {\n        dateInput: null,\n    },\n    display: {\n        dateInput: { year: 'numeric', month: 'numeric', day: 'numeric' },\n        monthYearLabel: { year: 'numeric', month: 'short' },\n        dateA11yLabel: { year: 'numeric', month: 'long', day: 'numeric' },\n        monthYearA11yLabel: { year: 'numeric', month: 'long' },\n    }\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass NativeDateModule {\n}\nNativeDateModule.ɵfac = function NativeDateModule_Factory(t) { return new (t || NativeDateModule)(); };\nNativeDateModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: NativeDateModule });\nNativeDateModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ providers: [\n        { provide: DateAdapter, useClass: NativeDateAdapter },\n    ], imports: [PlatformModule] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NativeDateModule, [{\n        type: NgModule,\n        args: [{\n                imports: [PlatformModule],\n                providers: [\n                    { provide: DateAdapter, useClass: NativeDateAdapter },\n                ]\n            }]\n    }], null, null); })();\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NativeDateModule, { imports: function () { return [PlatformModule]; } }); })();\nconst ɵ0$1 = MAT_NATIVE_DATE_FORMATS;\nclass MatNativeDateModule {\n}\nMatNativeDateModule.ɵfac = function MatNativeDateModule_Factory(t) { return new (t || MatNativeDateModule)(); };\nMatNativeDateModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: MatNativeDateModule });\nMatNativeDateModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ providers: [{ provide: MAT_DATE_FORMATS, useValue: ɵ0$1 }], imports: [NativeDateModule] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatNativeDateModule, [{\n        type: NgModule,\n        args: [{\n                imports: [NativeDateModule],\n                providers: [{ provide: MAT_DATE_FORMATS, useValue: ɵ0$1 }]\n            }]\n    }], null, null); })();\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatNativeDateModule, { imports: [NativeDateModule] }); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Error state matcher that matches when a control is invalid and dirty.\n */\nclass ShowOnDirtyErrorStateMatcher {\n    /**\n     * @param {?} control\n     * @param {?} form\n     * @return {?}\n     */\n    isErrorState(control, form) {\n        return !!(control && control.invalid && (control.dirty || (form && form.submitted)));\n    }\n}\nShowOnDirtyErrorStateMatcher.ɵfac = function ShowOnDirtyErrorStateMatcher_Factory(t) { return new (t || ShowOnDirtyErrorStateMatcher)(); };\nShowOnDirtyErrorStateMatcher.ɵprov = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjectable({ token: ShowOnDirtyErrorStateMatcher, factory: ShowOnDirtyErrorStateMatcher.ɵfac });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ShowOnDirtyErrorStateMatcher, [{\n        type: Injectable\n    }], null, null); })();\n/**\n * Provider that defines how form controls behave with regards to displaying error messages.\n */\nclass ErrorStateMatcher {\n    /**\n     * @param {?} control\n     * @param {?} form\n     * @return {?}\n     */\n    isErrorState(control, form) {\n        return !!(control && control.invalid && (control.touched || (form && form.submitted)));\n    }\n}\nErrorStateMatcher.ɵfac = function ErrorStateMatcher_Factory(t) { return new (t || ErrorStateMatcher)(); };\nErrorStateMatcher.ɵprov = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjectable({ token: ErrorStateMatcher, factory: ErrorStateMatcher.ɵfac, providedIn: 'root' });\n/** @nocollapse */ ErrorStateMatcher.ngInjectableDef = defineInjectable({ factory: function ErrorStateMatcher_Factory() { return new ErrorStateMatcher(); }, token: ErrorStateMatcher, providedIn: \"root\" });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ErrorStateMatcher, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Injection token that can be used to provide options to the Hammerjs instance.\n * More info at http://hammerjs.github.io/api/.\n * @type {?}\n */\nconst MAT_HAMMER_OPTIONS = new InjectionToken('MAT_HAMMER_OPTIONS');\n/** @type {?} */\nconst ANGULAR_MATERIAL_SUPPORTED_HAMMER_GESTURES = [\n    'longpress',\n    'slide',\n    'slidestart',\n    'slideend',\n    'slideright',\n    'slideleft'\n];\nconst ɵ0$2 = () => { }, ɵ1 = () => { };\n/**\n * Fake HammerInstance that is used when a Hammer instance is requested when HammerJS has not\n * been loaded on the page.\n * @type {?}\n */\nconst noopHammerInstance = {\n    on: ɵ0$2,\n    off: ɵ1,\n};\n/**\n * Adjusts configuration of our gesture library, Hammer.\n */\nclass GestureConfig extends HammerGestureConfig {\n    /**\n     * @param {?=} _hammerOptions\n     * @param {?=} commonModule\n     */\n    constructor(_hammerOptions, commonModule) {\n        super();\n        this._hammerOptions = _hammerOptions;\n        /**\n         * List of new event names to add to the gesture support list\n         */\n        this.events = ANGULAR_MATERIAL_SUPPORTED_HAMMER_GESTURES;\n        if (commonModule) {\n            commonModule._checkHammerIsAvailable();\n        }\n    }\n    /**\n     * Builds Hammer instance manually to add custom recognizers that match the Material Design spec.\n     *\n     * Our gesture names come from the Material Design gestures spec:\n     * https://material.io/design/#gestures-touch-mechanics\n     *\n     * More information on default recognizers can be found in Hammer docs:\n     * http://hammerjs.github.io/recognizer-pan/\n     * http://hammerjs.github.io/recognizer-press/\n     *\n     * @param {?} element Element to which to assign the new HammerJS gestures.\n     * @return {?} Newly-created HammerJS instance.\n     */\n    buildHammer(element) {\n        /** @type {?} */\n        const hammer = typeof window !== 'undefined' ? ((/** @type {?} */ (window))).Hammer : null;\n        if (!hammer) {\n            // If HammerJS is not loaded here, return the noop HammerInstance. This is necessary to\n            // ensure that omitting HammerJS completely will not cause any errors while *also* supporting\n            // the lazy-loading of HammerJS via the HAMMER_LOADER token introduced in Angular 6.1.\n            // Because we can't depend on HAMMER_LOADER's existance until 7.0, we have to always set\n            // `this.events` to the set we support, instead of conditionally setting it to `[]` if\n            // `HAMMER_LOADER` is present (and then throwing an Error here if `window.Hammer` is\n            // undefined).\n            // @breaking-change 8.0.0\n            return noopHammerInstance;\n        }\n        /** @type {?} */\n        const mc = new hammer(element, this._hammerOptions || undefined);\n        // Default Hammer Recognizers.\n        /** @type {?} */\n        const pan = new hammer.Pan();\n        /** @type {?} */\n        const swipe = new hammer.Swipe();\n        /** @type {?} */\n        const press = new hammer.Press();\n        // Notice that a HammerJS recognizer can only depend on one other recognizer once.\n        // Otherwise the previous `recognizeWith` will be dropped.\n        // TODO: Confirm threshold numbers with Material Design UX Team\n        /** @type {?} */\n        const slide = this._createRecognizer(pan, { event: 'slide', threshold: 0 }, swipe);\n        /** @type {?} */\n        const longpress = this._createRecognizer(press, { event: 'longpress', time: 500 });\n        // Overwrite the default `pan` event to use the swipe event.\n        pan.recognizeWith(swipe);\n        // Since the slide event threshold is set to zero, the slide recognizer can fire and\n        // accidentally reset the longpress recognizer. In order to make sure that the two\n        // recognizers can run simultaneously but don't affect each other, we allow the slide\n        // recognizer to recognize while a longpress is being processed.\n        // See: https://github.com/hammerjs/hammer.js/blob/master/src/manager.js#L123-L124\n        longpress.recognizeWith(slide);\n        // Add customized gestures to Hammer manager\n        mc.add([swipe, press, pan, slide, longpress]);\n        return (/** @type {?} */ (mc));\n    }\n    /**\n     * Creates a new recognizer, without affecting the default recognizers of HammerJS\n     * @private\n     * @param {?} base\n     * @param {?} options\n     * @param {...?} inheritances\n     * @return {?}\n     */\n    _createRecognizer(base, options, ...inheritances) {\n        /** @type {?} */\n        let recognizer = new ((/** @type {?} */ (base.constructor)))(options);\n        inheritances.push(base);\n        inheritances.forEach(item => recognizer.recognizeWith(item));\n        return recognizer;\n    }\n}\nGestureConfig.ɵfac = function GestureConfig_Factory(t) { return new (t || GestureConfig)(ɵngcc0.ɵɵinject(MAT_HAMMER_OPTIONS, 8), ɵngcc0.ɵɵinject(MatCommonModule, 8)); };\nGestureConfig.ɵprov = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjectable({ token: GestureConfig, factory: GestureConfig.ɵfac });\n/** @nocollapse */\nGestureConfig.ctorParameters = () => [\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_HAMMER_OPTIONS,] }] },\n    { type: MatCommonModule, decorators: [{ type: Optional }] }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(GestureConfig, [{\n        type: Injectable\n    }], function () { return [{ type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_HAMMER_OPTIONS]\n            }] }, { type: MatCommonModule, decorators: [{\n                type: Optional\n            }] }]; }, null); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Shared directive to count lines inside a text area, such as a list item.\n * Line elements can be extracted with a \\@ContentChildren(MatLine) query, then\n * counted by checking the query list's length.\n */\nclass MatLine {\n}\nMatLine.ɵfac = function MatLine_Factory(t) { return new (t || MatLine)(); };\nMatLine.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: MatLine, selectors: [[\"\", \"mat-line\", \"\"], [\"\", \"matLine\", \"\"]], hostAttrs: [1, \"mat-line\"] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatLine, [{\n        type: Directive,\n        args: [{\n                selector: '[mat-line], [matLine]',\n                host: { 'class': 'mat-line' }\n            }]\n    }], null, null); })();\n/**\n * Helper that takes a query list of lines and sets the correct class on the host.\n * \\@docs-private\n * @param {?} lines\n * @param {?} element\n * @return {?}\n */\nfunction setLines(lines, element) {\n    // Note: doesn't need to unsubscribe, because `changes`\n    // gets completed by Angular when the view is destroyed.\n    lines.changes.pipe(startWith(lines)).subscribe(({ length }) => {\n        setClass(element, 'mat-2-line', false);\n        setClass(element, 'mat-3-line', false);\n        setClass(element, 'mat-multi-line', false);\n        if (length === 2 || length === 3) {\n            setClass(element, `mat-${length}-line`, true);\n        }\n        else if (length > 3) {\n            setClass(element, `mat-multi-line`, true);\n        }\n    });\n}\n/**\n * Adds or removes a class from an element.\n * @param {?} element\n * @param {?} className\n * @param {?} isAdd\n * @return {?}\n */\nfunction setClass(element, className, isAdd) {\n    /** @type {?} */\n    const classList = element.nativeElement.classList;\n    isAdd ? classList.add(className) : classList.remove(className);\n}\n/**\n * Helper that takes a query list of lines and sets the correct class on the host.\n * \\@docs-private\n * @deprecated Use `setLines` instead.\n * \\@breaking-change 8.0.0\n */\nclass MatLineSetter {\n    /**\n     * @param {?} lines\n     * @param {?} element\n     */\n    constructor(lines, element) {\n        setLines(lines, element);\n    }\n}\nclass MatLineModule {\n}\nMatLineModule.ɵfac = function MatLineModule_Factory(t) { return new (t || MatLineModule)(); };\nMatLineModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: MatLineModule });\nMatLineModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ imports: [MatCommonModule, MatCommonModule] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatLineModule, [{\n        type: NgModule,\n        args: [{\n                imports: [MatCommonModule],\n                exports: [MatLine, MatCommonModule],\n                declarations: [MatLine]\n            }]\n    }], null, null); })();\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatLineModule, { declarations: [MatLine], imports: [MatCommonModule], exports: [MatLine, MatCommonModule] }); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/** @enum {number} */\nconst RippleState = {\n    FADING_IN: 0, VISIBLE: 1, FADING_OUT: 2, HIDDEN: 3,\n};\nRippleState[RippleState.FADING_IN] = 'FADING_IN';\nRippleState[RippleState.VISIBLE] = 'VISIBLE';\nRippleState[RippleState.FADING_OUT] = 'FADING_OUT';\nRippleState[RippleState.HIDDEN] = 'HIDDEN';\n/**\n * Reference to a previously launched ripple element.\n */\nclass RippleRef {\n    /**\n     * @param {?} _renderer\n     * @param {?} element\n     * @param {?} config\n     */\n    constructor(_renderer, element, config) {\n        this._renderer = _renderer;\n        this.element = element;\n        this.config = config;\n        /**\n         * Current state of the ripple.\n         */\n        this.state = RippleState.HIDDEN;\n    }\n    /**\n     * Fades out the ripple element.\n     * @return {?}\n     */\n    fadeOut() {\n        this._renderer.fadeOutRipple(this);\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Default ripple animation configuration for ripples without an explicit\n * animation config specified.\n * @type {?}\n */\nconst defaultRippleAnimationConfig = {\n    enterDuration: 450,\n    exitDuration: 400\n};\n/**\n * Timeout for ignoring mouse events. Mouse events will be temporary ignored after touch\n * events to avoid synthetic mouse events.\n * @type {?}\n */\nconst ignoreMouseEventsTimeout = 800;\n/**\n * Options that apply to all the event listeners that are bound by the ripple renderer.\n * @type {?}\n */\nconst passiveEventOptions = normalizePassiveListenerOptions({ passive: true });\n/**\n * Helper service that performs DOM manipulations. Not intended to be used outside this module.\n * The constructor takes a reference to the ripple directive's host element and a map of DOM\n * event handlers to be installed on the element that triggers ripple animations.\n * This will eventually become a custom renderer once Angular support exists.\n * \\@docs-private\n */\nclass RippleRenderer {\n    /**\n     * @param {?} _target\n     * @param {?} _ngZone\n     * @param {?} elementRef\n     * @param {?} platform\n     */\n    constructor(_target, _ngZone, elementRef, platform) {\n        this._target = _target;\n        this._ngZone = _ngZone;\n        /**\n         * Whether the pointer is currently down or not.\n         */\n        this._isPointerDown = false;\n        /**\n         * Events to be registered on the trigger element.\n         */\n        this._triggerEvents = new Map();\n        /**\n         * Set of currently active ripple references.\n         */\n        this._activeRipples = new Set();\n        /**\n         * Function being called whenever the trigger is being pressed using mouse.\n         */\n        this.onMousedown = (event) => {\n            // Screen readers will fire fake mouse events for space/enter. Skip launching a\n            // ripple in this case for consistency with the non-screen-reader experience.\n            /** @type {?} */\n            const isFakeMousedown = isFakeMousedownFromScreenReader(event);\n            /** @type {?} */\n            const isSyntheticEvent = this._lastTouchStartEvent &&\n                Date.now() < this._lastTouchStartEvent + ignoreMouseEventsTimeout;\n            if (!this._target.rippleDisabled && !isFakeMousedown && !isSyntheticEvent) {\n                this._isPointerDown = true;\n                this.fadeInRipple(event.clientX, event.clientY, this._target.rippleConfig);\n            }\n        };\n        /**\n         * Function being called whenever the trigger is being pressed using touch.\n         */\n        this.onTouchStart = (event) => {\n            if (!this._target.rippleDisabled) {\n                // Some browsers fire mouse events after a `touchstart` event. Those synthetic mouse\n                // events will launch a second ripple if we don't ignore mouse events for a specific\n                // time after a touchstart event.\n                this._lastTouchStartEvent = Date.now();\n                this._isPointerDown = true;\n                // Use `changedTouches` so we skip any touches where the user put\n                // their finger down, but used another finger to tap the element again.\n                /** @type {?} */\n                const touches = event.changedTouches;\n                for (let i = 0; i < touches.length; i++) {\n                    this.fadeInRipple(touches[i].clientX, touches[i].clientY, this._target.rippleConfig);\n                }\n            }\n        };\n        /**\n         * Function being called whenever the trigger is being released.\n         */\n        this.onPointerUp = () => {\n            if (!this._isPointerDown) {\n                return;\n            }\n            this._isPointerDown = false;\n            // Fade-out all ripples that are visible and not persistent.\n            this._activeRipples.forEach(ripple => {\n                // By default, only ripples that are completely visible will fade out on pointer release.\n                // If the `terminateOnPointerUp` option is set, ripples that still fade in will also fade out.\n                /** @type {?} */\n                const isVisible = ripple.state === RippleState.VISIBLE ||\n                    ripple.config.terminateOnPointerUp && ripple.state === RippleState.FADING_IN;\n                if (!ripple.config.persistent && isVisible) {\n                    ripple.fadeOut();\n                }\n            });\n        };\n        // Only do anything if we're on the browser.\n        if (platform.isBrowser) {\n            this._containerElement = elementRef.nativeElement;\n            // Specify events which need to be registered on the trigger.\n            this._triggerEvents\n                .set('mousedown', this.onMousedown)\n                .set('mouseup', this.onPointerUp)\n                .set('mouseleave', this.onPointerUp)\n                .set('touchstart', this.onTouchStart)\n                .set('touchend', this.onPointerUp)\n                .set('touchcancel', this.onPointerUp);\n        }\n    }\n    /**\n     * Fades in a ripple at the given coordinates.\n     * @param {?} x Coordinate within the element, along the X axis at which to start the ripple.\n     * @param {?} y Coordinate within the element, along the Y axis at which to start the ripple.\n     * @param {?=} config Extra ripple options.\n     * @return {?}\n     */\n    fadeInRipple(x, y, config = {}) {\n        /** @type {?} */\n        const containerRect = this._containerRect =\n            this._containerRect || this._containerElement.getBoundingClientRect();\n        /** @type {?} */\n        const animationConfig = Object.assign({}, defaultRippleAnimationConfig, config.animation);\n        if (config.centered) {\n            x = containerRect.left + containerRect.width / 2;\n            y = containerRect.top + containerRect.height / 2;\n        }\n        /** @type {?} */\n        const radius = config.radius || distanceToFurthestCorner(x, y, containerRect);\n        /** @type {?} */\n        const offsetX = x - containerRect.left;\n        /** @type {?} */\n        const offsetY = y - containerRect.top;\n        /** @type {?} */\n        const duration = animationConfig.enterDuration;\n        /** @type {?} */\n        const ripple = document.createElement('div');\n        ripple.classList.add('mat-ripple-element');\n        ripple.style.left = `${offsetX - radius}px`;\n        ripple.style.top = `${offsetY - radius}px`;\n        ripple.style.height = `${radius * 2}px`;\n        ripple.style.width = `${radius * 2}px`;\n        // If the color is not set, the default CSS color will be used.\n        ripple.style.backgroundColor = config.color || null;\n        ripple.style.transitionDuration = `${duration}ms`;\n        this._containerElement.appendChild(ripple);\n        // By default the browser does not recalculate the styles of dynamically created\n        // ripple elements. This is critical because then the `scale` would not animate properly.\n        enforceStyleRecalculation(ripple);\n        ripple.style.transform = 'scale(1)';\n        // Exposed reference to the ripple that will be returned.\n        /** @type {?} */\n        const rippleRef = new RippleRef(this, ripple, config);\n        rippleRef.state = RippleState.FADING_IN;\n        // Add the ripple reference to the list of all active ripples.\n        this._activeRipples.add(rippleRef);\n        if (!config.persistent) {\n            this._mostRecentTransientRipple = rippleRef;\n        }\n        // Wait for the ripple element to be completely faded in.\n        // Once it's faded in, the ripple can be hidden immediately if the mouse is released.\n        this.runTimeoutOutsideZone(() => {\n            /** @type {?} */\n            const isMostRecentTransientRipple = rippleRef === this._mostRecentTransientRipple;\n            rippleRef.state = RippleState.VISIBLE;\n            // When the timer runs out while the user has kept their pointer down, we want to\n            // keep only the persistent ripples and the latest transient ripple. We do this,\n            // because we don't want stacked transient ripples to appear after their enter\n            // animation has finished.\n            if (!config.persistent && (!isMostRecentTransientRipple || !this._isPointerDown)) {\n                rippleRef.fadeOut();\n            }\n        }, duration);\n        return rippleRef;\n    }\n    /**\n     * Fades out a ripple reference.\n     * @param {?} rippleRef\n     * @return {?}\n     */\n    fadeOutRipple(rippleRef) {\n        /** @type {?} */\n        const wasActive = this._activeRipples.delete(rippleRef);\n        if (rippleRef === this._mostRecentTransientRipple) {\n            this._mostRecentTransientRipple = null;\n        }\n        // Clear out the cached bounding rect if we have no more ripples.\n        if (!this._activeRipples.size) {\n            this._containerRect = null;\n        }\n        // For ripples that are not active anymore, don't re-run the fade-out animation.\n        if (!wasActive) {\n            return;\n        }\n        /** @type {?} */\n        const rippleEl = rippleRef.element;\n        /** @type {?} */\n        const animationConfig = Object.assign({}, defaultRippleAnimationConfig, rippleRef.config.animation);\n        rippleEl.style.transitionDuration = `${animationConfig.exitDuration}ms`;\n        rippleEl.style.opacity = '0';\n        rippleRef.state = RippleState.FADING_OUT;\n        // Once the ripple faded out, the ripple can be safely removed from the DOM.\n        this.runTimeoutOutsideZone(() => {\n            rippleRef.state = RippleState.HIDDEN;\n            (/** @type {?} */ (rippleEl.parentNode)).removeChild(rippleEl);\n        }, animationConfig.exitDuration);\n    }\n    /**\n     * Fades out all currently active ripples.\n     * @return {?}\n     */\n    fadeOutAll() {\n        this._activeRipples.forEach(ripple => ripple.fadeOut());\n    }\n    /**\n     * Sets up the trigger event listeners\n     * @param {?} element\n     * @return {?}\n     */\n    setupTriggerEvents(element) {\n        if (!element || element === this._triggerElement) {\n            return;\n        }\n        // Remove all previously registered event listeners from the trigger element.\n        this._removeTriggerEvents();\n        this._ngZone.runOutsideAngular(() => {\n            this._triggerEvents.forEach((fn, type) => {\n                element.addEventListener(type, fn, passiveEventOptions);\n            });\n        });\n        this._triggerElement = element;\n    }\n    /**\n     * Runs a timeout outside of the Angular zone to avoid triggering the change detection.\n     * @private\n     * @param {?} fn\n     * @param {?=} delay\n     * @return {?}\n     */\n    runTimeoutOutsideZone(fn, delay = 0) {\n        this._ngZone.runOutsideAngular(() => setTimeout(fn, delay));\n    }\n    /**\n     * Removes previously registered event listeners from the trigger element.\n     * @return {?}\n     */\n    _removeTriggerEvents() {\n        if (this._triggerElement) {\n            this._triggerEvents.forEach((fn, type) => {\n                (/** @type {?} */ (this._triggerElement)).removeEventListener(type, fn, passiveEventOptions);\n            });\n        }\n    }\n}\n/**\n * Enforces a style recalculation of a DOM element by computing its styles.\n * @param {?} element\n * @return {?}\n */\nfunction enforceStyleRecalculation(element) {\n    // Enforce a style recalculation by calling `getComputedStyle` and accessing any property.\n    // Calling `getPropertyValue` is important to let optimizers know that this is not a noop.\n    // See: https://gist.github.com/paulirish/5d52fb081b3570c81e3a\n    window.getComputedStyle(element).getPropertyValue('opacity');\n}\n/**\n * Returns the distance from the point (x, y) to the furthest corner of a rectangle.\n * @param {?} x\n * @param {?} y\n * @param {?} rect\n * @return {?}\n */\nfunction distanceToFurthestCorner(x, y, rect) {\n    /** @type {?} */\n    const distX = Math.max(Math.abs(x - rect.left), Math.abs(x - rect.right));\n    /** @type {?} */\n    const distY = Math.max(Math.abs(y - rect.top), Math.abs(y - rect.bottom));\n    return Math.sqrt(distX * distX + distY * distY);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Injection token that can be used to specify the global ripple options.\n * @type {?}\n */\nconst MAT_RIPPLE_GLOBAL_OPTIONS = new InjectionToken('mat-ripple-global-options');\nclass MatRipple {\n    /**\n     * @param {?} _elementRef\n     * @param {?} ngZone\n     * @param {?} platform\n     * @param {?=} globalOptions\n     * @param {?=} animationMode\n     */\n    constructor(_elementRef, ngZone, platform, globalOptions, animationMode) {\n        this._elementRef = _elementRef;\n        /**\n         * If set, the radius in pixels of foreground ripples when fully expanded. If unset, the radius\n         * will be the distance from the center of the ripple to the furthest corner of the host element's\n         * bounding rectangle.\n         */\n        this.radius = 0;\n        this._disabled = false;\n        /**\n         * Whether ripple directive is initialized and the input bindings are set.\n         */\n        this._isInitialized = false;\n        this._globalOptions = globalOptions || {};\n        this._rippleRenderer = new RippleRenderer(this, ngZone, _elementRef, platform);\n        if (animationMode === 'NoopAnimations') {\n            this._globalOptions.animation = { enterDuration: 0, exitDuration: 0 };\n        }\n    }\n    /**\n     * Whether click events will not trigger the ripple. Ripples can be still launched manually\n     * by using the `launch()` method.\n     * @return {?}\n     */\n    get disabled() { return this._disabled; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set disabled(value) {\n        this._disabled = value;\n        this._setupTriggerEventsIfEnabled();\n    }\n    /**\n     * The element that triggers the ripple when click events are received.\n     * Defaults to the directive's host element.\n     * @return {?}\n     */\n    get trigger() { return this._trigger || this._elementRef.nativeElement; }\n    /**\n     * @param {?} trigger\n     * @return {?}\n     */\n    set trigger(trigger) {\n        this._trigger = trigger;\n        this._setupTriggerEventsIfEnabled();\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        this._isInitialized = true;\n        this._setupTriggerEventsIfEnabled();\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._rippleRenderer._removeTriggerEvents();\n    }\n    /**\n     * Fades out all currently showing ripple elements.\n     * @return {?}\n     */\n    fadeOutAll() {\n        this._rippleRenderer.fadeOutAll();\n    }\n    /**\n     * Ripple configuration from the directive's input values.\n     * \\@docs-private Implemented as part of RippleTarget\n     * @return {?}\n     */\n    get rippleConfig() {\n        return {\n            centered: this.centered,\n            radius: this.radius,\n            color: this.color,\n            animation: Object.assign({}, this._globalOptions.animation, this.animation),\n            terminateOnPointerUp: this._globalOptions.terminateOnPointerUp,\n        };\n    }\n    /**\n     * Whether ripples on pointer-down are disabled or not.\n     * \\@docs-private Implemented as part of RippleTarget\n     * @return {?}\n     */\n    get rippleDisabled() {\n        return this.disabled || !!this._globalOptions.disabled;\n    }\n    /**\n     * Sets up the trigger event listeners if ripples are enabled.\n     * @private\n     * @return {?}\n     */\n    _setupTriggerEventsIfEnabled() {\n        if (!this.disabled && this._isInitialized) {\n            this._rippleRenderer.setupTriggerEvents(this.trigger);\n        }\n    }\n    /**\n     * Launches a manual ripple at the specified coordinated or just by the ripple config.\n     * @param {?} configOrX\n     * @param {?=} y\n     * @param {?=} config\n     * @return {?}\n     */\n    launch(configOrX, y = 0, config) {\n        if (typeof configOrX === 'number') {\n            return this._rippleRenderer.fadeInRipple(configOrX, y, Object.assign({}, this.rippleConfig, config));\n        }\n        else {\n            return this._rippleRenderer.fadeInRipple(0, 0, Object.assign({}, this.rippleConfig, configOrX));\n        }\n    }\n}\nMatRipple.ɵfac = function MatRipple_Factory(t) { return new (t || MatRipple)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Platform), ɵngcc0.ɵɵdirectiveInject(MAT_RIPPLE_GLOBAL_OPTIONS, 8), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\nMatRipple.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: MatRipple, selectors: [[\"\", \"mat-ripple\", \"\"], [\"\", \"matRipple\", \"\"]], hostAttrs: [1, \"mat-ripple\"], hostVars: 2, hostBindings: function MatRipple_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mat-ripple-unbounded\", ctx.unbounded);\n    } }, inputs: { radius: [\"matRippleRadius\", \"radius\"], disabled: [\"matRippleDisabled\", \"disabled\"], trigger: [\"matRippleTrigger\", \"trigger\"], color: [\"matRippleColor\", \"color\"], unbounded: [\"matRippleUnbounded\", \"unbounded\"], centered: [\"matRippleCentered\", \"centered\"], animation: [\"matRippleAnimation\", \"animation\"] }, exportAs: [\"matRipple\"] });\n/** @nocollapse */\nMatRipple.ctorParameters = () => [\n    { type: ElementRef },\n    { type: NgZone },\n    { type: Platform },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_RIPPLE_GLOBAL_OPTIONS,] }] },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\nMatRipple.propDecorators = {\n    color: [{ type: Input, args: ['matRippleColor',] }],\n    unbounded: [{ type: Input, args: ['matRippleUnbounded',] }],\n    centered: [{ type: Input, args: ['matRippleCentered',] }],\n    radius: [{ type: Input, args: ['matRippleRadius',] }],\n    animation: [{ type: Input, args: ['matRippleAnimation',] }],\n    disabled: [{ type: Input, args: ['matRippleDisabled',] }],\n    trigger: [{ type: Input, args: ['matRippleTrigger',] }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatRipple, [{\n        type: Directive,\n        args: [{\n                selector: '[mat-ripple], [matRipple]',\n                exportAs: 'matRipple',\n                host: {\n                    'class': 'mat-ripple',\n                    '[class.mat-ripple-unbounded]': 'unbounded'\n                }\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }, { type: ɵngcc1.Platform }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_RIPPLE_GLOBAL_OPTIONS]\n            }] }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, { radius: [{\n            type: Input,\n            args: ['matRippleRadius']\n        }], disabled: [{\n            type: Input,\n            args: ['matRippleDisabled']\n        }], trigger: [{\n            type: Input,\n            args: ['matRippleTrigger']\n        }], color: [{\n            type: Input,\n            args: ['matRippleColor']\n        }], unbounded: [{\n            type: Input,\n            args: ['matRippleUnbounded']\n        }], centered: [{\n            type: Input,\n            args: ['matRippleCentered']\n        }], animation: [{\n            type: Input,\n            args: ['matRippleAnimation']\n        }] }); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass MatRippleModule {\n}\nMatRippleModule.ɵfac = function MatRippleModule_Factory(t) { return new (t || MatRippleModule)(); };\nMatRippleModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: MatRippleModule });\nMatRippleModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ imports: [MatCommonModule, PlatformModule, MatCommonModule] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatRippleModule, [{\n        type: NgModule,\n        args: [{\n                imports: [MatCommonModule, PlatformModule],\n                exports: [MatRipple, MatCommonModule],\n                declarations: [MatRipple]\n            }]\n    }], null, null); })();\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatRippleModule, { declarations: function () { return [MatRipple]; }, imports: function () { return [MatCommonModule, PlatformModule]; }, exports: function () { return [MatRipple, MatCommonModule]; } }); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Component that shows a simplified checkbox without including any kind of \"real\" checkbox.\n * Meant to be used when the checkbox is purely decorative and a large number of them will be\n * included, such as for the options in a multi-select. Uses no SVGs or complex animations.\n * Note that theming is meant to be handled by the parent element, e.g.\n * `mat-primary .mat-pseudo-checkbox`.\n *\n * Note that this component will be completely invisible to screen-reader users. This is *not*\n * interchangeable with `<mat-checkbox>` and should *not* be used if the user would directly\n * interact with the checkbox. The pseudo-checkbox should only be used as an implementation detail\n * of more complex components that appropriately handle selected / checked state.\n * \\@docs-private\n */\nclass MatPseudoCheckbox {\n    /**\n     * @param {?=} _animationMode\n     */\n    constructor(_animationMode) {\n        this._animationMode = _animationMode;\n        /**\n         * Display state of the checkbox.\n         */\n        this.state = 'unchecked';\n        /**\n         * Whether the checkbox is disabled.\n         */\n        this.disabled = false;\n    }\n}\nMatPseudoCheckbox.ɵfac = function MatPseudoCheckbox_Factory(t) { return new (t || MatPseudoCheckbox)(ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\nMatPseudoCheckbox.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: MatPseudoCheckbox, selectors: [[\"mat-pseudo-checkbox\"]], hostAttrs: [1, \"mat-pseudo-checkbox\"], hostVars: 8, hostBindings: function MatPseudoCheckbox_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mat-pseudo-checkbox-indeterminate\", ctx.state === \"indeterminate\")(\"mat-pseudo-checkbox-checked\", ctx.state === \"checked\")(\"mat-pseudo-checkbox-disabled\", ctx.disabled)(\"_mat-animation-noopable\", ctx._animationMode === \"NoopAnimations\");\n    } }, inputs: { state: \"state\", disabled: \"disabled\" }, decls: 0, vars: 0, template: function MatPseudoCheckbox_Template(rf, ctx) { }, styles: [\".mat-pseudo-checkbox{width:16px;height:16px;border:2px solid;border-radius:2px;cursor:pointer;display:inline-block;vertical-align:middle;box-sizing:border-box;position:relative;flex-shrink:0;transition:border-color 90ms cubic-bezier(0,0,.2,.1),background-color 90ms cubic-bezier(0,0,.2,.1)}.mat-pseudo-checkbox::after{position:absolute;opacity:0;content:'';border-bottom:2px solid currentColor;transition:opacity 90ms cubic-bezier(0,0,.2,.1)}.mat-pseudo-checkbox.mat-pseudo-checkbox-checked,.mat-pseudo-checkbox.mat-pseudo-checkbox-indeterminate{border-color:transparent}._mat-animation-noopable.mat-pseudo-checkbox{transition:none;animation:none}._mat-animation-noopable.mat-pseudo-checkbox::after{transition:none}.mat-pseudo-checkbox-disabled{cursor:default}.mat-pseudo-checkbox-indeterminate::after{top:5px;left:1px;width:10px;opacity:1;border-radius:2px}.mat-pseudo-checkbox-checked::after{top:2.4px;left:1px;width:8px;height:3px;border-left:2px solid currentColor;transform:rotate(-45deg);opacity:1;box-sizing:content-box}\"], encapsulation: 2, changeDetection: 0 });\n/** @nocollapse */\nMatPseudoCheckbox.ctorParameters = () => [\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\nMatPseudoCheckbox.propDecorators = {\n    state: [{ type: Input }],\n    disabled: [{ type: Input }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatPseudoCheckbox, [{\n        type: Component,\n        args: [{ encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, selector: 'mat-pseudo-checkbox', template: '', host: {\n                    'class': 'mat-pseudo-checkbox',\n                    '[class.mat-pseudo-checkbox-indeterminate]': 'state === \"indeterminate\"',\n                    '[class.mat-pseudo-checkbox-checked]': 'state === \"checked\"',\n                    '[class.mat-pseudo-checkbox-disabled]': 'disabled',\n                    '[class._mat-animation-noopable]': '_animationMode === \"NoopAnimations\"'\n                }, styles: [\".mat-pseudo-checkbox{width:16px;height:16px;border:2px solid;border-radius:2px;cursor:pointer;display:inline-block;vertical-align:middle;box-sizing:border-box;position:relative;flex-shrink:0;transition:border-color 90ms cubic-bezier(0,0,.2,.1),background-color 90ms cubic-bezier(0,0,.2,.1)}.mat-pseudo-checkbox::after{position:absolute;opacity:0;content:'';border-bottom:2px solid currentColor;transition:opacity 90ms cubic-bezier(0,0,.2,.1)}.mat-pseudo-checkbox.mat-pseudo-checkbox-checked,.mat-pseudo-checkbox.mat-pseudo-checkbox-indeterminate{border-color:transparent}._mat-animation-noopable.mat-pseudo-checkbox{transition:none;animation:none}._mat-animation-noopable.mat-pseudo-checkbox::after{transition:none}.mat-pseudo-checkbox-disabled{cursor:default}.mat-pseudo-checkbox-indeterminate::after{top:5px;left:1px;width:10px;opacity:1;border-radius:2px}.mat-pseudo-checkbox-checked::after{top:2.4px;left:1px;width:8px;height:3px;border-left:2px solid currentColor;transform:rotate(-45deg);opacity:1;box-sizing:content-box}\"] }]\n    }], function () { return [{ type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, { state: [{\n            type: Input\n        }], disabled: [{\n            type: Input\n        }] }); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass MatPseudoCheckboxModule {\n}\nMatPseudoCheckboxModule.ɵfac = function MatPseudoCheckboxModule_Factory(t) { return new (t || MatPseudoCheckboxModule)(); };\nMatPseudoCheckboxModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: MatPseudoCheckboxModule });\nMatPseudoCheckboxModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({});\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatPseudoCheckboxModule, [{\n        type: NgModule,\n        args: [{\n                exports: [MatPseudoCheckbox],\n                declarations: [MatPseudoCheckbox]\n            }]\n    }], null, null); })();\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatPseudoCheckboxModule, { declarations: [MatPseudoCheckbox], exports: [MatPseudoCheckbox] }); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// Boilerplate for applying mixins to MatOptgroup.\n/**\n * \\@docs-private\n */\nclass MatOptgroupBase {\n}\n/** @type {?} */\nconst _MatOptgroupMixinBase = mixinDisabled(MatOptgroupBase);\n// Counter for unique group ids.\n/** @type {?} */\nlet _uniqueOptgroupIdCounter = 0;\n/**\n * Component that is used to group instances of `mat-option`.\n */\nclass MatOptgroup extends _MatOptgroupMixinBase {\n    constructor() {\n        super(...arguments);\n        /**\n         * Unique id for the underlying label.\n         */\n        this._labelId = `mat-optgroup-label-${_uniqueOptgroupIdCounter++}`;\n    }\n}\nMatOptgroup.ɵfac = /*@__PURE__*/ function () { let ɵMatOptgroup_BaseFactory; return function MatOptgroup_Factory(t) { return (ɵMatOptgroup_BaseFactory || (ɵMatOptgroup_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatOptgroup)))(t || MatOptgroup); }; }();\nMatOptgroup.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: MatOptgroup, selectors: [[\"mat-optgroup\"]], hostAttrs: [\"role\", \"group\", 1, \"mat-optgroup\"], hostVars: 4, hostBindings: function MatOptgroup_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"aria-disabled\", ctx.disabled.toString())(\"aria-labelledby\", ctx._labelId);\n        ɵngcc0.ɵɵclassProp(\"mat-optgroup-disabled\", ctx.disabled);\n    } }, inputs: { disabled: \"disabled\", label: \"label\" }, exportAs: [\"matOptgroup\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c1, decls: 4, vars: 2, consts: [[1, \"mat-optgroup-label\", 3, \"id\"]], template: function MatOptgroup_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c0);\n        ɵngcc0.ɵɵelementStart(0, \"label\", 0);\n        ɵngcc0.ɵɵtext(1);\n        ɵngcc0.ɵɵprojection(2);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵprojection(3, 1);\n    } if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"id\", ctx._labelId);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵtextInterpolate(ctx.label);\n    } }, styles: [\".mat-optgroup-label{white-space:nowrap;overflow:hidden;text-overflow:ellipsis;display:block;line-height:48px;height:48px;padding:0 16px;text-align:left;text-decoration:none;max-width:100%;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:default}.mat-optgroup-label[disabled]{cursor:default}[dir=rtl] .mat-optgroup-label{text-align:right}.mat-optgroup-label .mat-icon{margin-right:16px;vertical-align:middle}.mat-optgroup-label .mat-icon svg{vertical-align:top}[dir=rtl] .mat-optgroup-label .mat-icon{margin-left:16px;margin-right:0}\"], encapsulation: 2, changeDetection: 0 });\nMatOptgroup.propDecorators = {\n    label: [{ type: Input }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatOptgroup, [{\n        type: Component,\n        args: [{ selector: 'mat-optgroup', exportAs: 'matOptgroup', template: \"<label class=\\\"mat-optgroup-label\\\" [id]=\\\"_labelId\\\">{{ label }}<ng-content></ng-content></label><ng-content select=\\\"mat-option, ng-container\\\"></ng-content>\", encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, inputs: ['disabled'], host: {\n                    'class': 'mat-optgroup',\n                    'role': 'group',\n                    '[class.mat-optgroup-disabled]': 'disabled',\n                    '[attr.aria-disabled]': 'disabled.toString()',\n                    '[attr.aria-labelledby]': '_labelId'\n                }, styles: [\".mat-optgroup-label{white-space:nowrap;overflow:hidden;text-overflow:ellipsis;display:block;line-height:48px;height:48px;padding:0 16px;text-align:left;text-decoration:none;max-width:100%;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:default}.mat-optgroup-label[disabled]{cursor:default}[dir=rtl] .mat-optgroup-label{text-align:right}.mat-optgroup-label .mat-icon{margin-right:16px;vertical-align:middle}.mat-optgroup-label .mat-icon svg{vertical-align:top}[dir=rtl] .mat-optgroup-label .mat-icon{margin-left:16px;margin-right:0}\"] }]\n    }], null, { label: [{\n            type: Input\n        }] }); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Option IDs need to be unique across components, so this counter exists outside of\n * the component definition.\n * @type {?}\n */\nlet _uniqueIdCounter = 0;\n/**\n * Event object emitted by MatOption when selected or deselected.\n */\nclass MatOptionSelectionChange {\n    /**\n     * @param {?} source\n     * @param {?=} isUserInput\n     */\n    constructor(source, isUserInput = false) {\n        this.source = source;\n        this.isUserInput = isUserInput;\n    }\n}\n/**\n * Injection token used to provide the parent component to options.\n * @type {?}\n */\nconst MAT_OPTION_PARENT_COMPONENT = new InjectionToken('MAT_OPTION_PARENT_COMPONENT');\n/**\n * Single option inside of a `<mat-select>` element.\n */\nclass MatOption {\n    /**\n     * @param {?} _element\n     * @param {?} _changeDetectorRef\n     * @param {?} _parent\n     * @param {?} group\n     */\n    constructor(_element, _changeDetectorRef, _parent, group) {\n        this._element = _element;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._parent = _parent;\n        this.group = group;\n        this._selected = false;\n        this._active = false;\n        this._disabled = false;\n        this._mostRecentViewValue = '';\n        /**\n         * The unique ID of the option.\n         */\n        this.id = `mat-option-${_uniqueIdCounter++}`;\n        /**\n         * Event emitted when the option is selected or deselected.\n         */\n        // tslint:disable-next-line:no-output-on-prefix\n        this.onSelectionChange = new EventEmitter();\n        /**\n         * Emits when the state of the option changes and any parents have to be notified.\n         */\n        this._stateChanges = new Subject();\n    }\n    /**\n     * Whether the wrapping component is in multiple selection mode.\n     * @return {?}\n     */\n    get multiple() { return this._parent && this._parent.multiple; }\n    /**\n     * Whether or not the option is currently selected.\n     * @return {?}\n     */\n    get selected() { return this._selected; }\n    /**\n     * Whether the option is disabled.\n     * @return {?}\n     */\n    get disabled() { return (this.group && this.group.disabled) || this._disabled; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set disabled(value) { this._disabled = coerceBooleanProperty(value); }\n    /**\n     * Whether ripples for the option are disabled.\n     * @return {?}\n     */\n    get disableRipple() { return this._parent && this._parent.disableRipple; }\n    /**\n     * Whether or not the option is currently active and ready to be selected.\n     * An active option displays styles as if it is focused, but the\n     * focus is actually retained somewhere else. This comes in handy\n     * for components like autocomplete where focus must remain on the input.\n     * @return {?}\n     */\n    get active() {\n        return this._active;\n    }\n    /**\n     * The displayed value of the option. It is necessary to show the selected option in the\n     * select's trigger.\n     * @return {?}\n     */\n    get viewValue() {\n        // TODO(kara): Add input property alternative for node envs.\n        return (this._getHostElement().textContent || '').trim();\n    }\n    /**\n     * Selects the option.\n     * @return {?}\n     */\n    select() {\n        if (!this._selected) {\n            this._selected = true;\n            this._changeDetectorRef.markForCheck();\n            this._emitSelectionChangeEvent();\n        }\n    }\n    /**\n     * Deselects the option.\n     * @return {?}\n     */\n    deselect() {\n        if (this._selected) {\n            this._selected = false;\n            this._changeDetectorRef.markForCheck();\n            this._emitSelectionChangeEvent();\n        }\n    }\n    /**\n     * Sets focus onto this option.\n     * @return {?}\n     */\n    focus() {\n        /** @type {?} */\n        const element = this._getHostElement();\n        if (typeof element.focus === 'function') {\n            element.focus();\n        }\n    }\n    /**\n     * This method sets display styles on the option to make it appear\n     * active. This is used by the ActiveDescendantKeyManager so key\n     * events will display the proper options as active on arrow key events.\n     * @return {?}\n     */\n    setActiveStyles() {\n        if (!this._active) {\n            this._active = true;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    /**\n     * This method removes display styles on the option that made it appear\n     * active. This is used by the ActiveDescendantKeyManager so key\n     * events will display the proper options as active on arrow key events.\n     * @return {?}\n     */\n    setInactiveStyles() {\n        if (this._active) {\n            this._active = false;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    /**\n     * Gets the label to be used when determining whether the option should be focused.\n     * @return {?}\n     */\n    getLabel() {\n        return this.viewValue;\n    }\n    /**\n     * Ensures the option is selected when activated from the keyboard.\n     * @param {?} event\n     * @return {?}\n     */\n    _handleKeydown(event) {\n        if ((event.keyCode === ENTER || event.keyCode === SPACE) && !hasModifierKey(event)) {\n            this._selectViaInteraction();\n            // Prevent the page from scrolling down and form submits.\n            event.preventDefault();\n        }\n    }\n    /**\n     * `Selects the option while indicating the selection came from the user. Used to\n     * determine if the select's view -> model callback should be invoked.`\n     * @return {?}\n     */\n    _selectViaInteraction() {\n        if (!this.disabled) {\n            this._selected = this.multiple ? !this._selected : true;\n            this._changeDetectorRef.markForCheck();\n            this._emitSelectionChangeEvent(true);\n        }\n    }\n    /**\n     * Gets the `aria-selected` value for the option. We explicitly omit the `aria-selected`\n     * attribute from single-selection, unselected options. Including the `aria-selected=\"false\"`\n     * attributes adds a significant amount of noise to screen-reader users without providing useful\n     * information.\n     * @return {?}\n     */\n    _getAriaSelected() {\n        return this.selected || (this.multiple ? false : null);\n    }\n    /**\n     * Returns the correct tabindex for the option depending on disabled state.\n     * @return {?}\n     */\n    _getTabIndex() {\n        return this.disabled ? '-1' : '0';\n    }\n    /**\n     * Gets the host DOM element.\n     * @return {?}\n     */\n    _getHostElement() {\n        return this._element.nativeElement;\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterViewChecked() {\n        // Since parent components could be using the option's label to display the selected values\n        // (e.g. `mat-select`) and they don't have a way of knowing if the option's label has changed\n        // we have to check for changes in the DOM ourselves and dispatch an event. These checks are\n        // relatively cheap, however we still limit them only to selected options in order to avoid\n        // hitting the DOM too often.\n        if (this._selected) {\n            /** @type {?} */\n            const viewValue = this.viewValue;\n            if (viewValue !== this._mostRecentViewValue) {\n                this._mostRecentViewValue = viewValue;\n                this._stateChanges.next();\n            }\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._stateChanges.complete();\n    }\n    /**\n     * Emits the selection change event.\n     * @private\n     * @param {?=} isUserInput\n     * @return {?}\n     */\n    _emitSelectionChangeEvent(isUserInput = false) {\n        this.onSelectionChange.emit(new MatOptionSelectionChange(this, isUserInput));\n    }\n}\nMatOption.ɵfac = function MatOption_Factory(t) { return new (t || MatOption)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(MAT_OPTION_PARENT_COMPONENT, 8), ɵngcc0.ɵɵdirectiveInject(MatOptgroup, 8)); };\nMatOption.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: MatOption, selectors: [[\"mat-option\"]], hostAttrs: [\"role\", \"option\", 1, \"mat-option\"], hostVars: 12, hostBindings: function MatOption_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"click\", function MatOption_click_HostBindingHandler() { return ctx._selectViaInteraction(); })(\"keydown\", function MatOption_keydown_HostBindingHandler($event) { return ctx._handleKeydown($event); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵhostProperty(\"id\", ctx.id);\n        ɵngcc0.ɵɵattribute(\"tabindex\", ctx._getTabIndex())(\"aria-selected\", ctx._getAriaSelected())(\"aria-disabled\", ctx.disabled.toString());\n        ɵngcc0.ɵɵclassProp(\"mat-selected\", ctx.selected)(\"mat-option-multiple\", ctx.multiple)(\"mat-active\", ctx.active)(\"mat-option-disabled\", ctx.disabled);\n    } }, inputs: { id: \"id\", disabled: \"disabled\", value: \"value\" }, outputs: { onSelectionChange: \"onSelectionChange\" }, exportAs: [\"matOption\"], ngContentSelectors: _c2, decls: 4, vars: 3, consts: [[\"class\", \"mat-option-pseudo-checkbox\", 3, \"state\", \"disabled\", 4, \"ngIf\"], [1, \"mat-option-text\"], [\"mat-ripple\", \"\", 1, \"mat-option-ripple\", 3, \"matRippleTrigger\", \"matRippleDisabled\"], [1, \"mat-option-pseudo-checkbox\", 3, \"state\", \"disabled\"]], template: function MatOption_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵtemplate(0, MatOption_mat_pseudo_checkbox_0_Template, 1, 2, \"mat-pseudo-checkbox\", 0);\n        ɵngcc0.ɵɵelementStart(1, \"span\", 1);\n        ɵngcc0.ɵɵprojection(2);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelement(3, \"div\", 2);\n    } if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.multiple);\n        ɵngcc0.ɵɵadvance(3);\n        ɵngcc0.ɵɵproperty(\"matRippleTrigger\", ctx._getHostElement())(\"matRippleDisabled\", ctx.disabled || ctx.disableRipple);\n    } }, dependencies: [MatRipple, ɵngcc2.NgIf, MatPseudoCheckbox], styles: [\".mat-option{white-space:nowrap;overflow:hidden;text-overflow:ellipsis;display:block;line-height:48px;height:48px;padding:0 16px;text-align:left;text-decoration:none;max-width:100%;position:relative;cursor:pointer;outline:0;display:flex;flex-direction:row;max-width:100%;box-sizing:border-box;align-items:center;-webkit-tap-highlight-color:transparent}.mat-option[disabled]{cursor:default}[dir=rtl] .mat-option{text-align:right}.mat-option .mat-icon{margin-right:16px;vertical-align:middle}.mat-option .mat-icon svg{vertical-align:top}[dir=rtl] .mat-option .mat-icon{margin-left:16px;margin-right:0}.mat-option[aria-disabled=true]{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:default}.mat-optgroup .mat-option:not(.mat-option-multiple){padding-left:32px}[dir=rtl] .mat-optgroup .mat-option:not(.mat-option-multiple){padding-left:16px;padding-right:32px}@media (-ms-high-contrast:active){.mat-option{margin:0 1px}.mat-option.mat-active{border:solid 1px currentColor;margin:0}}.mat-option-text{display:inline-block;flex-grow:1;overflow:hidden;text-overflow:ellipsis}.mat-option .mat-option-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}@media (-ms-high-contrast:active){.mat-option .mat-option-ripple{opacity:.5}}.mat-option-pseudo-checkbox{margin-right:8px}[dir=rtl] .mat-option-pseudo-checkbox{margin-left:8px;margin-right:0}\"], encapsulation: 2, changeDetection: 0 });\n/** @nocollapse */\nMatOption.ctorParameters = () => [\n    { type: ElementRef },\n    { type: ChangeDetectorRef },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_OPTION_PARENT_COMPONENT,] }] },\n    { type: MatOptgroup, decorators: [{ type: Optional }] }\n];\nMatOption.propDecorators = {\n    value: [{ type: Input }],\n    id: [{ type: Input }],\n    disabled: [{ type: Input }],\n    onSelectionChange: [{ type: Output }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatOption, [{\n        type: Component,\n        args: [{ selector: 'mat-option', exportAs: 'matOption', host: {\n                    'role': 'option',\n                    '[attr.tabindex]': '_getTabIndex()',\n                    '[class.mat-selected]': 'selected',\n                    '[class.mat-option-multiple]': 'multiple',\n                    '[class.mat-active]': 'active',\n                    '[id]': 'id',\n                    '[attr.aria-selected]': '_getAriaSelected()',\n                    '[attr.aria-disabled]': 'disabled.toString()',\n                    '[class.mat-option-disabled]': 'disabled',\n                    '(click)': '_selectViaInteraction()',\n                    '(keydown)': '_handleKeydown($event)',\n                    'class': 'mat-option'\n                }, template: \"<mat-pseudo-checkbox *ngIf=\\\"multiple\\\" class=\\\"mat-option-pseudo-checkbox\\\" [state]=\\\"selected ? 'checked' : ''\\\" [disabled]=\\\"disabled\\\"></mat-pseudo-checkbox><span class=\\\"mat-option-text\\\"><ng-content></ng-content></span><div class=\\\"mat-option-ripple\\\" mat-ripple [matRippleTrigger]=\\\"_getHostElement()\\\" [matRippleDisabled]=\\\"disabled || disableRipple\\\"></div>\", encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, styles: [\".mat-option{white-space:nowrap;overflow:hidden;text-overflow:ellipsis;display:block;line-height:48px;height:48px;padding:0 16px;text-align:left;text-decoration:none;max-width:100%;position:relative;cursor:pointer;outline:0;display:flex;flex-direction:row;max-width:100%;box-sizing:border-box;align-items:center;-webkit-tap-highlight-color:transparent}.mat-option[disabled]{cursor:default}[dir=rtl] .mat-option{text-align:right}.mat-option .mat-icon{margin-right:16px;vertical-align:middle}.mat-option .mat-icon svg{vertical-align:top}[dir=rtl] .mat-option .mat-icon{margin-left:16px;margin-right:0}.mat-option[aria-disabled=true]{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:default}.mat-optgroup .mat-option:not(.mat-option-multiple){padding-left:32px}[dir=rtl] .mat-optgroup .mat-option:not(.mat-option-multiple){padding-left:16px;padding-right:32px}@media (-ms-high-contrast:active){.mat-option{margin:0 1px}.mat-option.mat-active{border:solid 1px currentColor;margin:0}}.mat-option-text{display:inline-block;flex-grow:1;overflow:hidden;text-overflow:ellipsis}.mat-option .mat-option-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}@media (-ms-high-contrast:active){.mat-option .mat-option-ripple{opacity:.5}}.mat-option-pseudo-checkbox{margin-right:8px}[dir=rtl] .mat-option-pseudo-checkbox{margin-left:8px;margin-right:0}\"] }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.ChangeDetectorRef }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_OPTION_PARENT_COMPONENT]\n            }] }, { type: MatOptgroup, decorators: [{\n                type: Optional\n            }] }]; }, { id: [{\n            type: Input\n        }], onSelectionChange: [{\n            type: Output\n        }], disabled: [{\n            type: Input\n        }], value: [{\n            type: Input\n        }] }); })();\n/**\n * Counts the amount of option group labels that precede the specified option.\n * \\@docs-private\n * @param {?} optionIndex Index of the option at which to start counting.\n * @param {?} options Flat list of all of the options.\n * @param {?} optionGroups Flat list of all of the option groups.\n * @return {?}\n */\nfunction _countGroupLabelsBeforeOption(optionIndex, options, optionGroups) {\n    if (optionGroups.length) {\n        /** @type {?} */\n        let optionsArray = options.toArray();\n        /** @type {?} */\n        let groups = optionGroups.toArray();\n        /** @type {?} */\n        let groupCounter = 0;\n        for (let i = 0; i < optionIndex + 1; i++) {\n            if (optionsArray[i].group && optionsArray[i].group === groups[groupCounter]) {\n                groupCounter++;\n            }\n        }\n        return groupCounter;\n    }\n    return 0;\n}\n/**\n * Determines the position to which to scroll a panel in order for an option to be into view.\n * \\@docs-private\n * @param {?} optionIndex Index of the option to be scrolled into the view.\n * @param {?} optionHeight Height of the options.\n * @param {?} currentScrollPosition Current scroll position of the panel.\n * @param {?} panelHeight Height of the panel.\n * @return {?}\n */\nfunction _getOptionScrollPosition(optionIndex, optionHeight, currentScrollPosition, panelHeight) {\n    /** @type {?} */\n    const optionOffset = optionIndex * optionHeight;\n    if (optionOffset < currentScrollPosition) {\n        return optionOffset;\n    }\n    if (optionOffset + optionHeight > currentScrollPosition + panelHeight) {\n        return Math.max(0, optionOffset - panelHeight + optionHeight);\n    }\n    return currentScrollPosition;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass MatOptionModule {\n}\nMatOptionModule.ɵfac = function MatOptionModule_Factory(t) { return new (t || MatOptionModule)(); };\nMatOptionModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: MatOptionModule });\nMatOptionModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ imports: [MatRippleModule, CommonModule, MatPseudoCheckboxModule] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatOptionModule, [{\n        type: NgModule,\n        args: [{\n                imports: [MatRippleModule, CommonModule, MatPseudoCheckboxModule],\n                exports: [MatOption, MatOptgroup],\n                declarations: [MatOption, MatOptgroup]\n            }]\n    }], null, null); })();\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatOptionModule, { declarations: function () { return [MatOption, MatOptgroup]; }, imports: function () { return [MatRippleModule, CommonModule, MatPseudoCheckboxModule]; }, exports: function () { return [MatOption, MatOptgroup]; } }); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * InjectionToken that can be used to specify the global label options.\n * @type {?}\n */\nconst MAT_LABEL_GLOBAL_OPTIONS = new InjectionToken('mat-label-global-options');\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * When constructing a Date, the month is zero-based. This can be confusing, since people are\n * used to seeing them one-based. So we create these aliases to make writing the tests easier.\n * \\@docs-private\n * \\@breaking-change 8.0.0 Remove this with V8 since it was only targeted for testing.\n * @type {?}\n */\nconst JAN = 0;\n/** @type {?} */\nconst FEB = 1;\n/** @type {?} */\nconst MAR = 2;\n/** @type {?} */\nconst APR = 3;\n/** @type {?} */\nconst MAY = 4;\n/** @type {?} */\nconst JUN = 5;\n/** @type {?} */\nconst JUL = 6;\n/** @type {?} */\nconst AUG = 7;\n/** @type {?} */\nconst SEP = 8;\n/** @type {?} */\nconst OCT = 9;\n/** @type {?} */\nconst NOV = 10;\n/** @type {?} */\nconst DEC = 11;\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\nexport { AnimationCurves, AnimationDurations, MatCommonModule, MATERIAL_SANITY_CHECKS, mixinDisabled, mixinColor, mixinDisableRipple, mixinTabIndex, mixinErrorState, mixinInitialized, NativeDateModule, MatNativeDateModule, MAT_DATE_LOCALE_FACTORY, MAT_DATE_LOCALE, MAT_DATE_LOCALE_PROVIDER, DateAdapter, MAT_DATE_FORMATS, NativeDateAdapter, MAT_NATIVE_DATE_FORMATS, ShowOnDirtyErrorStateMatcher, ErrorStateMatcher, MAT_HAMMER_OPTIONS, GestureConfig, setLines, MatLine, MatLineSetter, MatLineModule, MatOptionModule, _countGroupLabelsBeforeOption, _getOptionScrollPosition, MatOptionSelectionChange, MAT_OPTION_PARENT_COMPONENT, MatOption, MatOptgroupBase, _MatOptgroupMixinBase, MatOptgroup, MAT_LABEL_GLOBAL_OPTIONS, MatRippleModule, MAT_RIPPLE_GLOBAL_OPTIONS, MatRipple, RippleState, RippleRef, defaultRippleAnimationConfig, RippleRenderer, MatPseudoCheckboxModule, MatPseudoCheckbox, JAN, FEB, MAR, APR, MAY, JUN, JUL, AUG, SEP, OCT, NOV, DEC, MATERIAL_SANITY_CHECKS_FACTORY as ɵa1 };\n\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,QAAT,EAAmBC,cAAnB,EAAmCC,QAAnC,EAA6CC,MAA7C,EAAqDC,SAArD,EAAgEC,MAAhE,EAAwEC,SAAxE,EAAmFC,UAAnF,EAA+FC,SAA/F,EAA0GC,UAA1G,EAAsHC,KAAtH,EAA6HC,MAA7H,EAAqIC,SAArI,EAAgJC,iBAAhJ,EAAmKC,uBAAnK,EAA4LC,iBAA5L,EAA+MC,YAA/M,EAA6NC,MAA7N,EAAqOC,gBAArO,QAA6P,eAA7P;AACA,SAASC,aAAT,EAAwBC,mBAAxB,QAAmD,2BAAnD;AACA,SAASC,UAAT,QAA2B,mBAA3B;AACA,SAASC,qBAAT,QAAsC,uBAAtC;AACA,SAASC,OAAT,EAAkBC,UAAlB,QAAoC,MAApC;AACA,SAASC,QAAT,EAAmBC,cAAnB,EAAmCC,+BAAnC,QAA0E,uBAA1E;AACA,SAASC,SAAT,QAA0B,gBAA1B;AACA,SAASC,+BAAT,QAAgD,mBAAhD;AACA,SAASC,qBAAT,QAAsC,sCAAtC;AACA,SAASC,KAAT,EAAgBC,KAAhB,EAAuBC,cAAvB,QAA6C,uBAA7C;AACA,SAASC,YAAT,QAA6B,iBAA7B;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AACA,OAAO,KAAKC,MAAZ,MAAwB,eAAxB;AACA,OAAO,KAAKC,MAAZ,MAAwB,uBAAxB;AACA,OAAO,KAAKC,MAAZ,MAAwB,iBAAxB;AAEA,MAAMC,GAAG,GAAG,CAAC,GAAD,EAAM,CAAC,CAAC,YAAD,CAAD,EAAiB,CAAC,cAAD,CAAjB,CAAN,CAAZ;AACA,MAAMC,GAAG,GAAG,CAAC,GAAD,EAAM,0BAAN,CAAZ;;AACA,SAASC,wCAAT,CAAkDC,EAAlD,EAAsDC,GAAtD,EAA2D;EAAE,IAAID,EAAE,GAAG,CAAT,EAAY;IACrEN,MAAM,CAACQ,SAAP,CAAiB,CAAjB,EAAoB,qBAApB,EAA2C,CAA3C;EACH;;EAAC,IAAIF,EAAE,GAAG,CAAT,EAAY;IACV,MAAMG,MAAM,GAAGT,MAAM,CAACU,aAAP,EAAf;IACAV,MAAM,CAACW,UAAP,CAAkB,OAAlB,EAA2BF,MAAM,CAACG,QAAP,GAAkB,SAAlB,GAA8B,EAAzD,EAA6D,UAA7D,EAAyEH,MAAM,CAACI,QAAhF;EACH;AAAE;;AACH,MAAMC,GAAG,GAAG,CAAC,GAAD,CAAZ;;AACA,MAAMC,eAAN,CAAsB;;AAEtBA,eAAe,CAACC,cAAhB,GAAiC,6BAAjC;AACAD,eAAe,CAACE,kBAAhB,GAAqC,6BAArC;AACAF,eAAe,CAACG,kBAAhB,GAAqC,2BAArC;AACAH,eAAe,CAACI,WAAhB,GAA8B,6BAA9B;AACA;AACA;AACA;;AACA,MAAMC,kBAAN,CAAyB;;AAEzBA,kBAAkB,CAACC,OAAnB,GAA6B,OAA7B;AACAD,kBAAkB,CAACE,QAAnB,GAA8B,OAA9B;AACAF,kBAAkB,CAACG,OAAnB,GAA6B,OAA7B;AAEA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;;AACA,MAAMC,sBAAsB,GAAG,IAAI1D,cAAJ,CAAmB,mBAAnB,EAAwC;EACnE2D,UAAU,EAAE,MADuD;EAEnEC,OAAO,EAAEC;AAF0D,CAAxC,CAA/B;AAIA;AACA;AACA;AACA;;AACA,SAASA,8BAAT,GAA0C;EACtC,OAAO,IAAP;AACH;AACD;AACA;AACA;AACA;AACA;AACA;;;AACA,MAAMC,eAAN,CAAsB;EAClB;AACJ;AACA;AACA;EACIC,WAAW,CAACC,oBAAD,EAAuBC,aAAvB,EAAsC;IAC7C,KAAKD,oBAAL,GAA4BA,oBAA5B;IACA,KAAKC,aAAL,GAAqBA,aAArB;IACA;AACR;AACA;;IACQ,KAAKC,oBAAL,GAA4B,KAA5B;IACA;AACR;AACA;;IACQ,KAAKC,iBAAL,GAAyB,KAAzB;IACA;AACR;AACA;;IACQ,KAAKC,SAAL,GAAiB,OAAOC,QAAP,KAAoB,QAApB,IAAgCA,QAAhC,GAA2CA,QAA3C,GAAsD,IAAvE;IACA;AACR;AACA;;IACQ,KAAKC,OAAL,GAAe,OAAOC,MAAP,KAAkB,QAAlB,IAA8BA,MAA9B,GAAuCA,MAAvC,GAAgD,IAA/D;;IACA,IAAI,KAAKC,iBAAL,MAA4B,CAAC,KAAKN,oBAAtC,EAA4D;MACxD,KAAKO,sBAAL;;MACA,KAAKC,oBAAL;;MACA,KAAKR,oBAAL,GAA4B,IAA5B;IACH;EACJ;EACD;AACJ;AACA;AACA;AACA;;;EACIM,iBAAiB,GAAG;IAChB,OAAO,KAAKR,oBAAL,IAA6B7D,SAAS,EAAtC,IAA4C,CAAC,KAAKwE,UAAL,EAApD;EACH;EACD;AACJ;AACA;AACA;AACA;;;EACIA,UAAU,GAAG;IACT;IACA,MAAMJ,MAAM;IAAI;IAAkB,KAAKD,OAAvC;IACA,OAAOC,MAAM,KAAKA,MAAM,CAACK,SAAP,IAAoBL,MAAM,CAACM,OAAhC,CAAb;EACH;EACD;AACJ;AACA;AACA;;;EACIJ,sBAAsB,GAAG;IACrB,IAAI,KAAKL,SAAL,IAAkB,CAAC,KAAKA,SAAL,CAAeU,OAAtC,EAA+C;MAC3CC,OAAO,CAACC,IAAR,CAAa,8DACT,6DADJ;IAEH;EACJ;EACD;AACJ;AACA;AACA;;;EACIN,oBAAoB,GAAG;IACnB;IACA;IACA,IAAI,CAAC,KAAKN,SAAN,IAAmB,CAAC,KAAKA,SAAL,CAAea,IAAnC,IAA2C,OAAOC,gBAAP,KAA4B,UAA3E,EAAuF;MACnF;IACH;IACD;;;IACA,MAAMC,WAAW,GAAG,KAAKf,SAAL,CAAegB,aAAf,CAA6B,KAA7B,CAApB;;IACAD,WAAW,CAACE,SAAZ,CAAsBC,GAAtB,CAA0B,yBAA1B;;IACA,KAAKlB,SAAL,CAAea,IAAf,CAAoBM,WAApB,CAAgCJ,WAAhC;IACA;;;IACA,MAAMK,aAAa,GAAGN,gBAAgB,CAACC,WAAD,CAAtC,CAXmB,CAYnB;IACA;IACA;;IACA,IAAIK,aAAa,IAAIA,aAAa,CAACC,OAAd,KAA0B,MAA/C,EAAuD;MACnDV,OAAO,CAACC,IAAR,CAAa,+DACT,2DADS,GAET,iEAFJ;IAGH;;IACD,KAAKZ,SAAL,CAAea,IAAf,CAAoBS,WAApB,CAAgCP,WAAhC;EACH;EACD;AACJ;AACA;AACA;;;EACIQ,uBAAuB,GAAG;IACtB,IAAI,KAAKxB,iBAAL,IAA0B,CAAC,KAAKG,OAApC,EAA6C;MACzC;IACH;;IACD,IAAI,KAAKE,iBAAL,MAA4B;IAAG;IAAkB,KAAKF,OAAzB,CAAoC,QAApC,CAA7B,IAA8E,CAAC,KAAKL,aAAxF,EAAuG;MACnGc,OAAO,CAACC,IAAR,CAAa,sFAAb;IACH;;IACD,KAAKb,iBAAL,GAAyB,IAAzB;EACH;;AAhGiB;;AAkGtBL,eAAe,CAAC8B,IAAhB,GAAuB,SAASC,uBAAT,CAAiCC,CAAjC,EAAoC;EAAE,OAAO,KAAKA,CAAC,IAAIhC,eAAV,EAA2B5B,MAAM,CAAC6D,QAAP,CAAgBrC,sBAAhB,EAAwC,CAAxC,CAA3B,EAAuExB,MAAM,CAAC6D,QAAP,CAAgB7E,aAAhB,EAA+B,CAA/B,CAAvE,CAAP;AAAmH,CAAhL;;AACA4C,eAAe,CAACkC,IAAhB,GAAuB,aAAc9D,MAAM,CAAC+D,gBAAP,CAAwB;EAAEC,IAAI,EAAEpC;AAAR,CAAxB,CAArC;AACAA,eAAe,CAACqC,IAAhB,GAAuB,aAAcjE,MAAM,CAACkE,gBAAP,CAAwB;EAAEC,OAAO,EAAE,CAACjF,UAAD,EAAaA,UAAb;AAAX,CAAxB,CAArC;AACA;;AACA0C,eAAe,CAACwC,cAAhB,GAAiC,MAAM,CACnC;EAAEJ,IAAI,EAAEK,OAAR;EAAiBC,UAAU,EAAE,CAAC;IAAEN,IAAI,EAAEjG;EAAR,CAAD,EAAqB;IAAEiG,IAAI,EAAEhG,MAAR;IAAgBuG,IAAI,EAAE,CAAC/C,sBAAD;EAAtB,CAArB;AAA7B,CADmC,EAEnC;EAAEwC,IAAI,EAAEQ,SAAR;EAAmBF,UAAU,EAAE,CAAC;IAAEN,IAAI,EAAEjG;EAAR,CAAD,EAAqB;IAAEiG,IAAI,EAAEhG,MAAR;IAAgBuG,IAAI,EAAE,CAACvF,aAAD;EAAtB,CAArB;AAA/B,CAFmC,CAAvC;;AAIA,CAAC,YAAY;EAAE,CAAC,OAAOyF,SAAP,KAAqB,WAArB,IAAoCA,SAArC,KAAmDzE,MAAM,CAAC0E,iBAAP,CAAyB9C,eAAzB,EAA0C,CAAC;IACrGoC,IAAI,EAAEnG,QAD+F;IAErG0G,IAAI,EAAE,CAAC;MACCJ,OAAO,EAAE,CAACjF,UAAD,CADV;MAECyF,OAAO,EAAE,CAACzF,UAAD;IAFV,CAAD;EAF+F,CAAD,CAA1C,EAM1D,YAAY;IAAE,OAAO,CAAC;MAAE8E,IAAI,EAAEK,OAAR;MAAiBC,UAAU,EAAE,CAAC;QAC5CN,IAAI,EAAEjG;MADsC,CAAD,EAE5C;QACCiG,IAAI,EAAEhG,MADP;QAECuG,IAAI,EAAE,CAAC/C,sBAAD;MAFP,CAF4C;IAA7B,CAAD,EAKX;MAAEwC,IAAI,EAAEQ,SAAR;MAAmBF,UAAU,EAAE,CAAC;QAClCN,IAAI,EAAEjG;MAD4B,CAAD,EAElC;QACCiG,IAAI,EAAEhG,MADP;QAECuG,IAAI,EAAE,CAACvF,aAAD;MAFP,CAFkC;IAA/B,CALW,CAAP;EAUF,CAhB8C,EAgB5C,IAhB4C,CAAnD;AAgBe,CAhB9B;;AAiBA,CAAC,YAAY;EAAE,CAAC,OAAO4F,SAAP,KAAqB,WAArB,IAAoCA,SAArC,KAAmD5E,MAAM,CAAC6E,kBAAP,CAA0BjD,eAA1B,EAA2C;IAAEuC,OAAO,EAAE,YAAY;MAAE,OAAO,CAACjF,UAAD,CAAP;IAAsB,CAA/C;IAAiDyF,OAAO,EAAE,YAAY;MAAE,OAAO,CAACzF,UAAD,CAAP;IAAsB;EAA9F,CAA3C,CAAnD;AAAkM,CAAjN;AAEA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAAS4F,aAAT,CAAuBC,IAAvB,EAA6B;EACzB,OAAO,cAAcA,IAAd,CAAmB;IACtB;AACR;AACA;IACQlD,WAAW,CAAC,GAAG0C,IAAJ,EAAU;MACjB,MAAM,GAAGA,IAAT;MACA,KAAKS,SAAL,GAAiB,KAAjB;IACH;IACD;AACR;AACA;;;IACoB,IAARnE,QAAQ,GAAG;MAAE,OAAO,KAAKmE,SAAZ;IAAwB;IACzC;AACR;AACA;AACA;;;IACoB,IAARnE,QAAQ,CAACoE,KAAD,EAAQ;MAAE,KAAKD,SAAL,GAAiB7F,qBAAqB,CAAC8F,KAAD,CAAtC;IAAgD;;EAhBhD,CAA1B;AAkBH;AAED;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASC,UAAT,CAAoBH,IAApB,EAA0BI,YAA1B,EAAwC;EACpC,OAAO,cAAcJ,IAAd,CAAmB;IACtB;AACR;AACA;IACiB,IAALK,KAAK,GAAG;MAAE,OAAO,KAAKC,MAAZ;IAAqB;IACnC;AACR;AACA;AACA;;;IACiB,IAALD,KAAK,CAACH,KAAD,EAAQ;MACb;MACA,MAAMK,YAAY,GAAGL,KAAK,IAAIE,YAA9B;;MACA,IAAIG,YAAY,KAAK,KAAKD,MAA1B,EAAkC;QAC9B,IAAI,KAAKA,MAAT,EAAiB;UACb,KAAKE,WAAL,CAAiBC,aAAjB,CAA+BrC,SAA/B,CAAyCsC,MAAzC,CAAiD,OAAM,KAAKJ,MAAO,EAAnE;QACH;;QACD,IAAIC,YAAJ,EAAkB;UACd,KAAKC,WAAL,CAAiBC,aAAjB,CAA+BrC,SAA/B,CAAyCC,GAAzC,CAA8C,OAAMkC,YAAa,EAAjE;QACH;;QACD,KAAKD,MAAL,GAAcC,YAAd;MACH;IACJ;IACD;AACR;AACA;;;IACQzD,WAAW,CAAC,GAAG0C,IAAJ,EAAU;MACjB,MAAM,GAAGA,IAAT,EADiB,CAEjB;;MACA,KAAKa,KAAL,GAAaD,YAAb;IACH;;EA7BqB,CAA1B;AA+BH;AAED;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASO,kBAAT,CAA4BX,IAA5B,EAAkC;EAC9B,OAAO,cAAcA,IAAd,CAAmB;IACtB;AACR;AACA;IACQlD,WAAW,CAAC,GAAG0C,IAAJ,EAAU;MACjB,MAAM,GAAGA,IAAT;MACA,KAAKoB,cAAL,GAAsB,KAAtB;IACH;IACD;AACR;AACA;AACA;;;IACyB,IAAbC,aAAa,GAAG;MAAE,OAAO,KAAKD,cAAZ;IAA6B;IACnD;AACR;AACA;AACA;;;IACyB,IAAbC,aAAa,CAACX,KAAD,EAAQ;MAAE,KAAKU,cAAL,GAAsBxG,qBAAqB,CAAC8F,KAAD,CAA3C;IAAqD;;EAjB1D,CAA1B;AAmBH;AAED;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASY,aAAT,CAAuBd,IAAvB,EAA6Be,eAAe,GAAG,CAA/C,EAAkD;EAC9C,OAAO,cAAcf,IAAd,CAAmB;IACtB;AACR;AACA;IACQlD,WAAW,CAAC,GAAG0C,IAAJ,EAAU;MACjB,MAAM,GAAGA,IAAT;MACA,KAAKwB,SAAL,GAAiBD,eAAjB;IACH;IACD;AACR;AACA;;;IACoB,IAARE,QAAQ,GAAG;MAAE,OAAO,KAAKnF,QAAL,GAAgB,CAAC,CAAjB,GAAqB,KAAKkF,SAAjC;IAA6C;IAC9D;AACR;AACA;AACA;;;IACoB,IAARC,QAAQ,CAACf,KAAD,EAAQ;MAChB;MACA,KAAKc,SAAL,GAAiBd,KAAK,IAAI,IAAT,GAAgBA,KAAhB,GAAwBa,eAAzC;IACH;;EAnBqB,CAA1B;AAqBH;AAED;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASG,eAAT,CAAyBlB,IAAzB,EAA+B;EAC3B,OAAO,cAAcA,IAAd,CAAmB;IACtB;AACR;AACA;IACQlD,WAAW,CAAC,GAAG0C,IAAJ,EAAU;MACjB,MAAM,GAAGA,IAAT;MACA;AACZ;AACA;;MACY,KAAK2B,UAAL,GAAkB,KAAlB;MACA;AACZ;AACA;AACA;;MACY,KAAKC,YAAL,GAAoB,IAAI/G,OAAJ,EAApB;IACH;IACD;AACR;AACA;;;IACQgH,gBAAgB,GAAG;MACf;MACA,MAAMC,QAAQ,GAAG,KAAKH,UAAtB;MACA;;MACA,MAAMI,MAAM,GAAG,KAAKC,gBAAL,IAAyB,KAAKC,WAA7C;MACA;;MACA,MAAMC,OAAO,GAAG,KAAKC,iBAAL,IAA0B,KAAKC,yBAA/C;MACA;;MACA,MAAMC,OAAO,GAAG,KAAKC,SAAL;MAAkB;MAAkB,KAAKA,SAAL,CAAeD,OAAnD,GAA+D,IAA/E;MACA;;MACA,MAAME,QAAQ,GAAGL,OAAO,CAACM,YAAR,CAAqBH,OAArB,EAA8BN,MAA9B,CAAjB;;MACA,IAAIQ,QAAQ,KAAKT,QAAjB,EAA2B;QACvB,KAAKH,UAAL,GAAkBY,QAAlB;QACA,KAAKX,YAAL,CAAkBa,IAAlB;MACH;IACJ;;EAlCqB,CAA1B;AAoCH;AAED;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASC,gBAAT,CAA0BlC,IAA1B,EAAgC;EAC5B,OAAO,cAAcA,IAAd,CAAmB;IACtB;AACR;AACA;IACQlD,WAAW,CAAC,GAAG0C,IAAJ,EAAU;MACjB,MAAM,GAAGA,IAAT;MACA;AACZ;AACA;;MACY,KAAK2C,cAAL,GAAsB,KAAtB;MACA;AACZ;AACA;AACA;AACA;;MACY,KAAKC,mBAAL,GAA2B,EAA3B;MACA;AACZ;AACA;AACA;;MACY,KAAKC,WAAL,GAAmB,IAAI/H,UAAJ,CAAegI,UAAU,IAAI;QAC5C;QACA;QACA,IAAI,KAAKH,cAAT,EAAyB;UACrB,KAAKI,iBAAL,CAAuBD,UAAvB;QACH,CAFD,MAGK;UACA;UAAkB,KAAKF,mBAAxB,CAA8CI,IAA9C,CAAmDF,UAAnD;QACH;MACJ,CATkB,CAAnB;IAUH;IACD;AACR;AACA;AACA;AACA;AACA;;;IACQG,gBAAgB,GAAG;MACf,IAAI,KAAKN,cAAT,EAAyB;QACrB,MAAMO,KAAK,CAAC,+DACR,6BADO,CAAX;MAEH;;MACD,KAAKP,cAAL,GAAsB,IAAtB;;MACC;MAAkB,KAAKC,mBAAxB,CAA8CO,OAA9C,CAAsD,KAAKJ,iBAA3D;;MACA,KAAKH,mBAAL,GAA2B,IAA3B;IACH;IACD;AACR;AACA;AACA;AACA;;;IACQG,iBAAiB,CAACD,UAAD,EAAa;MAC1BA,UAAU,CAACL,IAAX;MACAK,UAAU,CAACM,QAAX;IACH;;EAtDqB,CAA1B;AAwDH;AAED;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;;;AACA,MAAMC,eAAe,GAAG,IAAI9J,cAAJ,CAAmB,iBAAnB,EAAsC;EAC1D2D,UAAU,EAAE,MAD8C;EAE1DC,OAAO,EAAEmG;AAFiD,CAAtC,CAAxB;AAIA;AACA;AACA;AACA;;AACA,SAASA,uBAAT,GAAmC;EAC/B,OAAO3J,MAAM,CAACC,SAAD,CAAb;AACH;AACD;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,MAAM2J,wBAAwB,GAAG;EAAEC,OAAO,EAAEH,eAAX;EAA4BI,WAAW,EAAE7J;AAAzC,CAAjC;AACA;AACA;AACA;AACA;AACA;;AACA,MAAM8J,WAAN,CAAkB;EACdpG,WAAW,GAAG;IACV,KAAKqG,cAAL,GAAsB,IAAI9I,OAAJ,EAAtB;EACH;EACD;AACJ;AACA;AACA;;;EACqB,IAAb+I,aAAa,GAAG;IAAE,OAAO,KAAKD,cAAZ;EAA6B;EACnD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;EACIE,WAAW,CAACnD,KAAD,EAAQ;IACf,IAAIA,KAAK,IAAI,IAAT,IAAiB,KAAKoD,cAAL,CAAoBpD,KAApB,KAA8B,KAAKqD,OAAL,CAAarD,KAAb,CAAnD,EAAwE;MACpE,OAAOA,KAAP;IACH;;IACD,OAAO,KAAKsD,OAAL,EAAP;EACH;EACD;AACJ;AACA;AACA;AACA;;;EACIC,SAAS,CAACC,MAAD,EAAS;IACd,KAAKA,MAAL,GAAcA,MAAd;;IACA,KAAKP,cAAL,CAAoBlB,IAApB;EACH;EACD;AACJ;AACA;AACA;AACA;AACA;AACA;;;EACI0B,WAAW,CAACC,KAAD,EAAQC,MAAR,EAAgB;IACvB,OAAO,KAAKC,OAAL,CAAaF,KAAb,IAAsB,KAAKE,OAAL,CAAaD,MAAb,CAAtB,IACH,KAAKE,QAAL,CAAcH,KAAd,IAAuB,KAAKG,QAAL,CAAcF,MAAd,CADpB,IAEH,KAAKG,OAAL,CAAaJ,KAAb,IAAsB,KAAKI,OAAL,CAAaH,MAAb,CAF1B;EAGH;EACD;AACJ;AACA;AACA;AACA;AACA;AACA;;;EACII,QAAQ,CAACL,KAAD,EAAQC,MAAR,EAAgB;IACpB,IAAID,KAAK,IAAIC,MAAb,EAAqB;MACjB;MACA,IAAIK,UAAU,GAAG,KAAKX,OAAL,CAAaK,KAAb,CAAjB;MACA;;MACA,IAAIO,WAAW,GAAG,KAAKZ,OAAL,CAAaM,MAAb,CAAlB;;MACA,IAAIK,UAAU,IAAIC,WAAlB,EAA+B;QAC3B,OAAO,CAAC,KAAKR,WAAL,CAAiBC,KAAjB,EAAwBC,MAAxB,CAAR;MACH;;MACD,OAAOK,UAAU,IAAIC,WAArB;IACH;;IACD,OAAOP,KAAK,IAAIC,MAAhB;EACH;EACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;;;EACIO,SAAS,CAACC,IAAD,EAAOC,GAAP,EAAYC,GAAZ,EAAiB;IACtB,IAAID,GAAG,IAAI,KAAKX,WAAL,CAAiBU,IAAjB,EAAuBC,GAAvB,IAA8B,CAAzC,EAA4C;MACxC,OAAOA,GAAP;IACH;;IACD,IAAIC,GAAG,IAAI,KAAKZ,WAAL,CAAiBU,IAAjB,EAAuBE,GAAvB,IAA8B,CAAzC,EAA4C;MACxC,OAAOA,GAAP;IACH;;IACD,OAAOF,IAAP;EACH;;AApFa;AAuFlB;AACA;AACA;AACA;;AACA;;;AACA,MAAMG,gBAAgB,GAAG,IAAIzL,cAAJ,CAAmB,kBAAnB,CAAzB;AAEA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;;AACA,IAAI0L,iBAAJ,C,CACA;AACA;AACA;AACA;AACA;;AACA,IAAI;EACAA,iBAAiB,GAAG,OAAOC,IAAP,IAAe,WAAnC;AACH,CAFD,CAGA,OAAOC,EAAP,EAAW;EACPF,iBAAiB,GAAG,KAApB;AACH;AACD;AACA;AACA;AACA;;;AACA,MAAMG,mBAAmB,GAAG;EACxB,QAAQ,CACJ,SADI,EACO,UADP,EACmB,OADnB,EAC4B,OAD5B,EACqC,KADrC,EAC4C,MAD5C,EACoD,MADpD,EAC4D,QAD5D,EACsE,WADtE,EAEJ,SAFI,EAEO,UAFP,EAEmB,UAFnB,CADgB;EAKxB,SAAS,CAAC,KAAD,EAAQ,KAAR,EAAe,KAAf,EAAsB,KAAtB,EAA6B,KAA7B,EAAoC,KAApC,EAA2C,KAA3C,EAAkD,KAAlD,EAAyD,KAAzD,EAAgE,KAAhE,EAAuE,KAAvE,EAA8E,KAA9E,CALe;EAMxB,UAAU,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,EAAgB,GAAhB,EAAqB,GAArB,EAA0B,GAA1B,EAA+B,GAA/B,EAAoC,GAApC,EAAyC,GAAzC,EAA8C,GAA9C,EAAmD,GAAnD,EAAwD,GAAxD;AANc,CAA5B;;AAQA,MAAMC,EAAE,GAAGC,CAAC,IAAIC,MAAM,CAACD,CAAC,GAAG,CAAL,CAAtB;AACA;AACA;AACA;AACA;;;AACA,MAAME,kBAAkB,GAAGC,KAAK,CAAC,EAAD,EAAKJ,EAAL,CAAhC;AACA;AACA;AACA;AACA;;AACA,MAAMK,yBAAyB,GAAG;EAC9B,QAAQ,CAAC,QAAD,EAAW,QAAX,EAAqB,SAArB,EAAgC,WAAhC,EAA6C,UAA7C,EAAyD,QAAzD,EAAmE,UAAnE,CADsB;EAE9B,SAAS,CAAC,KAAD,EAAQ,KAAR,EAAe,KAAf,EAAsB,KAAtB,EAA6B,KAA7B,EAAoC,KAApC,EAA2C,KAA3C,CAFqB;EAG9B,UAAU,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,EAAgB,GAAhB,EAAqB,GAArB,EAA0B,GAA1B,EAA+B,GAA/B;AAHoB,CAAlC;AAKA;AACA;AACA;AACA;AACA;AACA;;AACA,MAAMC,cAAc,GAAG,oFAAvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,SAASF,KAAT,CAAeG,MAAf,EAAuBC,aAAvB,EAAsC;EAClC;EACA,MAAMC,WAAW,GAAGC,KAAK,CAACH,MAAD,CAAzB;;EACA,KAAK,IAAIN,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGM,MAApB,EAA4BN,CAAC,EAA7B,EAAiC;IAC7BQ,WAAW,CAACR,CAAD,CAAX,GAAiBO,aAAa,CAACP,CAAD,CAA9B;EACH;;EACD,OAAOQ,WAAP;AACH;AACD;AACA;AACA;;;AACA,MAAME,iBAAN,SAAgCtC,WAAhC,CAA4C;EACxC;AACJ;AACA;AACA;EACIpG,WAAW,CAAC2I,aAAD,EAAgBC,QAAhB,EAA0B;IACjC;IACA;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;IACQ,KAAKC,gBAAL,GAAwB,IAAxB;IACA,MAAMlC,SAAN,CAAgBgC,aAAhB,EAdiC,CAejC;;IACA,KAAKE,gBAAL,GAAwB,CAACD,QAAQ,CAACE,OAAlC;IACA,KAAKC,UAAL,GAAkBH,QAAQ,CAACE,OAAT,IAAoBF,QAAQ,CAACI,IAA/C;EACH;EACD;AACJ;AACA;AACA;;;EACIhC,OAAO,CAACO,IAAD,EAAO;IACV,OAAOA,IAAI,CAAC0B,WAAL,EAAP;EACH;EACD;AACJ;AACA;AACA;;;EACIhC,QAAQ,CAACM,IAAD,EAAO;IACX,OAAOA,IAAI,CAACN,QAAL,EAAP;EACH;EACD;AACJ;AACA;AACA;;;EACIC,OAAO,CAACK,IAAD,EAAO;IACV,OAAOA,IAAI,CAACL,OAAL,EAAP;EACH;EACD;AACJ;AACA;AACA;;;EACIgC,YAAY,CAAC3B,IAAD,EAAO;IACf,OAAOA,IAAI,CAAC4B,MAAL,EAAP;EACH;EACD;AACJ;AACA;AACA;;;EACIC,aAAa,CAACC,KAAD,EAAQ;IACjB,IAAI1B,iBAAJ,EAAuB;MACnB;MACA,MAAM2B,GAAG,GAAG,IAAI1B,IAAI,CAAC2B,cAAT,CAAwB,KAAK3C,MAA7B,EAAqC;QAAE4C,KAAK,EAAEH,KAAT;QAAgBI,QAAQ,EAAE;MAA1B,CAArC,CAAZ;MACA,OAAOtB,KAAK,CAAC,EAAD,EAAKH,CAAC,IAAI,KAAK0B,8BAAL,CAAoC,KAAKC,OAAL,CAAaL,GAAb,EAAkB,IAAIM,IAAJ,CAAS,IAAT,EAAe5B,CAAf,EAAkB,CAAlB,CAAlB,CAApC,CAAV,CAAZ;IACH;;IACD,OAAOF,mBAAmB,CAACuB,KAAD,CAA1B;EACH;EACD;AACJ;AACA;;;EACIQ,YAAY,GAAG;IACX,IAAIlC,iBAAJ,EAAuB;MACnB;MACA,MAAM2B,GAAG,GAAG,IAAI1B,IAAI,CAAC2B,cAAT,CAAwB,KAAK3C,MAA7B,EAAqC;QAAEkD,GAAG,EAAE,SAAP;QAAkBL,QAAQ,EAAE;MAA5B,CAArC,CAAZ;MACA,OAAOtB,KAAK,CAAC,EAAD,EAAKH,CAAC,IAAI,KAAK0B,8BAAL,CAAoC,KAAKC,OAAL,CAAaL,GAAb,EAAkB,IAAIM,IAAJ,CAAS,IAAT,EAAe,CAAf,EAAkB5B,CAAC,GAAG,CAAtB,CAAlB,CAApC,CAAV,CAAZ;IACH;;IACD,OAAOE,kBAAP;EACH;EACD;AACJ;AACA;AACA;;;EACI6B,iBAAiB,CAACV,KAAD,EAAQ;IACrB,IAAI1B,iBAAJ,EAAuB;MACnB;MACA,MAAM2B,GAAG,GAAG,IAAI1B,IAAI,CAAC2B,cAAT,CAAwB,KAAK3C,MAA7B,EAAqC;QAAEoD,OAAO,EAAEX,KAAX;QAAkBI,QAAQ,EAAE;MAA5B,CAArC,CAAZ;MACA,OAAOtB,KAAK,CAAC,CAAD,EAAIH,CAAC,IAAI,KAAK0B,8BAAL,CAAoC,KAAKC,OAAL,CAAaL,GAAb,EAAkB,IAAIM,IAAJ,CAAS,IAAT,EAAe,CAAf,EAAkB5B,CAAC,GAAG,CAAtB,CAAlB,CAApC,CAAT,CAAZ;IACH;;IACD,OAAOI,yBAAyB,CAACiB,KAAD,CAAhC;EACH;EACD;AACJ;AACA;AACA;;;EACIY,WAAW,CAAC1C,IAAD,EAAO;IACd,IAAII,iBAAJ,EAAuB;MACnB;MACA,MAAM2B,GAAG,GAAG,IAAI1B,IAAI,CAAC2B,cAAT,CAAwB,KAAK3C,MAA7B,EAAqC;QAAEsD,IAAI,EAAE,SAAR;QAAmBT,QAAQ,EAAE;MAA7B,CAArC,CAAZ;MACA,OAAO,KAAKC,8BAAL,CAAoC,KAAKC,OAAL,CAAaL,GAAb,EAAkB/B,IAAlB,CAApC,CAAP;IACH;;IACD,OAAOU,MAAM,CAAC,KAAKjB,OAAL,CAAaO,IAAb,CAAD,CAAb;EACH;EACD;AACJ;AACA;;;EACI4C,iBAAiB,GAAG;IAChB;IACA,OAAO,CAAP;EACH;EACD;AACJ;AACA;AACA;;;EACIC,iBAAiB,CAAC7C,IAAD,EAAO;IACpB,OAAO,KAAKL,OAAL,CAAa,KAAKmD,uBAAL,CAA6B,KAAKrD,OAAL,CAAaO,IAAb,CAA7B,EAAiD,KAAKN,QAAL,CAAcM,IAAd,IAAsB,CAAvE,EAA0E,CAA1E,CAAb,CAAP;EACH;EACD;AACJ;AACA;AACA;;;EACI+C,KAAK,CAAC/C,IAAD,EAAO;IACR,OAAO,IAAIqC,IAAJ,CAASrC,IAAI,CAACgD,OAAL,EAAT,CAAP;EACH;EACD;AACJ;AACA;AACA;AACA;AACA;;;EACIC,UAAU,CAACN,IAAD,EAAOV,KAAP,EAAcjC,IAAd,EAAoB;IAC1B;IACA;IACA,IAAIiC,KAAK,GAAG,CAAR,IAAaA,KAAK,GAAG,EAAzB,EAA6B;MACzB,MAAM5D,KAAK,CAAE,wBAAuB4D,KAAM,4CAA/B,CAAX;IACH;;IACD,IAAIjC,IAAI,GAAG,CAAX,EAAc;MACV,MAAM3B,KAAK,CAAE,iBAAgB2B,IAAK,mCAAvB,CAAX;IACH;IACD;;;IACA,IAAIkD,MAAM,GAAG,KAAKJ,uBAAL,CAA6BH,IAA7B,EAAmCV,KAAnC,EAA0CjC,IAA1C,CAAb,CAV0B,CAW1B;;;IACA,IAAIkD,MAAM,CAACxD,QAAP,MAAqBuC,KAAzB,EAAgC;MAC5B,MAAM5D,KAAK,CAAE,iBAAgB2B,IAAK,2BAA0BiC,KAAM,IAAvD,CAAX;IACH;;IACD,OAAOiB,MAAP;EACH;EACD;AACJ;AACA;;;EACIC,KAAK,GAAG;IACJ,OAAO,IAAId,IAAJ,EAAP;EACH;EACD;AACJ;AACA;AACA;;;EACIe,KAAK,CAACvH,KAAD,EAAQ;IACT;IACA;IACA,IAAI,OAAOA,KAAP,IAAgB,QAApB,EAA8B;MAC1B,OAAO,IAAIwG,IAAJ,CAASxG,KAAT,CAAP;IACH;;IACD,OAAOA,KAAK,GAAG,IAAIwG,IAAJ,CAASA,IAAI,CAACe,KAAL,CAAWvH,KAAX,CAAT,CAAH,GAAiC,IAA7C;EACH;EACD;AACJ;AACA;AACA;AACA;;;EACIwH,MAAM,CAACrD,IAAD,EAAOsD,aAAP,EAAsB;IACxB,IAAI,CAAC,KAAKpE,OAAL,CAAac,IAAb,CAAL,EAAyB;MACrB,MAAM3B,KAAK,CAAC,gDAAD,CAAX;IACH;;IACD,IAAI+B,iBAAJ,EAAuB;MACnB;MACA;MACA,IAAI,KAAKoB,UAAL,KAAoBxB,IAAI,CAAC0B,WAAL,KAAqB,CAArB,IAA0B1B,IAAI,CAAC0B,WAAL,KAAqB,IAAnE,CAAJ,EAA8E;QAC1E1B,IAAI,GAAG,KAAK+C,KAAL,CAAW/C,IAAX,CAAP;QACAA,IAAI,CAACuD,WAAL,CAAiBC,IAAI,CAACtD,GAAL,CAAS,CAAT,EAAYsD,IAAI,CAACvD,GAAL,CAAS,IAAT,EAAeD,IAAI,CAAC0B,WAAL,EAAf,CAAZ,CAAjB;MACH;;MACD4B,aAAa,GAAGG,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBJ,aAAlB,EAAiC;QAAEpB,QAAQ,EAAE;MAAZ,CAAjC,CAAhB;MACA;;MACA,MAAMH,GAAG,GAAG,IAAI1B,IAAI,CAAC2B,cAAT,CAAwB,KAAK3C,MAA7B,EAAqCiE,aAArC,CAAZ;MACA,OAAO,KAAKnB,8BAAL,CAAoC,KAAKC,OAAL,CAAaL,GAAb,EAAkB/B,IAAlB,CAApC,CAAP;IACH;;IACD,OAAO,KAAKmC,8BAAL,CAAoCnC,IAAI,CAAC2D,YAAL,EAApC,CAAP;EACH;EACD;AACJ;AACA;AACA;AACA;;;EACIC,gBAAgB,CAAC5D,IAAD,EAAO6D,KAAP,EAAc;IAC1B,OAAO,KAAKC,iBAAL,CAAuB9D,IAAvB,EAA6B6D,KAAK,GAAG,EAArC,CAAP;EACH;EACD;AACJ;AACA;AACA;AACA;;;EACIC,iBAAiB,CAAC9D,IAAD,EAAO+D,MAAP,EAAe;IAC5B;IACA,IAAIC,OAAO,GAAG,KAAKlB,uBAAL,CAA6B,KAAKrD,OAAL,CAAaO,IAAb,CAA7B,EAAiD,KAAKN,QAAL,CAAcM,IAAd,IAAsB+D,MAAvE,EAA+E,KAAKpE,OAAL,CAAaK,IAAb,CAA/E,CAAd,CAF4B,CAG5B;IACA;IACA;IACA;;;IACA,IAAI,KAAKN,QAAL,CAAcsE,OAAd,KAA0B,CAAC,CAAC,KAAKtE,QAAL,CAAcM,IAAd,IAAsB+D,MAAvB,IAAiC,EAAjC,GAAsC,EAAvC,IAA6C,EAA3E,EAA+E;MAC3EC,OAAO,GAAG,KAAKlB,uBAAL,CAA6B,KAAKrD,OAAL,CAAauE,OAAb,CAA7B,EAAoD,KAAKtE,QAAL,CAAcsE,OAAd,CAApD,EAA4E,CAA5E,CAAV;IACH;;IACD,OAAOA,OAAP;EACH;EACD;AACJ;AACA;AACA;AACA;;;EACIC,eAAe,CAACjE,IAAD,EAAOkE,IAAP,EAAa;IACxB,OAAO,KAAKpB,uBAAL,CAA6B,KAAKrD,OAAL,CAAaO,IAAb,CAA7B,EAAiD,KAAKN,QAAL,CAAcM,IAAd,CAAjD,EAAsE,KAAKL,OAAL,CAAaK,IAAb,IAAqBkE,IAA3F,CAAP;EACH;EACD;AACJ;AACA;AACA;;;EACIC,SAAS,CAACnE,IAAD,EAAO;IACZ,OAAO,CACHA,IAAI,CAACoE,cAAL,EADG,EAEH,KAAKC,OAAL,CAAarE,IAAI,CAACsE,WAAL,KAAqB,CAAlC,CAFG,EAGH,KAAKD,OAAL,CAAarE,IAAI,CAACuE,UAAL,EAAb,CAHG,EAILC,IAJK,CAIA,GAJA,CAAP;EAKH;EACD;AACJ;AACA;AACA;AACA;AACA;AACA;;;EACIxF,WAAW,CAACnD,KAAD,EAAQ;IACf,IAAI,OAAOA,KAAP,KAAiB,QAArB,EAA+B;MAC3B,IAAI,CAACA,KAAL,EAAY;QACR,OAAO,IAAP;MACH,CAH0B,CAI3B;MACA;;;MACA,IAAIiF,cAAc,CAAC2D,IAAf,CAAoB5I,KAApB,CAAJ,EAAgC;QAC5B;QACA,IAAImE,IAAI,GAAG,IAAIqC,IAAJ,CAASxG,KAAT,CAAX;;QACA,IAAI,KAAKqD,OAAL,CAAac,IAAb,CAAJ,EAAwB;UACpB,OAAOA,IAAP;QACH;MACJ;IACJ;;IACD,OAAO,MAAMhB,WAAN,CAAkBnD,KAAlB,CAAP;EACH;EACD;AACJ;AACA;AACA;;;EACIoD,cAAc,CAACyF,GAAD,EAAM;IAChB,OAAOA,GAAG,YAAYrC,IAAtB;EACH;EACD;AACJ;AACA;AACA;;;EACInD,OAAO,CAACc,IAAD,EAAO;IACV,OAAO,CAAC2E,KAAK,CAAC3E,IAAI,CAACgD,OAAL,EAAD,CAAb;EACH;EACD;AACJ;AACA;;;EACI7D,OAAO,GAAG;IACN,OAAO,IAAIkD,IAAJ,CAASuC,GAAT,CAAP;EACH;EACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;;;EACI9B,uBAAuB,CAACH,IAAD,EAAOV,KAAP,EAAcjC,IAAd,EAAoB;IACvC;IACA,MAAMkD,MAAM,GAAG,IAAIb,IAAJ,CAASM,IAAT,EAAeV,KAAf,EAAsBjC,IAAtB,CAAf,CAFuC,CAGvC;IACA;;IACA,IAAI2C,IAAI,IAAI,CAAR,IAAaA,IAAI,GAAG,GAAxB,EAA6B;MACzBO,MAAM,CAACK,WAAP,CAAmB,KAAK9D,OAAL,CAAayD,MAAb,IAAuB,IAA1C;IACH;;IACD,OAAOA,MAAP;EACH;EACD;AACJ;AACA;AACA;AACA;AACA;;;EACImB,OAAO,CAACQ,CAAD,EAAI;IACP,OAAO,CAAC,OAAOA,CAAR,EAAWC,KAAX,CAAiB,CAAC,CAAlB,CAAP;EACH;EACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;;;EACI3C,8BAA8B,CAAC4C,GAAD,EAAM;IAChC,OAAOA,GAAG,CAACC,OAAJ,CAAY,iBAAZ,EAA+B,EAA/B,CAAP;EACH;EACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;EACI5C,OAAO,CAACL,GAAD,EAAM/B,IAAN,EAAY;IACf;IACA,MAAMiF,CAAC,GAAG,IAAI5C,IAAJ,CAASA,IAAI,CAAC6C,GAAL,CAASlF,IAAI,CAAC0B,WAAL,EAAT,EAA6B1B,IAAI,CAACN,QAAL,EAA7B,EAA8CM,IAAI,CAACL,OAAL,EAA9C,EAA8DK,IAAI,CAACmF,QAAL,EAA9D,EAA+EnF,IAAI,CAACoF,UAAL,EAA/E,EAAkGpF,IAAI,CAACqF,UAAL,EAAlG,EAAqHrF,IAAI,CAACsF,eAAL,EAArH,CAAT,CAAV;IACA,OAAOvD,GAAG,CAACsB,MAAJ,CAAW4B,CAAX,CAAP;EACH;;AAtUuC;;AAwU5C9D,iBAAiB,CAAC7G,IAAlB,GAAyB,SAASiL,yBAAT,CAAmC/K,CAAnC,EAAsC;EAAE,OAAO,KAAKA,CAAC,IAAI2G,iBAAV,EAA6BvK,MAAM,CAAC6D,QAAP,CAAgB+D,eAAhB,EAAiC,CAAjC,CAA7B,EAAkE5H,MAAM,CAAC6D,QAAP,CAAgB5D,MAAM,CAACX,QAAvB,CAAlE,CAAP;AAA6G,CAA9K;;AACAiL,iBAAiB,CAACqE,KAAlB,GAA0B,aAAc5O,MAAM,CAAC6O,kBAAP,CAA0B;EAAEC,KAAK,EAAEvE,iBAAT;EAA4B7I,OAAO,EAAE6I,iBAAiB,CAAC7G;AAAvD,CAA1B,CAAxC;AACA;;AACA6G,iBAAiB,CAACnG,cAAlB,GAAmC,MAAM,CACrC;EAAEJ,IAAI,EAAE8F,MAAR;EAAgBxF,UAAU,EAAE,CAAC;IAAEN,IAAI,EAAEjG;EAAR,CAAD,EAAqB;IAAEiG,IAAI,EAAEhG,MAAR;IAAgBuG,IAAI,EAAE,CAACqD,eAAD;EAAtB,CAArB;AAA5B,CADqC,EAErC;EAAE5D,IAAI,EAAE1E;AAAR,CAFqC,CAAzC;;AAIA,CAAC,YAAY;EAAE,CAAC,OAAOmF,SAAP,KAAqB,WAArB,IAAoCA,SAArC,KAAmDzE,MAAM,CAAC0E,iBAAP,CAAyB6F,iBAAzB,EAA4C,CAAC;IACvGvG,IAAI,EAAE5F;EADiG,CAAD,CAA5C,EAE1D,YAAY;IAAE,OAAO,CAAC;MAAE4F,IAAI,EAAE8F,MAAR;MAAgBxF,UAAU,EAAE,CAAC;QAC3CN,IAAI,EAAEjG;MADqC,CAAD,EAE3C;QACCiG,IAAI,EAAEhG,MADP;QAECuG,IAAI,EAAE,CAACqD,eAAD;MAFP,CAF2C;IAA5B,CAAD,EAKX;MAAE5D,IAAI,EAAE/D,MAAM,CAACX;IAAf,CALW,CAAP;EAKyB,CAPmB,EAOjB,IAPiB,CAAnD;AAO0C,CAPzD;AASA;AACA;AACA;AACA;;AAEA;;;AACA,MAAMyP,uBAAuB,GAAG;EAC5BvC,KAAK,EAAE;IACHwC,SAAS,EAAE;EADR,CADqB;EAI5BzL,OAAO,EAAE;IACLyL,SAAS,EAAE;MAAEjD,IAAI,EAAE,SAAR;MAAmBV,KAAK,EAAE,SAA1B;MAAqCM,GAAG,EAAE;IAA1C,CADN;IAELsD,cAAc,EAAE;MAAElD,IAAI,EAAE,SAAR;MAAmBV,KAAK,EAAE;IAA1B,CAFX;IAGL6D,aAAa,EAAE;MAAEnD,IAAI,EAAE,SAAR;MAAmBV,KAAK,EAAE,MAA1B;MAAkCM,GAAG,EAAE;IAAvC,CAHV;IAILwD,kBAAkB,EAAE;MAAEpD,IAAI,EAAE,SAAR;MAAmBV,KAAK,EAAE;IAA1B;EAJf;AAJmB,CAAhC;AAYA;AACA;AACA;AACA;;AACA,MAAM+D,gBAAN,CAAuB;;AAEvBA,gBAAgB,CAAC1L,IAAjB,GAAwB,SAAS2L,wBAAT,CAAkCzL,CAAlC,EAAqC;EAAE,OAAO,KAAKA,CAAC,IAAIwL,gBAAV,GAAP;AAAuC,CAAtG;;AACAA,gBAAgB,CAACtL,IAAjB,GAAwB,aAAc9D,MAAM,CAAC+D,gBAAP,CAAwB;EAAEC,IAAI,EAAEoL;AAAR,CAAxB,CAAtC;AACAA,gBAAgB,CAACnL,IAAjB,GAAwB,aAAcjE,MAAM,CAACkE,gBAAP,CAAwB;EAAEoL,SAAS,EAAE,CACnE;IAAEvH,OAAO,EAAEE,WAAX;IAAwBsH,QAAQ,EAAEhF;EAAlC,CADmE,CAAb;EAEvDpG,OAAO,EAAE,CAAC5E,cAAD;AAF8C,CAAxB,CAAtC;;AAGA,CAAC,YAAY;EAAE,CAAC,OAAOkF,SAAP,KAAqB,WAArB,IAAoCA,SAArC,KAAmDzE,MAAM,CAAC0E,iBAAP,CAAyB0K,gBAAzB,EAA2C,CAAC;IACtGpL,IAAI,EAAEnG,QADgG;IAEtG0G,IAAI,EAAE,CAAC;MACCJ,OAAO,EAAE,CAAC5E,cAAD,CADV;MAEC+P,SAAS,EAAE,CACP;QAAEvH,OAAO,EAAEE,WAAX;QAAwBsH,QAAQ,EAAEhF;MAAlC,CADO;IAFZ,CAAD;EAFgG,CAAD,CAA3C,EAQ1D,IAR0D,EAQpD,IARoD,CAAnD;AAQO,CARtB;;AASA,CAAC,YAAY;EAAE,CAAC,OAAO3F,SAAP,KAAqB,WAArB,IAAoCA,SAArC,KAAmD5E,MAAM,CAAC6E,kBAAP,CAA0BuK,gBAA1B,EAA4C;IAAEjL,OAAO,EAAE,YAAY;MAAE,OAAO,CAAC5E,cAAD,CAAP;IAA0B;EAAnD,CAA5C,CAAnD;AAAwJ,CAAvK;;AACA,MAAMiQ,IAAI,GAAGT,uBAAb;;AACA,MAAMU,mBAAN,CAA0B;;AAE1BA,mBAAmB,CAAC/L,IAApB,GAA2B,SAASgM,2BAAT,CAAqC9L,CAArC,EAAwC;EAAE,OAAO,KAAKA,CAAC,IAAI6L,mBAAV,GAAP;AAA0C,CAA/G;;AACAA,mBAAmB,CAAC3L,IAApB,GAA2B,aAAc9D,MAAM,CAAC+D,gBAAP,CAAwB;EAAEC,IAAI,EAAEyL;AAAR,CAAxB,CAAzC;AACAA,mBAAmB,CAACxL,IAApB,GAA2B,aAAcjE,MAAM,CAACkE,gBAAP,CAAwB;EAAEoL,SAAS,EAAE,CAAC;IAAEvH,OAAO,EAAEwB,gBAAX;IAA6BoG,QAAQ,EAAEH;EAAvC,CAAD,CAAb;EAA8DrL,OAAO,EAAE,CAACiL,gBAAD;AAAvE,CAAxB,CAAzC;;AACA,CAAC,YAAY;EAAE,CAAC,OAAO3K,SAAP,KAAqB,WAArB,IAAoCA,SAArC,KAAmDzE,MAAM,CAAC0E,iBAAP,CAAyB+K,mBAAzB,EAA8C,CAAC;IACzGzL,IAAI,EAAEnG,QADmG;IAEzG0G,IAAI,EAAE,CAAC;MACCJ,OAAO,EAAE,CAACiL,gBAAD,CADV;MAECE,SAAS,EAAE,CAAC;QAAEvH,OAAO,EAAEwB,gBAAX;QAA6BoG,QAAQ,EAAEH;MAAvC,CAAD;IAFZ,CAAD;EAFmG,CAAD,CAA9C,EAM1D,IAN0D,EAMpD,IANoD,CAAnD;AAMO,CANtB;;AAOA,CAAC,YAAY;EAAE,CAAC,OAAO5K,SAAP,KAAqB,WAArB,IAAoCA,SAArC,KAAmD5E,MAAM,CAAC6E,kBAAP,CAA0B4K,mBAA1B,EAA+C;IAAEtL,OAAO,EAAE,CAACiL,gBAAD;EAAX,CAA/C,CAAnD;AAAqI,CAApJ;AAEA;AACA;AACA;AACA;;AACA;AACA;AACA;;;AACA,MAAMQ,4BAAN,CAAmC;EAC/B;AACJ;AACA;AACA;AACA;EACI7I,YAAY,CAACH,OAAD,EAAUiJ,IAAV,EAAgB;IACxB,OAAO,CAAC,EAAEjJ,OAAO,IAAIA,OAAO,CAAC2B,OAAnB,KAA+B3B,OAAO,CAACkJ,KAAR,IAAkBD,IAAI,IAAIA,IAAI,CAACE,SAA9D,CAAF,CAAR;EACH;;AAR8B;;AAUnCH,4BAA4B,CAAClM,IAA7B,GAAoC,SAASsM,oCAAT,CAA8CpM,CAA9C,EAAiD;EAAE,OAAO,KAAKA,CAAC,IAAIgM,4BAAV,GAAP;AAAmD,CAA1I;;AACAA,4BAA4B,CAAChB,KAA7B,GAAqC,aAAc5O,MAAM,CAAC6O,kBAAP,CAA0B;EAAEC,KAAK,EAAEc,4BAAT;EAAuClO,OAAO,EAAEkO,4BAA4B,CAAClM;AAA7E,CAA1B,CAAnD;;AACA,CAAC,YAAY;EAAE,CAAC,OAAOe,SAAP,KAAqB,WAArB,IAAoCA,SAArC,KAAmDzE,MAAM,CAAC0E,iBAAP,CAAyBkL,4BAAzB,EAAuD,CAAC;IAClH5L,IAAI,EAAE5F;EAD4G,CAAD,CAAvD,EAE1D,IAF0D,EAEpD,IAFoD,CAAnD;AAEO,CAFtB;AAGA;AACA;AACA;;;AACA,MAAM6R,iBAAN,CAAwB;EACpB;AACJ;AACA;AACA;AACA;EACIlJ,YAAY,CAACH,OAAD,EAAUiJ,IAAV,EAAgB;IACxB,OAAO,CAAC,EAAEjJ,OAAO,IAAIA,OAAO,CAAC2B,OAAnB,KAA+B3B,OAAO,CAACsJ,OAAR,IAAoBL,IAAI,IAAIA,IAAI,CAACE,SAAhE,CAAF,CAAR;EACH;;AARmB;;AAUxBE,iBAAiB,CAACvM,IAAlB,GAAyB,SAASyM,yBAAT,CAAmCvM,CAAnC,EAAsC;EAAE,OAAO,KAAKA,CAAC,IAAIqM,iBAAV,GAAP;AAAwC,CAAzG;;AACAA,iBAAiB,CAACrB,KAAlB,GAA0B,aAAc5O,MAAM,CAAC6O,kBAAP,CAA0B;EAAEC,KAAK,EAAEmB,iBAAT;EAA4BvO,OAAO,EAAEuO,iBAAiB,CAACvM,IAAvD;EAA6DjC,UAAU,EAAE;AAAzE,CAA1B,CAAxC;AACA;;AAAmBwO,iBAAiB,CAACG,eAAlB,GAAoCrR,gBAAgB,CAAC;EAAE2C,OAAO,EAAE,SAASyO,yBAAT,GAAqC;IAAE,OAAO,IAAIF,iBAAJ,EAAP;EAAiC,CAAnF;EAAqFnB,KAAK,EAAEmB,iBAA5F;EAA+GxO,UAAU,EAAE;AAA3H,CAAD,CAApD;;AACnB,CAAC,YAAY;EAAE,CAAC,OAAOgD,SAAP,KAAqB,WAArB,IAAoCA,SAArC,KAAmDzE,MAAM,CAAC0E,iBAAP,CAAyBuL,iBAAzB,EAA4C,CAAC;IACvGjM,IAAI,EAAE5F,UADiG;IAEvGmG,IAAI,EAAE,CAAC;MAAE9C,UAAU,EAAE;IAAd,CAAD;EAFiG,CAAD,CAA5C,EAG1D,IAH0D,EAGpD,IAHoD,CAAnD;AAGO,CAHtB;AAKA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;;;AACA,MAAM4O,kBAAkB,GAAG,IAAIvS,cAAJ,CAAmB,oBAAnB,CAA3B;AACA;;AACA,MAAMwS,0CAA0C,GAAG,CAC/C,WAD+C,EAE/C,OAF+C,EAG/C,YAH+C,EAI/C,UAJ+C,EAK/C,YAL+C,EAM/C,WAN+C,CAAnD;;AAQA,MAAMC,IAAI,GAAG,MAAM,CAAG,CAAtB;AAAA,MAAwBC,EAAE,GAAG,MAAM,CAAG,CAAtC;AACA;AACA;AACA;AACA;AACA;;;AACA,MAAMC,kBAAkB,GAAG;EACvBC,EAAE,EAAEH,IADmB;EAEvBI,GAAG,EAAEH;AAFkB,CAA3B;AAIA;AACA;AACA;;AACA,MAAMI,aAAN,SAA4B3R,mBAA5B,CAAgD;EAC5C;AACJ;AACA;AACA;EACI4C,WAAW,CAACgP,cAAD,EAAiBC,YAAjB,EAA+B;IACtC;IACA,KAAKD,cAAL,GAAsBA,cAAtB;IACA;AACR;AACA;;IACQ,KAAKE,MAAL,GAAcT,0CAAd;;IACA,IAAIQ,YAAJ,EAAkB;MACdA,YAAY,CAACrN,uBAAb;IACH;EACJ;EACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;EACIuN,WAAW,CAACC,OAAD,EAAU;IACjB;IACA,MAAMC,MAAM,GAAG,OAAO7O,MAAP,KAAkB,WAAlB;IAAkC;IAAkBA,MAApB,CAA8B8O,MAA9D,GAAuE,IAAtF;;IACA,IAAI,CAACD,MAAL,EAAa;MACT;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA,OAAOT,kBAAP;IACH;IACD;;;IACA,MAAMW,EAAE,GAAG,IAAIF,MAAJ,CAAWD,OAAX,EAAoB,KAAKJ,cAAL,IAAuBrM,SAA3C,CAAX,CAfiB,CAgBjB;;IACA;;IACA,MAAM6M,GAAG,GAAG,IAAIH,MAAM,CAACI,GAAX,EAAZ;IACA;;IACA,MAAMC,KAAK,GAAG,IAAIL,MAAM,CAACM,KAAX,EAAd;IACA;;IACA,MAAMC,KAAK,GAAG,IAAIP,MAAM,CAACQ,KAAX,EAAd,CAtBiB,CAuBjB;IACA;IACA;;IACA;;IACA,MAAMC,KAAK,GAAG,KAAKC,iBAAL,CAAuBP,GAAvB,EAA4B;MAAEQ,KAAK,EAAE,OAAT;MAAkBC,SAAS,EAAE;IAA7B,CAA5B,EAA8DP,KAA9D,CAAd;IACA;;;IACA,MAAMQ,SAAS,GAAG,KAAKH,iBAAL,CAAuBH,KAAvB,EAA8B;MAAEI,KAAK,EAAE,WAAT;MAAsBG,IAAI,EAAE;IAA5B,CAA9B,CAAlB,CA7BiB,CA8BjB;;;IACAX,GAAG,CAACY,aAAJ,CAAkBV,KAAlB,EA/BiB,CAgCjB;IACA;IACA;IACA;IACA;;IACAQ,SAAS,CAACE,aAAV,CAAwBN,KAAxB,EArCiB,CAsCjB;;IACAP,EAAE,CAAChO,GAAH,CAAO,CAACmO,KAAD,EAAQE,KAAR,EAAeJ,GAAf,EAAoBM,KAApB,EAA2BI,SAA3B,CAAP;IACA;MAAQ;MAAkBX;IAA1B;EACH;EACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;;;EACIQ,iBAAiB,CAAC7M,IAAD,EAAOmN,OAAP,EAAgB,GAAGC,YAAnB,EAAiC;IAC9C;IACA,IAAIC,UAAU,GAAG;IAAM;IAAkBrN,IAAI,CAAClD,WAA7B,CAA4CqQ,OAA5C,CAAjB;IACAC,YAAY,CAAC5K,IAAb,CAAkBxC,IAAlB;IACAoN,YAAY,CAACzK,OAAb,CAAqB2K,IAAI,IAAID,UAAU,CAACH,aAAX,CAAyBI,IAAzB,CAA7B;IACA,OAAOD,UAAP;EACH;;AArF2C;;AAuFhDxB,aAAa,CAAClN,IAAd,GAAqB,SAAS4O,qBAAT,CAA+B1O,CAA/B,EAAkC;EAAE,OAAO,KAAKA,CAAC,IAAIgN,aAAV,EAAyB5Q,MAAM,CAAC6D,QAAP,CAAgBwM,kBAAhB,EAAoC,CAApC,CAAzB,EAAiErQ,MAAM,CAAC6D,QAAP,CAAgBjC,eAAhB,EAAiC,CAAjC,CAAjE,CAAP;AAA+G,CAAxK;;AACAgP,aAAa,CAAChC,KAAd,GAAsB,aAAc5O,MAAM,CAAC6O,kBAAP,CAA0B;EAAEC,KAAK,EAAE8B,aAAT;EAAwBlP,OAAO,EAAEkP,aAAa,CAAClN;AAA/C,CAA1B,CAApC;AACA;;AACAkN,aAAa,CAACxM,cAAd,GAA+B,MAAM,CACjC;EAAEJ,IAAI,EAAEQ,SAAR;EAAmBF,UAAU,EAAE,CAAC;IAAEN,IAAI,EAAEjG;EAAR,CAAD,EAAqB;IAAEiG,IAAI,EAAEhG,MAAR;IAAgBuG,IAAI,EAAE,CAAC8L,kBAAD;EAAtB,CAArB;AAA/B,CADiC,EAEjC;EAAErM,IAAI,EAAEpC,eAAR;EAAyB0C,UAAU,EAAE,CAAC;IAAEN,IAAI,EAAEjG;EAAR,CAAD;AAArC,CAFiC,CAArC;;AAIA,CAAC,YAAY;EAAE,CAAC,OAAO0G,SAAP,KAAqB,WAArB,IAAoCA,SAArC,KAAmDzE,MAAM,CAAC0E,iBAAP,CAAyBkM,aAAzB,EAAwC,CAAC;IACnG5M,IAAI,EAAE5F;EAD6F,CAAD,CAAxC,EAE1D,YAAY;IAAE,OAAO,CAAC;MAAE4F,IAAI,EAAEQ,SAAR;MAAmBF,UAAU,EAAE,CAAC;QAC9CN,IAAI,EAAEjG;MADwC,CAAD,EAE9C;QACCiG,IAAI,EAAEhG,MADP;QAECuG,IAAI,EAAE,CAAC8L,kBAAD;MAFP,CAF8C;IAA/B,CAAD,EAKX;MAAErM,IAAI,EAAEpC,eAAR;MAAyB0C,UAAU,EAAE,CAAC;QACxCN,IAAI,EAAEjG;MADkC,CAAD;IAArC,CALW,CAAP;EAOF,CAT8C,EAS5C,IAT4C,CAAnD;AASe,CAT9B;AAWA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;;;AACA,MAAMwU,OAAN,CAAc;;AAEdA,OAAO,CAAC7O,IAAR,GAAe,SAAS8O,eAAT,CAAyB5O,CAAzB,EAA4B;EAAE,OAAO,KAAKA,CAAC,IAAI2O,OAAV,GAAP;AAA8B,CAA3E;;AACAA,OAAO,CAACE,IAAR,GAAe,aAAczS,MAAM,CAAC0S,iBAAP,CAAyB;EAAE1O,IAAI,EAAEuO,OAAR;EAAiBI,SAAS,EAAE,CAAC,CAAC,EAAD,EAAK,UAAL,EAAiB,EAAjB,CAAD,EAAuB,CAAC,EAAD,EAAK,SAAL,EAAgB,EAAhB,CAAvB,CAA5B;EAAyEC,SAAS,EAAE,CAAC,CAAD,EAAI,UAAJ;AAApF,CAAzB,CAA7B;;AACA,CAAC,YAAY;EAAE,CAAC,OAAOnO,SAAP,KAAqB,WAArB,IAAoCA,SAArC,KAAmDzE,MAAM,CAAC0E,iBAAP,CAAyB6N,OAAzB,EAAkC,CAAC;IAC7FvO,IAAI,EAAE3F,SADuF;IAE7FkG,IAAI,EAAE,CAAC;MACCsO,QAAQ,EAAE,uBADX;MAECC,IAAI,EAAE;QAAE,SAAS;MAAX;IAFP,CAAD;EAFuF,CAAD,CAAlC,EAM1D,IAN0D,EAMpD,IANoD,CAAnD;AAMO,CANtB;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASC,QAAT,CAAkBC,KAAlB,EAAyB/B,OAAzB,EAAkC;EAC9B;EACA;EACA+B,KAAK,CAACC,OAAN,CAAcC,IAAd,CAAmBzT,SAAS,CAACuT,KAAD,CAA5B,EAAqCG,SAArC,CAA+C,CAAC;IAAEhJ;EAAF,CAAD,KAAgB;IAC3DiJ,QAAQ,CAACnC,OAAD,EAAU,YAAV,EAAwB,KAAxB,CAAR;IACAmC,QAAQ,CAACnC,OAAD,EAAU,YAAV,EAAwB,KAAxB,CAAR;IACAmC,QAAQ,CAACnC,OAAD,EAAU,gBAAV,EAA4B,KAA5B,CAAR;;IACA,IAAI9G,MAAM,KAAK,CAAX,IAAgBA,MAAM,KAAK,CAA/B,EAAkC;MAC9BiJ,QAAQ,CAACnC,OAAD,EAAW,OAAM9G,MAAO,OAAxB,EAAgC,IAAhC,CAAR;IACH,CAFD,MAGK,IAAIA,MAAM,GAAG,CAAb,EAAgB;MACjBiJ,QAAQ,CAACnC,OAAD,EAAW,gBAAX,EAA4B,IAA5B,CAAR;IACH;EACJ,CAVD;AAWH;AACD;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASmC,QAAT,CAAkBnC,OAAlB,EAA2BoC,SAA3B,EAAsCC,KAAtC,EAA6C;EACzC;EACA,MAAMnQ,SAAS,GAAG8N,OAAO,CAACzL,aAAR,CAAsBrC,SAAxC;EACAmQ,KAAK,GAAGnQ,SAAS,CAACC,GAAV,CAAciQ,SAAd,CAAH,GAA8BlQ,SAAS,CAACsC,MAAV,CAAiB4N,SAAjB,CAAnC;AACH;AACD;AACA;AACA;AACA;AACA;AACA;;;AACA,MAAME,aAAN,CAAoB;EAChB;AACJ;AACA;AACA;EACI1R,WAAW,CAACmR,KAAD,EAAQ/B,OAAR,EAAiB;IACxB8B,QAAQ,CAACC,KAAD,EAAQ/B,OAAR,CAAR;EACH;;AAPe;;AASpB,MAAMuC,aAAN,CAAoB;;AAEpBA,aAAa,CAAC9P,IAAd,GAAqB,SAAS+P,qBAAT,CAA+B7P,CAA/B,EAAkC;EAAE,OAAO,KAAKA,CAAC,IAAI4P,aAAV,GAAP;AAAoC,CAA7F;;AACAA,aAAa,CAAC1P,IAAd,GAAqB,aAAc9D,MAAM,CAAC+D,gBAAP,CAAwB;EAAEC,IAAI,EAAEwP;AAAR,CAAxB,CAAnC;AACAA,aAAa,CAACvP,IAAd,GAAqB,aAAcjE,MAAM,CAACkE,gBAAP,CAAwB;EAAEC,OAAO,EAAE,CAACvC,eAAD,EAAkBA,eAAlB;AAAX,CAAxB,CAAnC;;AACA,CAAC,YAAY;EAAE,CAAC,OAAO6C,SAAP,KAAqB,WAArB,IAAoCA,SAArC,KAAmDzE,MAAM,CAAC0E,iBAAP,CAAyB8O,aAAzB,EAAwC,CAAC;IACnGxP,IAAI,EAAEnG,QAD6F;IAEnG0G,IAAI,EAAE,CAAC;MACCJ,OAAO,EAAE,CAACvC,eAAD,CADV;MAEC+C,OAAO,EAAE,CAAC4N,OAAD,EAAU3Q,eAAV,CAFV;MAGC8R,YAAY,EAAE,CAACnB,OAAD;IAHf,CAAD;EAF6F,CAAD,CAAxC,EAO1D,IAP0D,EAOpD,IAPoD,CAAnD;AAOO,CAPtB;;AAQA,CAAC,YAAY;EAAE,CAAC,OAAO3N,SAAP,KAAqB,WAArB,IAAoCA,SAArC,KAAmD5E,MAAM,CAAC6E,kBAAP,CAA0B2O,aAA1B,EAAyC;IAAEE,YAAY,EAAE,CAACnB,OAAD,CAAhB;IAA2BpO,OAAO,EAAE,CAACvC,eAAD,CAApC;IAAuD+C,OAAO,EAAE,CAAC4N,OAAD,EAAU3Q,eAAV;EAAhE,CAAzC,CAAnD;AAA4L,CAA3M;AAEA;AACA;AACA;AACA;;AAEA;;;AACA,MAAM+R,WAAW,GAAG;EAChBC,SAAS,EAAE,CADK;EACFC,OAAO,EAAE,CADP;EACUC,UAAU,EAAE,CADtB;EACyBC,MAAM,EAAE;AADjC,CAApB;AAGAJ,WAAW,CAACA,WAAW,CAACC,SAAb,CAAX,GAAqC,WAArC;AACAD,WAAW,CAACA,WAAW,CAACE,OAAb,CAAX,GAAmC,SAAnC;AACAF,WAAW,CAACA,WAAW,CAACG,UAAb,CAAX,GAAsC,YAAtC;AACAH,WAAW,CAACA,WAAW,CAACI,MAAb,CAAX,GAAkC,QAAlC;AACA;AACA;AACA;;AACA,MAAMC,SAAN,CAAgB;EACZ;AACJ;AACA;AACA;AACA;EACInS,WAAW,CAACoS,SAAD,EAAYhD,OAAZ,EAAqBiD,MAArB,EAA6B;IACpC,KAAKD,SAAL,GAAiBA,SAAjB;IACA,KAAKhD,OAAL,GAAeA,OAAf;IACA,KAAKiD,MAAL,GAAcA,MAAd;IACA;AACR;AACA;;IACQ,KAAKC,KAAL,GAAaR,WAAW,CAACI,MAAzB;EACH;EACD;AACJ;AACA;AACA;;;EACIK,OAAO,GAAG;IACN,KAAKH,SAAL,CAAeI,aAAf,CAA6B,IAA7B;EACH;;AArBW;AAwBhB;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;;;AACA,MAAMC,4BAA4B,GAAG;EACjCC,aAAa,EAAE,GADkB;EAEjCC,YAAY,EAAE;AAFmB,CAArC;AAIA;AACA;AACA;AACA;AACA;;AACA,MAAMC,wBAAwB,GAAG,GAAjC;AACA;AACA;AACA;AACA;;AACA,MAAMC,mBAAmB,GAAGlV,+BAA+B,CAAC;EAAEmV,OAAO,EAAE;AAAX,CAAD,CAA3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,MAAMC,cAAN,CAAqB;EACjB;AACJ;AACA;AACA;AACA;AACA;EACI/S,WAAW,CAACgT,OAAD,EAAUC,OAAV,EAAmBC,UAAnB,EAA+BtK,QAA/B,EAAyC;IAChD,KAAKoK,OAAL,GAAeA,OAAf;IACA,KAAKC,OAAL,GAAeA,OAAf;IACA;AACR;AACA;;IACQ,KAAKE,cAAL,GAAsB,KAAtB;IACA;AACR;AACA;;IACQ,KAAKC,cAAL,GAAsB,IAAIC,GAAJ,EAAtB;IACA;AACR;AACA;;IACQ,KAAKC,cAAL,GAAsB,IAAIC,GAAJ,EAAtB;IACA;AACR;AACA;;IACQ,KAAKC,WAAL,GAAoBxD,KAAD,IAAW;MAC1B;MACA;;MACA;MACA,MAAMyD,eAAe,GAAG5V,+BAA+B,CAACmS,KAAD,CAAvD;MACA;;MACA,MAAM0D,gBAAgB,GAAG,KAAKC,oBAAL,IACrB/J,IAAI,CAACgK,GAAL,KAAa,KAAKD,oBAAL,GAA4Bf,wBAD7C;;MAEA,IAAI,CAAC,KAAKI,OAAL,CAAaa,cAAd,IAAgC,CAACJ,eAAjC,IAAoD,CAACC,gBAAzD,EAA2E;QACvE,KAAKP,cAAL,GAAsB,IAAtB;QACA,KAAKW,YAAL,CAAkB9D,KAAK,CAAC+D,OAAxB,EAAiC/D,KAAK,CAACgE,OAAvC,EAAgD,KAAKhB,OAAL,CAAaiB,YAA7D;MACH;IACJ,CAZD;IAaA;AACR;AACA;;;IACQ,KAAKC,YAAL,GAAqBlE,KAAD,IAAW;MAC3B,IAAI,CAAC,KAAKgD,OAAL,CAAaa,cAAlB,EAAkC;QAC9B;QACA;QACA;QACA,KAAKF,oBAAL,GAA4B/J,IAAI,CAACgK,GAAL,EAA5B;QACA,KAAKT,cAAL,GAAsB,IAAtB,CAL8B,CAM9B;QACA;;QACA;;QACA,MAAMgB,OAAO,GAAGnE,KAAK,CAACoE,cAAtB;;QACA,KAAK,IAAIpM,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGmM,OAAO,CAAC7L,MAA5B,EAAoCN,CAAC,EAArC,EAAyC;UACrC,KAAK8L,YAAL,CAAkBK,OAAO,CAACnM,CAAD,CAAP,CAAW+L,OAA7B,EAAsCI,OAAO,CAACnM,CAAD,CAAP,CAAWgM,OAAjD,EAA0D,KAAKhB,OAAL,CAAaiB,YAAvE;QACH;MACJ;IACJ,CAfD;IAgBA;AACR;AACA;;;IACQ,KAAKI,WAAL,GAAmB,MAAM;MACrB,IAAI,CAAC,KAAKlB,cAAV,EAA0B;QACtB;MACH;;MACD,KAAKA,cAAL,GAAsB,KAAtB,CAJqB,CAKrB;;MACA,KAAKG,cAAL,CAAoBzN,OAApB,CAA4ByO,MAAM,IAAI;QAClC;QACA;;QACA;QACA,MAAMC,SAAS,GAAGD,MAAM,CAAChC,KAAP,KAAiBR,WAAW,CAACE,OAA7B,IACdsC,MAAM,CAACjC,MAAP,CAAcmC,oBAAd,IAAsCF,MAAM,CAAChC,KAAP,KAAiBR,WAAW,CAACC,SADvE;;QAEA,IAAI,CAACuC,MAAM,CAACjC,MAAP,CAAcoC,UAAf,IAA6BF,SAAjC,EAA4C;UACxCD,MAAM,CAAC/B,OAAP;QACH;MACJ,CATD;IAUH,CAhBD,CArDgD,CAsEhD;;;IACA,IAAI3J,QAAQ,CAAC8L,SAAb,EAAwB;MACpB,KAAKC,iBAAL,GAAyBzB,UAAU,CAACvP,aAApC,CADoB,CAEpB;;MACA,KAAKyP,cAAL,CACKwB,GADL,CACS,WADT,EACsB,KAAKpB,WAD3B,EAEKoB,GAFL,CAES,SAFT,EAEoB,KAAKP,WAFzB,EAGKO,GAHL,CAGS,YAHT,EAGuB,KAAKP,WAH5B,EAIKO,GAJL,CAIS,YAJT,EAIuB,KAAKV,YAJ5B,EAKKU,GALL,CAKS,UALT,EAKqB,KAAKP,WAL1B,EAMKO,GANL,CAMS,aANT,EAMwB,KAAKP,WAN7B;IAOH;EACJ;EACD;AACJ;AACA;AACA;AACA;AACA;AACA;;;EACIP,YAAY,CAACe,CAAD,EAAIC,CAAJ,EAAOzC,MAAM,GAAG,EAAhB,EAAoB;IAC5B;IACA,MAAM0C,aAAa,GAAG,KAAKC,cAAL,GAClB,KAAKA,cAAL,IAAuB,KAAKL,iBAAL,CAAuBM,qBAAvB,EAD3B;IAEA;;;IACA,MAAMC,eAAe,GAAGlK,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBwH,4BAAlB,EAAgDJ,MAAM,CAAC8C,SAAvD,CAAxB;;IACA,IAAI9C,MAAM,CAAC+C,QAAX,EAAqB;MACjBP,CAAC,GAAGE,aAAa,CAACM,IAAd,GAAqBN,aAAa,CAACO,KAAd,GAAsB,CAA/C;MACAR,CAAC,GAAGC,aAAa,CAACQ,GAAd,GAAoBR,aAAa,CAACS,MAAd,GAAuB,CAA/C;IACH;IACD;;;IACA,MAAMC,MAAM,GAAGpD,MAAM,CAACoD,MAAP,IAAiBC,wBAAwB,CAACb,CAAD,EAAIC,CAAJ,EAAOC,aAAP,CAAxD;IACA;;IACA,MAAMY,OAAO,GAAGd,CAAC,GAAGE,aAAa,CAACM,IAAlC;IACA;;IACA,MAAMO,OAAO,GAAGd,CAAC,GAAGC,aAAa,CAACQ,GAAlC;IACA;;IACA,MAAMM,QAAQ,GAAGX,eAAe,CAACxC,aAAjC;IACA;;IACA,MAAM4B,MAAM,GAAGhU,QAAQ,CAACe,aAAT,CAAuB,KAAvB,CAAf;IACAiT,MAAM,CAAChT,SAAP,CAAiBC,GAAjB,CAAqB,oBAArB;IACA+S,MAAM,CAACjL,KAAP,CAAagM,IAAb,GAAqB,GAAEM,OAAO,GAAGF,MAAO,IAAxC;IACAnB,MAAM,CAACjL,KAAP,CAAakM,GAAb,GAAoB,GAAEK,OAAO,GAAGH,MAAO,IAAvC;IACAnB,MAAM,CAACjL,KAAP,CAAamM,MAAb,GAAuB,GAAEC,MAAM,GAAG,CAAE,IAApC;IACAnB,MAAM,CAACjL,KAAP,CAAaiM,KAAb,GAAsB,GAAEG,MAAM,GAAG,CAAE,IAAnC,CAxB4B,CAyB5B;;IACAnB,MAAM,CAACjL,KAAP,CAAayM,eAAb,GAA+BzD,MAAM,CAAC9O,KAAP,IAAgB,IAA/C;IACA+Q,MAAM,CAACjL,KAAP,CAAa0M,kBAAb,GAAmC,GAAEF,QAAS,IAA9C;;IACA,KAAKlB,iBAAL,CAAuBnT,WAAvB,CAAmC8S,MAAnC,EA5B4B,CA6B5B;IACA;;;IACA0B,yBAAyB,CAAC1B,MAAD,CAAzB;IACAA,MAAM,CAACjL,KAAP,CAAa4M,SAAb,GAAyB,UAAzB,CAhC4B,CAiC5B;;IACA;;IACA,MAAMC,SAAS,GAAG,IAAI/D,SAAJ,CAAc,IAAd,EAAoBmC,MAApB,EAA4BjC,MAA5B,CAAlB;IACA6D,SAAS,CAAC5D,KAAV,GAAkBR,WAAW,CAACC,SAA9B,CApC4B,CAqC5B;;IACA,KAAKuB,cAAL,CAAoB/R,GAApB,CAAwB2U,SAAxB;;IACA,IAAI,CAAC7D,MAAM,CAACoC,UAAZ,EAAwB;MACpB,KAAK0B,0BAAL,GAAkCD,SAAlC;IACH,CAzC2B,CA0C5B;IACA;;;IACA,KAAKE,qBAAL,CAA2B,MAAM;MAC7B;MACA,MAAMC,2BAA2B,GAAGH,SAAS,KAAK,KAAKC,0BAAvD;MACAD,SAAS,CAAC5D,KAAV,GAAkBR,WAAW,CAACE,OAA9B,CAH6B,CAI7B;MACA;MACA;MACA;;MACA,IAAI,CAACK,MAAM,CAACoC,UAAR,KAAuB,CAAC4B,2BAAD,IAAgC,CAAC,KAAKlD,cAA7D,CAAJ,EAAkF;QAC9E+C,SAAS,CAAC3D,OAAV;MACH;IACJ,CAXD,EAWGsD,QAXH;IAYA,OAAOK,SAAP;EACH;EACD;AACJ;AACA;AACA;AACA;;;EACI1D,aAAa,CAAC0D,SAAD,EAAY;IACrB;IACA,MAAMI,SAAS,GAAG,KAAKhD,cAAL,CAAoBiD,MAApB,CAA2BL,SAA3B,CAAlB;;IACA,IAAIA,SAAS,KAAK,KAAKC,0BAAvB,EAAmD;MAC/C,KAAKA,0BAAL,GAAkC,IAAlC;IACH,CALoB,CAMrB;;;IACA,IAAI,CAAC,KAAK7C,cAAL,CAAoBkD,IAAzB,EAA+B;MAC3B,KAAKxB,cAAL,GAAsB,IAAtB;IACH,CAToB,CAUrB;;;IACA,IAAI,CAACsB,SAAL,EAAgB;MACZ;IACH;IACD;;;IACA,MAAMG,QAAQ,GAAGP,SAAS,CAAC9G,OAA3B;IACA;;IACA,MAAM8F,eAAe,GAAGlK,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBwH,4BAAlB,EAAgDyD,SAAS,CAAC7D,MAAV,CAAiB8C,SAAjE,CAAxB;IACAsB,QAAQ,CAACpN,KAAT,CAAe0M,kBAAf,GAAqC,GAAEb,eAAe,CAACvC,YAAa,IAApE;IACA8D,QAAQ,CAACpN,KAAT,CAAeqN,OAAf,GAAyB,GAAzB;IACAR,SAAS,CAAC5D,KAAV,GAAkBR,WAAW,CAACG,UAA9B,CApBqB,CAqBrB;;IACA,KAAKmE,qBAAL,CAA2B,MAAM;MAC7BF,SAAS,CAAC5D,KAAV,GAAkBR,WAAW,CAACI,MAA9B;;MACC;MAAkBuE,QAAQ,CAACE,UAA5B,CAAyChV,WAAzC,CAAqD8U,QAArD;IACH,CAHD,EAGGvB,eAAe,CAACvC,YAHnB;EAIH;EACD;AACJ;AACA;AACA;;;EACIiE,UAAU,GAAG;IACT,KAAKtD,cAAL,CAAoBzN,OAApB,CAA4ByO,MAAM,IAAIA,MAAM,CAAC/B,OAAP,EAAtC;EACH;EACD;AACJ;AACA;AACA;AACA;;;EACIsE,kBAAkB,CAACzH,OAAD,EAAU;IACxB,IAAI,CAACA,OAAD,IAAYA,OAAO,KAAK,KAAK0H,eAAjC,EAAkD;MAC9C;IACH,CAHuB,CAIxB;;;IACA,KAAKC,oBAAL;;IACA,KAAK9D,OAAL,CAAa+D,iBAAb,CAA+B,MAAM;MACjC,KAAK5D,cAAL,CAAoBvN,OAApB,CAA4B,CAACoR,EAAD,EAAK9U,IAAL,KAAc;QACtCiN,OAAO,CAAC8H,gBAAR,CAAyB/U,IAAzB,EAA+B8U,EAA/B,EAAmCpE,mBAAnC;MACH,CAFD;IAGH,CAJD;;IAKA,KAAKiE,eAAL,GAAuB1H,OAAvB;EACH;EACD;AACJ;AACA;AACA;AACA;AACA;AACA;;;EACIgH,qBAAqB,CAACa,EAAD,EAAKE,KAAK,GAAG,CAAb,EAAgB;IACjC,KAAKlE,OAAL,CAAa+D,iBAAb,CAA+B,MAAMI,UAAU,CAACH,EAAD,EAAKE,KAAL,CAA/C;EACH;EACD;AACJ;AACA;AACA;;;EACIJ,oBAAoB,GAAG;IACnB,IAAI,KAAKD,eAAT,EAA0B;MACtB,KAAK1D,cAAL,CAAoBvN,OAApB,CAA4B,CAACoR,EAAD,EAAK9U,IAAL,KAAc;QACrC;QAAkB,KAAK2U,eAAxB,CAA0CO,mBAA1C,CAA8DlV,IAA9D,EAAoE8U,EAApE,EAAwEpE,mBAAxE;MACH,CAFD;IAGH;EACJ;;AAxOgB;AA0OrB;AACA;AACA;AACA;AACA;;;AACA,SAASmD,yBAAT,CAAmC5G,OAAnC,EAA4C;EACxC;EACA;EACA;EACA5O,MAAM,CAACW,gBAAP,CAAwBiO,OAAxB,EAAiCkI,gBAAjC,CAAkD,SAAlD;AACH;AACD;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAAS5B,wBAAT,CAAkCb,CAAlC,EAAqCC,CAArC,EAAwCyC,IAAxC,EAA8C;EAC1C;EACA,MAAMC,KAAK,GAAGzM,IAAI,CAACtD,GAAL,CAASsD,IAAI,CAAC0M,GAAL,CAAS5C,CAAC,GAAG0C,IAAI,CAAClC,IAAlB,CAAT,EAAkCtK,IAAI,CAAC0M,GAAL,CAAS5C,CAAC,GAAG0C,IAAI,CAACG,KAAlB,CAAlC,CAAd;EACA;;EACA,MAAMC,KAAK,GAAG5M,IAAI,CAACtD,GAAL,CAASsD,IAAI,CAAC0M,GAAL,CAAS3C,CAAC,GAAGyC,IAAI,CAAChC,GAAlB,CAAT,EAAiCxK,IAAI,CAAC0M,GAAL,CAAS3C,CAAC,GAAGyC,IAAI,CAACK,MAAlB,CAAjC,CAAd;EACA,OAAO7M,IAAI,CAAC8M,IAAL,CAAUL,KAAK,GAAGA,KAAR,GAAgBG,KAAK,GAAGA,KAAlC,CAAP;AACH;AAED;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;;;AACA,MAAMG,yBAAyB,GAAG,IAAI7b,cAAJ,CAAmB,2BAAnB,CAAlC;;AACA,MAAM8b,SAAN,CAAgB;EACZ;AACJ;AACA;AACA;AACA;AACA;AACA;EACI/X,WAAW,CAAC0D,WAAD,EAAcsU,MAAd,EAAsBpP,QAAtB,EAAgCqP,aAAhC,EAA+CC,aAA/C,EAA8D;IACrE,KAAKxU,WAAL,GAAmBA,WAAnB;IACA;AACR;AACA;AACA;AACA;;IACQ,KAAK+R,MAAL,GAAc,CAAd;IACA,KAAKtS,SAAL,GAAiB,KAAjB;IACA;AACR;AACA;;IACQ,KAAKkC,cAAL,GAAsB,KAAtB;IACA,KAAK8S,cAAL,GAAsBF,aAAa,IAAI,EAAvC;IACA,KAAKG,eAAL,GAAuB,IAAIrF,cAAJ,CAAmB,IAAnB,EAAyBiF,MAAzB,EAAiCtU,WAAjC,EAA8CkF,QAA9C,CAAvB;;IACA,IAAIsP,aAAa,KAAK,gBAAtB,EAAwC;MACpC,KAAKC,cAAL,CAAoBhD,SAApB,GAAgC;QAAEzC,aAAa,EAAE,CAAjB;QAAoBC,YAAY,EAAE;MAAlC,CAAhC;IACH;EACJ;EACD;AACJ;AACA;AACA;AACA;;;EACgB,IAAR3T,QAAQ,GAAG;IAAE,OAAO,KAAKmE,SAAZ;EAAwB;EACzC;AACJ;AACA;AACA;;;EACgB,IAARnE,QAAQ,CAACoE,KAAD,EAAQ;IAChB,KAAKD,SAAL,GAAiBC,KAAjB;;IACA,KAAKiV,4BAAL;EACH;EACD;AACJ;AACA;AACA;AACA;;;EACe,IAAPC,OAAO,GAAG;IAAE,OAAO,KAAKC,QAAL,IAAiB,KAAK7U,WAAL,CAAiBC,aAAzC;EAAyD;EACzE;AACJ;AACA;AACA;;;EACe,IAAP2U,OAAO,CAACA,OAAD,EAAU;IACjB,KAAKC,QAAL,GAAgBD,OAAhB;;IACA,KAAKD,4BAAL;EACH;EACD;AACJ;AACA;;;EACIG,QAAQ,GAAG;IACP,KAAKnT,cAAL,GAAsB,IAAtB;;IACA,KAAKgT,4BAAL;EACH;EACD;AACJ;AACA;;;EACII,WAAW,GAAG;IACV,KAAKL,eAAL,CAAqBrB,oBAArB;EACH;EACD;AACJ;AACA;AACA;;;EACIH,UAAU,GAAG;IACT,KAAKwB,eAAL,CAAqBxB,UAArB;EACH;EACD;AACJ;AACA;AACA;AACA;;;EACoB,IAAZ3C,YAAY,GAAG;IACf,OAAO;MACHmB,QAAQ,EAAE,KAAKA,QADZ;MAEHK,MAAM,EAAE,KAAKA,MAFV;MAGHlS,KAAK,EAAE,KAAKA,KAHT;MAIH4R,SAAS,EAAEnK,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkB,KAAKkN,cAAL,CAAoBhD,SAAtC,EAAiD,KAAKA,SAAtD,CAJR;MAKHX,oBAAoB,EAAE,KAAK2D,cAAL,CAAoB3D;IALvC,CAAP;EAOH;EACD;AACJ;AACA;AACA;AACA;;;EACsB,IAAdX,cAAc,GAAG;IACjB,OAAO,KAAK7U,QAAL,IAAiB,CAAC,CAAC,KAAKmZ,cAAL,CAAoBnZ,QAA9C;EACH;EACD;AACJ;AACA;AACA;AACA;;;EACIqZ,4BAA4B,GAAG;IAC3B,IAAI,CAAC,KAAKrZ,QAAN,IAAkB,KAAKqG,cAA3B,EAA2C;MACvC,KAAK+S,eAAL,CAAqBvB,kBAArB,CAAwC,KAAKyB,OAA7C;IACH;EACJ;EACD;AACJ;AACA;AACA;AACA;AACA;AACA;;;EACII,MAAM,CAACC,SAAD,EAAY7D,CAAC,GAAG,CAAhB,EAAmBzC,MAAnB,EAA2B;IAC7B,IAAI,OAAOsG,SAAP,KAAqB,QAAzB,EAAmC;MAC/B,OAAO,KAAKP,eAAL,CAAqBtE,YAArB,CAAkC6E,SAAlC,EAA6C7D,CAA7C,EAAgD9J,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkB,KAAKgJ,YAAvB,EAAqC5B,MAArC,CAAhD,CAAP;IACH,CAFD,MAGK;MACD,OAAO,KAAK+F,eAAL,CAAqBtE,YAArB,CAAkC,CAAlC,EAAqC,CAArC,EAAwC9I,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkB,KAAKgJ,YAAvB,EAAqC0E,SAArC,CAAxC,CAAP;IACH;EACJ;;AAzHW;;AA2HhBZ,SAAS,CAAClW,IAAV,GAAiB,SAAS+W,iBAAT,CAA2B7W,CAA3B,EAA8B;EAAE,OAAO,KAAKA,CAAC,IAAIgW,SAAV,EAAqB5Z,MAAM,CAAC0a,iBAAP,CAAyB1a,MAAM,CAAC1B,UAAhC,CAArB,EAAkE0B,MAAM,CAAC0a,iBAAP,CAAyB1a,MAAM,CAACxB,MAAhC,CAAlE,EAA2GwB,MAAM,CAAC0a,iBAAP,CAAyBza,MAAM,CAACX,QAAhC,CAA3G,EAAsJU,MAAM,CAAC0a,iBAAP,CAAyBf,yBAAzB,EAAoD,CAApD,CAAtJ,EAA8M3Z,MAAM,CAAC0a,iBAAP,CAAyB/a,qBAAzB,EAAgD,CAAhD,CAA9M,CAAP;AAA2Q,CAA5T;;AACAia,SAAS,CAACnH,IAAV,GAAiB,aAAczS,MAAM,CAAC0S,iBAAP,CAAyB;EAAE1O,IAAI,EAAE4V,SAAR;EAAmBjH,SAAS,EAAE,CAAC,CAAC,EAAD,EAAK,YAAL,EAAmB,EAAnB,CAAD,EAAyB,CAAC,EAAD,EAAK,WAAL,EAAkB,EAAlB,CAAzB,CAA9B;EAA+EC,SAAS,EAAE,CAAC,CAAD,EAAI,YAAJ,CAA1F;EAA6G+H,QAAQ,EAAE,CAAvH;EAA0HC,YAAY,EAAE,SAASC,sBAAT,CAAgCva,EAAhC,EAAoCC,GAApC,EAAyC;IAAE,IAAID,EAAE,GAAG,CAAT,EAAY;MAC/ON,MAAM,CAAC8a,WAAP,CAAmB,sBAAnB,EAA2Cva,GAAG,CAACwa,SAA/C;IACH;EAAE,CAFiD;EAE/CC,MAAM,EAAE;IAAE1D,MAAM,EAAE,CAAC,iBAAD,EAAoB,QAApB,CAAV;IAAyCzW,QAAQ,EAAE,CAAC,mBAAD,EAAsB,UAAtB,CAAnD;IAAsFsZ,OAAO,EAAE,CAAC,kBAAD,EAAqB,SAArB,CAA/F;IAAgI/U,KAAK,EAAE,CAAC,gBAAD,EAAmB,OAAnB,CAAvI;IAAoK2V,SAAS,EAAE,CAAC,oBAAD,EAAuB,WAAvB,CAA/K;IAAoN9D,QAAQ,EAAE,CAAC,mBAAD,EAAsB,UAAtB,CAA9N;IAAiQD,SAAS,EAAE,CAAC,oBAAD,EAAuB,WAAvB;EAA5Q,CAFuC;EAE4QiE,QAAQ,EAAE,CAAC,WAAD;AAFtR,CAAzB,CAA/B;AAGA;;AACArB,SAAS,CAACxV,cAAV,GAA2B,MAAM,CAC7B;EAAEJ,IAAI,EAAE1F;AAAR,CAD6B,EAE7B;EAAE0F,IAAI,EAAExF;AAAR,CAF6B,EAG7B;EAAEwF,IAAI,EAAE1E;AAAR,CAH6B,EAI7B;EAAE0E,IAAI,EAAEQ,SAAR;EAAmBF,UAAU,EAAE,CAAC;IAAEN,IAAI,EAAEjG;EAAR,CAAD,EAAqB;IAAEiG,IAAI,EAAEhG,MAAR;IAAgBuG,IAAI,EAAE,CAACoV,yBAAD;EAAtB,CAArB;AAA/B,CAJ6B,EAK7B;EAAE3V,IAAI,EAAE8F,MAAR;EAAgBxF,UAAU,EAAE,CAAC;IAAEN,IAAI,EAAEjG;EAAR,CAAD,EAAqB;IAAEiG,IAAI,EAAEhG,MAAR;IAAgBuG,IAAI,EAAE,CAAC5E,qBAAD;EAAtB,CAArB;AAA5B,CAL6B,CAAjC;;AAOAia,SAAS,CAACsB,cAAV,GAA2B;EACvB9V,KAAK,EAAE,CAAC;IAAEpB,IAAI,EAAEzF,KAAR;IAAegG,IAAI,EAAE,CAAC,gBAAD;EAArB,CAAD,CADgB;EAEvBwW,SAAS,EAAE,CAAC;IAAE/W,IAAI,EAAEzF,KAAR;IAAegG,IAAI,EAAE,CAAC,oBAAD;EAArB,CAAD,CAFY;EAGvB0S,QAAQ,EAAE,CAAC;IAAEjT,IAAI,EAAEzF,KAAR;IAAegG,IAAI,EAAE,CAAC,mBAAD;EAArB,CAAD,CAHa;EAIvB+S,MAAM,EAAE,CAAC;IAAEtT,IAAI,EAAEzF,KAAR;IAAegG,IAAI,EAAE,CAAC,iBAAD;EAArB,CAAD,CAJe;EAKvByS,SAAS,EAAE,CAAC;IAAEhT,IAAI,EAAEzF,KAAR;IAAegG,IAAI,EAAE,CAAC,oBAAD;EAArB,CAAD,CALY;EAMvB1D,QAAQ,EAAE,CAAC;IAAEmD,IAAI,EAAEzF,KAAR;IAAegG,IAAI,EAAE,CAAC,mBAAD;EAArB,CAAD,CANa;EAOvB4V,OAAO,EAAE,CAAC;IAAEnW,IAAI,EAAEzF,KAAR;IAAegG,IAAI,EAAE,CAAC,kBAAD;EAArB,CAAD;AAPc,CAA3B;;AASA,CAAC,YAAY;EAAE,CAAC,OAAOE,SAAP,KAAqB,WAArB,IAAoCA,SAArC,KAAmDzE,MAAM,CAAC0E,iBAAP,CAAyBkV,SAAzB,EAAoC,CAAC;IAC/F5V,IAAI,EAAE3F,SADyF;IAE/FkG,IAAI,EAAE,CAAC;MACCsO,QAAQ,EAAE,2BADX;MAECoI,QAAQ,EAAE,WAFX;MAGCnI,IAAI,EAAE;QACF,SAAS,YADP;QAEF,gCAAgC;MAF9B;IAHP,CAAD;EAFyF,CAAD,CAApC,EAU1D,YAAY;IAAE,OAAO,CAAC;MAAE9O,IAAI,EAAEhE,MAAM,CAAC1B;IAAf,CAAD,EAA8B;MAAE0F,IAAI,EAAEhE,MAAM,CAACxB;IAAf,CAA9B,EAAuD;MAAEwF,IAAI,EAAE/D,MAAM,CAACX;IAAf,CAAvD,EAAkF;MAAE0E,IAAI,EAAEQ,SAAR;MAAmBF,UAAU,EAAE,CAAC;QAC/HN,IAAI,EAAEjG;MADyH,CAAD,EAE/H;QACCiG,IAAI,EAAEhG,MADP;QAECuG,IAAI,EAAE,CAACoV,yBAAD;MAFP,CAF+H;IAA/B,CAAlF,EAKX;MAAE3V,IAAI,EAAE8F,MAAR;MAAgBxF,UAAU,EAAE,CAAC;QAC/BN,IAAI,EAAEjG;MADyB,CAAD,EAE/B;QACCiG,IAAI,EAAEhG,MADP;QAECuG,IAAI,EAAE,CAAC5E,qBAAD;MAFP,CAF+B;IAA5B,CALW,CAAP;EAUF,CApB8C,EAoB5C;IAAE2X,MAAM,EAAE,CAAC;MACrBtT,IAAI,EAAEzF,KADe;MAErBgG,IAAI,EAAE,CAAC,iBAAD;IAFe,CAAD,CAAV;IAGV1D,QAAQ,EAAE,CAAC;MACXmD,IAAI,EAAEzF,KADK;MAEXgG,IAAI,EAAE,CAAC,mBAAD;IAFK,CAAD,CAHA;IAMV4V,OAAO,EAAE,CAAC;MACVnW,IAAI,EAAEzF,KADI;MAEVgG,IAAI,EAAE,CAAC,kBAAD;IAFI,CAAD,CANC;IASVa,KAAK,EAAE,CAAC;MACRpB,IAAI,EAAEzF,KADE;MAERgG,IAAI,EAAE,CAAC,gBAAD;IAFE,CAAD,CATG;IAYVwW,SAAS,EAAE,CAAC;MACZ/W,IAAI,EAAEzF,KADM;MAEZgG,IAAI,EAAE,CAAC,oBAAD;IAFM,CAAD,CAZD;IAeV0S,QAAQ,EAAE,CAAC;MACXjT,IAAI,EAAEzF,KADK;MAEXgG,IAAI,EAAE,CAAC,mBAAD;IAFK,CAAD,CAfA;IAkBVyS,SAAS,EAAE,CAAC;MACZhT,IAAI,EAAEzF,KADM;MAEZgG,IAAI,EAAE,CAAC,oBAAD;IAFM,CAAD;EAlBD,CApB4C,CAAnD;AAyCC,CAzChB;AA2CA;AACA;AACA;AACA;;;AACA,MAAM4W,eAAN,CAAsB;;AAEtBA,eAAe,CAACzX,IAAhB,GAAuB,SAAS0X,uBAAT,CAAiCxX,CAAjC,EAAoC;EAAE,OAAO,KAAKA,CAAC,IAAIuX,eAAV,GAAP;AAAsC,CAAnG;;AACAA,eAAe,CAACrX,IAAhB,GAAuB,aAAc9D,MAAM,CAAC+D,gBAAP,CAAwB;EAAEC,IAAI,EAAEmX;AAAR,CAAxB,CAArC;AACAA,eAAe,CAAClX,IAAhB,GAAuB,aAAcjE,MAAM,CAACkE,gBAAP,CAAwB;EAAEC,OAAO,EAAE,CAACvC,eAAD,EAAkBrC,cAAlB,EAAkCqC,eAAlC;AAAX,CAAxB,CAArC;;AACA,CAAC,YAAY;EAAE,CAAC,OAAO6C,SAAP,KAAqB,WAArB,IAAoCA,SAArC,KAAmDzE,MAAM,CAAC0E,iBAAP,CAAyByW,eAAzB,EAA0C,CAAC;IACrGnX,IAAI,EAAEnG,QAD+F;IAErG0G,IAAI,EAAE,CAAC;MACCJ,OAAO,EAAE,CAACvC,eAAD,EAAkBrC,cAAlB,CADV;MAECoF,OAAO,EAAE,CAACiV,SAAD,EAAYhY,eAAZ,CAFV;MAGC8R,YAAY,EAAE,CAACkG,SAAD;IAHf,CAAD;EAF+F,CAAD,CAA1C,EAO1D,IAP0D,EAOpD,IAPoD,CAAnD;AAOO,CAPtB;;AAQA,CAAC,YAAY;EAAE,CAAC,OAAOhV,SAAP,KAAqB,WAArB,IAAoCA,SAArC,KAAmD5E,MAAM,CAAC6E,kBAAP,CAA0BsW,eAA1B,EAA2C;IAAEzH,YAAY,EAAE,YAAY;MAAE,OAAO,CAACkG,SAAD,CAAP;IAAqB,CAAnD;IAAqDzV,OAAO,EAAE,YAAY;MAAE,OAAO,CAACvC,eAAD,EAAkBrC,cAAlB,CAAP;IAA2C,CAAvH;IAAyHoF,OAAO,EAAE,YAAY;MAAE,OAAO,CAACiV,SAAD,EAAYhY,eAAZ,CAAP;IAAsC;EAAtL,CAA3C,CAAnD;AAA0R,CAAzS;AAEA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,MAAMyZ,iBAAN,CAAwB;EACpB;AACJ;AACA;EACIxZ,WAAW,CAACyZ,cAAD,EAAiB;IACxB,KAAKA,cAAL,GAAsBA,cAAtB;IACA;AACR;AACA;;IACQ,KAAKnH,KAAL,GAAa,WAAb;IACA;AACR;AACA;;IACQ,KAAKtT,QAAL,GAAgB,KAAhB;EACH;;AAdmB;;AAgBxBwa,iBAAiB,CAAC3X,IAAlB,GAAyB,SAAS6X,yBAAT,CAAmC3X,CAAnC,EAAsC;EAAE,OAAO,KAAKA,CAAC,IAAIyX,iBAAV,EAA6Brb,MAAM,CAAC0a,iBAAP,CAAyB/a,qBAAzB,EAAgD,CAAhD,CAA7B,CAAP;AAA0F,CAA3J;;AACA0b,iBAAiB,CAACG,IAAlB,GAAyB,aAAcxb,MAAM,CAACyb,iBAAP,CAAyB;EAAEzX,IAAI,EAAEqX,iBAAR;EAA2B1I,SAAS,EAAE,CAAC,CAAC,qBAAD,CAAD,CAAtC;EAAiEC,SAAS,EAAE,CAAC,CAAD,EAAI,qBAAJ,CAA5E;EAAwG+H,QAAQ,EAAE,CAAlH;EAAqHC,YAAY,EAAE,SAASc,8BAAT,CAAwCpb,EAAxC,EAA4CC,GAA5C,EAAiD;IAAE,IAAID,EAAE,GAAG,CAAT,EAAY;MAC1PN,MAAM,CAAC8a,WAAP,CAAmB,mCAAnB,EAAwDva,GAAG,CAAC4T,KAAJ,KAAc,eAAtE,EAAuF,6BAAvF,EAAsH5T,GAAG,CAAC4T,KAAJ,KAAc,SAApI,EAA+I,8BAA/I,EAA+K5T,GAAG,CAACM,QAAnL,EAA6L,yBAA7L,EAAwNN,GAAG,CAAC+a,cAAJ,KAAuB,gBAA/O;IACH;EAAE,CAFyD;EAEvDN,MAAM,EAAE;IAAE7G,KAAK,EAAE,OAAT;IAAkBtT,QAAQ,EAAE;EAA5B,CAF+C;EAEL8a,KAAK,EAAE,CAFF;EAEKC,IAAI,EAAE,CAFX;EAEcC,QAAQ,EAAE,SAASC,0BAAT,CAAoCxb,EAApC,EAAwCC,GAAxC,EAA6C,CAAG,CAFxE;EAE0Ewb,MAAM,EAAE,CAAC,qgCAAD,CAFlF;EAE2lCC,aAAa,EAAE,CAF1mC;EAE6mCC,eAAe,EAAE;AAF9nC,CAAzB,CAAvC;AAGA;;AACAZ,iBAAiB,CAACjX,cAAlB,GAAmC,MAAM,CACrC;EAAEJ,IAAI,EAAE8F,MAAR;EAAgBxF,UAAU,EAAE,CAAC;IAAEN,IAAI,EAAEjG;EAAR,CAAD,EAAqB;IAAEiG,IAAI,EAAEhG,MAAR;IAAgBuG,IAAI,EAAE,CAAC5E,qBAAD;EAAtB,CAArB;AAA5B,CADqC,CAAzC;;AAGA0b,iBAAiB,CAACH,cAAlB,GAAmC;EAC/B/G,KAAK,EAAE,CAAC;IAAEnQ,IAAI,EAAEzF;EAAR,CAAD,CADwB;EAE/BsC,QAAQ,EAAE,CAAC;IAAEmD,IAAI,EAAEzF;EAAR,CAAD;AAFqB,CAAnC;;AAIA,CAAC,YAAY;EAAE,CAAC,OAAOkG,SAAP,KAAqB,WAArB,IAAoCA,SAArC,KAAmDzE,MAAM,CAAC0E,iBAAP,CAAyB2W,iBAAzB,EAA4C,CAAC;IACvGrX,IAAI,EAAEvF,SADiG;IAEvG8F,IAAI,EAAE,CAAC;MAAEyX,aAAa,EAAEtd,iBAAiB,CAACwd,IAAnC;MAAyCD,eAAe,EAAEtd,uBAAuB,CAACwd,MAAlF;MAA0FtJ,QAAQ,EAAE,qBAApG;MAA2HgJ,QAAQ,EAAE,EAArI;MAAyI/I,IAAI,EAAE;QAC1I,SAAS,qBADiI;QAE1I,6CAA6C,2BAF6F;QAG1I,uCAAuC,qBAHmG;QAI1I,wCAAwC,UAJkG;QAK1I,mCAAmC;MALuG,CAA/I;MAMIiJ,MAAM,EAAE,CAAC,qgCAAD;IANZ,CAAD;EAFiG,CAAD,CAA5C,EAS1D,YAAY;IAAE,OAAO,CAAC;MAAE/X,IAAI,EAAE8F,MAAR;MAAgBxF,UAAU,EAAE,CAAC;QAC3CN,IAAI,EAAEjG;MADqC,CAAD,EAE3C;QACCiG,IAAI,EAAEhG,MADP;QAECuG,IAAI,EAAE,CAAC5E,qBAAD;MAFP,CAF2C;IAA5B,CAAD,CAAP;EAKF,CAd8C,EAc5C;IAAEwU,KAAK,EAAE,CAAC;MACpBnQ,IAAI,EAAEzF;IADc,CAAD,CAAT;IAEVsC,QAAQ,EAAE,CAAC;MACXmD,IAAI,EAAEzF;IADK,CAAD;EAFA,CAd4C,CAAnD;AAkBC,CAlBhB;AAoBA;AACA;AACA;AACA;;;AACA,MAAM6d,uBAAN,CAA8B;;AAE9BA,uBAAuB,CAAC1Y,IAAxB,GAA+B,SAAS2Y,+BAAT,CAAyCzY,CAAzC,EAA4C;EAAE,OAAO,KAAKA,CAAC,IAAIwY,uBAAV,GAAP;AAA8C,CAA3H;;AACAA,uBAAuB,CAACtY,IAAxB,GAA+B,aAAc9D,MAAM,CAAC+D,gBAAP,CAAwB;EAAEC,IAAI,EAAEoY;AAAR,CAAxB,CAA7C;AACAA,uBAAuB,CAACnY,IAAxB,GAA+B,aAAcjE,MAAM,CAACkE,gBAAP,CAAwB,EAAxB,CAA7C;;AACA,CAAC,YAAY;EAAE,CAAC,OAAOO,SAAP,KAAqB,WAArB,IAAoCA,SAArC,KAAmDzE,MAAM,CAAC0E,iBAAP,CAAyB0X,uBAAzB,EAAkD,CAAC;IAC7GpY,IAAI,EAAEnG,QADuG;IAE7G0G,IAAI,EAAE,CAAC;MACCI,OAAO,EAAE,CAAC0W,iBAAD,CADV;MAEC3H,YAAY,EAAE,CAAC2H,iBAAD;IAFf,CAAD;EAFuG,CAAD,CAAlD,EAM1D,IAN0D,EAMpD,IANoD,CAAnD;AAMO,CANtB;;AAOA,CAAC,YAAY;EAAE,CAAC,OAAOzW,SAAP,KAAqB,WAArB,IAAoCA,SAArC,KAAmD5E,MAAM,CAAC6E,kBAAP,CAA0BuX,uBAA1B,EAAmD;IAAE1I,YAAY,EAAE,CAAC2H,iBAAD,CAAhB;IAAqC1W,OAAO,EAAE,CAAC0W,iBAAD;EAA9C,CAAnD,CAAnD;AAA6K,CAA5L;AAEA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;;;AACA,MAAMiB,eAAN,CAAsB;AAEtB;;;AACA,MAAMC,qBAAqB,GAAGzX,aAAa,CAACwX,eAAD,CAA3C,C,CACA;;AACA;;;AACA,IAAIE,wBAAwB,GAAG,CAA/B;AACA;AACA;AACA;;AACA,MAAMC,WAAN,SAA0BF,qBAA1B,CAAgD;EAC5C1a,WAAW,GAAG;IACV,MAAM,GAAG6a,SAAT;IACA;AACR;AACA;;IACQ,KAAKC,QAAL,GAAiB,sBAAqBH,wBAAwB,EAAG,EAAjE;EACH;;AAP2C;;AAShDC,WAAW,CAAC/Y,IAAZ,GAAmB,aAAc,YAAY;EAAE,IAAIkZ,wBAAJ;EAA8B,OAAO,SAASC,mBAAT,CAA6BjZ,CAA7B,EAAgC;IAAE,OAAO,CAACgZ,wBAAwB,KAAKA,wBAAwB,GAAG5c,MAAM,CAAC8c,qBAAP,CAA6BL,WAA7B,CAAhC,CAAzB,EAAqG7Y,CAAC,IAAI6Y,WAA1G,CAAP;EAAgI,CAAzK;AAA4K,CAAxN,EAAjC;;AACAA,WAAW,CAACjB,IAAZ,GAAmB,aAAcxb,MAAM,CAACyb,iBAAP,CAAyB;EAAEzX,IAAI,EAAEyY,WAAR;EAAqB9J,SAAS,EAAE,CAAC,CAAC,cAAD,CAAD,CAAhC;EAAoDC,SAAS,EAAE,CAAC,MAAD,EAAS,OAAT,EAAkB,CAAlB,EAAqB,cAArB,CAA/D;EAAqG+H,QAAQ,EAAE,CAA/G;EAAkHC,YAAY,EAAE,SAASmC,wBAAT,CAAkCzc,EAAlC,EAAsCC,GAAtC,EAA2C;IAAE,IAAID,EAAE,GAAG,CAAT,EAAY;MAC3ON,MAAM,CAACgd,WAAP,CAAmB,eAAnB,EAAoCzc,GAAG,CAACM,QAAJ,CAAaoc,QAAb,EAApC,EAA6D,iBAA7D,EAAgF1c,GAAG,CAACoc,QAApF;MACA3c,MAAM,CAAC8a,WAAP,CAAmB,uBAAnB,EAA4Cva,GAAG,CAACM,QAAhD;IACH;EAAE,CAHmD;EAGjDma,MAAM,EAAE;IAAEna,QAAQ,EAAE,UAAZ;IAAwBqc,KAAK,EAAE;EAA/B,CAHyC;EAGCjC,QAAQ,EAAE,CAAC,aAAD,CAHX;EAG4BkC,QAAQ,EAAE,CAACnd,MAAM,CAACod,0BAAR,CAHtC;EAG2EC,kBAAkB,EAAEjd,GAH/F;EAGoGub,KAAK,EAAE,CAH3G;EAG8GC,IAAI,EAAE,CAHpH;EAGuH0B,MAAM,EAAE,CAAC,CAAC,CAAD,EAAI,oBAAJ,EAA0B,CAA1B,EAA6B,IAA7B,CAAD,CAH/H;EAGqKzB,QAAQ,EAAE,SAAS0B,oBAAT,CAA8Bjd,EAA9B,EAAkCC,GAAlC,EAAuC;IAAE,IAAID,EAAE,GAAG,CAAT,EAAY;MACtRN,MAAM,CAACwd,eAAP,CAAuBrd,GAAvB;MACAH,MAAM,CAACyd,cAAP,CAAsB,CAAtB,EAAyB,OAAzB,EAAkC,CAAlC;MACAzd,MAAM,CAAC0d,MAAP,CAAc,CAAd;MACA1d,MAAM,CAAC2d,YAAP,CAAoB,CAApB;MACA3d,MAAM,CAAC4d,YAAP;MACA5d,MAAM,CAAC2d,YAAP,CAAoB,CAApB,EAAuB,CAAvB;IACH;;IAAC,IAAIrd,EAAE,GAAG,CAAT,EAAY;MACVN,MAAM,CAACW,UAAP,CAAkB,IAAlB,EAAwBJ,GAAG,CAACoc,QAA5B;MACA3c,MAAM,CAAC6d,SAAP,CAAiB,CAAjB;MACA7d,MAAM,CAAC8d,iBAAP,CAAyBvd,GAAG,CAAC2c,KAA7B;IACH;EAAE,CAdmD;EAcjDnB,MAAM,EAAE,CAAC,ikBAAD,CAdyC;EAc4hBC,aAAa,EAAE,CAd3iB;EAc8iBC,eAAe,EAAE;AAd/jB,CAAzB,CAAjC;AAeAQ,WAAW,CAACvB,cAAZ,GAA6B;EACzBgC,KAAK,EAAE,CAAC;IAAElZ,IAAI,EAAEzF;EAAR,CAAD;AADkB,CAA7B;;AAGA,CAAC,YAAY;EAAE,CAAC,OAAOkG,SAAP,KAAqB,WAArB,IAAoCA,SAArC,KAAmDzE,MAAM,CAAC0E,iBAAP,CAAyB+X,WAAzB,EAAsC,CAAC;IACjGzY,IAAI,EAAEvF,SAD2F;IAEjG8F,IAAI,EAAE,CAAC;MAAEsO,QAAQ,EAAE,cAAZ;MAA4BoI,QAAQ,EAAE,aAAtC;MAAqDY,QAAQ,EAAE,iKAA/D;MAAkOG,aAAa,EAAEtd,iBAAiB,CAACwd,IAAnQ;MAAyQD,eAAe,EAAEtd,uBAAuB,CAACwd,MAAlT;MAA0TnB,MAAM,EAAE,CAAC,UAAD,CAAlU;MAAgVlI,IAAI,EAAE;QACjV,SAAS,cADwU;QAEjV,QAAQ,OAFyU;QAGjV,iCAAiC,UAHgT;QAIjV,wBAAwB,qBAJyT;QAKjV,0BAA0B;MALuT,CAAtV;MAMIiJ,MAAM,EAAE,CAAC,ikBAAD;IANZ,CAAD;EAF2F,CAAD,CAAtC,EAS1D,IAT0D,EASpD;IAAEmB,KAAK,EAAE,CAAC;MACZlZ,IAAI,EAAEzF;IADM,CAAD;EAAT,CAToD,CAAnD;AAWC,CAXhB;AAaA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;;;AACA,IAAIwf,gBAAgB,GAAG,CAAvB;AACA;AACA;AACA;;AACA,MAAMC,wBAAN,CAA+B;EAC3B;AACJ;AACA;AACA;EACInc,WAAW,CAACoc,MAAD,EAASC,WAAW,GAAG,KAAvB,EAA8B;IACrC,KAAKD,MAAL,GAAcA,MAAd;IACA,KAAKC,WAAL,GAAmBA,WAAnB;EACH;;AAR0B;AAU/B;AACA;AACA;AACA;;;AACA,MAAMC,2BAA2B,GAAG,IAAIrgB,cAAJ,CAAmB,6BAAnB,CAApC;AACA;AACA;AACA;;AACA,MAAMsgB,SAAN,CAAgB;EACZ;AACJ;AACA;AACA;AACA;AACA;EACIvc,WAAW,CAACwc,QAAD,EAAWC,kBAAX,EAA+BC,OAA/B,EAAwCC,KAAxC,EAA+C;IACtD,KAAKH,QAAL,GAAgBA,QAAhB;IACA,KAAKC,kBAAL,GAA0BA,kBAA1B;IACA,KAAKC,OAAL,GAAeA,OAAf;IACA,KAAKC,KAAL,GAAaA,KAAb;IACA,KAAKC,SAAL,GAAiB,KAAjB;IACA,KAAKC,OAAL,GAAe,KAAf;IACA,KAAK1Z,SAAL,GAAiB,KAAjB;IACA,KAAK2Z,oBAAL,GAA4B,EAA5B;IACA;AACR;AACA;;IACQ,KAAKC,EAAL,GAAW,cAAab,gBAAgB,EAAG,EAA3C;IACA;AACR;AACA;IACQ;;IACA,KAAKc,iBAAL,GAAyB,IAAIhgB,YAAJ,EAAzB;IACA;AACR;AACA;;IACQ,KAAKigB,aAAL,GAAqB,IAAI1f,OAAJ,EAArB;EACH;EACD;AACJ;AACA;AACA;;;EACgB,IAAR2f,QAAQ,GAAG;IAAE,OAAO,KAAKR,OAAL,IAAgB,KAAKA,OAAL,CAAaQ,QAApC;EAA+C;EAChE;AACJ;AACA;AACA;;;EACgB,IAARne,QAAQ,GAAG;IAAE,OAAO,KAAK6d,SAAZ;EAAwB;EACzC;AACJ;AACA;AACA;;;EACgB,IAAR5d,QAAQ,GAAG;IAAE,OAAQ,KAAK2d,KAAL,IAAc,KAAKA,KAAL,CAAW3d,QAA1B,IAAuC,KAAKmE,SAAnD;EAA+D;EAChF;AACJ;AACA;AACA;;;EACgB,IAARnE,QAAQ,CAACoE,KAAD,EAAQ;IAAE,KAAKD,SAAL,GAAiB7F,qBAAqB,CAAC8F,KAAD,CAAtC;EAAgD;EACtE;AACJ;AACA;AACA;;;EACqB,IAAbW,aAAa,GAAG;IAAE,OAAO,KAAK2Y,OAAL,IAAgB,KAAKA,OAAL,CAAa3Y,aAApC;EAAoD;EAC1E;AACJ;AACA;AACA;AACA;AACA;AACA;;;EACc,IAANoZ,MAAM,GAAG;IACT,OAAO,KAAKN,OAAZ;EACH;EACD;AACJ;AACA;AACA;AACA;;;EACiB,IAATO,SAAS,GAAG;IACZ;IACA,OAAO,CAAC,KAAKC,eAAL,GAAuBC,WAAvB,IAAsC,EAAvC,EAA2CC,IAA3C,EAAP;EACH;EACD;AACJ;AACA;AACA;;;EACIC,MAAM,GAAG;IACL,IAAI,CAAC,KAAKZ,SAAV,EAAqB;MACjB,KAAKA,SAAL,GAAiB,IAAjB;;MACA,KAAKH,kBAAL,CAAwBgB,YAAxB;;MACA,KAAKC,yBAAL;IACH;EACJ;EACD;AACJ;AACA;AACA;;;EACIC,QAAQ,GAAG;IACP,IAAI,KAAKf,SAAT,EAAoB;MAChB,KAAKA,SAAL,GAAiB,KAAjB;;MACA,KAAKH,kBAAL,CAAwBgB,YAAxB;;MACA,KAAKC,yBAAL;IACH;EACJ;EACD;AACJ;AACA;AACA;;;EACIE,KAAK,GAAG;IACJ;IACA,MAAMxO,OAAO,GAAG,KAAKiO,eAAL,EAAhB;;IACA,IAAI,OAAOjO,OAAO,CAACwO,KAAf,KAAyB,UAA7B,EAAyC;MACrCxO,OAAO,CAACwO,KAAR;IACH;EACJ;EACD;AACJ;AACA;AACA;AACA;AACA;;;EACIC,eAAe,GAAG;IACd,IAAI,CAAC,KAAKhB,OAAV,EAAmB;MACf,KAAKA,OAAL,GAAe,IAAf;;MACA,KAAKJ,kBAAL,CAAwBgB,YAAxB;IACH;EACJ;EACD;AACJ;AACA;AACA;AACA;AACA;;;EACIK,iBAAiB,GAAG;IAChB,IAAI,KAAKjB,OAAT,EAAkB;MACd,KAAKA,OAAL,GAAe,KAAf;;MACA,KAAKJ,kBAAL,CAAwBgB,YAAxB;IACH;EACJ;EACD;AACJ;AACA;AACA;;;EACIM,QAAQ,GAAG;IACP,OAAO,KAAKX,SAAZ;EACH;EACD;AACJ;AACA;AACA;AACA;;;EACIY,cAAc,CAAChO,KAAD,EAAQ;IAClB,IAAI,CAACA,KAAK,CAACiO,OAAN,KAAkBlgB,KAAlB,IAA2BiS,KAAK,CAACiO,OAAN,KAAkBjgB,KAA9C,KAAwD,CAACC,cAAc,CAAC+R,KAAD,CAA3E,EAAoF;MAChF,KAAKkO,qBAAL,GADgF,CAEhF;;;MACAlO,KAAK,CAACmO,cAAN;IACH;EACJ;EACD;AACJ;AACA;AACA;AACA;;;EACID,qBAAqB,GAAG;IACpB,IAAI,CAAC,KAAKlf,QAAV,EAAoB;MAChB,KAAK4d,SAAL,GAAiB,KAAKM,QAAL,GAAgB,CAAC,KAAKN,SAAtB,GAAkC,IAAnD;;MACA,KAAKH,kBAAL,CAAwBgB,YAAxB;;MACA,KAAKC,yBAAL,CAA+B,IAA/B;IACH;EACJ;EACD;AACJ;AACA;AACA;AACA;AACA;AACA;;;EACIU,gBAAgB,GAAG;IACf,OAAO,KAAKrf,QAAL,KAAkB,KAAKme,QAAL,GAAgB,KAAhB,GAAwB,IAA1C,CAAP;EACH;EACD;AACJ;AACA;AACA;;;EACImB,YAAY,GAAG;IACX,OAAO,KAAKrf,QAAL,GAAgB,IAAhB,GAAuB,GAA9B;EACH;EACD;AACJ;AACA;AACA;;;EACIqe,eAAe,GAAG;IACd,OAAO,KAAKb,QAAL,CAAc7Y,aAArB;EACH;EACD;AACJ;AACA;;;EACI2a,kBAAkB,GAAG;IACjB;IACA;IACA;IACA;IACA;IACA,IAAI,KAAK1B,SAAT,EAAoB;MAChB;MACA,MAAMQ,SAAS,GAAG,KAAKA,SAAvB;;MACA,IAAIA,SAAS,KAAK,KAAKN,oBAAvB,EAA6C;QACzC,KAAKA,oBAAL,GAA4BM,SAA5B;;QACA,KAAKH,aAAL,CAAmB9X,IAAnB;MACH;IACJ;EACJ;EACD;AACJ;AACA;;;EACIsT,WAAW,GAAG;IACV,KAAKwE,aAAL,CAAmBnX,QAAnB;EACH;EACD;AACJ;AACA;AACA;AACA;AACA;;;EACI4X,yBAAyB,CAACrB,WAAW,GAAG,KAAf,EAAsB;IAC3C,KAAKW,iBAAL,CAAuBuB,IAAvB,CAA4B,IAAIpC,wBAAJ,CAA6B,IAA7B,EAAmCE,WAAnC,CAA5B;EACH;;AA1NW;;AA4NhBE,SAAS,CAAC1a,IAAV,GAAiB,SAAS2c,iBAAT,CAA2Bzc,CAA3B,EAA8B;EAAE,OAAO,KAAKA,CAAC,IAAIwa,SAAV,EAAqBpe,MAAM,CAAC0a,iBAAP,CAAyB1a,MAAM,CAAC1B,UAAhC,CAArB,EAAkE0B,MAAM,CAAC0a,iBAAP,CAAyB1a,MAAM,CAACpB,iBAAhC,CAAlE,EAAsHoB,MAAM,CAAC0a,iBAAP,CAAyByD,2BAAzB,EAAsD,CAAtD,CAAtH,EAAgLne,MAAM,CAAC0a,iBAAP,CAAyB+B,WAAzB,EAAsC,CAAtC,CAAhL,CAAP;AAAmO,CAApR;;AACA2B,SAAS,CAAC5C,IAAV,GAAiB,aAAcxb,MAAM,CAACyb,iBAAP,CAAyB;EAAEzX,IAAI,EAAEoa,SAAR;EAAmBzL,SAAS,EAAE,CAAC,CAAC,YAAD,CAAD,CAA9B;EAAgDC,SAAS,EAAE,CAAC,MAAD,EAAS,QAAT,EAAmB,CAAnB,EAAsB,YAAtB,CAA3D;EAAgG+H,QAAQ,EAAE,EAA1G;EAA8GC,YAAY,EAAE,SAAS0F,sBAAT,CAAgChgB,EAAhC,EAAoCC,GAApC,EAAyC;IAAE,IAAID,EAAE,GAAG,CAAT,EAAY;MACnON,MAAM,CAACugB,UAAP,CAAkB,OAAlB,EAA2B,SAASC,kCAAT,GAA8C;QAAE,OAAOjgB,GAAG,CAACwf,qBAAJ,EAAP;MAAqC,CAAhH,EAAkH,SAAlH,EAA6H,SAASU,oCAAT,CAA8CC,MAA9C,EAAsD;QAAE,OAAOngB,GAAG,CAACsf,cAAJ,CAAmBa,MAAnB,CAAP;MAAoC,CAAzN;IACH;;IAAC,IAAIpgB,EAAE,GAAG,CAAT,EAAY;MACVN,MAAM,CAAC2gB,cAAP,CAAsB,IAAtB,EAA4BpgB,GAAG,CAACqe,EAAhC;MACA5e,MAAM,CAACgd,WAAP,CAAmB,UAAnB,EAA+Bzc,GAAG,CAAC2f,YAAJ,EAA/B,EAAmD,eAAnD,EAAoE3f,GAAG,CAAC0f,gBAAJ,EAApE,EAA4F,eAA5F,EAA6G1f,GAAG,CAACM,QAAJ,CAAaoc,QAAb,EAA7G;MACAjd,MAAM,CAAC8a,WAAP,CAAmB,cAAnB,EAAmCva,GAAG,CAACK,QAAvC,EAAiD,qBAAjD,EAAwEL,GAAG,CAACwe,QAA5E,EAAsF,YAAtF,EAAoGxe,GAAG,CAACye,MAAxG,EAAgH,qBAAhH,EAAuIze,GAAG,CAACM,QAA3I;IACH;EAAE,CANiD;EAM/Cma,MAAM,EAAE;IAAE4D,EAAE,EAAE,IAAN;IAAY/d,QAAQ,EAAE,UAAtB;IAAkCoE,KAAK,EAAE;EAAzC,CANuC;EAMa2b,OAAO,EAAE;IAAE/B,iBAAiB,EAAE;EAArB,CANtB;EAMkE5D,QAAQ,EAAE,CAAC,WAAD,CAN5E;EAM2FoC,kBAAkB,EAAEvc,GAN/G;EAMoH6a,KAAK,EAAE,CAN3H;EAM8HC,IAAI,EAAE,CANpI;EAMuI0B,MAAM,EAAE,CAAC,CAAC,OAAD,EAAU,4BAAV,EAAwC,CAAxC,EAA2C,OAA3C,EAAoD,UAApD,EAAgE,CAAhE,EAAmE,MAAnE,CAAD,EAA6E,CAAC,CAAD,EAAI,iBAAJ,CAA7E,EAAqG,CAAC,YAAD,EAAe,EAAf,EAAmB,CAAnB,EAAsB,mBAAtB,EAA2C,CAA3C,EAA8C,kBAA9C,EAAkE,mBAAlE,CAArG,EAA6L,CAAC,CAAD,EAAI,4BAAJ,EAAkC,CAAlC,EAAqC,OAArC,EAA8C,UAA9C,CAA7L,CAN/I;EAMwYzB,QAAQ,EAAE,SAASgF,kBAAT,CAA4BvgB,EAA5B,EAAgCC,GAAhC,EAAqC;IAAE,IAAID,EAAE,GAAG,CAAT,EAAY;MACrfN,MAAM,CAACwd,eAAP;MACAxd,MAAM,CAAC8gB,UAAP,CAAkB,CAAlB,EAAqBzgB,wCAArB,EAA+D,CAA/D,EAAkE,CAAlE,EAAqE,qBAArE,EAA4F,CAA5F;MACAL,MAAM,CAACyd,cAAP,CAAsB,CAAtB,EAAyB,MAAzB,EAAiC,CAAjC;MACAzd,MAAM,CAAC2d,YAAP,CAAoB,CAApB;MACA3d,MAAM,CAAC4d,YAAP;MACA5d,MAAM,CAACQ,SAAP,CAAiB,CAAjB,EAAoB,KAApB,EAA2B,CAA3B;IACH;;IAAC,IAAIF,EAAE,GAAG,CAAT,EAAY;MACVN,MAAM,CAACW,UAAP,CAAkB,MAAlB,EAA0BJ,GAAG,CAACwe,QAA9B;MACA/e,MAAM,CAAC6d,SAAP,CAAiB,CAAjB;MACA7d,MAAM,CAACW,UAAP,CAAkB,kBAAlB,EAAsCJ,GAAG,CAAC2e,eAAJ,EAAtC,EAA6D,mBAA7D,EAAkF3e,GAAG,CAACM,QAAJ,IAAgBN,GAAG,CAACqF,aAAtG;IACH;EAAE,CAjBiD;EAiB/Cmb,YAAY,EAAE,CAACnH,SAAD,EAAY1Z,MAAM,CAAC8gB,IAAnB,EAAyB3F,iBAAzB,CAjBiC;EAiBYU,MAAM,EAAE,CAAC,03CAAD,CAjBpB;EAiBk5CC,aAAa,EAAE,CAjBj6C;EAiBo6CC,eAAe,EAAE;AAjBr7C,CAAzB,CAA/B;AAkBA;;AACAmC,SAAS,CAACha,cAAV,GAA2B,MAAM,CAC7B;EAAEJ,IAAI,EAAE1F;AAAR,CAD6B,EAE7B;EAAE0F,IAAI,EAAEpF;AAAR,CAF6B,EAG7B;EAAEoF,IAAI,EAAEQ,SAAR;EAAmBF,UAAU,EAAE,CAAC;IAAEN,IAAI,EAAEjG;EAAR,CAAD,EAAqB;IAAEiG,IAAI,EAAEhG,MAAR;IAAgBuG,IAAI,EAAE,CAAC4Z,2BAAD;EAAtB,CAArB;AAA/B,CAH6B,EAI7B;EAAEna,IAAI,EAAEyY,WAAR;EAAqBnY,UAAU,EAAE,CAAC;IAAEN,IAAI,EAAEjG;EAAR,CAAD;AAAjC,CAJ6B,CAAjC;;AAMAqgB,SAAS,CAAClD,cAAV,GAA2B;EACvBjW,KAAK,EAAE,CAAC;IAAEjB,IAAI,EAAEzF;EAAR,CAAD,CADgB;EAEvBqgB,EAAE,EAAE,CAAC;IAAE5a,IAAI,EAAEzF;EAAR,CAAD,CAFmB;EAGvBsC,QAAQ,EAAE,CAAC;IAAEmD,IAAI,EAAEzF;EAAR,CAAD,CAHa;EAIvBsgB,iBAAiB,EAAE,CAAC;IAAE7a,IAAI,EAAElF;EAAR,CAAD;AAJI,CAA3B;;AAMA,CAAC,YAAY;EAAE,CAAC,OAAO2F,SAAP,KAAqB,WAArB,IAAoCA,SAArC,KAAmDzE,MAAM,CAAC0E,iBAAP,CAAyB0Z,SAAzB,EAAoC,CAAC;IAC/Fpa,IAAI,EAAEvF,SADyF;IAE/F8F,IAAI,EAAE,CAAC;MAAEsO,QAAQ,EAAE,YAAZ;MAA0BoI,QAAQ,EAAE,WAApC;MAAiDnI,IAAI,EAAE;QAClD,QAAQ,QAD0C;QAElD,mBAAmB,gBAF+B;QAGlD,wBAAwB,UAH0B;QAIlD,+BAA+B,UAJmB;QAKlD,sBAAsB,QAL4B;QAMlD,QAAQ,IAN0C;QAOlD,wBAAwB,oBAP0B;QAQlD,wBAAwB,qBAR0B;QASlD,+BAA+B,UATmB;QAUlD,WAAW,yBAVuC;QAWlD,aAAa,wBAXqC;QAYlD,SAAS;MAZyC,CAAvD;MAaI+I,QAAQ,EAAE,gXAbd;MAagYG,aAAa,EAAEtd,iBAAiB,CAACwd,IAbja;MAauaD,eAAe,EAAEtd,uBAAuB,CAACwd,MAbhd;MAawdJ,MAAM,EAAE,CAAC,03CAAD;IAbhe,CAAD;EAFyF,CAAD,CAApC,EAgB1D,YAAY;IAAE,OAAO,CAAC;MAAE/X,IAAI,EAAEhE,MAAM,CAAC1B;IAAf,CAAD,EAA8B;MAAE0F,IAAI,EAAEhE,MAAM,CAACpB;IAAf,CAA9B,EAAkE;MAAEoF,IAAI,EAAEQ,SAAR;MAAmBF,UAAU,EAAE,CAAC;QAC/GN,IAAI,EAAEjG;MADyG,CAAD,EAE/G;QACCiG,IAAI,EAAEhG,MADP;QAECuG,IAAI,EAAE,CAAC4Z,2BAAD;MAFP,CAF+G;IAA/B,CAAlE,EAKX;MAAEna,IAAI,EAAEyY,WAAR;MAAqBnY,UAAU,EAAE,CAAC;QACpCN,IAAI,EAAEjG;MAD8B,CAAD;IAAjC,CALW,CAAP;EAOF,CAvB8C,EAuB5C;IAAE6gB,EAAE,EAAE,CAAC;MACjB5a,IAAI,EAAEzF;IADW,CAAD,CAAN;IAEVsgB,iBAAiB,EAAE,CAAC;MACpB7a,IAAI,EAAElF;IADc,CAAD,CAFT;IAIV+B,QAAQ,EAAE,CAAC;MACXmD,IAAI,EAAEzF;IADK,CAAD,CAJA;IAMV0G,KAAK,EAAE,CAAC;MACRjB,IAAI,EAAEzF;IADE,CAAD;EANG,CAvB4C,CAAnD;AA+BC,CA/BhB;AAgCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAAS0iB,6BAAT,CAAuCC,WAAvC,EAAoDhP,OAApD,EAA6DiP,YAA7D,EAA2E;EACvE,IAAIA,YAAY,CAAChX,MAAjB,EAAyB;IACrB;IACA,IAAIiX,YAAY,GAAGlP,OAAO,CAACmP,OAAR,EAAnB;IACA;;IACA,IAAIC,MAAM,GAAGH,YAAY,CAACE,OAAb,EAAb;IACA;;IACA,IAAIE,YAAY,GAAG,CAAnB;;IACA,KAAK,IAAI1X,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGqX,WAAW,GAAG,CAAlC,EAAqCrX,CAAC,EAAtC,EAA0C;MACtC,IAAIuX,YAAY,CAACvX,CAAD,CAAZ,CAAgB2U,KAAhB,IAAyB4C,YAAY,CAACvX,CAAD,CAAZ,CAAgB2U,KAAhB,KAA0B8C,MAAM,CAACC,YAAD,CAA7D,EAA6E;QACzEA,YAAY;MACf;IACJ;;IACD,OAAOA,YAAP;EACH;;EACD,OAAO,CAAP;AACH;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASC,wBAAT,CAAkCN,WAAlC,EAA+CO,YAA/C,EAA6DC,qBAA7D,EAAoFC,WAApF,EAAiG;EAC7F;EACA,MAAMC,YAAY,GAAGV,WAAW,GAAGO,YAAnC;;EACA,IAAIG,YAAY,GAAGF,qBAAnB,EAA0C;IACtC,OAAOE,YAAP;EACH;;EACD,IAAIA,YAAY,GAAGH,YAAf,GAA8BC,qBAAqB,GAAGC,WAA1D,EAAuE;IACnE,OAAO/U,IAAI,CAACtD,GAAL,CAAS,CAAT,EAAYsY,YAAY,GAAGD,WAAf,GAA6BF,YAAzC,CAAP;EACH;;EACD,OAAOC,qBAAP;AACH;AAED;AACA;AACA;AACA;;;AACA,MAAMG,eAAN,CAAsB;;AAEtBA,eAAe,CAACne,IAAhB,GAAuB,SAASoe,uBAAT,CAAiCle,CAAjC,EAAoC;EAAE,OAAO,KAAKA,CAAC,IAAIie,eAAV,GAAP;AAAsC,CAAnG;;AACAA,eAAe,CAAC/d,IAAhB,GAAuB,aAAc9D,MAAM,CAAC+D,gBAAP,CAAwB;EAAEC,IAAI,EAAE6d;AAAR,CAAxB,CAArC;AACAA,eAAe,CAAC5d,IAAhB,GAAuB,aAAcjE,MAAM,CAACkE,gBAAP,CAAwB;EAAEC,OAAO,EAAE,CAACgX,eAAD,EAAkBpb,YAAlB,EAAgCqc,uBAAhC;AAAX,CAAxB,CAArC;;AACA,CAAC,YAAY;EAAE,CAAC,OAAO3X,SAAP,KAAqB,WAArB,IAAoCA,SAArC,KAAmDzE,MAAM,CAAC0E,iBAAP,CAAyBmd,eAAzB,EAA0C,CAAC;IACrG7d,IAAI,EAAEnG,QAD+F;IAErG0G,IAAI,EAAE,CAAC;MACCJ,OAAO,EAAE,CAACgX,eAAD,EAAkBpb,YAAlB,EAAgCqc,uBAAhC,CADV;MAECzX,OAAO,EAAE,CAACyZ,SAAD,EAAY3B,WAAZ,CAFV;MAGC/I,YAAY,EAAE,CAAC0K,SAAD,EAAY3B,WAAZ;IAHf,CAAD;EAF+F,CAAD,CAA1C,EAO1D,IAP0D,EAOpD,IAPoD,CAAnD;AAOO,CAPtB;;AAQA,CAAC,YAAY;EAAE,CAAC,OAAO7X,SAAP,KAAqB,WAArB,IAAoCA,SAArC,KAAmD5E,MAAM,CAAC6E,kBAAP,CAA0Bgd,eAA1B,EAA2C;IAAEnO,YAAY,EAAE,YAAY;MAAE,OAAO,CAAC0K,SAAD,EAAY3B,WAAZ,CAAP;IAAkC,CAAhE;IAAkEtY,OAAO,EAAE,YAAY;MAAE,OAAO,CAACgX,eAAD,EAAkBpb,YAAlB,EAAgCqc,uBAAhC,CAAP;IAAkE,CAA3J;IAA6JzX,OAAO,EAAE,YAAY;MAAE,OAAO,CAACyZ,SAAD,EAAY3B,WAAZ,CAAP;IAAkC;EAAtN,CAA3C,CAAnD;AAA0T,CAAzU;AAEA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;;;AACA,MAAMsF,wBAAwB,GAAG,IAAIjkB,cAAJ,CAAmB,0BAAnB,CAAjC;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,MAAMkkB,GAAG,GAAG,CAAZ;AACA;;AACA,MAAMC,GAAG,GAAG,CAAZ;AACA;;AACA,MAAMC,GAAG,GAAG,CAAZ;AACA;;AACA,MAAMC,GAAG,GAAG,CAAZ;AACA;;AACA,MAAMC,GAAG,GAAG,CAAZ;AACA;;AACA,MAAMC,GAAG,GAAG,CAAZ;AACA;;AACA,MAAMC,GAAG,GAAG,CAAZ;AACA;;AACA,MAAMC,GAAG,GAAG,CAAZ;AACA;;AACA,MAAMC,GAAG,GAAG,CAAZ;AACA;;AACA,MAAMC,GAAG,GAAG,CAAZ;AACA;;AACA,MAAMC,GAAG,GAAG,EAAZ;AACA;;AACA,MAAMC,GAAG,GAAG,EAAZ;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,SAAS5hB,eAAT,EAA0BK,kBAA1B,EAA8CQ,eAA9C,EAA+DJ,sBAA/D,EAAuFsD,aAAvF,EAAsGI,UAAtG,EAAkHQ,kBAAlH,EAAsIG,aAAtI,EAAqJI,eAArJ,EAAsKgB,gBAAtK,EAAwLmI,gBAAxL,EAA0MK,mBAA1M,EAA+N5H,uBAA/N,EAAwPD,eAAxP,EAAyQE,wBAAzQ,EAAmSG,WAAnS,EAAgTsB,gBAAhT,EAAkUgB,iBAAlU,EAAqVwE,uBAArV,EAA8Wa,4BAA9W,EAA4YK,iBAA5Y,EAA+ZI,kBAA/Z,EAAmbO,aAAnb,EAAkcmC,QAAlc,EAA4cR,OAA5c,EAAqdgB,aAArd,EAAoeC,aAApe,EAAmfqO,eAAnf,EAAogBZ,6BAApgB,EAAmiBO,wBAAniB,EAA6jBxD,wBAA7jB,EAAulBG,2BAAvlB,EAAonBC,SAApnB,EAA+nB9B,eAA/nB,EAAgpBC,qBAAhpB,EAAuqBE,WAAvqB,EAAorBsF,wBAAprB,EAA8sB5G,eAA9sB,EAA+tBxB,yBAA/tB,EAA0vBC,SAA1vB,EAAqwBjG,WAArwB,EAAkxBK,SAAlxB,EAA6xBM,4BAA7xB,EAA2zBM,cAA3zB,EAA20BwH,uBAA30B,EAAo2Bf,iBAAp2B,EAAu3B2G,GAAv3B,EAA43BC,GAA53B,EAAi4BC,GAAj4B,EAAs4BC,GAAt4B,EAA24BC,GAA34B,EAAg5BC,GAAh5B,EAAq5BC,GAAr5B,EAA05BC,GAA15B,EAA+5BC,GAA/5B,EAAo6BC,GAAp6B,EAAy6BC,GAAz6B,EAA86BC,GAA96B,EAAm7BhhB,8BAA8B,IAAIihB,GAAr9B"},"metadata":{},"sourceType":"module"}