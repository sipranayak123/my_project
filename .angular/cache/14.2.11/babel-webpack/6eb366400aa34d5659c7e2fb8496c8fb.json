{"ast":null,"code":"/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { Directive, ElementRef, Inject, InjectionToken, NgZone, TemplateRef, ChangeDetectionStrategy, Component, ContentChild, Input, ViewChild, ViewContainerRef, ViewEncapsulation, ChangeDetectorRef, Output, EventEmitter, Optional, ComponentFactoryResolver, forwardRef, ContentChildren, Attribute, NgModule } from '@angular/core';\nimport { CdkPortal, TemplatePortal, CdkPortalOutlet, PortalHostDirective, PortalModule } from '@angular/cdk/portal';\nimport { mixinDisabled, mixinDisableRipple, mixinColor, MAT_RIPPLE_GLOBAL_OPTIONS, mixinTabIndex, RippleRenderer, MatCommonModule, MatRippleModule } from '@angular/material/core';\nimport { Subject, Subscription, merge, of, timer, fromEvent } from 'rxjs';\nimport { animate, state, style, transition, trigger } from '@angular/animations';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { startWith, distinctUntilChanged, takeUntil } from 'rxjs/operators';\nimport { coerceNumberProperty, coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { END, ENTER, HOME, SPACE, hasModifierKey } from '@angular/cdk/keycodes';\nimport { ViewportRuler } from '@angular/cdk/scrolling';\nimport { FocusKeyManager, FocusMonitor, A11yModule } from '@angular/cdk/a11y';\nimport { Platform, normalizePassiveListenerOptions } from '@angular/cdk/platform';\nimport { ObserversModule } from '@angular/cdk/observers';\nimport { CommonModule } from '@angular/common';\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Injection token for the MatInkBar's Positioner.\n * @type {?}\n */\n\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/bidi';\nimport * as ɵngcc2 from '@angular/cdk/scrolling';\nimport * as ɵngcc3 from '@angular/cdk/platform';\nimport * as ɵngcc4 from '@angular/material/core';\nimport * as ɵngcc5 from '@angular/cdk/observers';\nimport * as ɵngcc6 from '@angular/common';\nimport * as ɵngcc7 from '@angular/cdk/portal';\nimport * as ɵngcc8 from '@angular/cdk/a11y';\n\nfunction MatTab_ng_template_0_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵprojection(0);\n  }\n}\n\nconst _c0 = [\"*\"];\n\nfunction MatTabBody_ng_template_2_Template(rf, ctx) {}\n\nconst _c1 = function (a0) {\n  return {\n    animationDuration: a0\n  };\n};\n\nconst _c2 = function (a0, a1) {\n  return {\n    value: a0,\n    params: a1\n  };\n};\n\nconst _c3 = [\"tabListContainer\"];\nconst _c4 = [\"tabList\"];\nconst _c5 = [\"nextPaginator\"];\nconst _c6 = [\"previousPaginator\"];\nconst _c7 = [\"tabBodyWrapper\"];\nconst _c8 = [\"tabHeader\"];\n\nfunction MatTabGroup_div_2_ng_template_2_ng_template_0_Template(rf, ctx) {}\n\nfunction MatTabGroup_div_2_ng_template_2_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵtemplate(0, MatTabGroup_div_2_ng_template_2_ng_template_0_Template, 0, 0, \"ng-template\", 9);\n  }\n\n  if (rf & 2) {\n    const tab_r4 = ɵngcc0.ɵɵnextContext().$implicit;\n    ɵngcc0.ɵɵproperty(\"cdkPortalOutlet\", tab_r4.templateLabel);\n  }\n}\n\nfunction MatTabGroup_div_2_ng_template_3_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵtext(0);\n  }\n\n  if (rf & 2) {\n    const tab_r4 = ɵngcc0.ɵɵnextContext().$implicit;\n    ɵngcc0.ɵɵtextInterpolate(tab_r4.textLabel);\n  }\n}\n\nfunction MatTabGroup_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r12 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"div\", 6);\n    ɵngcc0.ɵɵlistener(\"click\", function MatTabGroup_div_2_Template_div_click_0_listener() {\n      const restoredCtx = ɵngcc0.ɵɵrestoreView(_r12);\n      const tab_r4 = restoredCtx.$implicit;\n      const i_r5 = restoredCtx.index;\n      const ctx_r11 = ɵngcc0.ɵɵnextContext();\n\n      const _r0 = ɵngcc0.ɵɵreference(1);\n\n      return ɵngcc0.ɵɵresetView(ctx_r11._handleClick(tab_r4, _r0, i_r5));\n    });\n    ɵngcc0.ɵɵelementStart(1, \"div\", 7);\n    ɵngcc0.ɵɵtemplate(2, MatTabGroup_div_2_ng_template_2_Template, 1, 1, \"ng-template\", 8);\n    ɵngcc0.ɵɵtemplate(3, MatTabGroup_div_2_ng_template_3_Template, 1, 1, \"ng-template\", 8);\n    ɵngcc0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const tab_r4 = ctx.$implicit;\n    const i_r5 = ctx.index;\n    const ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵclassProp(\"mat-tab-label-active\", ctx_r1.selectedIndex == i_r5);\n    ɵngcc0.ɵɵproperty(\"id\", ctx_r1._getTabLabelId(i_r5))(\"disabled\", tab_r4.disabled)(\"matRippleDisabled\", tab_r4.disabled || ctx_r1.disableRipple);\n    ɵngcc0.ɵɵattribute(\"tabIndex\", ctx_r1._getTabIndex(tab_r4, i_r5))(\"aria-posinset\", i_r5 + 1)(\"aria-setsize\", ctx_r1._tabs.length)(\"aria-controls\", ctx_r1._getTabContentId(i_r5))(\"aria-selected\", ctx_r1.selectedIndex == i_r5)(\"aria-label\", tab_r4.ariaLabel || null)(\"aria-labelledby\", !tab_r4.ariaLabel && tab_r4.ariaLabelledby ? tab_r4.ariaLabelledby : null);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"ngIf\", tab_r4.templateLabel);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", !tab_r4.templateLabel);\n  }\n}\n\nfunction MatTabGroup_mat_tab_body_5_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r16 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"mat-tab-body\", 10);\n    ɵngcc0.ɵɵlistener(\"_onCentered\", function MatTabGroup_mat_tab_body_5_Template_mat_tab_body__onCentered_0_listener() {\n      ɵngcc0.ɵɵrestoreView(_r16);\n      const ctx_r15 = ɵngcc0.ɵɵnextContext();\n      return ɵngcc0.ɵɵresetView(ctx_r15._removeTabBodyWrapperHeight());\n    })(\"_onCentering\", function MatTabGroup_mat_tab_body_5_Template_mat_tab_body__onCentering_0_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r16);\n      const ctx_r17 = ɵngcc0.ɵɵnextContext();\n      return ɵngcc0.ɵɵresetView(ctx_r17._setTabBodyWrapperHeight($event));\n    });\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const tab_r13 = ctx.$implicit;\n    const i_r14 = ctx.index;\n    const ctx_r3 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵclassProp(\"mat-tab-body-active\", ctx_r3.selectedIndex == i_r14);\n    ɵngcc0.ɵɵproperty(\"id\", ctx_r3._getTabContentId(i_r14))(\"content\", tab_r13.content)(\"position\", tab_r13.position)(\"origin\", tab_r13.origin)(\"animationDuration\", ctx_r3.animationDuration);\n    ɵngcc0.ɵɵattribute(\"aria-labelledby\", ctx_r3._getTabLabelId(i_r14));\n  }\n}\n\nconst _c9 = [\"mat-tab-nav-bar\", \"\"];\n\nconst _MAT_INK_BAR_POSITIONER = new InjectionToken('MatInkBarPositioner', {\n  providedIn: 'root',\n  factory: _MAT_INK_BAR_POSITIONER_FACTORY\n});\n/**\n * The default positioner function for the MatInkBar.\n * \\@docs-private\n * @return {?}\n */\n\n\nfunction _MAT_INK_BAR_POSITIONER_FACTORY() {\n  /** @type {?} */\n  const method = element => ({\n    left: element ? (element.offsetLeft || 0) + 'px' : '0',\n    width: element ? (element.offsetWidth || 0) + 'px' : '0'\n  });\n\n  return method;\n}\n/**\n * The ink-bar is used to display and animate the line underneath the current active tab label.\n * \\@docs-private\n */\n\n\nclass MatInkBar {\n  /**\n   * @param {?} _elementRef\n   * @param {?} _ngZone\n   * @param {?} _inkBarPositioner\n   */\n  constructor(_elementRef, _ngZone, _inkBarPositioner) {\n    this._elementRef = _elementRef;\n    this._ngZone = _ngZone;\n    this._inkBarPositioner = _inkBarPositioner;\n  }\n  /**\n   * Calculates the styles from the provided element in order to align the ink-bar to that element.\n   * Shows the ink bar if previously set as hidden.\n   * @param {?} element\n   * @return {?}\n   */\n\n\n  alignToElement(element) {\n    this.show();\n\n    if (typeof requestAnimationFrame !== 'undefined') {\n      this._ngZone.runOutsideAngular(() => {\n        requestAnimationFrame(() => this._setStyles(element));\n      });\n    } else {\n      this._setStyles(element);\n    }\n  }\n  /**\n   * Shows the ink bar.\n   * @return {?}\n   */\n\n\n  show() {\n    this._elementRef.nativeElement.style.visibility = 'visible';\n  }\n  /**\n   * Hides the ink bar.\n   * @return {?}\n   */\n\n\n  hide() {\n    this._elementRef.nativeElement.style.visibility = 'hidden';\n  }\n  /**\n   * Sets the proper styles to the ink bar element.\n   * @private\n   * @param {?} element\n   * @return {?}\n   */\n\n\n  _setStyles(element) {\n    /** @type {?} */\n    const positions = this._inkBarPositioner(element);\n    /** @type {?} */\n\n\n    const inkBar = this._elementRef.nativeElement;\n    inkBar.style.left = positions.left;\n    inkBar.style.width = positions.width;\n  }\n\n}\n\nMatInkBar.ɵfac = function MatInkBar_Factory(t) {\n  return new (t || MatInkBar)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(_MAT_INK_BAR_POSITIONER));\n};\n\nMatInkBar.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n  type: MatInkBar,\n  selectors: [[\"mat-ink-bar\"]],\n  hostAttrs: [1, \"mat-ink-bar\"]\n});\n/** @nocollapse */\n\nMatInkBar.ctorParameters = () => [{\n  type: ElementRef\n}, {\n  type: NgZone\n}, {\n  type: undefined,\n  decorators: [{\n    type: Inject,\n    args: [_MAT_INK_BAR_POSITIONER]\n  }]\n}];\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatInkBar, [{\n    type: Directive,\n    args: [{\n      selector: 'mat-ink-bar',\n      host: {\n        'class': 'mat-ink-bar'\n      }\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.ElementRef\n    }, {\n      type: ɵngcc0.NgZone\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [_MAT_INK_BAR_POSITIONER]\n      }]\n    }];\n  }, null);\n})();\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Decorates the `ng-template` tags and reads out the template from it.\n */\n\n\nclass MatTabContent {\n  /**\n   * @param {?} template\n   */\n  constructor(template) {\n    this.template = template;\n  }\n\n}\n\nMatTabContent.ɵfac = function MatTabContent_Factory(t) {\n  return new (t || MatTabContent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef));\n};\n\nMatTabContent.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n  type: MatTabContent,\n  selectors: [[\"\", \"matTabContent\", \"\"]]\n});\n/** @nocollapse */\n\nMatTabContent.ctorParameters = () => [{\n  type: TemplateRef\n}];\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatTabContent, [{\n    type: Directive,\n    args: [{\n      selector: '[matTabContent]'\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.TemplateRef\n    }];\n  }, null);\n})();\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Used to flag tab labels for use with the portal directive\n */\n\n\nclass MatTabLabel extends CdkPortal {}\n\nMatTabLabel.ɵfac = /*@__PURE__*/function () {\n  let ɵMatTabLabel_BaseFactory;\n  return function MatTabLabel_Factory(t) {\n    return (ɵMatTabLabel_BaseFactory || (ɵMatTabLabel_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatTabLabel)))(t || MatTabLabel);\n  };\n}();\n\nMatTabLabel.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n  type: MatTabLabel,\n  selectors: [[\"\", \"mat-tab-label\", \"\"], [\"\", \"matTabLabel\", \"\"]],\n  features: [ɵngcc0.ɵɵInheritDefinitionFeature]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatTabLabel, [{\n    type: Directive,\n    args: [{\n      selector: '[mat-tab-label], [matTabLabel]'\n    }]\n  }], null, null);\n})();\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// Boilerplate for applying mixins to MatTab.\n\n/**\n * \\@docs-private\n */\n\n\nclass MatTabBase {}\n/** @type {?} */\n\n\nconst _MatTabMixinBase = mixinDisabled(MatTabBase);\n\nclass MatTab extends _MatTabMixinBase {\n  /**\n   * @param {?} _viewContainerRef\n   */\n  constructor(_viewContainerRef) {\n    super();\n    this._viewContainerRef = _viewContainerRef;\n    /**\n     * Plain text label for the tab, used when there is no template label.\n     */\n\n    this.textLabel = '';\n    /**\n     * Portal that will be the hosted content of the tab\n     */\n\n    this._contentPortal = null;\n    /**\n     * Emits whenever the internal state of the tab changes.\n     */\n\n    this._stateChanges = new Subject();\n    /**\n     * The relatively indexed position where 0 represents the center, negative is left, and positive\n     * represents the right.\n     */\n\n    this.position = null;\n    /**\n     * The initial relatively index origin of the tab if it was created and selected after there\n     * was already a selected tab. Provides context of what position the tab should originate from.\n     */\n\n    this.origin = null;\n    /**\n     * Whether the tab is currently active.\n     */\n\n    this.isActive = false;\n  }\n  /**\n   * \\@docs-private\n   * @return {?}\n   */\n\n\n  get content() {\n    return this._contentPortal;\n  }\n  /**\n   * @param {?} changes\n   * @return {?}\n   */\n\n\n  ngOnChanges(changes) {\n    if (changes.hasOwnProperty('textLabel') || changes.hasOwnProperty('disabled')) {\n      this._stateChanges.next();\n    }\n  }\n  /**\n   * @return {?}\n   */\n\n\n  ngOnDestroy() {\n    this._stateChanges.complete();\n  }\n  /**\n   * @return {?}\n   */\n\n\n  ngOnInit() {\n    this._contentPortal = new TemplatePortal(this._explicitContent || this._implicitContent, this._viewContainerRef);\n  }\n\n}\n\nMatTab.ɵfac = function MatTab_Factory(t) {\n  return new (t || MatTab)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef));\n};\n\nMatTab.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n  type: MatTab,\n  selectors: [[\"mat-tab\"]],\n  contentQueries: function MatTab_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵcontentQuery(dirIndex, MatTabLabel, 5);\n      ɵngcc0.ɵɵcontentQuery(dirIndex, MatTabContent, 5, TemplateRef);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.templateLabel = _t.first);\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._explicitContent = _t.first);\n    }\n  },\n  viewQuery: function MatTab_Query(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵviewQuery(TemplateRef, 5);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._implicitContent = _t.first);\n    }\n  },\n  inputs: {\n    disabled: \"disabled\",\n    textLabel: [\"label\", \"textLabel\"],\n    ariaLabel: [\"aria-label\", \"ariaLabel\"],\n    ariaLabelledby: [\"aria-labelledby\", \"ariaLabelledby\"]\n  },\n  exportAs: [\"matTab\"],\n  features: [ɵngcc0.ɵɵInheritDefinitionFeature, ɵngcc0.ɵɵNgOnChangesFeature],\n  ngContentSelectors: _c0,\n  decls: 1,\n  vars: 0,\n  template: function MatTab_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵprojectionDef();\n      ɵngcc0.ɵɵtemplate(0, MatTab_ng_template_0_Template, 1, 0, \"ng-template\");\n    }\n  },\n  encapsulation: 2,\n  changeDetection: 0\n});\n/** @nocollapse */\n\nMatTab.ctorParameters = () => [{\n  type: ViewContainerRef\n}];\n\nMatTab.propDecorators = {\n  templateLabel: [{\n    type: ContentChild,\n    args: [MatTabLabel]\n  }],\n  _explicitContent: [{\n    type: ContentChild,\n    args: [MatTabContent, {\n      read: TemplateRef\n    }]\n  }],\n  _implicitContent: [{\n    type: ViewChild,\n    args: [TemplateRef]\n  }],\n  textLabel: [{\n    type: Input,\n    args: ['label']\n  }],\n  ariaLabel: [{\n    type: Input,\n    args: ['aria-label']\n  }],\n  ariaLabelledby: [{\n    type: Input,\n    args: ['aria-labelledby']\n  }]\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatTab, [{\n    type: Component,\n    args: [{\n      selector: 'mat-tab',\n      template: \"<ng-template><ng-content></ng-content></ng-template>\",\n      inputs: ['disabled'],\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      exportAs: 'matTab'\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.ViewContainerRef\n    }];\n  }, {\n    textLabel: [{\n      type: Input,\n      args: ['label']\n    }],\n    templateLabel: [{\n      type: ContentChild,\n      args: [MatTabLabel]\n    }],\n    _explicitContent: [{\n      type: ContentChild,\n      args: [MatTabContent, {\n        read: TemplateRef\n      }]\n    }],\n    _implicitContent: [{\n      type: ViewChild,\n      args: [TemplateRef]\n    }],\n    ariaLabel: [{\n      type: Input,\n      args: ['aria-label']\n    }],\n    ariaLabelledby: [{\n      type: Input,\n      args: ['aria-labelledby']\n    }]\n  });\n})();\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Animations used by the Material tabs.\n * \\@docs-private\n * @type {?}\n */\n\n\nconst matTabsAnimations = {\n  /**\n   * Animation translates a tab along the X axis.\n   */\n  translateTab: trigger('translateTab', [// Note: transitions to `none` instead of 0, because some browsers might blur the content.\n  state('center, void, left-origin-center, right-origin-center', style({\n    transform: 'none'\n  })), // If the tab is either on the left or right, we additionally add a `min-height` of 1px\n  // in order to ensure that the element has a height before its state changes. This is\n  // necessary because Chrome does seem to skip the transition in RTL mode if the element does\n  // not have a static height and is not rendered. See related issue: #9465\n  state('left', style({\n    transform: 'translate3d(-100%, 0, 0)',\n    minHeight: '1px'\n  })), state('right', style({\n    transform: 'translate3d(100%, 0, 0)',\n    minHeight: '1px'\n  })), transition('* => left, * => right, left => center, right => center', animate('{{animationDuration}} cubic-bezier(0.35, 0, 0.25, 1)')), transition('void => left-origin-center', [style({\n    transform: 'translate3d(-100%, 0, 0)'\n  }), animate('{{animationDuration}} cubic-bezier(0.35, 0, 0.25, 1)')]), transition('void => right-origin-center', [style({\n    transform: 'translate3d(100%, 0, 0)'\n  }), animate('{{animationDuration}} cubic-bezier(0.35, 0, 0.25, 1)')])])\n};\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * The portal host directive for the contents of the tab.\n * \\@docs-private\n */\n\nclass MatTabBodyPortal extends CdkPortalOutlet {\n  /**\n   * @param {?} componentFactoryResolver\n   * @param {?} viewContainerRef\n   * @param {?} _host\n   */\n  constructor(componentFactoryResolver, viewContainerRef, _host) {\n    super(componentFactoryResolver, viewContainerRef);\n    this._host = _host;\n    /**\n     * Subscription to events for when the tab body begins centering.\n     */\n\n    this._centeringSub = Subscription.EMPTY;\n    /**\n     * Subscription to events for when the tab body finishes leaving from center position.\n     */\n\n    this._leavingSub = Subscription.EMPTY;\n  }\n  /**\n   * Set initial visibility or set up subscription for changing visibility.\n   * @return {?}\n   */\n\n\n  ngOnInit() {\n    super.ngOnInit();\n    this._centeringSub = this._host._beforeCentering.pipe(startWith(this._host._isCenterPosition(this._host._position))).subscribe(isCentering => {\n      if (isCentering && !this.hasAttached()) {\n        this.attach(this._host._content);\n      }\n    });\n    this._leavingSub = this._host._afterLeavingCenter.subscribe(() => {\n      this.detach();\n    });\n  }\n  /**\n   * Clean up centering subscription.\n   * @return {?}\n   */\n\n\n  ngOnDestroy() {\n    super.ngOnDestroy();\n\n    this._centeringSub.unsubscribe();\n\n    this._leavingSub.unsubscribe();\n  }\n\n}\n\nMatTabBodyPortal.ɵfac = function MatTabBodyPortal_Factory(t) {\n  return new (t || MatTabBodyPortal)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ComponentFactoryResolver), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(forwardRef(() => MatTabBody)));\n};\n\nMatTabBodyPortal.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n  type: MatTabBodyPortal,\n  selectors: [[\"\", \"matTabBodyHost\", \"\"]],\n  features: [ɵngcc0.ɵɵInheritDefinitionFeature]\n});\n/** @nocollapse */\n\nMatTabBodyPortal.ctorParameters = () => [{\n  type: ComponentFactoryResolver\n}, {\n  type: ViewContainerRef\n}, {\n  type: MatTabBody,\n  decorators: [{\n    type: Inject,\n    args: [forwardRef(() => MatTabBody)]\n  }]\n}];\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatTabBodyPortal, [{\n    type: Directive,\n    args: [{\n      selector: '[matTabBodyHost]'\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.ComponentFactoryResolver\n    }, {\n      type: ɵngcc0.ViewContainerRef\n    }, {\n      type: MatTabBody,\n      decorators: [{\n        type: Inject,\n        args: [forwardRef(() => MatTabBody)]\n      }]\n    }];\n  }, null);\n})();\n/**\n * Wrapper for the contents of a tab.\n * \\@docs-private\n */\n\n\nclass MatTabBody {\n  /**\n   * @param {?} _elementRef\n   * @param {?} _dir\n   * @param {?=} changeDetectorRef\n   */\n  constructor(_elementRef, _dir,\n  /**\n   * @breaking-change 8.0.0 changeDetectorRef to be made required.\n   */\n  changeDetectorRef) {\n    this._elementRef = _elementRef;\n    this._dir = _dir;\n    /**\n     * Subscription to the directionality change observable.\n     */\n\n    this._dirChangeSubscription = Subscription.EMPTY;\n    /**\n     * Emits when an animation on the tab is complete.\n     */\n\n    this._translateTabComplete = new Subject();\n    /**\n     * Event emitted when the tab begins to animate towards the center as the active tab.\n     */\n\n    this._onCentering = new EventEmitter();\n    /**\n     * Event emitted before the centering of the tab begins.\n     */\n\n    this._beforeCentering = new EventEmitter();\n    /**\n     * Event emitted before the centering of the tab begins.\n     */\n\n    this._afterLeavingCenter = new EventEmitter();\n    /**\n     * Event emitted when the tab completes its animation towards the center.\n     */\n\n    this._onCentered = new EventEmitter(true); // Note that the default value will always be overwritten by `MatTabBody`, but we need one\n    // anyway to prevent the animations module from throwing an error if the body is used on its own.\n\n    /**\n     * Duration for the tab's animation.\n     */\n\n    this.animationDuration = '500ms';\n\n    if (this._dir && changeDetectorRef) {\n      this._dirChangeSubscription = this._dir.change.subscribe(dir => {\n        this._computePositionAnimationState(dir);\n\n        changeDetectorRef.markForCheck();\n      });\n    } // Ensure that we get unique animation events, because the `.done` callback can get\n    // invoked twice in some browsers. See https://github.com/angular/angular/issues/24084.\n\n\n    this._translateTabComplete.pipe(distinctUntilChanged((x, y) => {\n      return x.fromState === y.fromState && x.toState === y.toState;\n    })).subscribe(event => {\n      // If the transition to the center is complete, emit an event.\n      if (this._isCenterPosition(event.toState) && this._isCenterPosition(this._position)) {\n        this._onCentered.emit();\n      }\n\n      if (this._isCenterPosition(event.fromState) && !this._isCenterPosition(this._position)) {\n        this._afterLeavingCenter.emit();\n      }\n    });\n  }\n  /**\n   * The shifted index position of the tab body, where zero represents the active center tab.\n   * @param {?} position\n   * @return {?}\n   */\n\n\n  set position(position) {\n    this._positionIndex = position;\n\n    this._computePositionAnimationState();\n  }\n  /**\n   * After initialized, check if the content is centered and has an origin. If so, set the\n   * special position states that transition the tab from the left or right before centering.\n   * @return {?}\n   */\n\n\n  ngOnInit() {\n    if (this._position == 'center' && this.origin != null) {\n      this._position = this._computePositionFromOrigin();\n    }\n  }\n  /**\n   * @return {?}\n   */\n\n\n  ngOnDestroy() {\n    this._dirChangeSubscription.unsubscribe();\n\n    this._translateTabComplete.complete();\n  }\n  /**\n   * @param {?} event\n   * @return {?}\n   */\n\n\n  _onTranslateTabStarted(event) {\n    /** @type {?} */\n    const isCentering = this._isCenterPosition(event.toState);\n\n    this._beforeCentering.emit(isCentering);\n\n    if (isCentering) {\n      this._onCentering.emit(this._elementRef.nativeElement.clientHeight);\n    }\n  }\n  /**\n   * The text direction of the containing app.\n   * @return {?}\n   */\n\n\n  _getLayoutDirection() {\n    return this._dir && this._dir.value === 'rtl' ? 'rtl' : 'ltr';\n  }\n  /**\n   * Whether the provided position state is considered center, regardless of origin.\n   * @param {?} position\n   * @return {?}\n   */\n\n\n  _isCenterPosition(position) {\n    return position == 'center' || position == 'left-origin-center' || position == 'right-origin-center';\n  }\n  /**\n   * Computes the position state that will be used for the tab-body animation trigger.\n   * @private\n   * @param {?=} dir\n   * @return {?}\n   */\n\n\n  _computePositionAnimationState(dir = this._getLayoutDirection()) {\n    if (this._positionIndex < 0) {\n      this._position = dir == 'ltr' ? 'left' : 'right';\n    } else if (this._positionIndex > 0) {\n      this._position = dir == 'ltr' ? 'right' : 'left';\n    } else {\n      this._position = 'center';\n    }\n  }\n  /**\n   * Computes the position state based on the specified origin position. This is used if the\n   * tab is becoming visible immediately after creation.\n   * @private\n   * @return {?}\n   */\n\n\n  _computePositionFromOrigin() {\n    /** @type {?} */\n    const dir = this._getLayoutDirection();\n\n    if (dir == 'ltr' && this.origin <= 0 || dir == 'rtl' && this.origin > 0) {\n      return 'left-origin-center';\n    }\n\n    return 'right-origin-center';\n  }\n\n}\n\nMatTabBody.ɵfac = function MatTabBody_Factory(t) {\n  return new (t || MatTabBody)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef));\n};\n\nMatTabBody.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n  type: MatTabBody,\n  selectors: [[\"mat-tab-body\"]],\n  viewQuery: function MatTabBody_Query(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵviewQuery(PortalHostDirective, 5);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._portalHost = _t.first);\n    }\n  },\n  hostAttrs: [1, \"mat-tab-body\"],\n  inputs: {\n    animationDuration: \"animationDuration\",\n    position: \"position\",\n    _content: [\"content\", \"_content\"],\n    origin: \"origin\"\n  },\n  outputs: {\n    _onCentering: \"_onCentering\",\n    _beforeCentering: \"_beforeCentering\",\n    _afterLeavingCenter: \"_afterLeavingCenter\",\n    _onCentered: \"_onCentered\"\n  },\n  decls: 3,\n  vars: 6,\n  consts: [[1, \"mat-tab-body-content\"], [\"content\", \"\"], [\"matTabBodyHost\", \"\"]],\n  template: function MatTabBody_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵelementStart(0, \"div\", 0, 1);\n      ɵngcc0.ɵɵlistener(\"@translateTab.start\", function MatTabBody_Template_div_animation_translateTab_start_0_listener($event) {\n        return ctx._onTranslateTabStarted($event);\n      })(\"@translateTab.done\", function MatTabBody_Template_div_animation_translateTab_done_0_listener($event) {\n        return ctx._translateTabComplete.next($event);\n      });\n      ɵngcc0.ɵɵtemplate(2, MatTabBody_ng_template_2_Template, 0, 0, \"ng-template\", 2);\n      ɵngcc0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵproperty(\"@translateTab\", ɵngcc0.ɵɵpureFunction2(3, _c2, ctx._position, ɵngcc0.ɵɵpureFunction1(1, _c1, ctx.animationDuration)));\n    }\n  },\n  dependencies: [MatTabBodyPortal],\n  styles: [\".mat-tab-body-content{height:100%;overflow:auto}.mat-tab-group-dynamic-height .mat-tab-body-content{overflow:hidden}\"],\n  encapsulation: 2,\n  data: {\n    animation: [matTabsAnimations.translateTab]\n  },\n  changeDetection: 0\n});\n/** @nocollapse */\n\nMatTabBody.ctorParameters = () => [{\n  type: ElementRef\n}, {\n  type: Directionality,\n  decorators: [{\n    type: Optional\n  }]\n}, {\n  type: ChangeDetectorRef\n}];\n\nMatTabBody.propDecorators = {\n  _onCentering: [{\n    type: Output\n  }],\n  _beforeCentering: [{\n    type: Output\n  }],\n  _afterLeavingCenter: [{\n    type: Output\n  }],\n  _onCentered: [{\n    type: Output\n  }],\n  _portalHost: [{\n    type: ViewChild,\n    args: [PortalHostDirective]\n  }],\n  _content: [{\n    type: Input,\n    args: ['content']\n  }],\n  origin: [{\n    type: Input\n  }],\n  animationDuration: [{\n    type: Input\n  }],\n  position: [{\n    type: Input\n  }]\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatTabBody, [{\n    type: Component,\n    args: [{\n      selector: 'mat-tab-body',\n      template: \"<div class=\\\"mat-tab-body-content\\\" #content [@translateTab]=\\\"{ value: _position, params: {animationDuration: animationDuration} }\\\" (@translateTab.start)=\\\"_onTranslateTabStarted($event)\\\" (@translateTab.done)=\\\"_translateTabComplete.next($event)\\\"><ng-template matTabBodyHost></ng-template></div>\",\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      animations: [matTabsAnimations.translateTab],\n      host: {\n        'class': 'mat-tab-body'\n      },\n      styles: [\".mat-tab-body-content{height:100%;overflow:auto}.mat-tab-group-dynamic-height .mat-tab-body-content{overflow:hidden}\"]\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.ElementRef\n    }, {\n      type: ɵngcc1.Directionality,\n      decorators: [{\n        type: Optional\n      }]\n    }, {\n      type: ɵngcc0.ChangeDetectorRef\n    }];\n  }, {\n    _onCentering: [{\n      type: Output\n    }],\n    _beforeCentering: [{\n      type: Output\n    }],\n    _afterLeavingCenter: [{\n      type: Output\n    }],\n    _onCentered: [{\n      type: Output\n    }],\n    animationDuration: [{\n      type: Input\n    }],\n    position: [{\n      type: Input\n    }],\n    _portalHost: [{\n      type: ViewChild,\n      args: [PortalHostDirective]\n    }],\n    _content: [{\n      type: Input,\n      args: ['content']\n    }],\n    origin: [{\n      type: Input\n    }]\n  });\n})();\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// Boilerplate for applying mixins to MatTabLabelWrapper.\n\n/**\n * \\@docs-private\n */\n\n\nclass MatTabLabelWrapperBase {}\n/** @type {?} */\n\n\nconst _MatTabLabelWrapperMixinBase = mixinDisabled(MatTabLabelWrapperBase);\n/**\n * Used in the `mat-tab-group` view to display tab labels.\n * \\@docs-private\n */\n\n\nclass MatTabLabelWrapper extends _MatTabLabelWrapperMixinBase {\n  /**\n   * @param {?} elementRef\n   */\n  constructor(elementRef) {\n    super();\n    this.elementRef = elementRef;\n  }\n  /**\n   * Sets focus on the wrapper element\n   * @return {?}\n   */\n\n\n  focus() {\n    this.elementRef.nativeElement.focus();\n  }\n  /**\n   * @return {?}\n   */\n\n\n  getOffsetLeft() {\n    return this.elementRef.nativeElement.offsetLeft;\n  }\n  /**\n   * @return {?}\n   */\n\n\n  getOffsetWidth() {\n    return this.elementRef.nativeElement.offsetWidth;\n  }\n\n}\n\nMatTabLabelWrapper.ɵfac = function MatTabLabelWrapper_Factory(t) {\n  return new (t || MatTabLabelWrapper)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef));\n};\n\nMatTabLabelWrapper.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n  type: MatTabLabelWrapper,\n  selectors: [[\"\", \"matTabLabelWrapper\", \"\"]],\n  hostVars: 3,\n  hostBindings: function MatTabLabelWrapper_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      ɵngcc0.ɵɵattribute(\"aria-disabled\", !!ctx.disabled);\n      ɵngcc0.ɵɵclassProp(\"mat-tab-disabled\", ctx.disabled);\n    }\n  },\n  inputs: {\n    disabled: \"disabled\"\n  },\n  features: [ɵngcc0.ɵɵInheritDefinitionFeature]\n});\n/** @nocollapse */\n\nMatTabLabelWrapper.ctorParameters = () => [{\n  type: ElementRef\n}];\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatTabLabelWrapper, [{\n    type: Directive,\n    args: [{\n      selector: '[matTabLabelWrapper]',\n      inputs: ['disabled'],\n      host: {\n        '[class.mat-tab-disabled]': 'disabled',\n        '[attr.aria-disabled]': '!!disabled'\n      }\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.ElementRef\n    }];\n  }, null);\n})();\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Config used to bind passive event listeners\n * @type {?}\n */\n\n\nconst passiveEventListenerOptions =\n/** @type {?} */\nnormalizePassiveListenerOptions({\n  passive: true\n});\n/**\n * The distance in pixels that will be overshot when scrolling a tab label into view. This helps\n * provide a small affordance to the label next to it.\n * @type {?}\n */\n\nconst EXAGGERATED_OVERSCROLL = 60;\n/**\n * Amount of milliseconds to wait before starting to scroll the header automatically.\n * Set a little conservatively in order to handle fake events dispatched on touch devices.\n * @type {?}\n */\n\nconst HEADER_SCROLL_DELAY = 650;\n/**\n * Interval in milliseconds at which to scroll the header\n * while the user is holding their pointer.\n * @type {?}\n */\n\nconst HEADER_SCROLL_INTERVAL = 100; // Boilerplate for applying mixins to MatTabHeader.\n\n/**\n * \\@docs-private\n */\n\nclass MatTabHeaderBase {}\n/** @type {?} */\n\n\nconst _MatTabHeaderMixinBase = mixinDisableRipple(MatTabHeaderBase);\n/**\n * The header of the tab group which displays a list of all the tabs in the tab group. Includes\n * an ink bar that follows the currently selected tab. When the tabs list's width exceeds the\n * width of the header container, then arrows will be displayed to allow the user to scroll\n * left and right across the header.\n * \\@docs-private\n */\n\n\nclass MatTabHeader extends _MatTabHeaderMixinBase {\n  /**\n   * @param {?} _elementRef\n   * @param {?} _changeDetectorRef\n   * @param {?} _viewportRuler\n   * @param {?} _dir\n   * @param {?=} _ngZone\n   * @param {?=} _platform\n   */\n  constructor(_elementRef, _changeDetectorRef, _viewportRuler, _dir, _ngZone, _platform) {\n    super();\n    this._elementRef = _elementRef;\n    this._changeDetectorRef = _changeDetectorRef;\n    this._viewportRuler = _viewportRuler;\n    this._dir = _dir;\n    this._ngZone = _ngZone;\n    this._platform = _platform;\n    /**\n     * The distance in pixels that the tab labels should be translated to the left.\n     */\n\n    this._scrollDistance = 0;\n    /**\n     * Whether the header should scroll to the selected index after the view has been checked.\n     */\n\n    this._selectedIndexChanged = false;\n    /**\n     * Emits when the component is destroyed.\n     */\n\n    this._destroyed = new Subject();\n    /**\n     * Whether the controls for pagination should be displayed\n     */\n\n    this._showPaginationControls = false;\n    /**\n     * Whether the tab list can be scrolled more towards the end of the tab label list.\n     */\n\n    this._disableScrollAfter = true;\n    /**\n     * Whether the tab list can be scrolled more towards the beginning of the tab label list.\n     */\n\n    this._disableScrollBefore = true;\n    /**\n     * Stream that will stop the automated scrolling.\n     */\n\n    this._stopScrolling = new Subject();\n    this._selectedIndex = 0;\n    /**\n     * Event emitted when the option is selected.\n     */\n\n    this.selectFocusedIndex = new EventEmitter();\n    /**\n     * Event emitted when a label is focused.\n     */\n\n    this.indexFocused = new EventEmitter();\n    /** @type {?} */\n\n    const element = _elementRef.nativeElement;\n    /** @type {?} */\n\n    const bindEvent = () => {\n      fromEvent(element, 'mouseleave').pipe(takeUntil(this._destroyed)).subscribe(() => {\n        this._stopInterval();\n      });\n    }; // @breaking-change 8.0.0 remove null check once _ngZone is made into a required parameter.\n\n\n    if (_ngZone) {\n      // Bind the `mouseleave` event on the outside since it doesn't change anything in the view.\n      _ngZone.runOutsideAngular(bindEvent);\n    } else {\n      bindEvent();\n    }\n  }\n  /**\n   * The index of the active tab.\n   * @return {?}\n   */\n\n\n  get selectedIndex() {\n    return this._selectedIndex;\n  }\n  /**\n   * @param {?} value\n   * @return {?}\n   */\n\n\n  set selectedIndex(value) {\n    value = coerceNumberProperty(value);\n    this._selectedIndexChanged = this._selectedIndex != value;\n    this._selectedIndex = value;\n\n    if (this._keyManager) {\n      this._keyManager.updateActiveItemIndex(value);\n    }\n  }\n  /**\n   * @return {?}\n   */\n\n\n  ngAfterContentChecked() {\n    // If the number of tab labels have changed, check if scrolling should be enabled\n    if (this._tabLabelCount != this._labelWrappers.length) {\n      this.updatePagination();\n      this._tabLabelCount = this._labelWrappers.length;\n\n      this._changeDetectorRef.markForCheck();\n    } // If the selected index has changed, scroll to the label and check if the scrolling controls\n    // should be disabled.\n\n\n    if (this._selectedIndexChanged) {\n      this._scrollToLabel(this._selectedIndex);\n\n      this._checkScrollingControls();\n\n      this._alignInkBarToSelectedTab();\n\n      this._selectedIndexChanged = false;\n\n      this._changeDetectorRef.markForCheck();\n    } // If the scroll distance has been changed (tab selected, focused, scroll controls activated),\n    // then translate the header to reflect this.\n\n\n    if (this._scrollDistanceChanged) {\n      this._updateTabScrollPosition();\n\n      this._scrollDistanceChanged = false;\n\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n  /**\n   * Handles keyboard events on the header.\n   * @param {?} event\n   * @return {?}\n   */\n\n\n  _handleKeydown(event) {\n    // We don't handle any key bindings with a modifier key.\n    if (hasModifierKey(event)) {\n      return;\n    }\n\n    switch (event.keyCode) {\n      case HOME:\n        this._keyManager.setFirstItemActive();\n\n        event.preventDefault();\n        break;\n\n      case END:\n        this._keyManager.setLastItemActive();\n\n        event.preventDefault();\n        break;\n\n      case ENTER:\n      case SPACE:\n        this.selectFocusedIndex.emit(this.focusIndex);\n        event.preventDefault();\n        break;\n\n      default:\n        this._keyManager.onKeydown(event);\n\n    }\n  }\n  /**\n   * Aligns the ink bar to the selected tab on load.\n   * @return {?}\n   */\n\n\n  ngAfterContentInit() {\n    /** @type {?} */\n    const dirChange = this._dir ? this._dir.change : of(null);\n    /** @type {?} */\n\n    const resize = this._viewportRuler.change(150);\n    /** @type {?} */\n\n\n    const realign = () => {\n      this.updatePagination();\n\n      this._alignInkBarToSelectedTab();\n    };\n\n    this._keyManager = new FocusKeyManager(this._labelWrappers).withHorizontalOrientation(this._getLayoutDirection()).withWrap();\n\n    this._keyManager.updateActiveItem(0); // Defer the first call in order to allow for slower browsers to lay out the elements.\n    // This helps in cases where the user lands directly on a page with paginated tabs.\n\n\n    typeof requestAnimationFrame !== 'undefined' ? requestAnimationFrame(realign) : realign(); // On dir change or window resize, realign the ink bar and update the orientation of\n    // the key manager if the direction has changed.\n\n    merge(dirChange, resize).pipe(takeUntil(this._destroyed)).subscribe(() => {\n      realign();\n\n      this._keyManager.withHorizontalOrientation(this._getLayoutDirection());\n    }); // If there is a change in the focus key manager we need to emit the `indexFocused`\n    // event in order to provide a public event that notifies about focus changes. Also we realign\n    // the tabs container by scrolling the new focused tab into the visible section.\n\n    this._keyManager.change.pipe(takeUntil(this._destroyed)).subscribe(newFocusIndex => {\n      this.indexFocused.emit(newFocusIndex);\n\n      this._setTabFocus(newFocusIndex);\n    });\n  }\n  /**\n   * @return {?}\n   */\n\n\n  ngAfterViewInit() {\n    // We need to handle these events manually, because we want to bind passive event listeners.\n    fromEvent(this._previousPaginator.nativeElement, 'touchstart', passiveEventListenerOptions).pipe(takeUntil(this._destroyed)).subscribe(() => {\n      this._handlePaginatorPress('before');\n    });\n    fromEvent(this._nextPaginator.nativeElement, 'touchstart', passiveEventListenerOptions).pipe(takeUntil(this._destroyed)).subscribe(() => {\n      this._handlePaginatorPress('after');\n    });\n  }\n  /**\n   * @return {?}\n   */\n\n\n  ngOnDestroy() {\n    this._destroyed.next();\n\n    this._destroyed.complete();\n\n    this._stopScrolling.complete();\n  }\n  /**\n   * Callback for when the MutationObserver detects that the content has changed.\n   * @return {?}\n   */\n\n\n  _onContentChanges() {\n    /** @type {?} */\n    const textContent = this._elementRef.nativeElement.textContent; // We need to diff the text content of the header, because the MutationObserver callback\n    // will fire even if the text content didn't change which is inefficient and is prone\n    // to infinite loops if a poorly constructed expression is passed in (see #14249).\n\n    if (textContent !== this._currentTextContent) {\n      this._currentTextContent = textContent;\n      /** @type {?} */\n\n      const zoneCallback = () => {\n        this.updatePagination();\n\n        this._alignInkBarToSelectedTab();\n\n        this._changeDetectorRef.markForCheck();\n      }; // The content observer runs outside the `NgZone` by default, which\n      // means that we need to bring the callback back in ourselves.\n      // @breaking-change 8.0.0 Remove null check for `_ngZone` once it's a required parameter.\n\n\n      this._ngZone ? this._ngZone.run(zoneCallback) : zoneCallback();\n    }\n  }\n  /**\n   * Updates the view whether pagination should be enabled or not.\n   *\n   * WARNING: Calling this method can be very costly in terms of performance.  It should be called\n   * as infrequently as possible from outside of the Tabs component as it causes a reflow of the\n   * page.\n   * @return {?}\n   */\n\n\n  updatePagination() {\n    this._checkPaginationEnabled();\n\n    this._checkScrollingControls();\n\n    this._updateTabScrollPosition();\n  }\n  /**\n   * Tracks which element has focus; used for keyboard navigation\n   * @return {?}\n   */\n\n\n  get focusIndex() {\n    return this._keyManager ?\n    /** @type {?} */\n    this._keyManager.activeItemIndex : 0;\n  }\n  /**\n   * When the focus index is set, we must manually send focus to the correct label\n   * @param {?} value\n   * @return {?}\n   */\n\n\n  set focusIndex(value) {\n    if (!this._isValidIndex(value) || this.focusIndex === value || !this._keyManager) {\n      return;\n    }\n\n    this._keyManager.setActiveItem(value);\n  }\n  /**\n   * Determines if an index is valid.  If the tabs are not ready yet, we assume that the user is\n   * providing a valid index and return true.\n   * @param {?} index\n   * @return {?}\n   */\n\n\n  _isValidIndex(index) {\n    if (!this._labelWrappers) {\n      return true;\n    }\n    /** @type {?} */\n\n\n    const tab = this._labelWrappers ? this._labelWrappers.toArray()[index] : null;\n    return !!tab && !tab.disabled;\n  }\n  /**\n   * Sets focus on the HTML element for the label wrapper and scrolls it into the view if\n   * scrolling is enabled.\n   * @param {?} tabIndex\n   * @return {?}\n   */\n\n\n  _setTabFocus(tabIndex) {\n    if (this._showPaginationControls) {\n      this._scrollToLabel(tabIndex);\n    }\n\n    if (this._labelWrappers && this._labelWrappers.length) {\n      this._labelWrappers.toArray()[tabIndex].focus(); // Do not let the browser manage scrolling to focus the element, this will be handled\n      // by using translation. In LTR, the scroll left should be 0. In RTL, the scroll width\n      // should be the full width minus the offset width.\n\n      /** @type {?} */\n\n\n      const containerEl = this._tabListContainer.nativeElement;\n      /** @type {?} */\n\n      const dir = this._getLayoutDirection();\n\n      if (dir == 'ltr') {\n        containerEl.scrollLeft = 0;\n      } else {\n        containerEl.scrollLeft = containerEl.scrollWidth - containerEl.offsetWidth;\n      }\n    }\n  }\n  /**\n   * The layout direction of the containing app.\n   * @return {?}\n   */\n\n\n  _getLayoutDirection() {\n    return this._dir && this._dir.value === 'rtl' ? 'rtl' : 'ltr';\n  }\n  /**\n   * Performs the CSS transformation on the tab list that will cause the list to scroll.\n   * @return {?}\n   */\n\n\n  _updateTabScrollPosition() {\n    /** @type {?} */\n    const scrollDistance = this.scrollDistance;\n    /** @type {?} */\n\n    const platform = this._platform;\n    /** @type {?} */\n\n    const translateX = this._getLayoutDirection() === 'ltr' ? -scrollDistance : scrollDistance; // Don't use `translate3d` here because we don't want to create a new layer. A new layer\n    // seems to cause flickering and overflow in Internet Explorer. For example, the ink bar\n    // and ripples will exceed the boundaries of the visible tab bar.\n    // See: https://github.com/angular/material2/issues/10276\n    // We round the `transform` here, because transforms with sub-pixel precision cause some\n    // browsers to blur the content of the element.\n\n    this._tabList.nativeElement.style.transform = `translateX(${Math.round(translateX)}px)`; // Setting the `transform` on IE will change the scroll offset of the parent, causing the\n    // position to be thrown off in some cases. We have to reset it ourselves to ensure that\n    // it doesn't get thrown off. Note that we scope it only to IE and Edge, because messing\n    // with the scroll position throws off Chrome 71+ in RTL mode (see #14689).\n    // @breaking-change 8.0.0 Remove null check for `platform`.\n\n    if (platform && (platform.TRIDENT || platform.EDGE)) {\n      this._tabListContainer.nativeElement.scrollLeft = 0;\n    }\n  }\n  /**\n   * Sets the distance in pixels that the tab header should be transformed in the X-axis.\n   * @return {?}\n   */\n\n\n  get scrollDistance() {\n    return this._scrollDistance;\n  }\n  /**\n   * @param {?} value\n   * @return {?}\n   */\n\n\n  set scrollDistance(value) {\n    this._scrollTo(value);\n  }\n  /**\n   * Moves the tab list in the 'before' or 'after' direction (towards the beginning of the list or\n   * the end of the list, respectively). The distance to scroll is computed to be a third of the\n   * length of the tab list view window.\n   *\n   * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n   * should be called sparingly.\n   * @param {?} direction\n   * @return {?}\n   */\n\n\n  _scrollHeader(direction) {\n    /** @type {?} */\n    const viewLength = this._tabListContainer.nativeElement.offsetWidth; // Move the scroll distance one-third the length of the tab list's viewport.\n\n    /** @type {?} */\n\n    const scrollAmount = (direction == 'before' ? -1 : 1) * viewLength / 3;\n    return this._scrollTo(this._scrollDistance + scrollAmount);\n  }\n  /**\n   * Handles click events on the pagination arrows.\n   * @param {?} direction\n   * @return {?}\n   */\n\n\n  _handlePaginatorClick(direction) {\n    this._stopInterval();\n\n    this._scrollHeader(direction);\n  }\n  /**\n   * Moves the tab list such that the desired tab label (marked by index) is moved into view.\n   *\n   * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n   * should be called sparingly.\n   * @param {?} labelIndex\n   * @return {?}\n   */\n\n\n  _scrollToLabel(labelIndex) {\n    /** @type {?} */\n    const selectedLabel = this._labelWrappers ? this._labelWrappers.toArray()[labelIndex] : null;\n\n    if (!selectedLabel) {\n      return;\n    } // The view length is the visible width of the tab labels.\n\n    /** @type {?} */\n\n\n    const viewLength = this._tabListContainer.nativeElement.offsetWidth;\n    /** @type {?} */\n\n    let labelBeforePos;\n    /** @type {?} */\n\n    let labelAfterPos;\n\n    if (this._getLayoutDirection() == 'ltr') {\n      labelBeforePos = selectedLabel.getOffsetLeft();\n      labelAfterPos = labelBeforePos + selectedLabel.getOffsetWidth();\n    } else {\n      labelAfterPos = this._tabList.nativeElement.offsetWidth - selectedLabel.getOffsetLeft();\n      labelBeforePos = labelAfterPos - selectedLabel.getOffsetWidth();\n    }\n    /** @type {?} */\n\n\n    const beforeVisiblePos = this.scrollDistance;\n    /** @type {?} */\n\n    const afterVisiblePos = this.scrollDistance + viewLength;\n\n    if (labelBeforePos < beforeVisiblePos) {\n      // Scroll header to move label to the before direction\n      this.scrollDistance -= beforeVisiblePos - labelBeforePos + EXAGGERATED_OVERSCROLL;\n    } else if (labelAfterPos > afterVisiblePos) {\n      // Scroll header to move label to the after direction\n      this.scrollDistance += labelAfterPos - afterVisiblePos + EXAGGERATED_OVERSCROLL;\n    }\n  }\n  /**\n   * Evaluate whether the pagination controls should be displayed. If the scroll width of the\n   * tab list is wider than the size of the header container, then the pagination controls should\n   * be shown.\n   *\n   * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n   * should be called sparingly.\n   * @return {?}\n   */\n\n\n  _checkPaginationEnabled() {\n    /** @type {?} */\n    const isEnabled = this._tabList.nativeElement.scrollWidth > this._elementRef.nativeElement.offsetWidth;\n\n    if (!isEnabled) {\n      this.scrollDistance = 0;\n    }\n\n    if (isEnabled !== this._showPaginationControls) {\n      this._changeDetectorRef.markForCheck();\n    }\n\n    this._showPaginationControls = isEnabled;\n  }\n  /**\n   * Evaluate whether the before and after controls should be enabled or disabled.\n   * If the header is at the beginning of the list (scroll distance is equal to 0) then disable the\n   * before button. If the header is at the end of the list (scroll distance is equal to the\n   * maximum distance we can scroll), then disable the after button.\n   *\n   * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n   * should be called sparingly.\n   * @return {?}\n   */\n\n\n  _checkScrollingControls() {\n    // Check if the pagination arrows should be activated.\n    this._disableScrollBefore = this.scrollDistance == 0;\n    this._disableScrollAfter = this.scrollDistance == this._getMaxScrollDistance();\n\n    this._changeDetectorRef.markForCheck();\n  }\n  /**\n   * Determines what is the maximum length in pixels that can be set for the scroll distance. This\n   * is equal to the difference in width between the tab list container and tab header container.\n   *\n   * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n   * should be called sparingly.\n   * @return {?}\n   */\n\n\n  _getMaxScrollDistance() {\n    /** @type {?} */\n    const lengthOfTabList = this._tabList.nativeElement.scrollWidth;\n    /** @type {?} */\n\n    const viewLength = this._tabListContainer.nativeElement.offsetWidth;\n    return lengthOfTabList - viewLength || 0;\n  }\n  /**\n   * Tells the ink-bar to align itself to the current label wrapper\n   * @return {?}\n   */\n\n\n  _alignInkBarToSelectedTab() {\n    /** @type {?} */\n    const selectedLabelWrapper = this._labelWrappers && this._labelWrappers.length ? this._labelWrappers.toArray()[this.selectedIndex].elementRef.nativeElement : null;\n\n    this._inkBar.alignToElement(\n    /** @type {?} */\n    selectedLabelWrapper);\n  }\n  /**\n   * Stops the currently-running paginator interval.\n   * @return {?}\n   */\n\n\n  _stopInterval() {\n    this._stopScrolling.next();\n  }\n  /**\n   * Handles the user pressing down on one of the paginators.\n   * Starts scrolling the header after a certain amount of time.\n   * @param {?} direction In which direction the paginator should be scrolled.\n   * @return {?}\n   */\n\n\n  _handlePaginatorPress(direction) {\n    // Avoid overlapping timers.\n    this._stopInterval(); // Start a timer after the delay and keep firing based on the interval.\n\n\n    timer(HEADER_SCROLL_DELAY, HEADER_SCROLL_INTERVAL) // Keep the timer going until something tells it to stop or the component is destroyed.\n    .pipe(takeUntil(merge(this._stopScrolling, this._destroyed))).subscribe(() => {\n      const {\n        maxScrollDistance,\n        distance\n      } = this._scrollHeader(direction); // Stop the timer if we've reached the start or the end.\n\n\n      if (distance === 0 || distance >= maxScrollDistance) {\n        this._stopInterval();\n      }\n    });\n  }\n  /**\n   * Scrolls the header to a given position.\n   * @private\n   * @param {?} position Position to which to scroll.\n   * @return {?} Information on the current scroll distance and the maximum.\n   */\n\n\n  _scrollTo(position) {\n    /** @type {?} */\n    const maxScrollDistance = this._getMaxScrollDistance();\n\n    this._scrollDistance = Math.max(0, Math.min(maxScrollDistance, position)); // Mark that the scroll distance has changed so that after the view is checked, the CSS\n    // transformation can move the header.\n\n    this._scrollDistanceChanged = true;\n\n    this._checkScrollingControls();\n\n    return {\n      maxScrollDistance,\n      distance: this._scrollDistance\n    };\n  }\n\n}\n\nMatTabHeader.ɵfac = function MatTabHeader_Factory(t) {\n  return new (t || MatTabHeader)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.ViewportRuler), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc3.Platform));\n};\n\nMatTabHeader.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n  type: MatTabHeader,\n  selectors: [[\"mat-tab-header\"]],\n  contentQueries: function MatTabHeader_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵcontentQuery(dirIndex, MatTabLabelWrapper, 4);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._labelWrappers = _t);\n    }\n  },\n  viewQuery: function MatTabHeader_Query(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵviewQuery(MatInkBar, 5);\n      ɵngcc0.ɵɵviewQuery(_c3, 5);\n      ɵngcc0.ɵɵviewQuery(_c4, 5);\n      ɵngcc0.ɵɵviewQuery(_c5, 5);\n      ɵngcc0.ɵɵviewQuery(_c6, 5);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._inkBar = _t.first);\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._tabListContainer = _t.first);\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._tabList = _t.first);\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._nextPaginator = _t.first);\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._previousPaginator = _t.first);\n    }\n  },\n  hostAttrs: [1, \"mat-tab-header\"],\n  hostVars: 4,\n  hostBindings: function MatTabHeader_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      ɵngcc0.ɵɵclassProp(\"mat-tab-header-pagination-controls-enabled\", ctx._showPaginationControls)(\"mat-tab-header-rtl\", ctx._getLayoutDirection() == \"rtl\");\n    }\n  },\n  inputs: {\n    disableRipple: \"disableRipple\",\n    selectedIndex: \"selectedIndex\"\n  },\n  outputs: {\n    selectFocusedIndex: \"selectFocusedIndex\",\n    indexFocused: \"indexFocused\"\n  },\n  features: [ɵngcc0.ɵɵInheritDefinitionFeature],\n  ngContentSelectors: _c0,\n  decls: 13,\n  vars: 6,\n  consts: [[\"aria-hidden\", \"true\", \"mat-ripple\", \"\", 1, \"mat-tab-header-pagination\", \"mat-tab-header-pagination-before\", \"mat-elevation-z4\", 3, \"matRippleDisabled\", \"click\", \"mousedown\", \"touchend\"], [\"previousPaginator\", \"\"], [1, \"mat-tab-header-pagination-chevron\"], [1, \"mat-tab-label-container\", 3, \"keydown\"], [\"tabListContainer\", \"\"], [\"role\", \"tablist\", 1, \"mat-tab-list\", 3, \"cdkObserveContent\"], [\"tabList\", \"\"], [1, \"mat-tab-labels\"], [\"aria-hidden\", \"true\", \"mat-ripple\", \"\", 1, \"mat-tab-header-pagination\", \"mat-tab-header-pagination-after\", \"mat-elevation-z4\", 3, \"matRippleDisabled\", \"mousedown\", \"click\", \"touchend\"], [\"nextPaginator\", \"\"]],\n  template: function MatTabHeader_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵprojectionDef();\n      ɵngcc0.ɵɵelementStart(0, \"div\", 0, 1);\n      ɵngcc0.ɵɵlistener(\"click\", function MatTabHeader_Template_div_click_0_listener() {\n        return ctx._handlePaginatorClick(\"before\");\n      })(\"mousedown\", function MatTabHeader_Template_div_mousedown_0_listener() {\n        return ctx._handlePaginatorPress(\"before\");\n      })(\"touchend\", function MatTabHeader_Template_div_touchend_0_listener() {\n        return ctx._stopInterval();\n      });\n      ɵngcc0.ɵɵelement(2, \"div\", 2);\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵelementStart(3, \"div\", 3, 4);\n      ɵngcc0.ɵɵlistener(\"keydown\", function MatTabHeader_Template_div_keydown_3_listener($event) {\n        return ctx._handleKeydown($event);\n      });\n      ɵngcc0.ɵɵelementStart(5, \"div\", 5, 6);\n      ɵngcc0.ɵɵlistener(\"cdkObserveContent\", function MatTabHeader_Template_div_cdkObserveContent_5_listener() {\n        return ctx._onContentChanges();\n      });\n      ɵngcc0.ɵɵelementStart(7, \"div\", 7);\n      ɵngcc0.ɵɵprojection(8);\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵelement(9, \"mat-ink-bar\");\n      ɵngcc0.ɵɵelementEnd()();\n      ɵngcc0.ɵɵelementStart(10, \"div\", 8, 9);\n      ɵngcc0.ɵɵlistener(\"mousedown\", function MatTabHeader_Template_div_mousedown_10_listener() {\n        return ctx._handlePaginatorPress(\"after\");\n      })(\"click\", function MatTabHeader_Template_div_click_10_listener() {\n        return ctx._handlePaginatorClick(\"after\");\n      })(\"touchend\", function MatTabHeader_Template_div_touchend_10_listener() {\n        return ctx._stopInterval();\n      });\n      ɵngcc0.ɵɵelement(12, \"div\", 2);\n      ɵngcc0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵclassProp(\"mat-tab-header-pagination-disabled\", ctx._disableScrollBefore);\n      ɵngcc0.ɵɵproperty(\"matRippleDisabled\", ctx._disableScrollBefore || ctx.disableRipple);\n      ɵngcc0.ɵɵadvance(10);\n      ɵngcc0.ɵɵclassProp(\"mat-tab-header-pagination-disabled\", ctx._disableScrollAfter);\n      ɵngcc0.ɵɵproperty(\"matRippleDisabled\", ctx._disableScrollAfter || ctx.disableRipple);\n    }\n  },\n  dependencies: [ɵngcc4.MatRipple, ɵngcc5.CdkObserveContent, MatInkBar],\n  styles: [\".mat-tab-header{display:flex;overflow:hidden;position:relative;flex-shrink:0}.mat-tab-label{height:48px;padding:0 24px;cursor:pointer;box-sizing:border-box;opacity:.6;min-width:160px;text-align:center;display:inline-flex;justify-content:center;align-items:center;white-space:nowrap;position:relative}.mat-tab-label:focus{outline:0}.mat-tab-label:focus:not(.mat-tab-disabled){opacity:1}@media (-ms-high-contrast:active){.mat-tab-label:focus{outline:dotted 2px}}.mat-tab-label.mat-tab-disabled{cursor:default}@media (-ms-high-contrast:active){.mat-tab-label.mat-tab-disabled{opacity:.5}}.mat-tab-label .mat-tab-label-content{display:inline-flex;justify-content:center;align-items:center;white-space:nowrap}@media (-ms-high-contrast:active){.mat-tab-label{opacity:1}}@media (max-width:599px){.mat-tab-label{min-width:72px}}.mat-ink-bar{position:absolute;bottom:0;height:2px;transition:.5s cubic-bezier(.35,0,.25,1)}.mat-tab-group-inverted-header .mat-ink-bar{bottom:auto;top:0}@media (-ms-high-contrast:active){.mat-ink-bar{outline:solid 2px;height:0}}.mat-tab-header-pagination{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;position:relative;display:none;justify-content:center;align-items:center;min-width:32px;cursor:pointer;z-index:2;-webkit-tap-highlight-color:transparent;touch-action:none}.mat-tab-header-pagination-controls-enabled .mat-tab-header-pagination{display:flex}.mat-tab-header-pagination-before,.mat-tab-header-rtl .mat-tab-header-pagination-after{padding-left:4px}.mat-tab-header-pagination-before .mat-tab-header-pagination-chevron,.mat-tab-header-rtl .mat-tab-header-pagination-after .mat-tab-header-pagination-chevron{transform:rotate(-135deg)}.mat-tab-header-pagination-after,.mat-tab-header-rtl .mat-tab-header-pagination-before{padding-right:4px}.mat-tab-header-pagination-after .mat-tab-header-pagination-chevron,.mat-tab-header-rtl .mat-tab-header-pagination-before .mat-tab-header-pagination-chevron{transform:rotate(45deg)}.mat-tab-header-pagination-chevron{border-style:solid;border-width:2px 2px 0 0;content:'';height:8px;width:8px}.mat-tab-header-pagination-disabled{box-shadow:none;cursor:default}.mat-tab-label-container{display:flex;flex-grow:1;overflow:hidden;z-index:1}.mat-tab-list{flex-grow:1;position:relative;transition:transform .5s cubic-bezier(.35,0,.25,1)}.mat-tab-labels{display:flex}[mat-align-tabs=center] .mat-tab-labels{justify-content:center}[mat-align-tabs=end] .mat-tab-labels{justify-content:flex-end}\"],\n  encapsulation: 2,\n  changeDetection: 0\n});\n/** @nocollapse */\n\nMatTabHeader.ctorParameters = () => [{\n  type: ElementRef\n}, {\n  type: ChangeDetectorRef\n}, {\n  type: ViewportRuler\n}, {\n  type: Directionality,\n  decorators: [{\n    type: Optional\n  }]\n}, {\n  type: NgZone\n}, {\n  type: Platform\n}];\n\nMatTabHeader.propDecorators = {\n  _labelWrappers: [{\n    type: ContentChildren,\n    args: [MatTabLabelWrapper]\n  }],\n  _inkBar: [{\n    type: ViewChild,\n    args: [MatInkBar]\n  }],\n  _tabListContainer: [{\n    type: ViewChild,\n    args: ['tabListContainer']\n  }],\n  _tabList: [{\n    type: ViewChild,\n    args: ['tabList']\n  }],\n  _nextPaginator: [{\n    type: ViewChild,\n    args: ['nextPaginator']\n  }],\n  _previousPaginator: [{\n    type: ViewChild,\n    args: ['previousPaginator']\n  }],\n  selectedIndex: [{\n    type: Input\n  }],\n  selectFocusedIndex: [{\n    type: Output\n  }],\n  indexFocused: [{\n    type: Output\n  }]\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatTabHeader, [{\n    type: Component,\n    args: [{\n      selector: 'mat-tab-header',\n      template: \"<div class=\\\"mat-tab-header-pagination mat-tab-header-pagination-before mat-elevation-z4\\\" #previousPaginator aria-hidden=\\\"true\\\" mat-ripple [matRippleDisabled]=\\\"_disableScrollBefore || disableRipple\\\" [class.mat-tab-header-pagination-disabled]=\\\"_disableScrollBefore\\\" (click)=\\\"_handlePaginatorClick('before')\\\" (mousedown)=\\\"_handlePaginatorPress('before')\\\" (touchend)=\\\"_stopInterval()\\\"><div class=\\\"mat-tab-header-pagination-chevron\\\"></div></div><div class=\\\"mat-tab-label-container\\\" #tabListContainer (keydown)=\\\"_handleKeydown($event)\\\"><div class=\\\"mat-tab-list\\\" #tabList role=\\\"tablist\\\" (cdkObserveContent)=\\\"_onContentChanges()\\\"><div class=\\\"mat-tab-labels\\\"><ng-content></ng-content></div><mat-ink-bar></mat-ink-bar></div></div><div class=\\\"mat-tab-header-pagination mat-tab-header-pagination-after mat-elevation-z4\\\" #nextPaginator aria-hidden=\\\"true\\\" mat-ripple [matRippleDisabled]=\\\"_disableScrollAfter || disableRipple\\\" [class.mat-tab-header-pagination-disabled]=\\\"_disableScrollAfter\\\" (mousedown)=\\\"_handlePaginatorPress('after')\\\" (click)=\\\"_handlePaginatorClick('after')\\\" (touchend)=\\\"_stopInterval()\\\"><div class=\\\"mat-tab-header-pagination-chevron\\\"></div></div>\",\n      inputs: ['disableRipple'],\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      host: {\n        'class': 'mat-tab-header',\n        '[class.mat-tab-header-pagination-controls-enabled]': '_showPaginationControls',\n        '[class.mat-tab-header-rtl]': \"_getLayoutDirection() == 'rtl'\"\n      },\n      styles: [\".mat-tab-header{display:flex;overflow:hidden;position:relative;flex-shrink:0}.mat-tab-label{height:48px;padding:0 24px;cursor:pointer;box-sizing:border-box;opacity:.6;min-width:160px;text-align:center;display:inline-flex;justify-content:center;align-items:center;white-space:nowrap;position:relative}.mat-tab-label:focus{outline:0}.mat-tab-label:focus:not(.mat-tab-disabled){opacity:1}@media (-ms-high-contrast:active){.mat-tab-label:focus{outline:dotted 2px}}.mat-tab-label.mat-tab-disabled{cursor:default}@media (-ms-high-contrast:active){.mat-tab-label.mat-tab-disabled{opacity:.5}}.mat-tab-label .mat-tab-label-content{display:inline-flex;justify-content:center;align-items:center;white-space:nowrap}@media (-ms-high-contrast:active){.mat-tab-label{opacity:1}}@media (max-width:599px){.mat-tab-label{min-width:72px}}.mat-ink-bar{position:absolute;bottom:0;height:2px;transition:.5s cubic-bezier(.35,0,.25,1)}.mat-tab-group-inverted-header .mat-ink-bar{bottom:auto;top:0}@media (-ms-high-contrast:active){.mat-ink-bar{outline:solid 2px;height:0}}.mat-tab-header-pagination{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;position:relative;display:none;justify-content:center;align-items:center;min-width:32px;cursor:pointer;z-index:2;-webkit-tap-highlight-color:transparent;touch-action:none}.mat-tab-header-pagination-controls-enabled .mat-tab-header-pagination{display:flex}.mat-tab-header-pagination-before,.mat-tab-header-rtl .mat-tab-header-pagination-after{padding-left:4px}.mat-tab-header-pagination-before .mat-tab-header-pagination-chevron,.mat-tab-header-rtl .mat-tab-header-pagination-after .mat-tab-header-pagination-chevron{transform:rotate(-135deg)}.mat-tab-header-pagination-after,.mat-tab-header-rtl .mat-tab-header-pagination-before{padding-right:4px}.mat-tab-header-pagination-after .mat-tab-header-pagination-chevron,.mat-tab-header-rtl .mat-tab-header-pagination-before .mat-tab-header-pagination-chevron{transform:rotate(45deg)}.mat-tab-header-pagination-chevron{border-style:solid;border-width:2px 2px 0 0;content:'';height:8px;width:8px}.mat-tab-header-pagination-disabled{box-shadow:none;cursor:default}.mat-tab-label-container{display:flex;flex-grow:1;overflow:hidden;z-index:1}.mat-tab-list{flex-grow:1;position:relative;transition:transform .5s cubic-bezier(.35,0,.25,1)}.mat-tab-labels{display:flex}[mat-align-tabs=center] .mat-tab-labels{justify-content:center}[mat-align-tabs=end] .mat-tab-labels{justify-content:flex-end}\"]\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.ElementRef\n    }, {\n      type: ɵngcc0.ChangeDetectorRef\n    }, {\n      type: ɵngcc2.ViewportRuler\n    }, {\n      type: ɵngcc1.Directionality,\n      decorators: [{\n        type: Optional\n      }]\n    }, {\n      type: ɵngcc0.NgZone\n    }, {\n      type: ɵngcc3.Platform\n    }];\n  }, {\n    selectFocusedIndex: [{\n      type: Output\n    }],\n    indexFocused: [{\n      type: Output\n    }],\n    selectedIndex: [{\n      type: Input\n    }],\n    _labelWrappers: [{\n      type: ContentChildren,\n      args: [MatTabLabelWrapper]\n    }],\n    _inkBar: [{\n      type: ViewChild,\n      args: [MatInkBar]\n    }],\n    _tabListContainer: [{\n      type: ViewChild,\n      args: ['tabListContainer']\n    }],\n    _tabList: [{\n      type: ViewChild,\n      args: ['tabList']\n    }],\n    _nextPaginator: [{\n      type: ViewChild,\n      args: ['nextPaginator']\n    }],\n    _previousPaginator: [{\n      type: ViewChild,\n      args: ['previousPaginator']\n    }]\n  });\n})();\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Used to generate unique ID's for each tab component\n * @type {?}\n */\n\n\nlet nextId = 0;\n/**\n * A simple change event emitted on focus or selection changes.\n */\n\nclass MatTabChangeEvent {}\n/**\n * Injection token that can be used to provide the default options the tabs module.\n * @type {?}\n */\n\n\nconst MAT_TABS_CONFIG = new InjectionToken('MAT_TABS_CONFIG'); // Boilerplate for applying mixins to MatTabGroup.\n\n/**\n * \\@docs-private\n */\n\nclass MatTabGroupBase {\n  /**\n   * @param {?} _elementRef\n   */\n  constructor(_elementRef) {\n    this._elementRef = _elementRef;\n  }\n\n}\n/** @type {?} */\n\n\nconst _MatTabGroupMixinBase = mixinColor(mixinDisableRipple(MatTabGroupBase), 'primary');\n/**\n * Material design tab-group component.  Supports basic tab pairs (label + content) and includes\n * animated ink-bar, keyboard navigation, and screen reader.\n * See: https://material.io/design/components/tabs.html\n */\n\n\nclass MatTabGroup extends _MatTabGroupMixinBase {\n  /**\n   * @param {?} elementRef\n   * @param {?} _changeDetectorRef\n   * @param {?=} defaultConfig\n   */\n  constructor(elementRef, _changeDetectorRef, defaultConfig) {\n    super(elementRef);\n    this._changeDetectorRef = _changeDetectorRef;\n    /**\n     * The tab index that should be selected after the content has been checked.\n     */\n\n    this._indexToSelect = 0;\n    /**\n     * Snapshot of the height of the tab body wrapper before another tab is activated.\n     */\n\n    this._tabBodyWrapperHeight = 0;\n    /**\n     * Subscription to tabs being added/removed.\n     */\n\n    this._tabsSubscription = Subscription.EMPTY;\n    /**\n     * Subscription to changes in the tab labels.\n     */\n\n    this._tabLabelSubscription = Subscription.EMPTY;\n    this._dynamicHeight = false;\n    this._selectedIndex = null;\n    /**\n     * Position of the tab header.\n     */\n\n    this.headerPosition = 'above';\n    /**\n     * Output to enable support for two-way binding on `[(selectedIndex)]`\n     */\n\n    this.selectedIndexChange = new EventEmitter();\n    /**\n     * Event emitted when focus has changed within a tab group.\n     */\n\n    this.focusChange = new EventEmitter();\n    /**\n     * Event emitted when the body animation has completed\n     */\n\n    this.animationDone = new EventEmitter();\n    /**\n     * Event emitted when the tab selection has changed.\n     */\n\n    this.selectedTabChange = new EventEmitter(true);\n    this._groupId = nextId++;\n    this.animationDuration = defaultConfig && defaultConfig.animationDuration ? defaultConfig.animationDuration : '500ms';\n  }\n  /**\n   * Whether the tab group should grow to the size of the active tab.\n   * @return {?}\n   */\n\n\n  get dynamicHeight() {\n    return this._dynamicHeight;\n  }\n  /**\n   * @param {?} value\n   * @return {?}\n   */\n\n\n  set dynamicHeight(value) {\n    this._dynamicHeight = coerceBooleanProperty(value);\n  }\n  /**\n   * The index of the active tab.\n   * @return {?}\n   */\n\n\n  get selectedIndex() {\n    return this._selectedIndex;\n  }\n  /**\n   * @param {?} value\n   * @return {?}\n   */\n\n\n  set selectedIndex(value) {\n    this._indexToSelect = coerceNumberProperty(value, null);\n  }\n  /**\n   * Duration for the tab animation. Will be normalized to milliseconds if no units are set.\n   * @return {?}\n   */\n\n\n  get animationDuration() {\n    return this._animationDuration;\n  }\n  /**\n   * @param {?} value\n   * @return {?}\n   */\n\n\n  set animationDuration(value) {\n    this._animationDuration = /^\\d+$/.test(value) ? value + 'ms' : value;\n  }\n  /**\n   * Background color of the tab group.\n   * @return {?}\n   */\n\n\n  get backgroundColor() {\n    return this._backgroundColor;\n  }\n  /**\n   * @param {?} value\n   * @return {?}\n   */\n\n\n  set backgroundColor(value) {\n    /** @type {?} */\n    const nativeElement = this._elementRef.nativeElement;\n    nativeElement.classList.remove(`mat-background-${this.backgroundColor}`);\n\n    if (value) {\n      nativeElement.classList.add(`mat-background-${value}`);\n    }\n\n    this._backgroundColor = value;\n  }\n  /**\n   * After the content is checked, this component knows what tabs have been defined\n   * and what the selected index should be. This is where we can know exactly what position\n   * each tab should be in according to the new selected index, and additionally we know how\n   * a new selected tab should transition in (from the left or right).\n   * @return {?}\n   */\n\n\n  ngAfterContentChecked() {\n    // Don't clamp the `indexToSelect` immediately in the setter because it can happen that\n    // the amount of tabs changes before the actual change detection runs.\n\n    /** @type {?} */\n    const indexToSelect = this._indexToSelect = this._clampTabIndex(this._indexToSelect); // If there is a change in selected index, emit a change event. Should not trigger if\n    // the selected index has not yet been initialized.\n\n\n    if (this._selectedIndex != indexToSelect) {\n      /** @type {?} */\n      const isFirstRun = this._selectedIndex == null;\n\n      if (!isFirstRun) {\n        this.selectedTabChange.emit(this._createChangeEvent(indexToSelect));\n      } // Changing these values after change detection has run\n      // since the checked content may contain references to them.\n\n\n      Promise.resolve().then(() => {\n        this._tabs.forEach((tab, index) => tab.isActive = index === indexToSelect);\n\n        if (!isFirstRun) {\n          this.selectedIndexChange.emit(indexToSelect);\n        }\n      });\n    } // Setup the position for each tab and optionally setup an origin on the next selected tab.\n\n\n    this._tabs.forEach((tab, index) => {\n      tab.position = index - indexToSelect; // If there is already a selected tab, then set up an origin for the next selected tab\n      // if it doesn't have one already.\n\n      if (this._selectedIndex != null && tab.position == 0 && !tab.origin) {\n        tab.origin = indexToSelect - this._selectedIndex;\n      }\n    });\n\n    if (this._selectedIndex !== indexToSelect) {\n      this._selectedIndex = indexToSelect;\n\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n  /**\n   * @return {?}\n   */\n\n\n  ngAfterContentInit() {\n    this._subscribeToTabLabels(); // Subscribe to changes in the amount of tabs, in order to be\n    // able to re-render the content as new tabs are added or removed.\n\n\n    this._tabsSubscription = this._tabs.changes.subscribe(() => {\n      /** @type {?} */\n      const indexToSelect = this._clampTabIndex(this._indexToSelect); // Maintain the previously-selected tab if a new tab is added or removed and there is no\n      // explicit change that selects a different tab.\n\n\n      if (indexToSelect === this._selectedIndex) {\n        /** @type {?} */\n        const tabs = this._tabs.toArray();\n\n        for (let i = 0; i < tabs.length; i++) {\n          if (tabs[i].isActive) {\n            // Assign both to the `_indexToSelect` and `_selectedIndex` so we don't fire a changed\n            // event, otherwise the consumer may end up in an infinite loop in some edge cases like\n            // adding a tab within the `selectedIndexChange` event.\n            this._indexToSelect = this._selectedIndex = i;\n            break;\n          }\n        }\n      }\n\n      this._subscribeToTabLabels();\n\n      this._changeDetectorRef.markForCheck();\n    });\n  }\n  /**\n   * @return {?}\n   */\n\n\n  ngOnDestroy() {\n    this._tabsSubscription.unsubscribe();\n\n    this._tabLabelSubscription.unsubscribe();\n  }\n  /**\n   * Re-aligns the ink bar to the selected tab element.\n   * @return {?}\n   */\n\n\n  realignInkBar() {\n    if (this._tabHeader) {\n      this._tabHeader._alignInkBarToSelectedTab();\n    }\n  }\n  /**\n   * @param {?} index\n   * @return {?}\n   */\n\n\n  _focusChanged(index) {\n    this.focusChange.emit(this._createChangeEvent(index));\n  }\n  /**\n   * @private\n   * @param {?} index\n   * @return {?}\n   */\n\n\n  _createChangeEvent(index) {\n    /** @type {?} */\n    const event = new MatTabChangeEvent();\n    event.index = index;\n\n    if (this._tabs && this._tabs.length) {\n      event.tab = this._tabs.toArray()[index];\n    }\n\n    return event;\n  }\n  /**\n   * Subscribes to changes in the tab labels. This is needed, because the \\@Input for the label is\n   * on the MatTab component, whereas the data binding is inside the MatTabGroup. In order for the\n   * binding to be updated, we need to subscribe to changes in it and trigger change detection\n   * manually.\n   * @private\n   * @return {?}\n   */\n\n\n  _subscribeToTabLabels() {\n    if (this._tabLabelSubscription) {\n      this._tabLabelSubscription.unsubscribe();\n    }\n\n    this._tabLabelSubscription = merge(...this._tabs.map(tab => tab._stateChanges)).subscribe(() => this._changeDetectorRef.markForCheck());\n  }\n  /**\n   * Clamps the given index to the bounds of 0 and the tabs length.\n   * @private\n   * @param {?} index\n   * @return {?}\n   */\n\n\n  _clampTabIndex(index) {\n    // Note the `|| 0`, which ensures that values like NaN can't get through\n    // and which would otherwise throw the component into an infinite loop\n    // (since Math.max(NaN, 0) === NaN).\n    return Math.min(this._tabs.length - 1, Math.max(index || 0, 0));\n  }\n  /**\n   * Returns a unique id for each tab label element\n   * @param {?} i\n   * @return {?}\n   */\n\n\n  _getTabLabelId(i) {\n    return `mat-tab-label-${this._groupId}-${i}`;\n  }\n  /**\n   * Returns a unique id for each tab content element\n   * @param {?} i\n   * @return {?}\n   */\n\n\n  _getTabContentId(i) {\n    return `mat-tab-content-${this._groupId}-${i}`;\n  }\n  /**\n   * Sets the height of the body wrapper to the height of the activating tab if dynamic\n   * height property is true.\n   * @param {?} tabHeight\n   * @return {?}\n   */\n\n\n  _setTabBodyWrapperHeight(tabHeight) {\n    if (!this._dynamicHeight || !this._tabBodyWrapperHeight) {\n      return;\n    }\n    /** @type {?} */\n\n\n    const wrapper = this._tabBodyWrapper.nativeElement;\n    wrapper.style.height = this._tabBodyWrapperHeight + 'px'; // This conditional forces the browser to paint the height so that\n    // the animation to the new height can have an origin.\n\n    if (this._tabBodyWrapper.nativeElement.offsetHeight) {\n      wrapper.style.height = tabHeight + 'px';\n    }\n  }\n  /**\n   * Removes the height of the tab body wrapper.\n   * @return {?}\n   */\n\n\n  _removeTabBodyWrapperHeight() {\n    /** @type {?} */\n    const wrapper = this._tabBodyWrapper.nativeElement;\n    this._tabBodyWrapperHeight = wrapper.clientHeight;\n    wrapper.style.height = '';\n    this.animationDone.emit();\n  }\n  /**\n   * Handle click events, setting new selected index if appropriate.\n   * @param {?} tab\n   * @param {?} tabHeader\n   * @param {?} index\n   * @return {?}\n   */\n\n\n  _handleClick(tab, tabHeader, index) {\n    if (!tab.disabled) {\n      this.selectedIndex = tabHeader.focusIndex = index;\n    }\n  }\n  /**\n   * Retrieves the tabindex for the tab.\n   * @param {?} tab\n   * @param {?} idx\n   * @return {?}\n   */\n\n\n  _getTabIndex(tab, idx) {\n    if (tab.disabled) {\n      return null;\n    }\n\n    return this.selectedIndex === idx ? 0 : -1;\n  }\n\n}\n\nMatTabGroup.ɵfac = function MatTabGroup_Factory(t) {\n  return new (t || MatTabGroup)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(MAT_TABS_CONFIG, 8));\n};\n\nMatTabGroup.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n  type: MatTabGroup,\n  selectors: [[\"mat-tab-group\"]],\n  contentQueries: function MatTabGroup_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵcontentQuery(dirIndex, MatTab, 4);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._tabs = _t);\n    }\n  },\n  viewQuery: function MatTabGroup_Query(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵviewQuery(_c7, 5);\n      ɵngcc0.ɵɵviewQuery(_c8, 5);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._tabBodyWrapper = _t.first);\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._tabHeader = _t.first);\n    }\n  },\n  hostAttrs: [1, \"mat-tab-group\"],\n  hostVars: 4,\n  hostBindings: function MatTabGroup_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      ɵngcc0.ɵɵclassProp(\"mat-tab-group-dynamic-height\", ctx.dynamicHeight)(\"mat-tab-group-inverted-header\", ctx.headerPosition === \"below\");\n    }\n  },\n  inputs: {\n    color: \"color\",\n    disableRipple: \"disableRipple\",\n    headerPosition: \"headerPosition\",\n    animationDuration: \"animationDuration\",\n    dynamicHeight: \"dynamicHeight\",\n    selectedIndex: \"selectedIndex\",\n    backgroundColor: \"backgroundColor\"\n  },\n  outputs: {\n    selectedIndexChange: \"selectedIndexChange\",\n    focusChange: \"focusChange\",\n    animationDone: \"animationDone\",\n    selectedTabChange: \"selectedTabChange\"\n  },\n  exportAs: [\"matTabGroup\"],\n  features: [ɵngcc0.ɵɵInheritDefinitionFeature],\n  decls: 6,\n  vars: 4,\n  consts: [[3, \"selectedIndex\", \"disableRipple\", \"indexFocused\", \"selectFocusedIndex\"], [\"tabHeader\", \"\"], [\"class\", \"mat-tab-label\", \"role\", \"tab\", \"matTabLabelWrapper\", \"\", \"mat-ripple\", \"\", \"cdkMonitorElementFocus\", \"\", 3, \"id\", \"mat-tab-label-active\", \"disabled\", \"matRippleDisabled\", \"click\", 4, \"ngFor\", \"ngForOf\"], [1, \"mat-tab-body-wrapper\"], [\"tabBodyWrapper\", \"\"], [\"role\", \"tabpanel\", 3, \"id\", \"mat-tab-body-active\", \"content\", \"position\", \"origin\", \"animationDuration\", \"_onCentered\", \"_onCentering\", 4, \"ngFor\", \"ngForOf\"], [\"role\", \"tab\", \"matTabLabelWrapper\", \"\", \"mat-ripple\", \"\", \"cdkMonitorElementFocus\", \"\", 1, \"mat-tab-label\", 3, \"id\", \"disabled\", \"matRippleDisabled\", \"click\"], [1, \"mat-tab-label-content\"], [3, \"ngIf\"], [3, \"cdkPortalOutlet\"], [\"role\", \"tabpanel\", 3, \"id\", \"content\", \"position\", \"origin\", \"animationDuration\", \"_onCentered\", \"_onCentering\"]],\n  template: function MatTabGroup_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵelementStart(0, \"mat-tab-header\", 0, 1);\n      ɵngcc0.ɵɵlistener(\"indexFocused\", function MatTabGroup_Template_mat_tab_header_indexFocused_0_listener($event) {\n        return ctx._focusChanged($event);\n      })(\"selectFocusedIndex\", function MatTabGroup_Template_mat_tab_header_selectFocusedIndex_0_listener($event) {\n        return ctx.selectedIndex = $event;\n      });\n      ɵngcc0.ɵɵtemplate(2, MatTabGroup_div_2_Template, 4, 14, \"div\", 2);\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵelementStart(3, \"div\", 3, 4);\n      ɵngcc0.ɵɵtemplate(5, MatTabGroup_mat_tab_body_5_Template, 1, 8, \"mat-tab-body\", 5);\n      ɵngcc0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵproperty(\"selectedIndex\", ctx.selectedIndex)(\"disableRipple\", ctx.disableRipple);\n      ɵngcc0.ɵɵadvance(2);\n      ɵngcc0.ɵɵproperty(\"ngForOf\", ctx._tabs);\n      ɵngcc0.ɵɵadvance(3);\n      ɵngcc0.ɵɵproperty(\"ngForOf\", ctx._tabs);\n    }\n  },\n  dependencies: [ɵngcc6.NgForOf, ɵngcc6.NgIf, ɵngcc7.CdkPortalOutlet, ɵngcc4.MatRipple, ɵngcc8.CdkMonitorFocus, MatTabLabelWrapper, MatTabBody, MatTabHeader],\n  styles: [\".mat-tab-group{display:flex;flex-direction:column}.mat-tab-group.mat-tab-group-inverted-header{flex-direction:column-reverse}.mat-tab-label{height:48px;padding:0 24px;cursor:pointer;box-sizing:border-box;opacity:.6;min-width:160px;text-align:center;display:inline-flex;justify-content:center;align-items:center;white-space:nowrap;position:relative}.mat-tab-label:focus{outline:0}.mat-tab-label:focus:not(.mat-tab-disabled){opacity:1}@media (-ms-high-contrast:active){.mat-tab-label:focus{outline:dotted 2px}}.mat-tab-label.mat-tab-disabled{cursor:default}@media (-ms-high-contrast:active){.mat-tab-label.mat-tab-disabled{opacity:.5}}.mat-tab-label .mat-tab-label-content{display:inline-flex;justify-content:center;align-items:center;white-space:nowrap}@media (-ms-high-contrast:active){.mat-tab-label{opacity:1}}@media (max-width:599px){.mat-tab-label{padding:0 12px}}@media (max-width:959px){.mat-tab-label{padding:0 12px}}.mat-tab-group[mat-stretch-tabs]>.mat-tab-header .mat-tab-label{flex-basis:0;flex-grow:1}.mat-tab-body-wrapper{position:relative;overflow:hidden;display:flex;transition:height .5s cubic-bezier(.35,0,.25,1)}.mat-tab-body{top:0;left:0;right:0;bottom:0;position:absolute;display:block;overflow:hidden;flex-basis:100%}.mat-tab-body.mat-tab-body-active{position:relative;overflow-x:hidden;overflow-y:auto;z-index:1;flex-grow:1}.mat-tab-group.mat-tab-group-dynamic-height .mat-tab-body.mat-tab-body-active{overflow-y:hidden}\"],\n  encapsulation: 2,\n  changeDetection: 0\n});\n/** @nocollapse */\n\nMatTabGroup.ctorParameters = () => [{\n  type: ElementRef\n}, {\n  type: ChangeDetectorRef\n}, {\n  type: undefined,\n  decorators: [{\n    type: Inject,\n    args: [MAT_TABS_CONFIG]\n  }, {\n    type: Optional\n  }]\n}];\n\nMatTabGroup.propDecorators = {\n  _tabs: [{\n    type: ContentChildren,\n    args: [MatTab]\n  }],\n  _tabBodyWrapper: [{\n    type: ViewChild,\n    args: ['tabBodyWrapper']\n  }],\n  _tabHeader: [{\n    type: ViewChild,\n    args: ['tabHeader']\n  }],\n  dynamicHeight: [{\n    type: Input\n  }],\n  selectedIndex: [{\n    type: Input\n  }],\n  headerPosition: [{\n    type: Input\n  }],\n  animationDuration: [{\n    type: Input\n  }],\n  backgroundColor: [{\n    type: Input\n  }],\n  selectedIndexChange: [{\n    type: Output\n  }],\n  focusChange: [{\n    type: Output\n  }],\n  animationDone: [{\n    type: Output\n  }],\n  selectedTabChange: [{\n    type: Output\n  }]\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatTabGroup, [{\n    type: Component,\n    args: [{\n      selector: 'mat-tab-group',\n      exportAs: 'matTabGroup',\n      template: \"<mat-tab-header #tabHeader [selectedIndex]=\\\"selectedIndex\\\" [disableRipple]=\\\"disableRipple\\\" (indexFocused)=\\\"_focusChanged($event)\\\" (selectFocusedIndex)=\\\"selectedIndex = $event\\\"><div class=\\\"mat-tab-label\\\" role=\\\"tab\\\" matTabLabelWrapper mat-ripple cdkMonitorElementFocus *ngFor=\\\"let tab of _tabs; let i = index\\\" [id]=\\\"_getTabLabelId(i)\\\" [attr.tabIndex]=\\\"_getTabIndex(tab, i)\\\" [attr.aria-posinset]=\\\"i + 1\\\" [attr.aria-setsize]=\\\"_tabs.length\\\" [attr.aria-controls]=\\\"_getTabContentId(i)\\\" [attr.aria-selected]=\\\"selectedIndex == i\\\" [attr.aria-label]=\\\"tab.ariaLabel || null\\\" [attr.aria-labelledby]=\\\"(!tab.ariaLabel && tab.ariaLabelledby) ? tab.ariaLabelledby : null\\\" [class.mat-tab-label-active]=\\\"selectedIndex == i\\\" [disabled]=\\\"tab.disabled\\\" [matRippleDisabled]=\\\"tab.disabled || disableRipple\\\" (click)=\\\"_handleClick(tab, tabHeader, i)\\\"><div class=\\\"mat-tab-label-content\\\"><ng-template [ngIf]=\\\"tab.templateLabel\\\"><ng-template [cdkPortalOutlet]=\\\"tab.templateLabel\\\"></ng-template></ng-template><ng-template [ngIf]=\\\"!tab.templateLabel\\\">{{tab.textLabel}}</ng-template></div></div></mat-tab-header><div class=\\\"mat-tab-body-wrapper\\\" #tabBodyWrapper><mat-tab-body role=\\\"tabpanel\\\" *ngFor=\\\"let tab of _tabs; let i = index\\\" [id]=\\\"_getTabContentId(i)\\\" [attr.aria-labelledby]=\\\"_getTabLabelId(i)\\\" [class.mat-tab-body-active]=\\\"selectedIndex == i\\\" [content]=\\\"tab.content\\\" [position]=\\\"tab.position\\\" [origin]=\\\"tab.origin\\\" [animationDuration]=\\\"animationDuration\\\" (_onCentered)=\\\"_removeTabBodyWrapperHeight()\\\" (_onCentering)=\\\"_setTabBodyWrapperHeight($event)\\\"></mat-tab-body></div>\",\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      inputs: ['color', 'disableRipple'],\n      host: {\n        'class': 'mat-tab-group',\n        '[class.mat-tab-group-dynamic-height]': 'dynamicHeight',\n        '[class.mat-tab-group-inverted-header]': 'headerPosition === \"below\"'\n      },\n      styles: [\".mat-tab-group{display:flex;flex-direction:column}.mat-tab-group.mat-tab-group-inverted-header{flex-direction:column-reverse}.mat-tab-label{height:48px;padding:0 24px;cursor:pointer;box-sizing:border-box;opacity:.6;min-width:160px;text-align:center;display:inline-flex;justify-content:center;align-items:center;white-space:nowrap;position:relative}.mat-tab-label:focus{outline:0}.mat-tab-label:focus:not(.mat-tab-disabled){opacity:1}@media (-ms-high-contrast:active){.mat-tab-label:focus{outline:dotted 2px}}.mat-tab-label.mat-tab-disabled{cursor:default}@media (-ms-high-contrast:active){.mat-tab-label.mat-tab-disabled{opacity:.5}}.mat-tab-label .mat-tab-label-content{display:inline-flex;justify-content:center;align-items:center;white-space:nowrap}@media (-ms-high-contrast:active){.mat-tab-label{opacity:1}}@media (max-width:599px){.mat-tab-label{padding:0 12px}}@media (max-width:959px){.mat-tab-label{padding:0 12px}}.mat-tab-group[mat-stretch-tabs]>.mat-tab-header .mat-tab-label{flex-basis:0;flex-grow:1}.mat-tab-body-wrapper{position:relative;overflow:hidden;display:flex;transition:height .5s cubic-bezier(.35,0,.25,1)}.mat-tab-body{top:0;left:0;right:0;bottom:0;position:absolute;display:block;overflow:hidden;flex-basis:100%}.mat-tab-body.mat-tab-body-active{position:relative;overflow-x:hidden;overflow-y:auto;z-index:1;flex-grow:1}.mat-tab-group.mat-tab-group-dynamic-height .mat-tab-body.mat-tab-body-active{overflow-y:hidden}\"]\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.ElementRef\n    }, {\n      type: ɵngcc0.ChangeDetectorRef\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [MAT_TABS_CONFIG]\n      }, {\n        type: Optional\n      }]\n    }];\n  }, {\n    headerPosition: [{\n      type: Input\n    }],\n    selectedIndexChange: [{\n      type: Output\n    }],\n    focusChange: [{\n      type: Output\n    }],\n    animationDone: [{\n      type: Output\n    }],\n    selectedTabChange: [{\n      type: Output\n    }],\n    animationDuration: [{\n      type: Input\n    }],\n    dynamicHeight: [{\n      type: Input\n    }],\n    selectedIndex: [{\n      type: Input\n    }],\n    backgroundColor: [{\n      type: Input\n    }],\n    _tabs: [{\n      type: ContentChildren,\n      args: [MatTab]\n    }],\n    _tabBodyWrapper: [{\n      type: ViewChild,\n      args: ['tabBodyWrapper']\n    }],\n    _tabHeader: [{\n      type: ViewChild,\n      args: ['tabHeader']\n    }]\n  });\n})();\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// Boilerplate for applying mixins to MatTabNav.\n\n/**\n * \\@docs-private\n */\n\n\nclass MatTabNavBase {\n  /**\n   * @param {?} _elementRef\n   */\n  constructor(_elementRef) {\n    this._elementRef = _elementRef;\n  }\n\n}\n/** @type {?} */\n\n\nconst _MatTabNavMixinBase = mixinDisableRipple(mixinColor(MatTabNavBase, 'primary'));\n/**\n * Navigation component matching the styles of the tab group header.\n * Provides anchored navigation with animated ink bar.\n */\n\n\nclass MatTabNav extends _MatTabNavMixinBase {\n  /**\n   * @param {?} elementRef\n   * @param {?} _dir\n   * @param {?} _ngZone\n   * @param {?} _changeDetectorRef\n   * @param {?} _viewportRuler\n   */\n  constructor(elementRef, _dir, _ngZone, _changeDetectorRef, _viewportRuler) {\n    super(elementRef);\n    this._dir = _dir;\n    this._ngZone = _ngZone;\n    this._changeDetectorRef = _changeDetectorRef;\n    this._viewportRuler = _viewportRuler;\n    /**\n     * Subject that emits when the component has been destroyed.\n     */\n\n    this._onDestroy = new Subject();\n  }\n  /**\n   * Background color of the tab nav.\n   * @return {?}\n   */\n\n\n  get backgroundColor() {\n    return this._backgroundColor;\n  }\n  /**\n   * @param {?} value\n   * @return {?}\n   */\n\n\n  set backgroundColor(value) {\n    /** @type {?} */\n    const nativeElement = this._elementRef.nativeElement;\n    nativeElement.classList.remove(`mat-background-${this.backgroundColor}`);\n\n    if (value) {\n      nativeElement.classList.add(`mat-background-${value}`);\n    }\n\n    this._backgroundColor = value;\n  }\n  /**\n   * Notifies the component that the active link has been changed.\n   * \\@breaking-change 8.0.0 `element` parameter to be removed.\n   * @param {?} element\n   * @return {?}\n   */\n\n\n  updateActiveLink(element) {\n    // Note: keeping the `element` for backwards-compat, but isn't being used for anything.\n    // @breaking-change 8.0.0\n    this._activeLinkChanged = !!element;\n\n    this._changeDetectorRef.markForCheck();\n  }\n  /**\n   * @return {?}\n   */\n\n\n  ngAfterContentInit() {\n    this._ngZone.runOutsideAngular(() => {\n      /** @type {?} */\n      const dirChange = this._dir ? this._dir.change : of(null);\n      return merge(dirChange, this._viewportRuler.change(10)).pipe(takeUntil(this._onDestroy)).subscribe(() => this._alignInkBar());\n    });\n  }\n  /**\n   * Checks if the active link has been changed and, if so, will update the ink bar.\n   * @return {?}\n   */\n\n\n  ngAfterContentChecked() {\n    if (this._activeLinkChanged) {\n      /** @type {?} */\n      const activeTab = this._tabLinks.find(tab => tab.active);\n\n      this._activeLinkElement = activeTab ? activeTab._elementRef : null;\n\n      this._alignInkBar();\n\n      this._activeLinkChanged = false;\n    }\n  }\n  /**\n   * @return {?}\n   */\n\n\n  ngOnDestroy() {\n    this._onDestroy.next();\n\n    this._onDestroy.complete();\n  }\n  /**\n   * Aligns the ink bar to the active link.\n   * @return {?}\n   */\n\n\n  _alignInkBar() {\n    if (this._activeLinkElement) {\n      this._inkBar.show();\n\n      this._inkBar.alignToElement(this._activeLinkElement.nativeElement);\n    } else {\n      this._inkBar.hide();\n    }\n  }\n\n}\n\nMatTabNav.ɵfac = function MatTabNav_Factory(t) {\n  return new (t || MatTabNav)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.ViewportRuler));\n};\n\nMatTabNav.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n  type: MatTabNav,\n  selectors: [[\"\", \"mat-tab-nav-bar\", \"\"]],\n  contentQueries: function MatTabNav_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵcontentQuery(dirIndex, MatTabLink, 5);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._tabLinks = _t);\n    }\n  },\n  viewQuery: function MatTabNav_Query(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵviewQuery(MatInkBar, 5);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._inkBar = _t.first);\n    }\n  },\n  hostAttrs: [1, \"mat-tab-nav-bar\"],\n  inputs: {\n    color: \"color\",\n    disableRipple: \"disableRipple\",\n    backgroundColor: \"backgroundColor\"\n  },\n  exportAs: [\"matTabNavBar\", \"matTabNav\"],\n  features: [ɵngcc0.ɵɵInheritDefinitionFeature],\n  attrs: _c9,\n  ngContentSelectors: _c0,\n  decls: 3,\n  vars: 0,\n  consts: [[1, \"mat-tab-links\", 3, \"cdkObserveContent\"]],\n  template: function MatTabNav_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵprojectionDef();\n      ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n      ɵngcc0.ɵɵlistener(\"cdkObserveContent\", function MatTabNav_Template_div_cdkObserveContent_0_listener() {\n        return ctx._alignInkBar();\n      });\n      ɵngcc0.ɵɵprojection(1);\n      ɵngcc0.ɵɵelement(2, \"mat-ink-bar\");\n      ɵngcc0.ɵɵelementEnd();\n    }\n  },\n  dependencies: [ɵngcc5.CdkObserveContent, MatInkBar],\n  styles: [\".mat-tab-nav-bar{overflow:hidden;position:relative;flex-shrink:0}.mat-tab-links{position:relative;display:flex}[mat-align-tabs=center] .mat-tab-links{justify-content:center}[mat-align-tabs=end] .mat-tab-links{justify-content:flex-end}.mat-tab-link{height:48px;padding:0 24px;cursor:pointer;box-sizing:border-box;opacity:.6;min-width:160px;text-align:center;display:inline-flex;justify-content:center;align-items:center;white-space:nowrap;vertical-align:top;text-decoration:none;position:relative;overflow:hidden;-webkit-tap-highlight-color:transparent}.mat-tab-link:focus{outline:0}.mat-tab-link:focus:not(.mat-tab-disabled){opacity:1}@media (-ms-high-contrast:active){.mat-tab-link:focus{outline:dotted 2px}}.mat-tab-link.mat-tab-disabled{cursor:default}@media (-ms-high-contrast:active){.mat-tab-link.mat-tab-disabled{opacity:.5}}.mat-tab-link .mat-tab-label-content{display:inline-flex;justify-content:center;align-items:center;white-space:nowrap}@media (-ms-high-contrast:active){.mat-tab-link{opacity:1}}[mat-stretch-tabs] .mat-tab-link{flex-basis:0;flex-grow:1}.mat-tab-link.mat-tab-disabled{pointer-events:none}@media (max-width:599px){.mat-tab-link{min-width:72px}}.mat-ink-bar{position:absolute;bottom:0;height:2px;transition:.5s cubic-bezier(.35,0,.25,1)}.mat-tab-group-inverted-header .mat-ink-bar{bottom:auto;top:0}@media (-ms-high-contrast:active){.mat-ink-bar{outline:solid 2px;height:0}}\"],\n  encapsulation: 2,\n  changeDetection: 0\n});\n/** @nocollapse */\n\nMatTabNav.ctorParameters = () => [{\n  type: ElementRef\n}, {\n  type: Directionality,\n  decorators: [{\n    type: Optional\n  }]\n}, {\n  type: NgZone\n}, {\n  type: ChangeDetectorRef\n}, {\n  type: ViewportRuler\n}];\n\nMatTabNav.propDecorators = {\n  _inkBar: [{\n    type: ViewChild,\n    args: [MatInkBar]\n  }],\n  _tabLinks: [{\n    type: ContentChildren,\n    args: [forwardRef(() => MatTabLink), {\n      descendants: true\n    }]\n  }],\n  backgroundColor: [{\n    type: Input\n  }]\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatTabNav, [{\n    type: Component,\n    args: [{\n      selector: '[mat-tab-nav-bar]',\n      exportAs: 'matTabNavBar, matTabNav',\n      inputs: ['color', 'disableRipple'],\n      template: \"<div class=\\\"mat-tab-links\\\" (cdkObserveContent)=\\\"_alignInkBar()\\\"><ng-content></ng-content><mat-ink-bar></mat-ink-bar></div>\",\n      host: {\n        'class': 'mat-tab-nav-bar'\n      },\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      styles: [\".mat-tab-nav-bar{overflow:hidden;position:relative;flex-shrink:0}.mat-tab-links{position:relative;display:flex}[mat-align-tabs=center] .mat-tab-links{justify-content:center}[mat-align-tabs=end] .mat-tab-links{justify-content:flex-end}.mat-tab-link{height:48px;padding:0 24px;cursor:pointer;box-sizing:border-box;opacity:.6;min-width:160px;text-align:center;display:inline-flex;justify-content:center;align-items:center;white-space:nowrap;vertical-align:top;text-decoration:none;position:relative;overflow:hidden;-webkit-tap-highlight-color:transparent}.mat-tab-link:focus{outline:0}.mat-tab-link:focus:not(.mat-tab-disabled){opacity:1}@media (-ms-high-contrast:active){.mat-tab-link:focus{outline:dotted 2px}}.mat-tab-link.mat-tab-disabled{cursor:default}@media (-ms-high-contrast:active){.mat-tab-link.mat-tab-disabled{opacity:.5}}.mat-tab-link .mat-tab-label-content{display:inline-flex;justify-content:center;align-items:center;white-space:nowrap}@media (-ms-high-contrast:active){.mat-tab-link{opacity:1}}[mat-stretch-tabs] .mat-tab-link{flex-basis:0;flex-grow:1}.mat-tab-link.mat-tab-disabled{pointer-events:none}@media (max-width:599px){.mat-tab-link{min-width:72px}}.mat-ink-bar{position:absolute;bottom:0;height:2px;transition:.5s cubic-bezier(.35,0,.25,1)}.mat-tab-group-inverted-header .mat-ink-bar{bottom:auto;top:0}@media (-ms-high-contrast:active){.mat-ink-bar{outline:solid 2px;height:0}}\"]\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.ElementRef\n    }, {\n      type: ɵngcc1.Directionality,\n      decorators: [{\n        type: Optional\n      }]\n    }, {\n      type: ɵngcc0.NgZone\n    }, {\n      type: ɵngcc0.ChangeDetectorRef\n    }, {\n      type: ɵngcc2.ViewportRuler\n    }];\n  }, {\n    backgroundColor: [{\n      type: Input\n    }],\n    _inkBar: [{\n      type: ViewChild,\n      args: [MatInkBar]\n    }],\n    _tabLinks: [{\n      type: ContentChildren,\n      args: [forwardRef(() => MatTabLink), {\n        descendants: true\n      }]\n    }]\n  });\n})(); // Boilerplate for applying mixins to MatTabLink.\n\n\nclass MatTabLinkBase {}\n/** @type {?} */\n\n\nconst _MatTabLinkMixinBase = mixinTabIndex(mixinDisableRipple(mixinDisabled(MatTabLinkBase)));\n/**\n * Link inside of a `mat-tab-nav-bar`.\n */\n\n\nclass MatTabLink extends _MatTabLinkMixinBase {\n  /**\n   * @param {?} _tabNavBar\n   * @param {?} _elementRef\n   * @param {?} ngZone\n   * @param {?} platform\n   * @param {?} globalRippleOptions\n   * @param {?} tabIndex\n   * @param {?=} _focusMonitor\n   */\n  constructor(_tabNavBar, _elementRef, ngZone, platform, globalRippleOptions, tabIndex, _focusMonitor) {\n    super();\n    this._tabNavBar = _tabNavBar;\n    this._elementRef = _elementRef;\n    this._focusMonitor = _focusMonitor;\n    /**\n     * Whether the tab link is active or not.\n     */\n\n    this._isActive = false;\n    this._tabLinkRipple = new RippleRenderer(this, ngZone, _elementRef, platform);\n\n    this._tabLinkRipple.setupTriggerEvents(_elementRef.nativeElement);\n\n    this.rippleConfig = globalRippleOptions || {};\n    this.tabIndex = parseInt(tabIndex) || 0;\n\n    if (_focusMonitor) {\n      _focusMonitor.monitor(_elementRef);\n    }\n  }\n  /**\n   * Whether the link is active.\n   * @return {?}\n   */\n\n\n  get active() {\n    return this._isActive;\n  }\n  /**\n   * @param {?} value\n   * @return {?}\n   */\n\n\n  set active(value) {\n    if (value !== this._isActive) {\n      this._isActive = value;\n\n      this._tabNavBar.updateActiveLink(this._elementRef);\n    }\n  }\n  /**\n   * Whether ripples are disabled on interaction.\n   * \\@docs-private\n   * @return {?}\n   */\n\n\n  get rippleDisabled() {\n    return this.disabled || this.disableRipple || this._tabNavBar.disableRipple || !!this.rippleConfig.disabled;\n  }\n  /**\n   * @return {?}\n   */\n\n\n  ngOnDestroy() {\n    this._tabLinkRipple._removeTriggerEvents();\n\n    if (this._focusMonitor) {\n      this._focusMonitor.stopMonitoring(this._elementRef);\n    }\n  }\n\n}\n\nMatTabLink.ɵfac = function MatTabLink_Factory(t) {\n  return new (t || MatTabLink)(ɵngcc0.ɵɵdirectiveInject(MatTabNav), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc3.Platform), ɵngcc0.ɵɵdirectiveInject(MAT_RIPPLE_GLOBAL_OPTIONS, 8), ɵngcc0.ɵɵinjectAttribute('tabindex'), ɵngcc0.ɵɵdirectiveInject(ɵngcc8.FocusMonitor));\n};\n\nMatTabLink.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n  type: MatTabLink,\n  selectors: [[\"\", \"mat-tab-link\", \"\"], [\"\", \"matTabLink\", \"\"]],\n  hostAttrs: [1, \"mat-tab-link\"],\n  hostVars: 7,\n  hostBindings: function MatTabLink_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      ɵngcc0.ɵɵattribute(\"aria-current\", ctx.active)(\"aria-disabled\", ctx.disabled.toString())(\"tabIndex\", ctx.tabIndex);\n      ɵngcc0.ɵɵclassProp(\"mat-tab-disabled\", ctx.disabled)(\"mat-tab-label-active\", ctx.active);\n    }\n  },\n  inputs: {\n    disabled: \"disabled\",\n    disableRipple: \"disableRipple\",\n    tabIndex: \"tabIndex\",\n    active: \"active\"\n  },\n  exportAs: [\"matTabLink\"],\n  features: [ɵngcc0.ɵɵInheritDefinitionFeature]\n});\n/** @nocollapse */\n\nMatTabLink.ctorParameters = () => [{\n  type: MatTabNav\n}, {\n  type: ElementRef\n}, {\n  type: NgZone\n}, {\n  type: Platform\n}, {\n  type: undefined,\n  decorators: [{\n    type: Optional\n  }, {\n    type: Inject,\n    args: [MAT_RIPPLE_GLOBAL_OPTIONS]\n  }]\n}, {\n  type: String,\n  decorators: [{\n    type: Attribute,\n    args: ['tabindex']\n  }]\n}, {\n  type: FocusMonitor\n}];\n\nMatTabLink.propDecorators = {\n  active: [{\n    type: Input\n  }]\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatTabLink, [{\n    type: Directive,\n    args: [{\n      selector: '[mat-tab-link], [matTabLink]',\n      exportAs: 'matTabLink',\n      inputs: ['disabled', 'disableRipple', 'tabIndex'],\n      host: {\n        'class': 'mat-tab-link',\n        '[attr.aria-current]': 'active',\n        '[attr.aria-disabled]': 'disabled.toString()',\n        '[attr.tabIndex]': 'tabIndex',\n        '[class.mat-tab-disabled]': 'disabled',\n        '[class.mat-tab-label-active]': 'active'\n      }\n    }]\n  }], function () {\n    return [{\n      type: MatTabNav\n    }, {\n      type: ɵngcc0.ElementRef\n    }, {\n      type: ɵngcc0.NgZone\n    }, {\n      type: ɵngcc3.Platform\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [MAT_RIPPLE_GLOBAL_OPTIONS]\n      }]\n    }, {\n      type: String,\n      decorators: [{\n        type: Attribute,\n        args: ['tabindex']\n      }]\n    }, {\n      type: ɵngcc8.FocusMonitor\n    }];\n  }, {\n    active: [{\n      type: Input\n    }]\n  });\n})();\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n\nclass MatTabsModule {}\n\nMatTabsModule.ɵfac = function MatTabsModule_Factory(t) {\n  return new (t || MatTabsModule)();\n};\n\nMatTabsModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n  type: MatTabsModule\n});\nMatTabsModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n  imports: [CommonModule, MatCommonModule, PortalModule, MatRippleModule, ObserversModule, A11yModule, MatCommonModule]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatTabsModule, [{\n    type: NgModule,\n    args: [{\n      imports: [CommonModule, MatCommonModule, PortalModule, MatRippleModule, ObserversModule, A11yModule],\n      // Don't export all components because some are only to be used internally.\n      exports: [MatCommonModule, MatTabGroup, MatTabLabel, MatTab, MatTabNav, MatTabLink, MatTabContent],\n      declarations: [MatTabGroup, MatTabLabel, MatTab, MatInkBar, MatTabLabelWrapper, MatTabNav, MatTabLink, MatTabBody, MatTabBodyPortal, MatTabHeader, MatTabContent]\n    }]\n  }], null, null);\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatTabsModule, {\n    declarations: function () {\n      return [MatTabGroup, MatTabLabel, MatTab, MatInkBar, MatTabLabelWrapper, MatTabNav, MatTabLink, MatTabBody, MatTabBodyPortal, MatTabHeader, MatTabContent];\n    },\n    imports: function () {\n      return [CommonModule, MatCommonModule, PortalModule, MatRippleModule, ObserversModule, A11yModule];\n    },\n    exports: function () {\n      return [MatCommonModule, MatTabGroup, MatTabLabel, MatTab, MatTabNav, MatTabLink, MatTabContent];\n    }\n  });\n})();\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n\nexport { MatInkBar, _MAT_INK_BAR_POSITIONER, MatTabBody, MatTabBodyPortal, MatTabHeader, MatTabLabelWrapper, MatTab, MatTabLabel, MatTabNav, MatTabLink, MatTabContent, MatTabsModule, MatTabChangeEvent, MAT_TABS_CONFIG, MatTabGroupBase, _MatTabGroupMixinBase, MatTabGroup, matTabsAnimations, _MAT_INK_BAR_POSITIONER_FACTORY as ɵa21, MatTabBase as ɵf21, _MatTabMixinBase as ɵg21, MatTabHeaderBase as ɵb21, _MatTabHeaderMixinBase as ɵc21, MatTabLabelWrapperBase as ɵd21, _MatTabLabelWrapperMixinBase as ɵe21, MatTabLinkBase as ɵj21, MatTabNavBase as ɵh21, _MatTabLinkMixinBase as ɵk21, _MatTabNavMixinBase as ɵi21 };","map":{"version":3,"names":["Directive","ElementRef","Inject","InjectionToken","NgZone","TemplateRef","ChangeDetectionStrategy","Component","ContentChild","Input","ViewChild","ViewContainerRef","ViewEncapsulation","ChangeDetectorRef","Output","EventEmitter","Optional","ComponentFactoryResolver","forwardRef","ContentChildren","Attribute","NgModule","CdkPortal","TemplatePortal","CdkPortalOutlet","PortalHostDirective","PortalModule","mixinDisabled","mixinDisableRipple","mixinColor","MAT_RIPPLE_GLOBAL_OPTIONS","mixinTabIndex","RippleRenderer","MatCommonModule","MatRippleModule","Subject","Subscription","merge","of","timer","fromEvent","animate","state","style","transition","trigger","Directionality","startWith","distinctUntilChanged","takeUntil","coerceNumberProperty","coerceBooleanProperty","END","ENTER","HOME","SPACE","hasModifierKey","ViewportRuler","FocusKeyManager","FocusMonitor","A11yModule","Platform","normalizePassiveListenerOptions","ObserversModule","CommonModule","ɵngcc0","ɵngcc1","ɵngcc2","ɵngcc3","ɵngcc4","ɵngcc5","ɵngcc6","ɵngcc7","ɵngcc8","MatTab_ng_template_0_Template","rf","ctx","ɵɵprojection","_c0","MatTabBody_ng_template_2_Template","_c1","a0","animationDuration","_c2","a1","value","params","_c3","_c4","_c5","_c6","_c7","_c8","MatTabGroup_div_2_ng_template_2_ng_template_0_Template","MatTabGroup_div_2_ng_template_2_Template","ɵɵtemplate","tab_r4","ɵɵnextContext","$implicit","ɵɵproperty","templateLabel","MatTabGroup_div_2_ng_template_3_Template","ɵɵtext","ɵɵtextInterpolate","textLabel","MatTabGroup_div_2_Template","_r12","ɵɵgetCurrentView","ɵɵelementStart","ɵɵlistener","MatTabGroup_div_2_Template_div_click_0_listener","restoredCtx","ɵɵrestoreView","i_r5","index","ctx_r11","_r0","ɵɵreference","ɵɵresetView","_handleClick","ɵɵelementEnd","ctx_r1","ɵɵclassProp","selectedIndex","_getTabLabelId","disabled","disableRipple","ɵɵattribute","_getTabIndex","_tabs","length","_getTabContentId","ariaLabel","ariaLabelledby","ɵɵadvance","MatTabGroup_mat_tab_body_5_Template","_r16","MatTabGroup_mat_tab_body_5_Template_mat_tab_body__onCentered_0_listener","ctx_r15","_removeTabBodyWrapperHeight","MatTabGroup_mat_tab_body_5_Template_mat_tab_body__onCentering_0_listener","$event","ctx_r17","_setTabBodyWrapperHeight","tab_r13","i_r14","ctx_r3","content","position","origin","_c9","_MAT_INK_BAR_POSITIONER","providedIn","factory","_MAT_INK_BAR_POSITIONER_FACTORY","method","element","left","offsetLeft","width","offsetWidth","MatInkBar","constructor","_elementRef","_ngZone","_inkBarPositioner","alignToElement","show","requestAnimationFrame","runOutsideAngular","_setStyles","nativeElement","visibility","hide","positions","inkBar","ɵfac","MatInkBar_Factory","t","ɵɵdirectiveInject","ɵdir","ɵɵdefineDirective","type","selectors","hostAttrs","ctorParameters","undefined","decorators","args","ngDevMode","ɵsetClassMetadata","selector","host","MatTabContent","template","MatTabContent_Factory","MatTabLabel","ɵMatTabLabel_BaseFactory","MatTabLabel_Factory","ɵɵgetInheritedFactory","features","ɵɵInheritDefinitionFeature","MatTabBase","_MatTabMixinBase","MatTab","_viewContainerRef","_contentPortal","_stateChanges","isActive","ngOnChanges","changes","hasOwnProperty","next","ngOnDestroy","complete","ngOnInit","_explicitContent","_implicitContent","MatTab_Factory","ɵcmp","ɵɵdefineComponent","contentQueries","MatTab_ContentQueries","dirIndex","ɵɵcontentQuery","_t","ɵɵqueryRefresh","ɵɵloadQuery","first","viewQuery","MatTab_Query","ɵɵviewQuery","inputs","exportAs","ɵɵNgOnChangesFeature","ngContentSelectors","decls","vars","MatTab_Template","ɵɵprojectionDef","encapsulation","changeDetection","propDecorators","read","OnPush","None","matTabsAnimations","translateTab","transform","minHeight","MatTabBodyPortal","componentFactoryResolver","viewContainerRef","_host","_centeringSub","EMPTY","_leavingSub","_beforeCentering","pipe","_isCenterPosition","_position","subscribe","isCentering","hasAttached","attach","_content","_afterLeavingCenter","detach","unsubscribe","MatTabBodyPortal_Factory","MatTabBody","_dir","changeDetectorRef","_dirChangeSubscription","_translateTabComplete","_onCentering","_onCentered","change","dir","_computePositionAnimationState","markForCheck","x","y","fromState","toState","event","emit","_positionIndex","_computePositionFromOrigin","_onTranslateTabStarted","clientHeight","_getLayoutDirection","MatTabBody_Factory","MatTabBody_Query","_portalHost","outputs","consts","MatTabBody_Template","MatTabBody_Template_div_animation_translateTab_start_0_listener","MatTabBody_Template_div_animation_translateTab_done_0_listener","ɵɵpureFunction2","ɵɵpureFunction1","dependencies","styles","data","animation","animations","MatTabLabelWrapperBase","_MatTabLabelWrapperMixinBase","MatTabLabelWrapper","elementRef","focus","getOffsetLeft","getOffsetWidth","MatTabLabelWrapper_Factory","hostVars","hostBindings","MatTabLabelWrapper_HostBindings","passiveEventListenerOptions","passive","EXAGGERATED_OVERSCROLL","HEADER_SCROLL_DELAY","HEADER_SCROLL_INTERVAL","MatTabHeaderBase","_MatTabHeaderMixinBase","MatTabHeader","_changeDetectorRef","_viewportRuler","_platform","_scrollDistance","_selectedIndexChanged","_destroyed","_showPaginationControls","_disableScrollAfter","_disableScrollBefore","_stopScrolling","_selectedIndex","selectFocusedIndex","indexFocused","bindEvent","_stopInterval","_keyManager","updateActiveItemIndex","ngAfterContentChecked","_tabLabelCount","_labelWrappers","updatePagination","_scrollToLabel","_checkScrollingControls","_alignInkBarToSelectedTab","_scrollDistanceChanged","_updateTabScrollPosition","_handleKeydown","keyCode","setFirstItemActive","preventDefault","setLastItemActive","focusIndex","onKeydown","ngAfterContentInit","dirChange","resize","realign","withHorizontalOrientation","withWrap","updateActiveItem","newFocusIndex","_setTabFocus","ngAfterViewInit","_previousPaginator","_handlePaginatorPress","_nextPaginator","_onContentChanges","textContent","_currentTextContent","zoneCallback","run","_checkPaginationEnabled","activeItemIndex","_isValidIndex","setActiveItem","tab","toArray","tabIndex","containerEl","_tabListContainer","scrollLeft","scrollWidth","scrollDistance","platform","translateX","_tabList","Math","round","TRIDENT","EDGE","_scrollTo","_scrollHeader","direction","viewLength","scrollAmount","_handlePaginatorClick","labelIndex","selectedLabel","labelBeforePos","labelAfterPos","beforeVisiblePos","afterVisiblePos","isEnabled","_getMaxScrollDistance","lengthOfTabList","selectedLabelWrapper","_inkBar","maxScrollDistance","distance","max","min","MatTabHeader_Factory","MatTabHeader_ContentQueries","MatTabHeader_Query","MatTabHeader_HostBindings","MatTabHeader_Template","MatTabHeader_Template_div_click_0_listener","MatTabHeader_Template_div_mousedown_0_listener","MatTabHeader_Template_div_touchend_0_listener","ɵɵelement","MatTabHeader_Template_div_keydown_3_listener","MatTabHeader_Template_div_cdkObserveContent_5_listener","MatTabHeader_Template_div_mousedown_10_listener","MatTabHeader_Template_div_click_10_listener","MatTabHeader_Template_div_touchend_10_listener","MatRipple","CdkObserveContent","nextId","MatTabChangeEvent","MAT_TABS_CONFIG","MatTabGroupBase","_MatTabGroupMixinBase","MatTabGroup","defaultConfig","_indexToSelect","_tabBodyWrapperHeight","_tabsSubscription","_tabLabelSubscription","_dynamicHeight","headerPosition","selectedIndexChange","focusChange","animationDone","selectedTabChange","_groupId","dynamicHeight","_animationDuration","test","backgroundColor","_backgroundColor","classList","remove","add","indexToSelect","_clampTabIndex","isFirstRun","_createChangeEvent","Promise","resolve","then","forEach","_subscribeToTabLabels","tabs","i","realignInkBar","_tabHeader","_focusChanged","map","tabHeight","wrapper","_tabBodyWrapper","height","offsetHeight","tabHeader","idx","MatTabGroup_Factory","MatTabGroup_ContentQueries","MatTabGroup_Query","MatTabGroup_HostBindings","color","MatTabGroup_Template","MatTabGroup_Template_mat_tab_header_indexFocused_0_listener","MatTabGroup_Template_mat_tab_header_selectFocusedIndex_0_listener","NgForOf","NgIf","CdkMonitorFocus","MatTabNavBase","_MatTabNavMixinBase","MatTabNav","_onDestroy","updateActiveLink","_activeLinkChanged","_alignInkBar","activeTab","_tabLinks","find","active","_activeLinkElement","MatTabNav_Factory","MatTabNav_ContentQueries","MatTabLink","MatTabNav_Query","attrs","MatTabNav_Template","MatTabNav_Template_div_cdkObserveContent_0_listener","descendants","MatTabLinkBase","_MatTabLinkMixinBase","_tabNavBar","ngZone","globalRippleOptions","_focusMonitor","_isActive","_tabLinkRipple","setupTriggerEvents","rippleConfig","parseInt","monitor","rippleDisabled","_removeTriggerEvents","stopMonitoring","MatTabLink_Factory","ɵɵinjectAttribute","MatTabLink_HostBindings","toString","String","MatTabsModule","MatTabsModule_Factory","ɵmod","ɵɵdefineNgModule","ɵinj","ɵɵdefineInjector","imports","exports","declarations","ngJitMode","ɵɵsetNgModuleScope","ɵa21","ɵf21","ɵg21","ɵb21","ɵc21","ɵd21","ɵe21","ɵj21","ɵh21","ɵk21","ɵi21"],"sources":["/Users/apple/Desktop/zepto/my_project/node_modules/@angular/material/__ivy_ngcc__/esm2015/tabs.js"],"sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { Directive, ElementRef, Inject, InjectionToken, NgZone, TemplateRef, ChangeDetectionStrategy, Component, ContentChild, Input, ViewChild, ViewContainerRef, ViewEncapsulation, ChangeDetectorRef, Output, EventEmitter, Optional, ComponentFactoryResolver, forwardRef, ContentChildren, Attribute, NgModule } from '@angular/core';\nimport { CdkPortal, TemplatePortal, CdkPortalOutlet, PortalHostDirective, PortalModule } from '@angular/cdk/portal';\nimport { mixinDisabled, mixinDisableRipple, mixinColor, MAT_RIPPLE_GLOBAL_OPTIONS, mixinTabIndex, RippleRenderer, MatCommonModule, MatRippleModule } from '@angular/material/core';\nimport { Subject, Subscription, merge, of, timer, fromEvent } from 'rxjs';\nimport { animate, state, style, transition, trigger } from '@angular/animations';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { startWith, distinctUntilChanged, takeUntil } from 'rxjs/operators';\nimport { coerceNumberProperty, coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { END, ENTER, HOME, SPACE, hasModifierKey } from '@angular/cdk/keycodes';\nimport { ViewportRuler } from '@angular/cdk/scrolling';\nimport { FocusKeyManager, FocusMonitor, A11yModule } from '@angular/cdk/a11y';\nimport { Platform, normalizePassiveListenerOptions } from '@angular/cdk/platform';\nimport { ObserversModule } from '@angular/cdk/observers';\nimport { CommonModule } from '@angular/common';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Injection token for the MatInkBar's Positioner.\n * @type {?}\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/bidi';\nimport * as ɵngcc2 from '@angular/cdk/scrolling';\nimport * as ɵngcc3 from '@angular/cdk/platform';\nimport * as ɵngcc4 from '@angular/material/core';\nimport * as ɵngcc5 from '@angular/cdk/observers';\nimport * as ɵngcc6 from '@angular/common';\nimport * as ɵngcc7 from '@angular/cdk/portal';\nimport * as ɵngcc8 from '@angular/cdk/a11y';\n\nfunction MatTab_ng_template_0_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵprojection(0);\n} }\nconst _c0 = [\"*\"];\nfunction MatTabBody_ng_template_2_Template(rf, ctx) { }\nconst _c1 = function (a0) { return { animationDuration: a0 }; };\nconst _c2 = function (a0, a1) { return { value: a0, params: a1 }; };\nconst _c3 = [\"tabListContainer\"];\nconst _c4 = [\"tabList\"];\nconst _c5 = [\"nextPaginator\"];\nconst _c6 = [\"previousPaginator\"];\nconst _c7 = [\"tabBodyWrapper\"];\nconst _c8 = [\"tabHeader\"];\nfunction MatTabGroup_div_2_ng_template_2_ng_template_0_Template(rf, ctx) { }\nfunction MatTabGroup_div_2_ng_template_2_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵtemplate(0, MatTabGroup_div_2_ng_template_2_ng_template_0_Template, 0, 0, \"ng-template\", 9);\n} if (rf & 2) {\n    const tab_r4 = ɵngcc0.ɵɵnextContext().$implicit;\n    ɵngcc0.ɵɵproperty(\"cdkPortalOutlet\", tab_r4.templateLabel);\n} }\nfunction MatTabGroup_div_2_ng_template_3_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵtext(0);\n} if (rf & 2) {\n    const tab_r4 = ɵngcc0.ɵɵnextContext().$implicit;\n    ɵngcc0.ɵɵtextInterpolate(tab_r4.textLabel);\n} }\nfunction MatTabGroup_div_2_Template(rf, ctx) { if (rf & 1) {\n    const _r12 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"div\", 6);\n    ɵngcc0.ɵɵlistener(\"click\", function MatTabGroup_div_2_Template_div_click_0_listener() { const restoredCtx = ɵngcc0.ɵɵrestoreView(_r12); const tab_r4 = restoredCtx.$implicit; const i_r5 = restoredCtx.index; const ctx_r11 = ɵngcc0.ɵɵnextContext(); const _r0 = ɵngcc0.ɵɵreference(1); return ɵngcc0.ɵɵresetView(ctx_r11._handleClick(tab_r4, _r0, i_r5)); });\n    ɵngcc0.ɵɵelementStart(1, \"div\", 7);\n    ɵngcc0.ɵɵtemplate(2, MatTabGroup_div_2_ng_template_2_Template, 1, 1, \"ng-template\", 8);\n    ɵngcc0.ɵɵtemplate(3, MatTabGroup_div_2_ng_template_3_Template, 1, 1, \"ng-template\", 8);\n    ɵngcc0.ɵɵelementEnd()();\n} if (rf & 2) {\n    const tab_r4 = ctx.$implicit;\n    const i_r5 = ctx.index;\n    const ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵclassProp(\"mat-tab-label-active\", ctx_r1.selectedIndex == i_r5);\n    ɵngcc0.ɵɵproperty(\"id\", ctx_r1._getTabLabelId(i_r5))(\"disabled\", tab_r4.disabled)(\"matRippleDisabled\", tab_r4.disabled || ctx_r1.disableRipple);\n    ɵngcc0.ɵɵattribute(\"tabIndex\", ctx_r1._getTabIndex(tab_r4, i_r5))(\"aria-posinset\", i_r5 + 1)(\"aria-setsize\", ctx_r1._tabs.length)(\"aria-controls\", ctx_r1._getTabContentId(i_r5))(\"aria-selected\", ctx_r1.selectedIndex == i_r5)(\"aria-label\", tab_r4.ariaLabel || null)(\"aria-labelledby\", !tab_r4.ariaLabel && tab_r4.ariaLabelledby ? tab_r4.ariaLabelledby : null);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"ngIf\", tab_r4.templateLabel);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", !tab_r4.templateLabel);\n} }\nfunction MatTabGroup_mat_tab_body_5_Template(rf, ctx) { if (rf & 1) {\n    const _r16 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"mat-tab-body\", 10);\n    ɵngcc0.ɵɵlistener(\"_onCentered\", function MatTabGroup_mat_tab_body_5_Template_mat_tab_body__onCentered_0_listener() { ɵngcc0.ɵɵrestoreView(_r16); const ctx_r15 = ɵngcc0.ɵɵnextContext(); return ɵngcc0.ɵɵresetView(ctx_r15._removeTabBodyWrapperHeight()); })(\"_onCentering\", function MatTabGroup_mat_tab_body_5_Template_mat_tab_body__onCentering_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r16); const ctx_r17 = ɵngcc0.ɵɵnextContext(); return ɵngcc0.ɵɵresetView(ctx_r17._setTabBodyWrapperHeight($event)); });\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const tab_r13 = ctx.$implicit;\n    const i_r14 = ctx.index;\n    const ctx_r3 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵclassProp(\"mat-tab-body-active\", ctx_r3.selectedIndex == i_r14);\n    ɵngcc0.ɵɵproperty(\"id\", ctx_r3._getTabContentId(i_r14))(\"content\", tab_r13.content)(\"position\", tab_r13.position)(\"origin\", tab_r13.origin)(\"animationDuration\", ctx_r3.animationDuration);\n    ɵngcc0.ɵɵattribute(\"aria-labelledby\", ctx_r3._getTabLabelId(i_r14));\n} }\nconst _c9 = [\"mat-tab-nav-bar\", \"\"];\nconst _MAT_INK_BAR_POSITIONER = new InjectionToken('MatInkBarPositioner', {\n    providedIn: 'root',\n    factory: _MAT_INK_BAR_POSITIONER_FACTORY\n});\n/**\n * The default positioner function for the MatInkBar.\n * \\@docs-private\n * @return {?}\n */\nfunction _MAT_INK_BAR_POSITIONER_FACTORY() {\n    /** @type {?} */\n    const method = (element) => ({\n        left: element ? (element.offsetLeft || 0) + 'px' : '0',\n        width: element ? (element.offsetWidth || 0) + 'px' : '0',\n    });\n    return method;\n}\n/**\n * The ink-bar is used to display and animate the line underneath the current active tab label.\n * \\@docs-private\n */\nclass MatInkBar {\n    /**\n     * @param {?} _elementRef\n     * @param {?} _ngZone\n     * @param {?} _inkBarPositioner\n     */\n    constructor(_elementRef, _ngZone, _inkBarPositioner) {\n        this._elementRef = _elementRef;\n        this._ngZone = _ngZone;\n        this._inkBarPositioner = _inkBarPositioner;\n    }\n    /**\n     * Calculates the styles from the provided element in order to align the ink-bar to that element.\n     * Shows the ink bar if previously set as hidden.\n     * @param {?} element\n     * @return {?}\n     */\n    alignToElement(element) {\n        this.show();\n        if (typeof requestAnimationFrame !== 'undefined') {\n            this._ngZone.runOutsideAngular(() => {\n                requestAnimationFrame(() => this._setStyles(element));\n            });\n        }\n        else {\n            this._setStyles(element);\n        }\n    }\n    /**\n     * Shows the ink bar.\n     * @return {?}\n     */\n    show() {\n        this._elementRef.nativeElement.style.visibility = 'visible';\n    }\n    /**\n     * Hides the ink bar.\n     * @return {?}\n     */\n    hide() {\n        this._elementRef.nativeElement.style.visibility = 'hidden';\n    }\n    /**\n     * Sets the proper styles to the ink bar element.\n     * @private\n     * @param {?} element\n     * @return {?}\n     */\n    _setStyles(element) {\n        /** @type {?} */\n        const positions = this._inkBarPositioner(element);\n        /** @type {?} */\n        const inkBar = this._elementRef.nativeElement;\n        inkBar.style.left = positions.left;\n        inkBar.style.width = positions.width;\n    }\n}\nMatInkBar.ɵfac = function MatInkBar_Factory(t) { return new (t || MatInkBar)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(_MAT_INK_BAR_POSITIONER)); };\nMatInkBar.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: MatInkBar, selectors: [[\"mat-ink-bar\"]], hostAttrs: [1, \"mat-ink-bar\"] });\n/** @nocollapse */\nMatInkBar.ctorParameters = () => [\n    { type: ElementRef },\n    { type: NgZone },\n    { type: undefined, decorators: [{ type: Inject, args: [_MAT_INK_BAR_POSITIONER,] }] }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatInkBar, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-ink-bar',\n                host: {\n                    'class': 'mat-ink-bar'\n                }\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [_MAT_INK_BAR_POSITIONER]\n            }] }]; }, null); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Decorates the `ng-template` tags and reads out the template from it.\n */\nclass MatTabContent {\n    /**\n     * @param {?} template\n     */\n    constructor(template) {\n        this.template = template;\n    }\n}\nMatTabContent.ɵfac = function MatTabContent_Factory(t) { return new (t || MatTabContent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef)); };\nMatTabContent.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: MatTabContent, selectors: [[\"\", \"matTabContent\", \"\"]] });\n/** @nocollapse */\nMatTabContent.ctorParameters = () => [\n    { type: TemplateRef }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatTabContent, [{\n        type: Directive,\n        args: [{ selector: '[matTabContent]' }]\n    }], function () { return [{ type: ɵngcc0.TemplateRef }]; }, null); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Used to flag tab labels for use with the portal directive\n */\nclass MatTabLabel extends CdkPortal {\n}\nMatTabLabel.ɵfac = /*@__PURE__*/ function () { let ɵMatTabLabel_BaseFactory; return function MatTabLabel_Factory(t) { return (ɵMatTabLabel_BaseFactory || (ɵMatTabLabel_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatTabLabel)))(t || MatTabLabel); }; }();\nMatTabLabel.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: MatTabLabel, selectors: [[\"\", \"mat-tab-label\", \"\"], [\"\", \"matTabLabel\", \"\"]], features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatTabLabel, [{\n        type: Directive,\n        args: [{\n                selector: '[mat-tab-label], [matTabLabel]'\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// Boilerplate for applying mixins to MatTab.\n/**\n * \\@docs-private\n */\nclass MatTabBase {\n}\n/** @type {?} */\nconst _MatTabMixinBase = mixinDisabled(MatTabBase);\nclass MatTab extends _MatTabMixinBase {\n    /**\n     * @param {?} _viewContainerRef\n     */\n    constructor(_viewContainerRef) {\n        super();\n        this._viewContainerRef = _viewContainerRef;\n        /**\n         * Plain text label for the tab, used when there is no template label.\n         */\n        this.textLabel = '';\n        /**\n         * Portal that will be the hosted content of the tab\n         */\n        this._contentPortal = null;\n        /**\n         * Emits whenever the internal state of the tab changes.\n         */\n        this._stateChanges = new Subject();\n        /**\n         * The relatively indexed position where 0 represents the center, negative is left, and positive\n         * represents the right.\n         */\n        this.position = null;\n        /**\n         * The initial relatively index origin of the tab if it was created and selected after there\n         * was already a selected tab. Provides context of what position the tab should originate from.\n         */\n        this.origin = null;\n        /**\n         * Whether the tab is currently active.\n         */\n        this.isActive = false;\n    }\n    /**\n     * \\@docs-private\n     * @return {?}\n     */\n    get content() {\n        return this._contentPortal;\n    }\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    ngOnChanges(changes) {\n        if (changes.hasOwnProperty('textLabel') || changes.hasOwnProperty('disabled')) {\n            this._stateChanges.next();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._stateChanges.complete();\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        this._contentPortal = new TemplatePortal(this._explicitContent || this._implicitContent, this._viewContainerRef);\n    }\n}\nMatTab.ɵfac = function MatTab_Factory(t) { return new (t || MatTab)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef)); };\nMatTab.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: MatTab, selectors: [[\"mat-tab\"]], contentQueries: function MatTab_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatTabLabel, 5);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatTabContent, 5, TemplateRef);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.templateLabel = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._explicitContent = _t.first);\n    } }, viewQuery: function MatTab_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(TemplateRef, 5);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._implicitContent = _t.first);\n    } }, inputs: { disabled: \"disabled\", textLabel: [\"label\", \"textLabel\"], ariaLabel: [\"aria-label\", \"ariaLabel\"], ariaLabelledby: [\"aria-labelledby\", \"ariaLabelledby\"] }, exportAs: [\"matTab\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature, ɵngcc0.ɵɵNgOnChangesFeature], ngContentSelectors: _c0, decls: 1, vars: 0, template: function MatTab_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵtemplate(0, MatTab_ng_template_0_Template, 1, 0, \"ng-template\");\n    } }, encapsulation: 2, changeDetection: 0 });\n/** @nocollapse */\nMatTab.ctorParameters = () => [\n    { type: ViewContainerRef }\n];\nMatTab.propDecorators = {\n    templateLabel: [{ type: ContentChild, args: [MatTabLabel,] }],\n    _explicitContent: [{ type: ContentChild, args: [MatTabContent, { read: TemplateRef },] }],\n    _implicitContent: [{ type: ViewChild, args: [TemplateRef,] }],\n    textLabel: [{ type: Input, args: ['label',] }],\n    ariaLabel: [{ type: Input, args: ['aria-label',] }],\n    ariaLabelledby: [{ type: Input, args: ['aria-labelledby',] }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatTab, [{\n        type: Component,\n        args: [{ selector: 'mat-tab',\n                template: \"<ng-template><ng-content></ng-content></ng-template>\",\n                inputs: ['disabled'],\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                encapsulation: ViewEncapsulation.None,\n                exportAs: 'matTab'\n            }]\n    }], function () { return [{ type: ɵngcc0.ViewContainerRef }]; }, { textLabel: [{\n            type: Input,\n            args: ['label']\n        }], templateLabel: [{\n            type: ContentChild,\n            args: [MatTabLabel]\n        }], _explicitContent: [{\n            type: ContentChild,\n            args: [MatTabContent, { read: TemplateRef }]\n        }], _implicitContent: [{\n            type: ViewChild,\n            args: [TemplateRef]\n        }], ariaLabel: [{\n            type: Input,\n            args: ['aria-label']\n        }], ariaLabelledby: [{\n            type: Input,\n            args: ['aria-labelledby']\n        }] }); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Animations used by the Material tabs.\n * \\@docs-private\n * @type {?}\n */\nconst matTabsAnimations = {\n    /**\n     * Animation translates a tab along the X axis.\n     */\n    translateTab: trigger('translateTab', [\n        // Note: transitions to `none` instead of 0, because some browsers might blur the content.\n        state('center, void, left-origin-center, right-origin-center', style({ transform: 'none' })),\n        // If the tab is either on the left or right, we additionally add a `min-height` of 1px\n        // in order to ensure that the element has a height before its state changes. This is\n        // necessary because Chrome does seem to skip the transition in RTL mode if the element does\n        // not have a static height and is not rendered. See related issue: #9465\n        state('left', style({ transform: 'translate3d(-100%, 0, 0)', minHeight: '1px' })),\n        state('right', style({ transform: 'translate3d(100%, 0, 0)', minHeight: '1px' })),\n        transition('* => left, * => right, left => center, right => center', animate('{{animationDuration}} cubic-bezier(0.35, 0, 0.25, 1)')),\n        transition('void => left-origin-center', [\n            style({ transform: 'translate3d(-100%, 0, 0)' }),\n            animate('{{animationDuration}} cubic-bezier(0.35, 0, 0.25, 1)')\n        ]),\n        transition('void => right-origin-center', [\n            style({ transform: 'translate3d(100%, 0, 0)' }),\n            animate('{{animationDuration}} cubic-bezier(0.35, 0, 0.25, 1)')\n        ])\n    ])\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * The portal host directive for the contents of the tab.\n * \\@docs-private\n */\nclass MatTabBodyPortal extends CdkPortalOutlet {\n    /**\n     * @param {?} componentFactoryResolver\n     * @param {?} viewContainerRef\n     * @param {?} _host\n     */\n    constructor(componentFactoryResolver, viewContainerRef, _host) {\n        super(componentFactoryResolver, viewContainerRef);\n        this._host = _host;\n        /**\n         * Subscription to events for when the tab body begins centering.\n         */\n        this._centeringSub = Subscription.EMPTY;\n        /**\n         * Subscription to events for when the tab body finishes leaving from center position.\n         */\n        this._leavingSub = Subscription.EMPTY;\n    }\n    /**\n     * Set initial visibility or set up subscription for changing visibility.\n     * @return {?}\n     */\n    ngOnInit() {\n        super.ngOnInit();\n        this._centeringSub = this._host._beforeCentering\n            .pipe(startWith(this._host._isCenterPosition(this._host._position)))\n            .subscribe((isCentering) => {\n            if (isCentering && !this.hasAttached()) {\n                this.attach(this._host._content);\n            }\n        });\n        this._leavingSub = this._host._afterLeavingCenter.subscribe(() => {\n            this.detach();\n        });\n    }\n    /**\n     * Clean up centering subscription.\n     * @return {?}\n     */\n    ngOnDestroy() {\n        super.ngOnDestroy();\n        this._centeringSub.unsubscribe();\n        this._leavingSub.unsubscribe();\n    }\n}\nMatTabBodyPortal.ɵfac = function MatTabBodyPortal_Factory(t) { return new (t || MatTabBodyPortal)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ComponentFactoryResolver), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(forwardRef(() => MatTabBody))); };\nMatTabBodyPortal.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: MatTabBodyPortal, selectors: [[\"\", \"matTabBodyHost\", \"\"]], features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\n/** @nocollapse */\nMatTabBodyPortal.ctorParameters = () => [\n    { type: ComponentFactoryResolver },\n    { type: ViewContainerRef },\n    { type: MatTabBody, decorators: [{ type: Inject, args: [forwardRef(() => MatTabBody),] }] }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatTabBodyPortal, [{\n        type: Directive,\n        args: [{\n                selector: '[matTabBodyHost]'\n            }]\n    }], function () { return [{ type: ɵngcc0.ComponentFactoryResolver }, { type: ɵngcc0.ViewContainerRef }, { type: MatTabBody, decorators: [{\n                type: Inject,\n                args: [forwardRef(() => MatTabBody)]\n            }] }]; }, null); })();\n/**\n * Wrapper for the contents of a tab.\n * \\@docs-private\n */\nclass MatTabBody {\n    /**\n     * @param {?} _elementRef\n     * @param {?} _dir\n     * @param {?=} changeDetectorRef\n     */\n    constructor(_elementRef, _dir, \n    /**\n     * @breaking-change 8.0.0 changeDetectorRef to be made required.\n     */\n    changeDetectorRef) {\n        this._elementRef = _elementRef;\n        this._dir = _dir;\n        /**\n         * Subscription to the directionality change observable.\n         */\n        this._dirChangeSubscription = Subscription.EMPTY;\n        /**\n         * Emits when an animation on the tab is complete.\n         */\n        this._translateTabComplete = new Subject();\n        /**\n         * Event emitted when the tab begins to animate towards the center as the active tab.\n         */\n        this._onCentering = new EventEmitter();\n        /**\n         * Event emitted before the centering of the tab begins.\n         */\n        this._beforeCentering = new EventEmitter();\n        /**\n         * Event emitted before the centering of the tab begins.\n         */\n        this._afterLeavingCenter = new EventEmitter();\n        /**\n         * Event emitted when the tab completes its animation towards the center.\n         */\n        this._onCentered = new EventEmitter(true);\n        // Note that the default value will always be overwritten by `MatTabBody`, but we need one\n        // anyway to prevent the animations module from throwing an error if the body is used on its own.\n        /**\n         * Duration for the tab's animation.\n         */\n        this.animationDuration = '500ms';\n        if (this._dir && changeDetectorRef) {\n            this._dirChangeSubscription = this._dir.change.subscribe((dir) => {\n                this._computePositionAnimationState(dir);\n                changeDetectorRef.markForCheck();\n            });\n        }\n        // Ensure that we get unique animation events, because the `.done` callback can get\n        // invoked twice in some browsers. See https://github.com/angular/angular/issues/24084.\n        this._translateTabComplete.pipe(distinctUntilChanged((x, y) => {\n            return x.fromState === y.fromState && x.toState === y.toState;\n        })).subscribe(event => {\n            // If the transition to the center is complete, emit an event.\n            if (this._isCenterPosition(event.toState) && this._isCenterPosition(this._position)) {\n                this._onCentered.emit();\n            }\n            if (this._isCenterPosition(event.fromState) && !this._isCenterPosition(this._position)) {\n                this._afterLeavingCenter.emit();\n            }\n        });\n    }\n    /**\n     * The shifted index position of the tab body, where zero represents the active center tab.\n     * @param {?} position\n     * @return {?}\n     */\n    set position(position) {\n        this._positionIndex = position;\n        this._computePositionAnimationState();\n    }\n    /**\n     * After initialized, check if the content is centered and has an origin. If so, set the\n     * special position states that transition the tab from the left or right before centering.\n     * @return {?}\n     */\n    ngOnInit() {\n        if (this._position == 'center' && this.origin != null) {\n            this._position = this._computePositionFromOrigin();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._dirChangeSubscription.unsubscribe();\n        this._translateTabComplete.complete();\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    _onTranslateTabStarted(event) {\n        /** @type {?} */\n        const isCentering = this._isCenterPosition(event.toState);\n        this._beforeCentering.emit(isCentering);\n        if (isCentering) {\n            this._onCentering.emit(this._elementRef.nativeElement.clientHeight);\n        }\n    }\n    /**\n     * The text direction of the containing app.\n     * @return {?}\n     */\n    _getLayoutDirection() {\n        return this._dir && this._dir.value === 'rtl' ? 'rtl' : 'ltr';\n    }\n    /**\n     * Whether the provided position state is considered center, regardless of origin.\n     * @param {?} position\n     * @return {?}\n     */\n    _isCenterPosition(position) {\n        return position == 'center' ||\n            position == 'left-origin-center' ||\n            position == 'right-origin-center';\n    }\n    /**\n     * Computes the position state that will be used for the tab-body animation trigger.\n     * @private\n     * @param {?=} dir\n     * @return {?}\n     */\n    _computePositionAnimationState(dir = this._getLayoutDirection()) {\n        if (this._positionIndex < 0) {\n            this._position = dir == 'ltr' ? 'left' : 'right';\n        }\n        else if (this._positionIndex > 0) {\n            this._position = dir == 'ltr' ? 'right' : 'left';\n        }\n        else {\n            this._position = 'center';\n        }\n    }\n    /**\n     * Computes the position state based on the specified origin position. This is used if the\n     * tab is becoming visible immediately after creation.\n     * @private\n     * @return {?}\n     */\n    _computePositionFromOrigin() {\n        /** @type {?} */\n        const dir = this._getLayoutDirection();\n        if ((dir == 'ltr' && this.origin <= 0) || (dir == 'rtl' && this.origin > 0)) {\n            return 'left-origin-center';\n        }\n        return 'right-origin-center';\n    }\n}\nMatTabBody.ɵfac = function MatTabBody_Factory(t) { return new (t || MatTabBody)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef)); };\nMatTabBody.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: MatTabBody, selectors: [[\"mat-tab-body\"]], viewQuery: function MatTabBody_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(PortalHostDirective, 5);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._portalHost = _t.first);\n    } }, hostAttrs: [1, \"mat-tab-body\"], inputs: { animationDuration: \"animationDuration\", position: \"position\", _content: [\"content\", \"_content\"], origin: \"origin\" }, outputs: { _onCentering: \"_onCentering\", _beforeCentering: \"_beforeCentering\", _afterLeavingCenter: \"_afterLeavingCenter\", _onCentered: \"_onCentered\" }, decls: 3, vars: 6, consts: [[1, \"mat-tab-body-content\"], [\"content\", \"\"], [\"matTabBodyHost\", \"\"]], template: function MatTabBody_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0, 1);\n        ɵngcc0.ɵɵlistener(\"@translateTab.start\", function MatTabBody_Template_div_animation_translateTab_start_0_listener($event) { return ctx._onTranslateTabStarted($event); })(\"@translateTab.done\", function MatTabBody_Template_div_animation_translateTab_done_0_listener($event) { return ctx._translateTabComplete.next($event); });\n        ɵngcc0.ɵɵtemplate(2, MatTabBody_ng_template_2_Template, 0, 0, \"ng-template\", 2);\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"@translateTab\", ɵngcc0.ɵɵpureFunction2(3, _c2, ctx._position, ɵngcc0.ɵɵpureFunction1(1, _c1, ctx.animationDuration)));\n    } }, dependencies: [MatTabBodyPortal], styles: [\".mat-tab-body-content{height:100%;overflow:auto}.mat-tab-group-dynamic-height .mat-tab-body-content{overflow:hidden}\"], encapsulation: 2, data: { animation: [matTabsAnimations.translateTab] }, changeDetection: 0 });\n/** @nocollapse */\nMatTabBody.ctorParameters = () => [\n    { type: ElementRef },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: ChangeDetectorRef }\n];\nMatTabBody.propDecorators = {\n    _onCentering: [{ type: Output }],\n    _beforeCentering: [{ type: Output }],\n    _afterLeavingCenter: [{ type: Output }],\n    _onCentered: [{ type: Output }],\n    _portalHost: [{ type: ViewChild, args: [PortalHostDirective,] }],\n    _content: [{ type: Input, args: ['content',] }],\n    origin: [{ type: Input }],\n    animationDuration: [{ type: Input }],\n    position: [{ type: Input }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatTabBody, [{\n        type: Component,\n        args: [{ selector: 'mat-tab-body', template: \"<div class=\\\"mat-tab-body-content\\\" #content [@translateTab]=\\\"{ value: _position, params: {animationDuration: animationDuration} }\\\" (@translateTab.start)=\\\"_onTranslateTabStarted($event)\\\" (@translateTab.done)=\\\"_translateTabComplete.next($event)\\\"><ng-template matTabBodyHost></ng-template></div>\", encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, animations: [matTabsAnimations.translateTab], host: {\n                    'class': 'mat-tab-body'\n                }, styles: [\".mat-tab-body-content{height:100%;overflow:auto}.mat-tab-group-dynamic-height .mat-tab-body-content{overflow:hidden}\"] }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc1.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc0.ChangeDetectorRef }]; }, { _onCentering: [{\n            type: Output\n        }], _beforeCentering: [{\n            type: Output\n        }], _afterLeavingCenter: [{\n            type: Output\n        }], _onCentered: [{\n            type: Output\n        }], animationDuration: [{\n            type: Input\n        }], position: [{\n            type: Input\n        }], _portalHost: [{\n            type: ViewChild,\n            args: [PortalHostDirective]\n        }], _content: [{\n            type: Input,\n            args: ['content']\n        }], origin: [{\n            type: Input\n        }] }); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// Boilerplate for applying mixins to MatTabLabelWrapper.\n/**\n * \\@docs-private\n */\nclass MatTabLabelWrapperBase {\n}\n/** @type {?} */\nconst _MatTabLabelWrapperMixinBase = mixinDisabled(MatTabLabelWrapperBase);\n/**\n * Used in the `mat-tab-group` view to display tab labels.\n * \\@docs-private\n */\nclass MatTabLabelWrapper extends _MatTabLabelWrapperMixinBase {\n    /**\n     * @param {?} elementRef\n     */\n    constructor(elementRef) {\n        super();\n        this.elementRef = elementRef;\n    }\n    /**\n     * Sets focus on the wrapper element\n     * @return {?}\n     */\n    focus() {\n        this.elementRef.nativeElement.focus();\n    }\n    /**\n     * @return {?}\n     */\n    getOffsetLeft() {\n        return this.elementRef.nativeElement.offsetLeft;\n    }\n    /**\n     * @return {?}\n     */\n    getOffsetWidth() {\n        return this.elementRef.nativeElement.offsetWidth;\n    }\n}\nMatTabLabelWrapper.ɵfac = function MatTabLabelWrapper_Factory(t) { return new (t || MatTabLabelWrapper)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\nMatTabLabelWrapper.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: MatTabLabelWrapper, selectors: [[\"\", \"matTabLabelWrapper\", \"\"]], hostVars: 3, hostBindings: function MatTabLabelWrapper_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"aria-disabled\", !!ctx.disabled);\n        ɵngcc0.ɵɵclassProp(\"mat-tab-disabled\", ctx.disabled);\n    } }, inputs: { disabled: \"disabled\" }, features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\n/** @nocollapse */\nMatTabLabelWrapper.ctorParameters = () => [\n    { type: ElementRef }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatTabLabelWrapper, [{\n        type: Directive,\n        args: [{\n                selector: '[matTabLabelWrapper]',\n                inputs: ['disabled'],\n                host: {\n                    '[class.mat-tab-disabled]': 'disabled',\n                    '[attr.aria-disabled]': '!!disabled'\n                }\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }]; }, null); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Config used to bind passive event listeners\n * @type {?}\n */\nconst passiveEventListenerOptions = (/** @type {?} */ (normalizePassiveListenerOptions({ passive: true })));\n/**\n * The distance in pixels that will be overshot when scrolling a tab label into view. This helps\n * provide a small affordance to the label next to it.\n * @type {?}\n */\nconst EXAGGERATED_OVERSCROLL = 60;\n/**\n * Amount of milliseconds to wait before starting to scroll the header automatically.\n * Set a little conservatively in order to handle fake events dispatched on touch devices.\n * @type {?}\n */\nconst HEADER_SCROLL_DELAY = 650;\n/**\n * Interval in milliseconds at which to scroll the header\n * while the user is holding their pointer.\n * @type {?}\n */\nconst HEADER_SCROLL_INTERVAL = 100;\n// Boilerplate for applying mixins to MatTabHeader.\n/**\n * \\@docs-private\n */\nclass MatTabHeaderBase {\n}\n/** @type {?} */\nconst _MatTabHeaderMixinBase = mixinDisableRipple(MatTabHeaderBase);\n/**\n * The header of the tab group which displays a list of all the tabs in the tab group. Includes\n * an ink bar that follows the currently selected tab. When the tabs list's width exceeds the\n * width of the header container, then arrows will be displayed to allow the user to scroll\n * left and right across the header.\n * \\@docs-private\n */\nclass MatTabHeader extends _MatTabHeaderMixinBase {\n    /**\n     * @param {?} _elementRef\n     * @param {?} _changeDetectorRef\n     * @param {?} _viewportRuler\n     * @param {?} _dir\n     * @param {?=} _ngZone\n     * @param {?=} _platform\n     */\n    constructor(_elementRef, _changeDetectorRef, _viewportRuler, _dir, _ngZone, _platform) {\n        super();\n        this._elementRef = _elementRef;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._viewportRuler = _viewportRuler;\n        this._dir = _dir;\n        this._ngZone = _ngZone;\n        this._platform = _platform;\n        /**\n         * The distance in pixels that the tab labels should be translated to the left.\n         */\n        this._scrollDistance = 0;\n        /**\n         * Whether the header should scroll to the selected index after the view has been checked.\n         */\n        this._selectedIndexChanged = false;\n        /**\n         * Emits when the component is destroyed.\n         */\n        this._destroyed = new Subject();\n        /**\n         * Whether the controls for pagination should be displayed\n         */\n        this._showPaginationControls = false;\n        /**\n         * Whether the tab list can be scrolled more towards the end of the tab label list.\n         */\n        this._disableScrollAfter = true;\n        /**\n         * Whether the tab list can be scrolled more towards the beginning of the tab label list.\n         */\n        this._disableScrollBefore = true;\n        /**\n         * Stream that will stop the automated scrolling.\n         */\n        this._stopScrolling = new Subject();\n        this._selectedIndex = 0;\n        /**\n         * Event emitted when the option is selected.\n         */\n        this.selectFocusedIndex = new EventEmitter();\n        /**\n         * Event emitted when a label is focused.\n         */\n        this.indexFocused = new EventEmitter();\n        /** @type {?} */\n        const element = _elementRef.nativeElement;\n        /** @type {?} */\n        const bindEvent = () => {\n            fromEvent(element, 'mouseleave')\n                .pipe(takeUntil(this._destroyed))\n                .subscribe(() => {\n                this._stopInterval();\n            });\n        };\n        // @breaking-change 8.0.0 remove null check once _ngZone is made into a required parameter.\n        if (_ngZone) {\n            // Bind the `mouseleave` event on the outside since it doesn't change anything in the view.\n            _ngZone.runOutsideAngular(bindEvent);\n        }\n        else {\n            bindEvent();\n        }\n    }\n    /**\n     * The index of the active tab.\n     * @return {?}\n     */\n    get selectedIndex() { return this._selectedIndex; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set selectedIndex(value) {\n        value = coerceNumberProperty(value);\n        this._selectedIndexChanged = this._selectedIndex != value;\n        this._selectedIndex = value;\n        if (this._keyManager) {\n            this._keyManager.updateActiveItemIndex(value);\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentChecked() {\n        // If the number of tab labels have changed, check if scrolling should be enabled\n        if (this._tabLabelCount != this._labelWrappers.length) {\n            this.updatePagination();\n            this._tabLabelCount = this._labelWrappers.length;\n            this._changeDetectorRef.markForCheck();\n        }\n        // If the selected index has changed, scroll to the label and check if the scrolling controls\n        // should be disabled.\n        if (this._selectedIndexChanged) {\n            this._scrollToLabel(this._selectedIndex);\n            this._checkScrollingControls();\n            this._alignInkBarToSelectedTab();\n            this._selectedIndexChanged = false;\n            this._changeDetectorRef.markForCheck();\n        }\n        // If the scroll distance has been changed (tab selected, focused, scroll controls activated),\n        // then translate the header to reflect this.\n        if (this._scrollDistanceChanged) {\n            this._updateTabScrollPosition();\n            this._scrollDistanceChanged = false;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    /**\n     * Handles keyboard events on the header.\n     * @param {?} event\n     * @return {?}\n     */\n    _handleKeydown(event) {\n        // We don't handle any key bindings with a modifier key.\n        if (hasModifierKey(event)) {\n            return;\n        }\n        switch (event.keyCode) {\n            case HOME:\n                this._keyManager.setFirstItemActive();\n                event.preventDefault();\n                break;\n            case END:\n                this._keyManager.setLastItemActive();\n                event.preventDefault();\n                break;\n            case ENTER:\n            case SPACE:\n                this.selectFocusedIndex.emit(this.focusIndex);\n                event.preventDefault();\n                break;\n            default:\n                this._keyManager.onKeydown(event);\n        }\n    }\n    /**\n     * Aligns the ink bar to the selected tab on load.\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        /** @type {?} */\n        const dirChange = this._dir ? this._dir.change : of(null);\n        /** @type {?} */\n        const resize = this._viewportRuler.change(150);\n        /** @type {?} */\n        const realign = () => {\n            this.updatePagination();\n            this._alignInkBarToSelectedTab();\n        };\n        this._keyManager = new FocusKeyManager(this._labelWrappers)\n            .withHorizontalOrientation(this._getLayoutDirection())\n            .withWrap();\n        this._keyManager.updateActiveItem(0);\n        // Defer the first call in order to allow for slower browsers to lay out the elements.\n        // This helps in cases where the user lands directly on a page with paginated tabs.\n        typeof requestAnimationFrame !== 'undefined' ? requestAnimationFrame(realign) : realign();\n        // On dir change or window resize, realign the ink bar and update the orientation of\n        // the key manager if the direction has changed.\n        merge(dirChange, resize).pipe(takeUntil(this._destroyed)).subscribe(() => {\n            realign();\n            this._keyManager.withHorizontalOrientation(this._getLayoutDirection());\n        });\n        // If there is a change in the focus key manager we need to emit the `indexFocused`\n        // event in order to provide a public event that notifies about focus changes. Also we realign\n        // the tabs container by scrolling the new focused tab into the visible section.\n        this._keyManager.change.pipe(takeUntil(this._destroyed)).subscribe(newFocusIndex => {\n            this.indexFocused.emit(newFocusIndex);\n            this._setTabFocus(newFocusIndex);\n        });\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterViewInit() {\n        // We need to handle these events manually, because we want to bind passive event listeners.\n        fromEvent(this._previousPaginator.nativeElement, 'touchstart', passiveEventListenerOptions)\n            .pipe(takeUntil(this._destroyed))\n            .subscribe(() => {\n            this._handlePaginatorPress('before');\n        });\n        fromEvent(this._nextPaginator.nativeElement, 'touchstart', passiveEventListenerOptions)\n            .pipe(takeUntil(this._destroyed))\n            .subscribe(() => {\n            this._handlePaginatorPress('after');\n        });\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._destroyed.next();\n        this._destroyed.complete();\n        this._stopScrolling.complete();\n    }\n    /**\n     * Callback for when the MutationObserver detects that the content has changed.\n     * @return {?}\n     */\n    _onContentChanges() {\n        /** @type {?} */\n        const textContent = this._elementRef.nativeElement.textContent;\n        // We need to diff the text content of the header, because the MutationObserver callback\n        // will fire even if the text content didn't change which is inefficient and is prone\n        // to infinite loops if a poorly constructed expression is passed in (see #14249).\n        if (textContent !== this._currentTextContent) {\n            this._currentTextContent = textContent;\n            /** @type {?} */\n            const zoneCallback = () => {\n                this.updatePagination();\n                this._alignInkBarToSelectedTab();\n                this._changeDetectorRef.markForCheck();\n            };\n            // The content observer runs outside the `NgZone` by default, which\n            // means that we need to bring the callback back in ourselves.\n            // @breaking-change 8.0.0 Remove null check for `_ngZone` once it's a required parameter.\n            this._ngZone ? this._ngZone.run(zoneCallback) : zoneCallback();\n        }\n    }\n    /**\n     * Updates the view whether pagination should be enabled or not.\n     *\n     * WARNING: Calling this method can be very costly in terms of performance.  It should be called\n     * as infrequently as possible from outside of the Tabs component as it causes a reflow of the\n     * page.\n     * @return {?}\n     */\n    updatePagination() {\n        this._checkPaginationEnabled();\n        this._checkScrollingControls();\n        this._updateTabScrollPosition();\n    }\n    /**\n     * Tracks which element has focus; used for keyboard navigation\n     * @return {?}\n     */\n    get focusIndex() {\n        return this._keyManager ? (/** @type {?} */ (this._keyManager.activeItemIndex)) : 0;\n    }\n    /**\n     * When the focus index is set, we must manually send focus to the correct label\n     * @param {?} value\n     * @return {?}\n     */\n    set focusIndex(value) {\n        if (!this._isValidIndex(value) || this.focusIndex === value || !this._keyManager) {\n            return;\n        }\n        this._keyManager.setActiveItem(value);\n    }\n    /**\n     * Determines if an index is valid.  If the tabs are not ready yet, we assume that the user is\n     * providing a valid index and return true.\n     * @param {?} index\n     * @return {?}\n     */\n    _isValidIndex(index) {\n        if (!this._labelWrappers) {\n            return true;\n        }\n        /** @type {?} */\n        const tab = this._labelWrappers ? this._labelWrappers.toArray()[index] : null;\n        return !!tab && !tab.disabled;\n    }\n    /**\n     * Sets focus on the HTML element for the label wrapper and scrolls it into the view if\n     * scrolling is enabled.\n     * @param {?} tabIndex\n     * @return {?}\n     */\n    _setTabFocus(tabIndex) {\n        if (this._showPaginationControls) {\n            this._scrollToLabel(tabIndex);\n        }\n        if (this._labelWrappers && this._labelWrappers.length) {\n            this._labelWrappers.toArray()[tabIndex].focus();\n            // Do not let the browser manage scrolling to focus the element, this will be handled\n            // by using translation. In LTR, the scroll left should be 0. In RTL, the scroll width\n            // should be the full width minus the offset width.\n            /** @type {?} */\n            const containerEl = this._tabListContainer.nativeElement;\n            /** @type {?} */\n            const dir = this._getLayoutDirection();\n            if (dir == 'ltr') {\n                containerEl.scrollLeft = 0;\n            }\n            else {\n                containerEl.scrollLeft = containerEl.scrollWidth - containerEl.offsetWidth;\n            }\n        }\n    }\n    /**\n     * The layout direction of the containing app.\n     * @return {?}\n     */\n    _getLayoutDirection() {\n        return this._dir && this._dir.value === 'rtl' ? 'rtl' : 'ltr';\n    }\n    /**\n     * Performs the CSS transformation on the tab list that will cause the list to scroll.\n     * @return {?}\n     */\n    _updateTabScrollPosition() {\n        /** @type {?} */\n        const scrollDistance = this.scrollDistance;\n        /** @type {?} */\n        const platform = this._platform;\n        /** @type {?} */\n        const translateX = this._getLayoutDirection() === 'ltr' ? -scrollDistance : scrollDistance;\n        // Don't use `translate3d` here because we don't want to create a new layer. A new layer\n        // seems to cause flickering and overflow in Internet Explorer. For example, the ink bar\n        // and ripples will exceed the boundaries of the visible tab bar.\n        // See: https://github.com/angular/material2/issues/10276\n        // We round the `transform` here, because transforms with sub-pixel precision cause some\n        // browsers to blur the content of the element.\n        this._tabList.nativeElement.style.transform = `translateX(${Math.round(translateX)}px)`;\n        // Setting the `transform` on IE will change the scroll offset of the parent, causing the\n        // position to be thrown off in some cases. We have to reset it ourselves to ensure that\n        // it doesn't get thrown off. Note that we scope it only to IE and Edge, because messing\n        // with the scroll position throws off Chrome 71+ in RTL mode (see #14689).\n        // @breaking-change 8.0.0 Remove null check for `platform`.\n        if (platform && (platform.TRIDENT || platform.EDGE)) {\n            this._tabListContainer.nativeElement.scrollLeft = 0;\n        }\n    }\n    /**\n     * Sets the distance in pixels that the tab header should be transformed in the X-axis.\n     * @return {?}\n     */\n    get scrollDistance() { return this._scrollDistance; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set scrollDistance(value) {\n        this._scrollTo(value);\n    }\n    /**\n     * Moves the tab list in the 'before' or 'after' direction (towards the beginning of the list or\n     * the end of the list, respectively). The distance to scroll is computed to be a third of the\n     * length of the tab list view window.\n     *\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n     * should be called sparingly.\n     * @param {?} direction\n     * @return {?}\n     */\n    _scrollHeader(direction) {\n        /** @type {?} */\n        const viewLength = this._tabListContainer.nativeElement.offsetWidth;\n        // Move the scroll distance one-third the length of the tab list's viewport.\n        /** @type {?} */\n        const scrollAmount = (direction == 'before' ? -1 : 1) * viewLength / 3;\n        return this._scrollTo(this._scrollDistance + scrollAmount);\n    }\n    /**\n     * Handles click events on the pagination arrows.\n     * @param {?} direction\n     * @return {?}\n     */\n    _handlePaginatorClick(direction) {\n        this._stopInterval();\n        this._scrollHeader(direction);\n    }\n    /**\n     * Moves the tab list such that the desired tab label (marked by index) is moved into view.\n     *\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n     * should be called sparingly.\n     * @param {?} labelIndex\n     * @return {?}\n     */\n    _scrollToLabel(labelIndex) {\n        /** @type {?} */\n        const selectedLabel = this._labelWrappers ? this._labelWrappers.toArray()[labelIndex] : null;\n        if (!selectedLabel) {\n            return;\n        }\n        // The view length is the visible width of the tab labels.\n        /** @type {?} */\n        const viewLength = this._tabListContainer.nativeElement.offsetWidth;\n        /** @type {?} */\n        let labelBeforePos;\n        /** @type {?} */\n        let labelAfterPos;\n        if (this._getLayoutDirection() == 'ltr') {\n            labelBeforePos = selectedLabel.getOffsetLeft();\n            labelAfterPos = labelBeforePos + selectedLabel.getOffsetWidth();\n        }\n        else {\n            labelAfterPos = this._tabList.nativeElement.offsetWidth - selectedLabel.getOffsetLeft();\n            labelBeforePos = labelAfterPos - selectedLabel.getOffsetWidth();\n        }\n        /** @type {?} */\n        const beforeVisiblePos = this.scrollDistance;\n        /** @type {?} */\n        const afterVisiblePos = this.scrollDistance + viewLength;\n        if (labelBeforePos < beforeVisiblePos) {\n            // Scroll header to move label to the before direction\n            this.scrollDistance -= beforeVisiblePos - labelBeforePos + EXAGGERATED_OVERSCROLL;\n        }\n        else if (labelAfterPos > afterVisiblePos) {\n            // Scroll header to move label to the after direction\n            this.scrollDistance += labelAfterPos - afterVisiblePos + EXAGGERATED_OVERSCROLL;\n        }\n    }\n    /**\n     * Evaluate whether the pagination controls should be displayed. If the scroll width of the\n     * tab list is wider than the size of the header container, then the pagination controls should\n     * be shown.\n     *\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n     * should be called sparingly.\n     * @return {?}\n     */\n    _checkPaginationEnabled() {\n        /** @type {?} */\n        const isEnabled = this._tabList.nativeElement.scrollWidth > this._elementRef.nativeElement.offsetWidth;\n        if (!isEnabled) {\n            this.scrollDistance = 0;\n        }\n        if (isEnabled !== this._showPaginationControls) {\n            this._changeDetectorRef.markForCheck();\n        }\n        this._showPaginationControls = isEnabled;\n    }\n    /**\n     * Evaluate whether the before and after controls should be enabled or disabled.\n     * If the header is at the beginning of the list (scroll distance is equal to 0) then disable the\n     * before button. If the header is at the end of the list (scroll distance is equal to the\n     * maximum distance we can scroll), then disable the after button.\n     *\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n     * should be called sparingly.\n     * @return {?}\n     */\n    _checkScrollingControls() {\n        // Check if the pagination arrows should be activated.\n        this._disableScrollBefore = this.scrollDistance == 0;\n        this._disableScrollAfter = this.scrollDistance == this._getMaxScrollDistance();\n        this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * Determines what is the maximum length in pixels that can be set for the scroll distance. This\n     * is equal to the difference in width between the tab list container and tab header container.\n     *\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n     * should be called sparingly.\n     * @return {?}\n     */\n    _getMaxScrollDistance() {\n        /** @type {?} */\n        const lengthOfTabList = this._tabList.nativeElement.scrollWidth;\n        /** @type {?} */\n        const viewLength = this._tabListContainer.nativeElement.offsetWidth;\n        return (lengthOfTabList - viewLength) || 0;\n    }\n    /**\n     * Tells the ink-bar to align itself to the current label wrapper\n     * @return {?}\n     */\n    _alignInkBarToSelectedTab() {\n        /** @type {?} */\n        const selectedLabelWrapper = this._labelWrappers && this._labelWrappers.length ?\n            this._labelWrappers.toArray()[this.selectedIndex].elementRef.nativeElement :\n            null;\n        this._inkBar.alignToElement((/** @type {?} */ (selectedLabelWrapper)));\n    }\n    /**\n     * Stops the currently-running paginator interval.\n     * @return {?}\n     */\n    _stopInterval() {\n        this._stopScrolling.next();\n    }\n    /**\n     * Handles the user pressing down on one of the paginators.\n     * Starts scrolling the header after a certain amount of time.\n     * @param {?} direction In which direction the paginator should be scrolled.\n     * @return {?}\n     */\n    _handlePaginatorPress(direction) {\n        // Avoid overlapping timers.\n        this._stopInterval();\n        // Start a timer after the delay and keep firing based on the interval.\n        timer(HEADER_SCROLL_DELAY, HEADER_SCROLL_INTERVAL)\n            // Keep the timer going until something tells it to stop or the component is destroyed.\n            .pipe(takeUntil(merge(this._stopScrolling, this._destroyed)))\n            .subscribe(() => {\n            const { maxScrollDistance, distance } = this._scrollHeader(direction);\n            // Stop the timer if we've reached the start or the end.\n            if (distance === 0 || distance >= maxScrollDistance) {\n                this._stopInterval();\n            }\n        });\n    }\n    /**\n     * Scrolls the header to a given position.\n     * @private\n     * @param {?} position Position to which to scroll.\n     * @return {?} Information on the current scroll distance and the maximum.\n     */\n    _scrollTo(position) {\n        /** @type {?} */\n        const maxScrollDistance = this._getMaxScrollDistance();\n        this._scrollDistance = Math.max(0, Math.min(maxScrollDistance, position));\n        // Mark that the scroll distance has changed so that after the view is checked, the CSS\n        // transformation can move the header.\n        this._scrollDistanceChanged = true;\n        this._checkScrollingControls();\n        return { maxScrollDistance, distance: this._scrollDistance };\n    }\n}\nMatTabHeader.ɵfac = function MatTabHeader_Factory(t) { return new (t || MatTabHeader)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.ViewportRuler), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc3.Platform)); };\nMatTabHeader.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: MatTabHeader, selectors: [[\"mat-tab-header\"]], contentQueries: function MatTabHeader_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatTabLabelWrapper, 4);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._labelWrappers = _t);\n    } }, viewQuery: function MatTabHeader_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(MatInkBar, 5);\n        ɵngcc0.ɵɵviewQuery(_c3, 5);\n        ɵngcc0.ɵɵviewQuery(_c4, 5);\n        ɵngcc0.ɵɵviewQuery(_c5, 5);\n        ɵngcc0.ɵɵviewQuery(_c6, 5);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._inkBar = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._tabListContainer = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._tabList = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._nextPaginator = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._previousPaginator = _t.first);\n    } }, hostAttrs: [1, \"mat-tab-header\"], hostVars: 4, hostBindings: function MatTabHeader_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mat-tab-header-pagination-controls-enabled\", ctx._showPaginationControls)(\"mat-tab-header-rtl\", ctx._getLayoutDirection() == \"rtl\");\n    } }, inputs: { disableRipple: \"disableRipple\", selectedIndex: \"selectedIndex\" }, outputs: { selectFocusedIndex: \"selectFocusedIndex\", indexFocused: \"indexFocused\" }, features: [ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c0, decls: 13, vars: 6, consts: [[\"aria-hidden\", \"true\", \"mat-ripple\", \"\", 1, \"mat-tab-header-pagination\", \"mat-tab-header-pagination-before\", \"mat-elevation-z4\", 3, \"matRippleDisabled\", \"click\", \"mousedown\", \"touchend\"], [\"previousPaginator\", \"\"], [1, \"mat-tab-header-pagination-chevron\"], [1, \"mat-tab-label-container\", 3, \"keydown\"], [\"tabListContainer\", \"\"], [\"role\", \"tablist\", 1, \"mat-tab-list\", 3, \"cdkObserveContent\"], [\"tabList\", \"\"], [1, \"mat-tab-labels\"], [\"aria-hidden\", \"true\", \"mat-ripple\", \"\", 1, \"mat-tab-header-pagination\", \"mat-tab-header-pagination-after\", \"mat-elevation-z4\", 3, \"matRippleDisabled\", \"mousedown\", \"click\", \"touchend\"], [\"nextPaginator\", \"\"]], template: function MatTabHeader_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0, 1);\n        ɵngcc0.ɵɵlistener(\"click\", function MatTabHeader_Template_div_click_0_listener() { return ctx._handlePaginatorClick(\"before\"); })(\"mousedown\", function MatTabHeader_Template_div_mousedown_0_listener() { return ctx._handlePaginatorPress(\"before\"); })(\"touchend\", function MatTabHeader_Template_div_touchend_0_listener() { return ctx._stopInterval(); });\n        ɵngcc0.ɵɵelement(2, \"div\", 2);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(3, \"div\", 3, 4);\n        ɵngcc0.ɵɵlistener(\"keydown\", function MatTabHeader_Template_div_keydown_3_listener($event) { return ctx._handleKeydown($event); });\n        ɵngcc0.ɵɵelementStart(5, \"div\", 5, 6);\n        ɵngcc0.ɵɵlistener(\"cdkObserveContent\", function MatTabHeader_Template_div_cdkObserveContent_5_listener() { return ctx._onContentChanges(); });\n        ɵngcc0.ɵɵelementStart(7, \"div\", 7);\n        ɵngcc0.ɵɵprojection(8);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelement(9, \"mat-ink-bar\");\n        ɵngcc0.ɵɵelementEnd()();\n        ɵngcc0.ɵɵelementStart(10, \"div\", 8, 9);\n        ɵngcc0.ɵɵlistener(\"mousedown\", function MatTabHeader_Template_div_mousedown_10_listener() { return ctx._handlePaginatorPress(\"after\"); })(\"click\", function MatTabHeader_Template_div_click_10_listener() { return ctx._handlePaginatorClick(\"after\"); })(\"touchend\", function MatTabHeader_Template_div_touchend_10_listener() { return ctx._stopInterval(); });\n        ɵngcc0.ɵɵelement(12, \"div\", 2);\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mat-tab-header-pagination-disabled\", ctx._disableScrollBefore);\n        ɵngcc0.ɵɵproperty(\"matRippleDisabled\", ctx._disableScrollBefore || ctx.disableRipple);\n        ɵngcc0.ɵɵadvance(10);\n        ɵngcc0.ɵɵclassProp(\"mat-tab-header-pagination-disabled\", ctx._disableScrollAfter);\n        ɵngcc0.ɵɵproperty(\"matRippleDisabled\", ctx._disableScrollAfter || ctx.disableRipple);\n    } }, dependencies: [ɵngcc4.MatRipple, ɵngcc5.CdkObserveContent, MatInkBar], styles: [\".mat-tab-header{display:flex;overflow:hidden;position:relative;flex-shrink:0}.mat-tab-label{height:48px;padding:0 24px;cursor:pointer;box-sizing:border-box;opacity:.6;min-width:160px;text-align:center;display:inline-flex;justify-content:center;align-items:center;white-space:nowrap;position:relative}.mat-tab-label:focus{outline:0}.mat-tab-label:focus:not(.mat-tab-disabled){opacity:1}@media (-ms-high-contrast:active){.mat-tab-label:focus{outline:dotted 2px}}.mat-tab-label.mat-tab-disabled{cursor:default}@media (-ms-high-contrast:active){.mat-tab-label.mat-tab-disabled{opacity:.5}}.mat-tab-label .mat-tab-label-content{display:inline-flex;justify-content:center;align-items:center;white-space:nowrap}@media (-ms-high-contrast:active){.mat-tab-label{opacity:1}}@media (max-width:599px){.mat-tab-label{min-width:72px}}.mat-ink-bar{position:absolute;bottom:0;height:2px;transition:.5s cubic-bezier(.35,0,.25,1)}.mat-tab-group-inverted-header .mat-ink-bar{bottom:auto;top:0}@media (-ms-high-contrast:active){.mat-ink-bar{outline:solid 2px;height:0}}.mat-tab-header-pagination{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;position:relative;display:none;justify-content:center;align-items:center;min-width:32px;cursor:pointer;z-index:2;-webkit-tap-highlight-color:transparent;touch-action:none}.mat-tab-header-pagination-controls-enabled .mat-tab-header-pagination{display:flex}.mat-tab-header-pagination-before,.mat-tab-header-rtl .mat-tab-header-pagination-after{padding-left:4px}.mat-tab-header-pagination-before .mat-tab-header-pagination-chevron,.mat-tab-header-rtl .mat-tab-header-pagination-after .mat-tab-header-pagination-chevron{transform:rotate(-135deg)}.mat-tab-header-pagination-after,.mat-tab-header-rtl .mat-tab-header-pagination-before{padding-right:4px}.mat-tab-header-pagination-after .mat-tab-header-pagination-chevron,.mat-tab-header-rtl .mat-tab-header-pagination-before .mat-tab-header-pagination-chevron{transform:rotate(45deg)}.mat-tab-header-pagination-chevron{border-style:solid;border-width:2px 2px 0 0;content:'';height:8px;width:8px}.mat-tab-header-pagination-disabled{box-shadow:none;cursor:default}.mat-tab-label-container{display:flex;flex-grow:1;overflow:hidden;z-index:1}.mat-tab-list{flex-grow:1;position:relative;transition:transform .5s cubic-bezier(.35,0,.25,1)}.mat-tab-labels{display:flex}[mat-align-tabs=center] .mat-tab-labels{justify-content:center}[mat-align-tabs=end] .mat-tab-labels{justify-content:flex-end}\"], encapsulation: 2, changeDetection: 0 });\n/** @nocollapse */\nMatTabHeader.ctorParameters = () => [\n    { type: ElementRef },\n    { type: ChangeDetectorRef },\n    { type: ViewportRuler },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: NgZone },\n    { type: Platform }\n];\nMatTabHeader.propDecorators = {\n    _labelWrappers: [{ type: ContentChildren, args: [MatTabLabelWrapper,] }],\n    _inkBar: [{ type: ViewChild, args: [MatInkBar,] }],\n    _tabListContainer: [{ type: ViewChild, args: ['tabListContainer',] }],\n    _tabList: [{ type: ViewChild, args: ['tabList',] }],\n    _nextPaginator: [{ type: ViewChild, args: ['nextPaginator',] }],\n    _previousPaginator: [{ type: ViewChild, args: ['previousPaginator',] }],\n    selectedIndex: [{ type: Input }],\n    selectFocusedIndex: [{ type: Output }],\n    indexFocused: [{ type: Output }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatTabHeader, [{\n        type: Component,\n        args: [{ selector: 'mat-tab-header', template: \"<div class=\\\"mat-tab-header-pagination mat-tab-header-pagination-before mat-elevation-z4\\\" #previousPaginator aria-hidden=\\\"true\\\" mat-ripple [matRippleDisabled]=\\\"_disableScrollBefore || disableRipple\\\" [class.mat-tab-header-pagination-disabled]=\\\"_disableScrollBefore\\\" (click)=\\\"_handlePaginatorClick('before')\\\" (mousedown)=\\\"_handlePaginatorPress('before')\\\" (touchend)=\\\"_stopInterval()\\\"><div class=\\\"mat-tab-header-pagination-chevron\\\"></div></div><div class=\\\"mat-tab-label-container\\\" #tabListContainer (keydown)=\\\"_handleKeydown($event)\\\"><div class=\\\"mat-tab-list\\\" #tabList role=\\\"tablist\\\" (cdkObserveContent)=\\\"_onContentChanges()\\\"><div class=\\\"mat-tab-labels\\\"><ng-content></ng-content></div><mat-ink-bar></mat-ink-bar></div></div><div class=\\\"mat-tab-header-pagination mat-tab-header-pagination-after mat-elevation-z4\\\" #nextPaginator aria-hidden=\\\"true\\\" mat-ripple [matRippleDisabled]=\\\"_disableScrollAfter || disableRipple\\\" [class.mat-tab-header-pagination-disabled]=\\\"_disableScrollAfter\\\" (mousedown)=\\\"_handlePaginatorPress('after')\\\" (click)=\\\"_handlePaginatorClick('after')\\\" (touchend)=\\\"_stopInterval()\\\"><div class=\\\"mat-tab-header-pagination-chevron\\\"></div></div>\", inputs: ['disableRipple'], encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, host: {\n                    'class': 'mat-tab-header',\n                    '[class.mat-tab-header-pagination-controls-enabled]': '_showPaginationControls',\n                    '[class.mat-tab-header-rtl]': \"_getLayoutDirection() == 'rtl'\"\n                }, styles: [\".mat-tab-header{display:flex;overflow:hidden;position:relative;flex-shrink:0}.mat-tab-label{height:48px;padding:0 24px;cursor:pointer;box-sizing:border-box;opacity:.6;min-width:160px;text-align:center;display:inline-flex;justify-content:center;align-items:center;white-space:nowrap;position:relative}.mat-tab-label:focus{outline:0}.mat-tab-label:focus:not(.mat-tab-disabled){opacity:1}@media (-ms-high-contrast:active){.mat-tab-label:focus{outline:dotted 2px}}.mat-tab-label.mat-tab-disabled{cursor:default}@media (-ms-high-contrast:active){.mat-tab-label.mat-tab-disabled{opacity:.5}}.mat-tab-label .mat-tab-label-content{display:inline-flex;justify-content:center;align-items:center;white-space:nowrap}@media (-ms-high-contrast:active){.mat-tab-label{opacity:1}}@media (max-width:599px){.mat-tab-label{min-width:72px}}.mat-ink-bar{position:absolute;bottom:0;height:2px;transition:.5s cubic-bezier(.35,0,.25,1)}.mat-tab-group-inverted-header .mat-ink-bar{bottom:auto;top:0}@media (-ms-high-contrast:active){.mat-ink-bar{outline:solid 2px;height:0}}.mat-tab-header-pagination{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;position:relative;display:none;justify-content:center;align-items:center;min-width:32px;cursor:pointer;z-index:2;-webkit-tap-highlight-color:transparent;touch-action:none}.mat-tab-header-pagination-controls-enabled .mat-tab-header-pagination{display:flex}.mat-tab-header-pagination-before,.mat-tab-header-rtl .mat-tab-header-pagination-after{padding-left:4px}.mat-tab-header-pagination-before .mat-tab-header-pagination-chevron,.mat-tab-header-rtl .mat-tab-header-pagination-after .mat-tab-header-pagination-chevron{transform:rotate(-135deg)}.mat-tab-header-pagination-after,.mat-tab-header-rtl .mat-tab-header-pagination-before{padding-right:4px}.mat-tab-header-pagination-after .mat-tab-header-pagination-chevron,.mat-tab-header-rtl .mat-tab-header-pagination-before .mat-tab-header-pagination-chevron{transform:rotate(45deg)}.mat-tab-header-pagination-chevron{border-style:solid;border-width:2px 2px 0 0;content:'';height:8px;width:8px}.mat-tab-header-pagination-disabled{box-shadow:none;cursor:default}.mat-tab-label-container{display:flex;flex-grow:1;overflow:hidden;z-index:1}.mat-tab-list{flex-grow:1;position:relative;transition:transform .5s cubic-bezier(.35,0,.25,1)}.mat-tab-labels{display:flex}[mat-align-tabs=center] .mat-tab-labels{justify-content:center}[mat-align-tabs=end] .mat-tab-labels{justify-content:flex-end}\"] }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc2.ViewportRuler }, { type: ɵngcc1.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc0.NgZone }, { type: ɵngcc3.Platform }]; }, { selectFocusedIndex: [{\n            type: Output\n        }], indexFocused: [{\n            type: Output\n        }], selectedIndex: [{\n            type: Input\n        }], _labelWrappers: [{\n            type: ContentChildren,\n            args: [MatTabLabelWrapper]\n        }], _inkBar: [{\n            type: ViewChild,\n            args: [MatInkBar]\n        }], _tabListContainer: [{\n            type: ViewChild,\n            args: ['tabListContainer']\n        }], _tabList: [{\n            type: ViewChild,\n            args: ['tabList']\n        }], _nextPaginator: [{\n            type: ViewChild,\n            args: ['nextPaginator']\n        }], _previousPaginator: [{\n            type: ViewChild,\n            args: ['previousPaginator']\n        }] }); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Used to generate unique ID's for each tab component\n * @type {?}\n */\nlet nextId = 0;\n/**\n * A simple change event emitted on focus or selection changes.\n */\nclass MatTabChangeEvent {\n}\n/**\n * Injection token that can be used to provide the default options the tabs module.\n * @type {?}\n */\nconst MAT_TABS_CONFIG = new InjectionToken('MAT_TABS_CONFIG');\n// Boilerplate for applying mixins to MatTabGroup.\n/**\n * \\@docs-private\n */\nclass MatTabGroupBase {\n    /**\n     * @param {?} _elementRef\n     */\n    constructor(_elementRef) {\n        this._elementRef = _elementRef;\n    }\n}\n/** @type {?} */\nconst _MatTabGroupMixinBase = mixinColor(mixinDisableRipple(MatTabGroupBase), 'primary');\n/**\n * Material design tab-group component.  Supports basic tab pairs (label + content) and includes\n * animated ink-bar, keyboard navigation, and screen reader.\n * See: https://material.io/design/components/tabs.html\n */\nclass MatTabGroup extends _MatTabGroupMixinBase {\n    /**\n     * @param {?} elementRef\n     * @param {?} _changeDetectorRef\n     * @param {?=} defaultConfig\n     */\n    constructor(elementRef, _changeDetectorRef, defaultConfig) {\n        super(elementRef);\n        this._changeDetectorRef = _changeDetectorRef;\n        /**\n         * The tab index that should be selected after the content has been checked.\n         */\n        this._indexToSelect = 0;\n        /**\n         * Snapshot of the height of the tab body wrapper before another tab is activated.\n         */\n        this._tabBodyWrapperHeight = 0;\n        /**\n         * Subscription to tabs being added/removed.\n         */\n        this._tabsSubscription = Subscription.EMPTY;\n        /**\n         * Subscription to changes in the tab labels.\n         */\n        this._tabLabelSubscription = Subscription.EMPTY;\n        this._dynamicHeight = false;\n        this._selectedIndex = null;\n        /**\n         * Position of the tab header.\n         */\n        this.headerPosition = 'above';\n        /**\n         * Output to enable support for two-way binding on `[(selectedIndex)]`\n         */\n        this.selectedIndexChange = new EventEmitter();\n        /**\n         * Event emitted when focus has changed within a tab group.\n         */\n        this.focusChange = new EventEmitter();\n        /**\n         * Event emitted when the body animation has completed\n         */\n        this.animationDone = new EventEmitter();\n        /**\n         * Event emitted when the tab selection has changed.\n         */\n        this.selectedTabChange = new EventEmitter(true);\n        this._groupId = nextId++;\n        this.animationDuration = defaultConfig && defaultConfig.animationDuration ?\n            defaultConfig.animationDuration : '500ms';\n    }\n    /**\n     * Whether the tab group should grow to the size of the active tab.\n     * @return {?}\n     */\n    get dynamicHeight() { return this._dynamicHeight; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set dynamicHeight(value) { this._dynamicHeight = coerceBooleanProperty(value); }\n    /**\n     * The index of the active tab.\n     * @return {?}\n     */\n    get selectedIndex() { return this._selectedIndex; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set selectedIndex(value) {\n        this._indexToSelect = coerceNumberProperty(value, null);\n    }\n    /**\n     * Duration for the tab animation. Will be normalized to milliseconds if no units are set.\n     * @return {?}\n     */\n    get animationDuration() { return this._animationDuration; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set animationDuration(value) {\n        this._animationDuration = /^\\d+$/.test(value) ? value + 'ms' : value;\n    }\n    /**\n     * Background color of the tab group.\n     * @return {?}\n     */\n    get backgroundColor() { return this._backgroundColor; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set backgroundColor(value) {\n        /** @type {?} */\n        const nativeElement = this._elementRef.nativeElement;\n        nativeElement.classList.remove(`mat-background-${this.backgroundColor}`);\n        if (value) {\n            nativeElement.classList.add(`mat-background-${value}`);\n        }\n        this._backgroundColor = value;\n    }\n    /**\n     * After the content is checked, this component knows what tabs have been defined\n     * and what the selected index should be. This is where we can know exactly what position\n     * each tab should be in according to the new selected index, and additionally we know how\n     * a new selected tab should transition in (from the left or right).\n     * @return {?}\n     */\n    ngAfterContentChecked() {\n        // Don't clamp the `indexToSelect` immediately in the setter because it can happen that\n        // the amount of tabs changes before the actual change detection runs.\n        /** @type {?} */\n        const indexToSelect = this._indexToSelect = this._clampTabIndex(this._indexToSelect);\n        // If there is a change in selected index, emit a change event. Should not trigger if\n        // the selected index has not yet been initialized.\n        if (this._selectedIndex != indexToSelect) {\n            /** @type {?} */\n            const isFirstRun = this._selectedIndex == null;\n            if (!isFirstRun) {\n                this.selectedTabChange.emit(this._createChangeEvent(indexToSelect));\n            }\n            // Changing these values after change detection has run\n            // since the checked content may contain references to them.\n            Promise.resolve().then(() => {\n                this._tabs.forEach((tab, index) => tab.isActive = index === indexToSelect);\n                if (!isFirstRun) {\n                    this.selectedIndexChange.emit(indexToSelect);\n                }\n            });\n        }\n        // Setup the position for each tab and optionally setup an origin on the next selected tab.\n        this._tabs.forEach((tab, index) => {\n            tab.position = index - indexToSelect;\n            // If there is already a selected tab, then set up an origin for the next selected tab\n            // if it doesn't have one already.\n            if (this._selectedIndex != null && tab.position == 0 && !tab.origin) {\n                tab.origin = indexToSelect - this._selectedIndex;\n            }\n        });\n        if (this._selectedIndex !== indexToSelect) {\n            this._selectedIndex = indexToSelect;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        this._subscribeToTabLabels();\n        // Subscribe to changes in the amount of tabs, in order to be\n        // able to re-render the content as new tabs are added or removed.\n        this._tabsSubscription = this._tabs.changes.subscribe(() => {\n            /** @type {?} */\n            const indexToSelect = this._clampTabIndex(this._indexToSelect);\n            // Maintain the previously-selected tab if a new tab is added or removed and there is no\n            // explicit change that selects a different tab.\n            if (indexToSelect === this._selectedIndex) {\n                /** @type {?} */\n                const tabs = this._tabs.toArray();\n                for (let i = 0; i < tabs.length; i++) {\n                    if (tabs[i].isActive) {\n                        // Assign both to the `_indexToSelect` and `_selectedIndex` so we don't fire a changed\n                        // event, otherwise the consumer may end up in an infinite loop in some edge cases like\n                        // adding a tab within the `selectedIndexChange` event.\n                        this._indexToSelect = this._selectedIndex = i;\n                        break;\n                    }\n                }\n            }\n            this._subscribeToTabLabels();\n            this._changeDetectorRef.markForCheck();\n        });\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._tabsSubscription.unsubscribe();\n        this._tabLabelSubscription.unsubscribe();\n    }\n    /**\n     * Re-aligns the ink bar to the selected tab element.\n     * @return {?}\n     */\n    realignInkBar() {\n        if (this._tabHeader) {\n            this._tabHeader._alignInkBarToSelectedTab();\n        }\n    }\n    /**\n     * @param {?} index\n     * @return {?}\n     */\n    _focusChanged(index) {\n        this.focusChange.emit(this._createChangeEvent(index));\n    }\n    /**\n     * @private\n     * @param {?} index\n     * @return {?}\n     */\n    _createChangeEvent(index) {\n        /** @type {?} */\n        const event = new MatTabChangeEvent;\n        event.index = index;\n        if (this._tabs && this._tabs.length) {\n            event.tab = this._tabs.toArray()[index];\n        }\n        return event;\n    }\n    /**\n     * Subscribes to changes in the tab labels. This is needed, because the \\@Input for the label is\n     * on the MatTab component, whereas the data binding is inside the MatTabGroup. In order for the\n     * binding to be updated, we need to subscribe to changes in it and trigger change detection\n     * manually.\n     * @private\n     * @return {?}\n     */\n    _subscribeToTabLabels() {\n        if (this._tabLabelSubscription) {\n            this._tabLabelSubscription.unsubscribe();\n        }\n        this._tabLabelSubscription = merge(...this._tabs.map(tab => tab._stateChanges))\n            .subscribe(() => this._changeDetectorRef.markForCheck());\n    }\n    /**\n     * Clamps the given index to the bounds of 0 and the tabs length.\n     * @private\n     * @param {?} index\n     * @return {?}\n     */\n    _clampTabIndex(index) {\n        // Note the `|| 0`, which ensures that values like NaN can't get through\n        // and which would otherwise throw the component into an infinite loop\n        // (since Math.max(NaN, 0) === NaN).\n        return Math.min(this._tabs.length - 1, Math.max(index || 0, 0));\n    }\n    /**\n     * Returns a unique id for each tab label element\n     * @param {?} i\n     * @return {?}\n     */\n    _getTabLabelId(i) {\n        return `mat-tab-label-${this._groupId}-${i}`;\n    }\n    /**\n     * Returns a unique id for each tab content element\n     * @param {?} i\n     * @return {?}\n     */\n    _getTabContentId(i) {\n        return `mat-tab-content-${this._groupId}-${i}`;\n    }\n    /**\n     * Sets the height of the body wrapper to the height of the activating tab if dynamic\n     * height property is true.\n     * @param {?} tabHeight\n     * @return {?}\n     */\n    _setTabBodyWrapperHeight(tabHeight) {\n        if (!this._dynamicHeight || !this._tabBodyWrapperHeight) {\n            return;\n        }\n        /** @type {?} */\n        const wrapper = this._tabBodyWrapper.nativeElement;\n        wrapper.style.height = this._tabBodyWrapperHeight + 'px';\n        // This conditional forces the browser to paint the height so that\n        // the animation to the new height can have an origin.\n        if (this._tabBodyWrapper.nativeElement.offsetHeight) {\n            wrapper.style.height = tabHeight + 'px';\n        }\n    }\n    /**\n     * Removes the height of the tab body wrapper.\n     * @return {?}\n     */\n    _removeTabBodyWrapperHeight() {\n        /** @type {?} */\n        const wrapper = this._tabBodyWrapper.nativeElement;\n        this._tabBodyWrapperHeight = wrapper.clientHeight;\n        wrapper.style.height = '';\n        this.animationDone.emit();\n    }\n    /**\n     * Handle click events, setting new selected index if appropriate.\n     * @param {?} tab\n     * @param {?} tabHeader\n     * @param {?} index\n     * @return {?}\n     */\n    _handleClick(tab, tabHeader, index) {\n        if (!tab.disabled) {\n            this.selectedIndex = tabHeader.focusIndex = index;\n        }\n    }\n    /**\n     * Retrieves the tabindex for the tab.\n     * @param {?} tab\n     * @param {?} idx\n     * @return {?}\n     */\n    _getTabIndex(tab, idx) {\n        if (tab.disabled) {\n            return null;\n        }\n        return this.selectedIndex === idx ? 0 : -1;\n    }\n}\nMatTabGroup.ɵfac = function MatTabGroup_Factory(t) { return new (t || MatTabGroup)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(MAT_TABS_CONFIG, 8)); };\nMatTabGroup.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: MatTabGroup, selectors: [[\"mat-tab-group\"]], contentQueries: function MatTabGroup_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatTab, 4);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._tabs = _t);\n    } }, viewQuery: function MatTabGroup_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(_c7, 5);\n        ɵngcc0.ɵɵviewQuery(_c8, 5);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._tabBodyWrapper = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._tabHeader = _t.first);\n    } }, hostAttrs: [1, \"mat-tab-group\"], hostVars: 4, hostBindings: function MatTabGroup_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mat-tab-group-dynamic-height\", ctx.dynamicHeight)(\"mat-tab-group-inverted-header\", ctx.headerPosition === \"below\");\n    } }, inputs: { color: \"color\", disableRipple: \"disableRipple\", headerPosition: \"headerPosition\", animationDuration: \"animationDuration\", dynamicHeight: \"dynamicHeight\", selectedIndex: \"selectedIndex\", backgroundColor: \"backgroundColor\" }, outputs: { selectedIndexChange: \"selectedIndexChange\", focusChange: \"focusChange\", animationDone: \"animationDone\", selectedTabChange: \"selectedTabChange\" }, exportAs: [\"matTabGroup\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature], decls: 6, vars: 4, consts: [[3, \"selectedIndex\", \"disableRipple\", \"indexFocused\", \"selectFocusedIndex\"], [\"tabHeader\", \"\"], [\"class\", \"mat-tab-label\", \"role\", \"tab\", \"matTabLabelWrapper\", \"\", \"mat-ripple\", \"\", \"cdkMonitorElementFocus\", \"\", 3, \"id\", \"mat-tab-label-active\", \"disabled\", \"matRippleDisabled\", \"click\", 4, \"ngFor\", \"ngForOf\"], [1, \"mat-tab-body-wrapper\"], [\"tabBodyWrapper\", \"\"], [\"role\", \"tabpanel\", 3, \"id\", \"mat-tab-body-active\", \"content\", \"position\", \"origin\", \"animationDuration\", \"_onCentered\", \"_onCentering\", 4, \"ngFor\", \"ngForOf\"], [\"role\", \"tab\", \"matTabLabelWrapper\", \"\", \"mat-ripple\", \"\", \"cdkMonitorElementFocus\", \"\", 1, \"mat-tab-label\", 3, \"id\", \"disabled\", \"matRippleDisabled\", \"click\"], [1, \"mat-tab-label-content\"], [3, \"ngIf\"], [3, \"cdkPortalOutlet\"], [\"role\", \"tabpanel\", 3, \"id\", \"content\", \"position\", \"origin\", \"animationDuration\", \"_onCentered\", \"_onCentering\"]], template: function MatTabGroup_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"mat-tab-header\", 0, 1);\n        ɵngcc0.ɵɵlistener(\"indexFocused\", function MatTabGroup_Template_mat_tab_header_indexFocused_0_listener($event) { return ctx._focusChanged($event); })(\"selectFocusedIndex\", function MatTabGroup_Template_mat_tab_header_selectFocusedIndex_0_listener($event) { return ctx.selectedIndex = $event; });\n        ɵngcc0.ɵɵtemplate(2, MatTabGroup_div_2_Template, 4, 14, \"div\", 2);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(3, \"div\", 3, 4);\n        ɵngcc0.ɵɵtemplate(5, MatTabGroup_mat_tab_body_5_Template, 1, 8, \"mat-tab-body\", 5);\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"selectedIndex\", ctx.selectedIndex)(\"disableRipple\", ctx.disableRipple);\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵproperty(\"ngForOf\", ctx._tabs);\n        ɵngcc0.ɵɵadvance(3);\n        ɵngcc0.ɵɵproperty(\"ngForOf\", ctx._tabs);\n    } }, dependencies: [ɵngcc6.NgForOf, ɵngcc6.NgIf, ɵngcc7.CdkPortalOutlet, ɵngcc4.MatRipple, ɵngcc8.CdkMonitorFocus, MatTabLabelWrapper, MatTabBody, MatTabHeader], styles: [\".mat-tab-group{display:flex;flex-direction:column}.mat-tab-group.mat-tab-group-inverted-header{flex-direction:column-reverse}.mat-tab-label{height:48px;padding:0 24px;cursor:pointer;box-sizing:border-box;opacity:.6;min-width:160px;text-align:center;display:inline-flex;justify-content:center;align-items:center;white-space:nowrap;position:relative}.mat-tab-label:focus{outline:0}.mat-tab-label:focus:not(.mat-tab-disabled){opacity:1}@media (-ms-high-contrast:active){.mat-tab-label:focus{outline:dotted 2px}}.mat-tab-label.mat-tab-disabled{cursor:default}@media (-ms-high-contrast:active){.mat-tab-label.mat-tab-disabled{opacity:.5}}.mat-tab-label .mat-tab-label-content{display:inline-flex;justify-content:center;align-items:center;white-space:nowrap}@media (-ms-high-contrast:active){.mat-tab-label{opacity:1}}@media (max-width:599px){.mat-tab-label{padding:0 12px}}@media (max-width:959px){.mat-tab-label{padding:0 12px}}.mat-tab-group[mat-stretch-tabs]>.mat-tab-header .mat-tab-label{flex-basis:0;flex-grow:1}.mat-tab-body-wrapper{position:relative;overflow:hidden;display:flex;transition:height .5s cubic-bezier(.35,0,.25,1)}.mat-tab-body{top:0;left:0;right:0;bottom:0;position:absolute;display:block;overflow:hidden;flex-basis:100%}.mat-tab-body.mat-tab-body-active{position:relative;overflow-x:hidden;overflow-y:auto;z-index:1;flex-grow:1}.mat-tab-group.mat-tab-group-dynamic-height .mat-tab-body.mat-tab-body-active{overflow-y:hidden}\"], encapsulation: 2, changeDetection: 0 });\n/** @nocollapse */\nMatTabGroup.ctorParameters = () => [\n    { type: ElementRef },\n    { type: ChangeDetectorRef },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_TABS_CONFIG,] }, { type: Optional }] }\n];\nMatTabGroup.propDecorators = {\n    _tabs: [{ type: ContentChildren, args: [MatTab,] }],\n    _tabBodyWrapper: [{ type: ViewChild, args: ['tabBodyWrapper',] }],\n    _tabHeader: [{ type: ViewChild, args: ['tabHeader',] }],\n    dynamicHeight: [{ type: Input }],\n    selectedIndex: [{ type: Input }],\n    headerPosition: [{ type: Input }],\n    animationDuration: [{ type: Input }],\n    backgroundColor: [{ type: Input }],\n    selectedIndexChange: [{ type: Output }],\n    focusChange: [{ type: Output }],\n    animationDone: [{ type: Output }],\n    selectedTabChange: [{ type: Output }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatTabGroup, [{\n        type: Component,\n        args: [{ selector: 'mat-tab-group', exportAs: 'matTabGroup', template: \"<mat-tab-header #tabHeader [selectedIndex]=\\\"selectedIndex\\\" [disableRipple]=\\\"disableRipple\\\" (indexFocused)=\\\"_focusChanged($event)\\\" (selectFocusedIndex)=\\\"selectedIndex = $event\\\"><div class=\\\"mat-tab-label\\\" role=\\\"tab\\\" matTabLabelWrapper mat-ripple cdkMonitorElementFocus *ngFor=\\\"let tab of _tabs; let i = index\\\" [id]=\\\"_getTabLabelId(i)\\\" [attr.tabIndex]=\\\"_getTabIndex(tab, i)\\\" [attr.aria-posinset]=\\\"i + 1\\\" [attr.aria-setsize]=\\\"_tabs.length\\\" [attr.aria-controls]=\\\"_getTabContentId(i)\\\" [attr.aria-selected]=\\\"selectedIndex == i\\\" [attr.aria-label]=\\\"tab.ariaLabel || null\\\" [attr.aria-labelledby]=\\\"(!tab.ariaLabel && tab.ariaLabelledby) ? tab.ariaLabelledby : null\\\" [class.mat-tab-label-active]=\\\"selectedIndex == i\\\" [disabled]=\\\"tab.disabled\\\" [matRippleDisabled]=\\\"tab.disabled || disableRipple\\\" (click)=\\\"_handleClick(tab, tabHeader, i)\\\"><div class=\\\"mat-tab-label-content\\\"><ng-template [ngIf]=\\\"tab.templateLabel\\\"><ng-template [cdkPortalOutlet]=\\\"tab.templateLabel\\\"></ng-template></ng-template><ng-template [ngIf]=\\\"!tab.templateLabel\\\">{{tab.textLabel}}</ng-template></div></div></mat-tab-header><div class=\\\"mat-tab-body-wrapper\\\" #tabBodyWrapper><mat-tab-body role=\\\"tabpanel\\\" *ngFor=\\\"let tab of _tabs; let i = index\\\" [id]=\\\"_getTabContentId(i)\\\" [attr.aria-labelledby]=\\\"_getTabLabelId(i)\\\" [class.mat-tab-body-active]=\\\"selectedIndex == i\\\" [content]=\\\"tab.content\\\" [position]=\\\"tab.position\\\" [origin]=\\\"tab.origin\\\" [animationDuration]=\\\"animationDuration\\\" (_onCentered)=\\\"_removeTabBodyWrapperHeight()\\\" (_onCentering)=\\\"_setTabBodyWrapperHeight($event)\\\"></mat-tab-body></div>\", encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, inputs: ['color', 'disableRipple'], host: {\n                    'class': 'mat-tab-group',\n                    '[class.mat-tab-group-dynamic-height]': 'dynamicHeight',\n                    '[class.mat-tab-group-inverted-header]': 'headerPosition === \"below\"'\n                }, styles: [\".mat-tab-group{display:flex;flex-direction:column}.mat-tab-group.mat-tab-group-inverted-header{flex-direction:column-reverse}.mat-tab-label{height:48px;padding:0 24px;cursor:pointer;box-sizing:border-box;opacity:.6;min-width:160px;text-align:center;display:inline-flex;justify-content:center;align-items:center;white-space:nowrap;position:relative}.mat-tab-label:focus{outline:0}.mat-tab-label:focus:not(.mat-tab-disabled){opacity:1}@media (-ms-high-contrast:active){.mat-tab-label:focus{outline:dotted 2px}}.mat-tab-label.mat-tab-disabled{cursor:default}@media (-ms-high-contrast:active){.mat-tab-label.mat-tab-disabled{opacity:.5}}.mat-tab-label .mat-tab-label-content{display:inline-flex;justify-content:center;align-items:center;white-space:nowrap}@media (-ms-high-contrast:active){.mat-tab-label{opacity:1}}@media (max-width:599px){.mat-tab-label{padding:0 12px}}@media (max-width:959px){.mat-tab-label{padding:0 12px}}.mat-tab-group[mat-stretch-tabs]>.mat-tab-header .mat-tab-label{flex-basis:0;flex-grow:1}.mat-tab-body-wrapper{position:relative;overflow:hidden;display:flex;transition:height .5s cubic-bezier(.35,0,.25,1)}.mat-tab-body{top:0;left:0;right:0;bottom:0;position:absolute;display:block;overflow:hidden;flex-basis:100%}.mat-tab-body.mat-tab-body-active{position:relative;overflow-x:hidden;overflow-y:auto;z-index:1;flex-grow:1}.mat-tab-group.mat-tab-group-dynamic-height .mat-tab-body.mat-tab-body-active{overflow-y:hidden}\"] }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.ChangeDetectorRef }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_TABS_CONFIG]\n            }, {\n                type: Optional\n            }] }]; }, { headerPosition: [{\n            type: Input\n        }], selectedIndexChange: [{\n            type: Output\n        }], focusChange: [{\n            type: Output\n        }], animationDone: [{\n            type: Output\n        }], selectedTabChange: [{\n            type: Output\n        }], animationDuration: [{\n            type: Input\n        }], dynamicHeight: [{\n            type: Input\n        }], selectedIndex: [{\n            type: Input\n        }], backgroundColor: [{\n            type: Input\n        }], _tabs: [{\n            type: ContentChildren,\n            args: [MatTab]\n        }], _tabBodyWrapper: [{\n            type: ViewChild,\n            args: ['tabBodyWrapper']\n        }], _tabHeader: [{\n            type: ViewChild,\n            args: ['tabHeader']\n        }] }); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// Boilerplate for applying mixins to MatTabNav.\n/**\n * \\@docs-private\n */\nclass MatTabNavBase {\n    /**\n     * @param {?} _elementRef\n     */\n    constructor(_elementRef) {\n        this._elementRef = _elementRef;\n    }\n}\n/** @type {?} */\nconst _MatTabNavMixinBase = mixinDisableRipple(mixinColor(MatTabNavBase, 'primary'));\n/**\n * Navigation component matching the styles of the tab group header.\n * Provides anchored navigation with animated ink bar.\n */\nclass MatTabNav extends _MatTabNavMixinBase {\n    /**\n     * @param {?} elementRef\n     * @param {?} _dir\n     * @param {?} _ngZone\n     * @param {?} _changeDetectorRef\n     * @param {?} _viewportRuler\n     */\n    constructor(elementRef, _dir, _ngZone, _changeDetectorRef, _viewportRuler) {\n        super(elementRef);\n        this._dir = _dir;\n        this._ngZone = _ngZone;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._viewportRuler = _viewportRuler;\n        /**\n         * Subject that emits when the component has been destroyed.\n         */\n        this._onDestroy = new Subject();\n    }\n    /**\n     * Background color of the tab nav.\n     * @return {?}\n     */\n    get backgroundColor() { return this._backgroundColor; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set backgroundColor(value) {\n        /** @type {?} */\n        const nativeElement = this._elementRef.nativeElement;\n        nativeElement.classList.remove(`mat-background-${this.backgroundColor}`);\n        if (value) {\n            nativeElement.classList.add(`mat-background-${value}`);\n        }\n        this._backgroundColor = value;\n    }\n    /**\n     * Notifies the component that the active link has been changed.\n     * \\@breaking-change 8.0.0 `element` parameter to be removed.\n     * @param {?} element\n     * @return {?}\n     */\n    updateActiveLink(element) {\n        // Note: keeping the `element` for backwards-compat, but isn't being used for anything.\n        // @breaking-change 8.0.0\n        this._activeLinkChanged = !!element;\n        this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        this._ngZone.runOutsideAngular(() => {\n            /** @type {?} */\n            const dirChange = this._dir ? this._dir.change : of(null);\n            return merge(dirChange, this._viewportRuler.change(10))\n                .pipe(takeUntil(this._onDestroy))\n                .subscribe(() => this._alignInkBar());\n        });\n    }\n    /**\n     * Checks if the active link has been changed and, if so, will update the ink bar.\n     * @return {?}\n     */\n    ngAfterContentChecked() {\n        if (this._activeLinkChanged) {\n            /** @type {?} */\n            const activeTab = this._tabLinks.find(tab => tab.active);\n            this._activeLinkElement = activeTab ? activeTab._elementRef : null;\n            this._alignInkBar();\n            this._activeLinkChanged = false;\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._onDestroy.next();\n        this._onDestroy.complete();\n    }\n    /**\n     * Aligns the ink bar to the active link.\n     * @return {?}\n     */\n    _alignInkBar() {\n        if (this._activeLinkElement) {\n            this._inkBar.show();\n            this._inkBar.alignToElement(this._activeLinkElement.nativeElement);\n        }\n        else {\n            this._inkBar.hide();\n        }\n    }\n}\nMatTabNav.ɵfac = function MatTabNav_Factory(t) { return new (t || MatTabNav)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.ViewportRuler)); };\nMatTabNav.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: MatTabNav, selectors: [[\"\", \"mat-tab-nav-bar\", \"\"]], contentQueries: function MatTabNav_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatTabLink, 5);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._tabLinks = _t);\n    } }, viewQuery: function MatTabNav_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(MatInkBar, 5);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._inkBar = _t.first);\n    } }, hostAttrs: [1, \"mat-tab-nav-bar\"], inputs: { color: \"color\", disableRipple: \"disableRipple\", backgroundColor: \"backgroundColor\" }, exportAs: [\"matTabNavBar\", \"matTabNav\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature], attrs: _c9, ngContentSelectors: _c0, decls: 3, vars: 0, consts: [[1, \"mat-tab-links\", 3, \"cdkObserveContent\"]], template: function MatTabNav_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n        ɵngcc0.ɵɵlistener(\"cdkObserveContent\", function MatTabNav_Template_div_cdkObserveContent_0_listener() { return ctx._alignInkBar(); });\n        ɵngcc0.ɵɵprojection(1);\n        ɵngcc0.ɵɵelement(2, \"mat-ink-bar\");\n        ɵngcc0.ɵɵelementEnd();\n    } }, dependencies: [ɵngcc5.CdkObserveContent, MatInkBar], styles: [\".mat-tab-nav-bar{overflow:hidden;position:relative;flex-shrink:0}.mat-tab-links{position:relative;display:flex}[mat-align-tabs=center] .mat-tab-links{justify-content:center}[mat-align-tabs=end] .mat-tab-links{justify-content:flex-end}.mat-tab-link{height:48px;padding:0 24px;cursor:pointer;box-sizing:border-box;opacity:.6;min-width:160px;text-align:center;display:inline-flex;justify-content:center;align-items:center;white-space:nowrap;vertical-align:top;text-decoration:none;position:relative;overflow:hidden;-webkit-tap-highlight-color:transparent}.mat-tab-link:focus{outline:0}.mat-tab-link:focus:not(.mat-tab-disabled){opacity:1}@media (-ms-high-contrast:active){.mat-tab-link:focus{outline:dotted 2px}}.mat-tab-link.mat-tab-disabled{cursor:default}@media (-ms-high-contrast:active){.mat-tab-link.mat-tab-disabled{opacity:.5}}.mat-tab-link .mat-tab-label-content{display:inline-flex;justify-content:center;align-items:center;white-space:nowrap}@media (-ms-high-contrast:active){.mat-tab-link{opacity:1}}[mat-stretch-tabs] .mat-tab-link{flex-basis:0;flex-grow:1}.mat-tab-link.mat-tab-disabled{pointer-events:none}@media (max-width:599px){.mat-tab-link{min-width:72px}}.mat-ink-bar{position:absolute;bottom:0;height:2px;transition:.5s cubic-bezier(.35,0,.25,1)}.mat-tab-group-inverted-header .mat-ink-bar{bottom:auto;top:0}@media (-ms-high-contrast:active){.mat-ink-bar{outline:solid 2px;height:0}}\"], encapsulation: 2, changeDetection: 0 });\n/** @nocollapse */\nMatTabNav.ctorParameters = () => [\n    { type: ElementRef },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: NgZone },\n    { type: ChangeDetectorRef },\n    { type: ViewportRuler }\n];\nMatTabNav.propDecorators = {\n    _inkBar: [{ type: ViewChild, args: [MatInkBar,] }],\n    _tabLinks: [{ type: ContentChildren, args: [forwardRef(() => MatTabLink), { descendants: true },] }],\n    backgroundColor: [{ type: Input }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatTabNav, [{\n        type: Component,\n        args: [{ selector: '[mat-tab-nav-bar]', exportAs: 'matTabNavBar, matTabNav', inputs: ['color', 'disableRipple'], template: \"<div class=\\\"mat-tab-links\\\" (cdkObserveContent)=\\\"_alignInkBar()\\\"><ng-content></ng-content><mat-ink-bar></mat-ink-bar></div>\", host: { 'class': 'mat-tab-nav-bar' }, encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, styles: [\".mat-tab-nav-bar{overflow:hidden;position:relative;flex-shrink:0}.mat-tab-links{position:relative;display:flex}[mat-align-tabs=center] .mat-tab-links{justify-content:center}[mat-align-tabs=end] .mat-tab-links{justify-content:flex-end}.mat-tab-link{height:48px;padding:0 24px;cursor:pointer;box-sizing:border-box;opacity:.6;min-width:160px;text-align:center;display:inline-flex;justify-content:center;align-items:center;white-space:nowrap;vertical-align:top;text-decoration:none;position:relative;overflow:hidden;-webkit-tap-highlight-color:transparent}.mat-tab-link:focus{outline:0}.mat-tab-link:focus:not(.mat-tab-disabled){opacity:1}@media (-ms-high-contrast:active){.mat-tab-link:focus{outline:dotted 2px}}.mat-tab-link.mat-tab-disabled{cursor:default}@media (-ms-high-contrast:active){.mat-tab-link.mat-tab-disabled{opacity:.5}}.mat-tab-link .mat-tab-label-content{display:inline-flex;justify-content:center;align-items:center;white-space:nowrap}@media (-ms-high-contrast:active){.mat-tab-link{opacity:1}}[mat-stretch-tabs] .mat-tab-link{flex-basis:0;flex-grow:1}.mat-tab-link.mat-tab-disabled{pointer-events:none}@media (max-width:599px){.mat-tab-link{min-width:72px}}.mat-ink-bar{position:absolute;bottom:0;height:2px;transition:.5s cubic-bezier(.35,0,.25,1)}.mat-tab-group-inverted-header .mat-ink-bar{bottom:auto;top:0}@media (-ms-high-contrast:active){.mat-ink-bar{outline:solid 2px;height:0}}\"] }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc1.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc0.NgZone }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc2.ViewportRuler }]; }, { backgroundColor: [{\n            type: Input\n        }], _inkBar: [{\n            type: ViewChild,\n            args: [MatInkBar]\n        }], _tabLinks: [{\n            type: ContentChildren,\n            args: [forwardRef(() => MatTabLink), { descendants: true }]\n        }] }); })();\n// Boilerplate for applying mixins to MatTabLink.\nclass MatTabLinkBase {\n}\n/** @type {?} */\nconst _MatTabLinkMixinBase = mixinTabIndex(mixinDisableRipple(mixinDisabled(MatTabLinkBase)));\n/**\n * Link inside of a `mat-tab-nav-bar`.\n */\nclass MatTabLink extends _MatTabLinkMixinBase {\n    /**\n     * @param {?} _tabNavBar\n     * @param {?} _elementRef\n     * @param {?} ngZone\n     * @param {?} platform\n     * @param {?} globalRippleOptions\n     * @param {?} tabIndex\n     * @param {?=} _focusMonitor\n     */\n    constructor(_tabNavBar, _elementRef, ngZone, platform, globalRippleOptions, tabIndex, _focusMonitor) {\n        super();\n        this._tabNavBar = _tabNavBar;\n        this._elementRef = _elementRef;\n        this._focusMonitor = _focusMonitor;\n        /**\n         * Whether the tab link is active or not.\n         */\n        this._isActive = false;\n        this._tabLinkRipple = new RippleRenderer(this, ngZone, _elementRef, platform);\n        this._tabLinkRipple.setupTriggerEvents(_elementRef.nativeElement);\n        this.rippleConfig = globalRippleOptions || {};\n        this.tabIndex = parseInt(tabIndex) || 0;\n        if (_focusMonitor) {\n            _focusMonitor.monitor(_elementRef);\n        }\n    }\n    /**\n     * Whether the link is active.\n     * @return {?}\n     */\n    get active() { return this._isActive; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set active(value) {\n        if (value !== this._isActive) {\n            this._isActive = value;\n            this._tabNavBar.updateActiveLink(this._elementRef);\n        }\n    }\n    /**\n     * Whether ripples are disabled on interaction.\n     * \\@docs-private\n     * @return {?}\n     */\n    get rippleDisabled() {\n        return this.disabled || this.disableRipple || this._tabNavBar.disableRipple ||\n            !!this.rippleConfig.disabled;\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._tabLinkRipple._removeTriggerEvents();\n        if (this._focusMonitor) {\n            this._focusMonitor.stopMonitoring(this._elementRef);\n        }\n    }\n}\nMatTabLink.ɵfac = function MatTabLink_Factory(t) { return new (t || MatTabLink)(ɵngcc0.ɵɵdirectiveInject(MatTabNav), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc3.Platform), ɵngcc0.ɵɵdirectiveInject(MAT_RIPPLE_GLOBAL_OPTIONS, 8), ɵngcc0.ɵɵinjectAttribute('tabindex'), ɵngcc0.ɵɵdirectiveInject(ɵngcc8.FocusMonitor)); };\nMatTabLink.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: MatTabLink, selectors: [[\"\", \"mat-tab-link\", \"\"], [\"\", \"matTabLink\", \"\"]], hostAttrs: [1, \"mat-tab-link\"], hostVars: 7, hostBindings: function MatTabLink_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"aria-current\", ctx.active)(\"aria-disabled\", ctx.disabled.toString())(\"tabIndex\", ctx.tabIndex);\n        ɵngcc0.ɵɵclassProp(\"mat-tab-disabled\", ctx.disabled)(\"mat-tab-label-active\", ctx.active);\n    } }, inputs: { disabled: \"disabled\", disableRipple: \"disableRipple\", tabIndex: \"tabIndex\", active: \"active\" }, exportAs: [\"matTabLink\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\n/** @nocollapse */\nMatTabLink.ctorParameters = () => [\n    { type: MatTabNav },\n    { type: ElementRef },\n    { type: NgZone },\n    { type: Platform },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_RIPPLE_GLOBAL_OPTIONS,] }] },\n    { type: String, decorators: [{ type: Attribute, args: ['tabindex',] }] },\n    { type: FocusMonitor }\n];\nMatTabLink.propDecorators = {\n    active: [{ type: Input }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatTabLink, [{\n        type: Directive,\n        args: [{\n                selector: '[mat-tab-link], [matTabLink]',\n                exportAs: 'matTabLink',\n                inputs: ['disabled', 'disableRipple', 'tabIndex'],\n                host: {\n                    'class': 'mat-tab-link',\n                    '[attr.aria-current]': 'active',\n                    '[attr.aria-disabled]': 'disabled.toString()',\n                    '[attr.tabIndex]': 'tabIndex',\n                    '[class.mat-tab-disabled]': 'disabled',\n                    '[class.mat-tab-label-active]': 'active'\n                }\n            }]\n    }], function () { return [{ type: MatTabNav }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }, { type: ɵngcc3.Platform }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_RIPPLE_GLOBAL_OPTIONS]\n            }] }, { type: String, decorators: [{\n                type: Attribute,\n                args: ['tabindex']\n            }] }, { type: ɵngcc8.FocusMonitor }]; }, { active: [{\n            type: Input\n        }] }); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass MatTabsModule {\n}\nMatTabsModule.ɵfac = function MatTabsModule_Factory(t) { return new (t || MatTabsModule)(); };\nMatTabsModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: MatTabsModule });\nMatTabsModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ imports: [CommonModule,\n        MatCommonModule,\n        PortalModule,\n        MatRippleModule,\n        ObserversModule,\n        A11yModule, MatCommonModule] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatTabsModule, [{\n        type: NgModule,\n        args: [{\n                imports: [\n                    CommonModule,\n                    MatCommonModule,\n                    PortalModule,\n                    MatRippleModule,\n                    ObserversModule,\n                    A11yModule,\n                ],\n                // Don't export all components because some are only to be used internally.\n                exports: [\n                    MatCommonModule,\n                    MatTabGroup,\n                    MatTabLabel,\n                    MatTab,\n                    MatTabNav,\n                    MatTabLink,\n                    MatTabContent,\n                ],\n                declarations: [\n                    MatTabGroup,\n                    MatTabLabel,\n                    MatTab,\n                    MatInkBar,\n                    MatTabLabelWrapper,\n                    MatTabNav,\n                    MatTabLink,\n                    MatTabBody,\n                    MatTabBodyPortal,\n                    MatTabHeader,\n                    MatTabContent,\n                ]\n            }]\n    }], null, null); })();\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatTabsModule, { declarations: function () { return [MatTabGroup, MatTabLabel, MatTab, MatInkBar, MatTabLabelWrapper, MatTabNav, MatTabLink, MatTabBody, MatTabBodyPortal, MatTabHeader, MatTabContent]; }, imports: function () { return [CommonModule,\n        MatCommonModule,\n        PortalModule,\n        MatRippleModule,\n        ObserversModule,\n        A11yModule]; }, exports: function () { return [MatCommonModule, MatTabGroup, MatTabLabel, MatTab, MatTabNav, MatTabLink, MatTabContent]; } }); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\nexport { MatInkBar, _MAT_INK_BAR_POSITIONER, MatTabBody, MatTabBodyPortal, MatTabHeader, MatTabLabelWrapper, MatTab, MatTabLabel, MatTabNav, MatTabLink, MatTabContent, MatTabsModule, MatTabChangeEvent, MAT_TABS_CONFIG, MatTabGroupBase, _MatTabGroupMixinBase, MatTabGroup, matTabsAnimations, _MAT_INK_BAR_POSITIONER_FACTORY as ɵa21, MatTabBase as ɵf21, _MatTabMixinBase as ɵg21, MatTabHeaderBase as ɵb21, _MatTabHeaderMixinBase as ɵc21, MatTabLabelWrapperBase as ɵd21, _MatTabLabelWrapperMixinBase as ɵe21, MatTabLinkBase as ɵj21, MatTabNavBase as ɵh21, _MatTabLinkMixinBase as ɵk21, _MatTabNavMixinBase as ɵi21 };\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}