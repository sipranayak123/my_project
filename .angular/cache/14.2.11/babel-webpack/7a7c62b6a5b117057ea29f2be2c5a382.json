{"ast":null,"code":"/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { InjectionToken, Directive, TemplateRef, ChangeDetectionStrategy, ChangeDetectorRef, Component, ContentChild, EventEmitter, ElementRef, Input, Inject, Optional, Output, SkipSelf, ViewContainerRef, ViewEncapsulation, ViewChild, Host, ContentChildren, NgModule } from '@angular/core';\nimport { animate, animateChild, group, state, style, transition, trigger, query } from '@angular/animations';\nimport { CdkAccordionItem, CdkAccordion, CdkAccordionModule } from '@angular/cdk/accordion';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { UniqueSelectionDispatcher } from '@angular/cdk/collections';\nimport { TemplatePortal, PortalModule } from '@angular/cdk/portal';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\nimport { Subject, merge, Subscription, EMPTY } from 'rxjs';\nimport { filter, startWith, take, distinctUntilChanged } from 'rxjs/operators';\nimport { FocusMonitor, FocusKeyManager } from '@angular/cdk/a11y';\nimport { ENTER, SPACE, hasModifierKey, HOME, END } from '@angular/cdk/keycodes';\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Token used to provide a `MatAccordion` to `MatExpansionPanel`.\n * Used primarily to avoid circular imports between `MatAccordion` and `MatExpansionPanel`.\n * @type {?}\n */\n\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/collections';\nimport * as ɵngcc2 from '@angular/cdk/portal';\nimport * as ɵngcc3 from '@angular/cdk/a11y';\nimport * as ɵngcc4 from '@angular/common';\nconst _c0 = [\"body\"];\n\nfunction MatExpansionPanel_ng_template_5_Template(rf, ctx) {}\n\nconst _c1 = [[[\"mat-expansion-panel-header\"]], \"*\", [[\"mat-action-row\"]]];\nconst _c2 = [\"mat-expansion-panel-header\", \"*\", \"mat-action-row\"];\n\nconst _c3 = function (a0, a1) {\n  return {\n    collapsedHeight: a0,\n    expandedHeight: a1\n  };\n};\n\nconst _c4 = function (a0, a1) {\n  return {\n    value: a0,\n    params: a1\n  };\n};\n\nfunction MatExpansionPanelHeader_span_4_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"span\", 2);\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"@indicatorRotate\", ctx_r0._getExpandedState());\n  }\n}\n\nconst _c5 = [[[\"mat-panel-title\"]], [[\"mat-panel-description\"]], \"*\"];\nconst _c6 = [\"mat-panel-title\", \"mat-panel-description\", \"*\"];\nconst MAT_ACCORDION = new InjectionToken('MAT_ACCORDION');\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Time and timing curve for expansion panel animations.\n * @type {?}\n */\n\nconst EXPANSION_PANEL_ANIMATION_TIMING = '225ms cubic-bezier(0.4,0.0,0.2,1)';\n/**\n * Animations used by the Material expansion panel.\n *\n * A bug in angular animation's `state` when ViewContainers are moved using ViewContainerRef.move()\n * causes the animation state of moved components to become `void` upon exit, and not update again\n * upon reentry into the DOM.  This can lead a to situation for the expansion panel where the state\n * of the panel is `expanded` or `collapsed` but the animation state is `void`.\n *\n * To correctly handle animating to the next state, we animate between `void` and `collapsed` which\n * are defined to have the same styles. Since angular animates from the current styles to the\n * destination state's style definition, in situations where we are moving from `void`'s styles to\n * `collapsed` this acts a noop since no style values change.\n *\n * In the case where angular's animation state is out of sync with the expansion panel's state, the\n * expansion panel being `expanded` and angular animations being `void`, the animation from the\n * `expanded`'s effective styles (though in a `void` animation state) to the collapsed state will\n * occur as expected.\n *\n * Angular Bug: https://github.com/angular/angular/issues/18847\n *\n * \\@docs-private\n * @type {?}\n */\n\nconst matExpansionAnimations = {\n  /**\n   * Animation that rotates the indicator arrow.\n   */\n  indicatorRotate: trigger('indicatorRotate', [state('collapsed, void', style({\n    transform: 'rotate(0deg)'\n  })), state('expanded', style({\n    transform: 'rotate(180deg)'\n  })), transition('expanded <=> collapsed, void => collapsed', animate(EXPANSION_PANEL_ANIMATION_TIMING))]),\n\n  /**\n   * Animation that expands and collapses the panel header height.\n   */\n  expansionHeaderHeight: trigger('expansionHeight', [state('collapsed, void', style({\n    height: '{{collapsedHeight}}'\n  }), {\n    params: {\n      collapsedHeight: '48px'\n    }\n  }), state('expanded', style({\n    height: '{{expandedHeight}}'\n  }), {\n    params: {\n      expandedHeight: '64px'\n    }\n  }), transition('expanded <=> collapsed, void => collapsed', group([query('@indicatorRotate', animateChild(), {\n    optional: true\n  }), animate(EXPANSION_PANEL_ANIMATION_TIMING)]))]),\n\n  /**\n   * Animation that expands and collapses the panel content.\n   */\n  bodyExpansion: trigger('bodyExpansion', [state('collapsed, void', style({\n    height: '0px',\n    visibility: 'hidden'\n  })), state('expanded', style({\n    height: '*',\n    visibility: 'visible'\n  })), transition('expanded <=> collapsed, void => collapsed', animate(EXPANSION_PANEL_ANIMATION_TIMING))])\n};\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Expansion panel content that will be rendered lazily\n * after the panel is opened for the first time.\n */\n\nclass MatExpansionPanelContent {\n  /**\n   * @param {?} _template\n   */\n  constructor(_template) {\n    this._template = _template;\n  }\n\n}\n\nMatExpansionPanelContent.ɵfac = function MatExpansionPanelContent_Factory(t) {\n  return new (t || MatExpansionPanelContent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef));\n};\n\nMatExpansionPanelContent.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n  type: MatExpansionPanelContent,\n  selectors: [[\"ng-template\", \"matExpansionPanelContent\", \"\"]]\n});\n/** @nocollapse */\n\nMatExpansionPanelContent.ctorParameters = () => [{\n  type: TemplateRef\n}];\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatExpansionPanelContent, [{\n    type: Directive,\n    args: [{\n      selector: 'ng-template[matExpansionPanelContent]'\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.TemplateRef\n    }];\n  }, null);\n})();\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Counter for generating unique element ids.\n * @type {?}\n */\n\n\nlet uniqueId = 0;\n/**\n * Injection token that can be used to configure the defalt\n * options for the expansion panel component.\n * @type {?}\n */\n\nconst MAT_EXPANSION_PANEL_DEFAULT_OPTIONS = new InjectionToken('MAT_EXPANSION_PANEL_DEFAULT_OPTIONS');\nconst ɵ0 = undefined;\n/**\n * `<mat-expansion-panel>`\n *\n * This component can be used as a single element to show expandable content, or as one of\n * multiple children of an element with the MatAccordion directive attached.\n */\n\nclass MatExpansionPanel extends CdkAccordionItem {\n  /**\n   * @param {?} accordion\n   * @param {?} _changeDetectorRef\n   * @param {?} _uniqueSelectionDispatcher\n   * @param {?} _viewContainerRef\n   * @param {?=} _document\n   * @param {?=} _animationMode\n   * @param {?=} defaultOptions\n   */\n  constructor(accordion, _changeDetectorRef, _uniqueSelectionDispatcher, _viewContainerRef, // @breaking-change 8.0.0 _document and _animationMode to be made required\n  _document, _animationMode, defaultOptions) {\n    super(accordion, _changeDetectorRef, _uniqueSelectionDispatcher);\n    this._viewContainerRef = _viewContainerRef;\n    this._animationMode = _animationMode;\n    this._hideToggle = false;\n    /**\n     * An event emitted after the body's expansion animation happens.\n     */\n\n    this.afterExpand = new EventEmitter();\n    /**\n     * An event emitted after the body's collapse animation happens.\n     */\n\n    this.afterCollapse = new EventEmitter();\n    /**\n     * Stream that emits for changes in `\\@Input` properties.\n     */\n\n    this._inputChanges = new Subject();\n    /**\n     * ID for the associated header element. Used for a11y labelling.\n     */\n\n    this._headerId = `mat-expansion-panel-header-${uniqueId++}`;\n    /**\n     * Stream of body animation done events.\n     */\n\n    this._bodyAnimationDone = new Subject();\n    this.accordion = accordion;\n    this._document = _document; // We need a Subject with distinctUntilChanged, because the `done` event\n    // fires twice on some browsers. See https://github.com/angular/angular/issues/24084\n\n    this._bodyAnimationDone.pipe(distinctUntilChanged((x, y) => {\n      return x.fromState === y.fromState && x.toState === y.toState;\n    })).subscribe(event => {\n      if (event.fromState !== 'void') {\n        if (event.toState === 'expanded') {\n          this.afterExpand.emit();\n        } else if (event.toState === 'collapsed') {\n          this.afterCollapse.emit();\n        }\n      }\n    });\n\n    if (defaultOptions) {\n      this.hideToggle = defaultOptions.hideToggle;\n    }\n  }\n  /**\n   * Whether the toggle indicator should be hidden.\n   * @return {?}\n   */\n\n\n  get hideToggle() {\n    return this._hideToggle || this.accordion && this.accordion.hideToggle;\n  }\n  /**\n   * @param {?} value\n   * @return {?}\n   */\n\n\n  set hideToggle(value) {\n    this._hideToggle = coerceBooleanProperty(value);\n  }\n  /**\n   * Determines whether the expansion panel should have spacing between it and its siblings.\n   * @return {?}\n   */\n\n\n  _hasSpacing() {\n    if (this.accordion) {\n      // We don't need to subscribe to the `stateChanges` of the parent accordion because each time\n      // the [displayMode] input changes, the change detection will also cover the host bindings\n      // of this expansion panel.\n      return (this.expanded ? this.accordion.displayMode : this._getExpandedState()) === 'default';\n    }\n\n    return false;\n  }\n  /**\n   * Gets the expanded state string.\n   * @return {?}\n   */\n\n\n  _getExpandedState() {\n    return this.expanded ? 'expanded' : 'collapsed';\n  }\n  /**\n   * @return {?}\n   */\n\n\n  ngAfterContentInit() {\n    if (this._lazyContent) {\n      // Render the content as soon as the panel becomes open.\n      this.opened.pipe(startWith(\n      /** @type {?} */\n      null), filter(() => this.expanded && !this._portal), take(1)).subscribe(() => {\n        this._portal = new TemplatePortal(this._lazyContent._template, this._viewContainerRef);\n      });\n    }\n  }\n  /**\n   * @param {?} changes\n   * @return {?}\n   */\n\n\n  ngOnChanges(changes) {\n    this._inputChanges.next(changes);\n  }\n  /**\n   * @return {?}\n   */\n\n\n  ngOnDestroy() {\n    super.ngOnDestroy();\n\n    this._bodyAnimationDone.complete();\n\n    this._inputChanges.complete();\n  }\n  /**\n   * Checks whether the expansion panel's content contains the currently-focused element.\n   * @return {?}\n   */\n\n\n  _containsFocus() {\n    if (this._body && this._document) {\n      /** @type {?} */\n      const focusedElement = this._document.activeElement;\n      /** @type {?} */\n\n      const bodyElement = this._body.nativeElement;\n      return focusedElement === bodyElement || bodyElement.contains(focusedElement);\n    }\n\n    return false;\n  }\n\n}\n\nMatExpansionPanel.ɵfac = function MatExpansionPanel_Factory(t) {\n  return new (t || MatExpansionPanel)(ɵngcc0.ɵɵdirectiveInject(MAT_ACCORDION, 12), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.UniqueSelectionDispatcher), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(DOCUMENT), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8), ɵngcc0.ɵɵdirectiveInject(MAT_EXPANSION_PANEL_DEFAULT_OPTIONS, 8));\n};\n\nMatExpansionPanel.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n  type: MatExpansionPanel,\n  selectors: [[\"mat-expansion-panel\"]],\n  contentQueries: function MatExpansionPanel_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵcontentQuery(dirIndex, MatExpansionPanelContent, 5);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._lazyContent = _t.first);\n    }\n  },\n  viewQuery: function MatExpansionPanel_Query(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵviewQuery(_c0, 5);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._body = _t.first);\n    }\n  },\n  hostAttrs: [1, \"mat-expansion-panel\"],\n  hostVars: 6,\n  hostBindings: function MatExpansionPanel_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      ɵngcc0.ɵɵclassProp(\"mat-expanded\", ctx.expanded)(\"_mat-animation-noopable\", ctx._animationMode === \"NoopAnimations\")(\"mat-expansion-panel-spacing\", ctx._hasSpacing());\n    }\n  },\n  inputs: {\n    disabled: \"disabled\",\n    expanded: \"expanded\",\n    hideToggle: \"hideToggle\"\n  },\n  outputs: {\n    opened: \"opened\",\n    closed: \"closed\",\n    expandedChange: \"expandedChange\",\n    afterExpand: \"afterExpand\",\n    afterCollapse: \"afterCollapse\"\n  },\n  exportAs: [\"matExpansionPanel\"],\n  features: [ɵngcc0.ɵɵProvidersFeature([// Provide MatAccordion as undefined to prevent nested expansion panels from registering\n  // to the same accordion.\n  {\n    provide: MAT_ACCORDION,\n    useValue: ɵ0\n  }]), ɵngcc0.ɵɵInheritDefinitionFeature, ɵngcc0.ɵɵNgOnChangesFeature],\n  ngContentSelectors: _c2,\n  decls: 7,\n  vars: 4,\n  consts: [[\"role\", \"region\", 1, \"mat-expansion-panel-content\", 3, \"id\"], [\"body\", \"\"], [1, \"mat-expansion-panel-body\"], [3, \"cdkPortalOutlet\"]],\n  template: function MatExpansionPanel_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵprojectionDef(_c1);\n      ɵngcc0.ɵɵprojection(0);\n      ɵngcc0.ɵɵelementStart(1, \"div\", 0, 1);\n      ɵngcc0.ɵɵlistener(\"@bodyExpansion.done\", function MatExpansionPanel_Template_div_animation_bodyExpansion_done_1_listener($event) {\n        return ctx._bodyAnimationDone.next($event);\n      });\n      ɵngcc0.ɵɵelementStart(3, \"div\", 2);\n      ɵngcc0.ɵɵprojection(4, 1);\n      ɵngcc0.ɵɵtemplate(5, MatExpansionPanel_ng_template_5_Template, 0, 0, \"ng-template\", 3);\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵprojection(6, 2);\n      ɵngcc0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"@bodyExpansion\", ctx._getExpandedState())(\"id\", ctx.id);\n      ɵngcc0.ɵɵattribute(\"aria-labelledby\", ctx._headerId);\n      ɵngcc0.ɵɵadvance(4);\n      ɵngcc0.ɵɵproperty(\"cdkPortalOutlet\", ctx._portal);\n    }\n  },\n  dependencies: [ɵngcc2.CdkPortalOutlet],\n  styles: [\".mat-expansion-panel{box-sizing:content-box;display:block;margin:0;border-radius:4px;overflow:hidden;transition:margin 225ms cubic-bezier(.4,0,.2,1),box-shadow 280ms cubic-bezier(.4,0,.2,1)}.mat-accordion .mat-expansion-panel:not(.mat-expanded),.mat-accordion .mat-expansion-panel:not(.mat-expansion-panel-spacing){border-radius:0}.mat-accordion .mat-expansion-panel:first-of-type{border-top-right-radius:4px;border-top-left-radius:4px}.mat-accordion .mat-expansion-panel:last-of-type{border-bottom-right-radius:4px;border-bottom-left-radius:4px}@media (-ms-high-contrast:active){.mat-expansion-panel{outline:solid 1px}}.mat-expansion-panel._mat-animation-noopable,.mat-expansion-panel.ng-animate-disabled,.ng-animate-disabled .mat-expansion-panel{transition:none}.mat-expansion-panel-content{display:flex;flex-direction:column;overflow:visible}.mat-expansion-panel-body{padding:0 24px 16px}.mat-expansion-panel-spacing{margin:16px 0}.mat-accordion>.mat-expansion-panel-spacing:first-child,.mat-accordion>:first-child:not(.mat-expansion-panel) .mat-expansion-panel-spacing{margin-top:0}.mat-accordion>.mat-expansion-panel-spacing:last-child,.mat-accordion>:last-child:not(.mat-expansion-panel) .mat-expansion-panel-spacing{margin-bottom:0}.mat-action-row{border-top-style:solid;border-top-width:1px;display:flex;flex-direction:row;justify-content:flex-end;padding:16px 8px 16px 24px}.mat-action-row button.mat-button{margin-left:8px}[dir=rtl] .mat-action-row button.mat-button{margin-left:0;margin-right:8px}\"],\n  encapsulation: 2,\n  data: {\n    animation: [matExpansionAnimations.bodyExpansion]\n  },\n  changeDetection: 0\n});\n/** @nocollapse */\n\nMatExpansionPanel.ctorParameters = () => [{\n  type: undefined,\n  decorators: [{\n    type: Optional\n  }, {\n    type: SkipSelf\n  }, {\n    type: Inject,\n    args: [MAT_ACCORDION]\n  }]\n}, {\n  type: ChangeDetectorRef\n}, {\n  type: UniqueSelectionDispatcher\n}, {\n  type: ViewContainerRef\n}, {\n  type: undefined,\n  decorators: [{\n    type: Inject,\n    args: [DOCUMENT]\n  }]\n}, {\n  type: String,\n  decorators: [{\n    type: Optional\n  }, {\n    type: Inject,\n    args: [ANIMATION_MODULE_TYPE]\n  }]\n}, {\n  type: undefined,\n  decorators: [{\n    type: Inject,\n    args: [MAT_EXPANSION_PANEL_DEFAULT_OPTIONS]\n  }, {\n    type: Optional\n  }]\n}];\n\nMatExpansionPanel.propDecorators = {\n  hideToggle: [{\n    type: Input\n  }],\n  afterExpand: [{\n    type: Output\n  }],\n  afterCollapse: [{\n    type: Output\n  }],\n  _lazyContent: [{\n    type: ContentChild,\n    args: [MatExpansionPanelContent]\n  }],\n  _body: [{\n    type: ViewChild,\n    args: ['body']\n  }]\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatExpansionPanel, [{\n    type: Component,\n    args: [{\n      selector: 'mat-expansion-panel',\n      exportAs: 'matExpansionPanel',\n      template: \"<ng-content select=\\\"mat-expansion-panel-header\\\"></ng-content><div class=\\\"mat-expansion-panel-content\\\" role=\\\"region\\\" [@bodyExpansion]=\\\"_getExpandedState()\\\" (@bodyExpansion.done)=\\\"_bodyAnimationDone.next($event)\\\" [attr.aria-labelledby]=\\\"_headerId\\\" [id]=\\\"id\\\" #body><div class=\\\"mat-expansion-panel-body\\\"><ng-content></ng-content><ng-template [cdkPortalOutlet]=\\\"_portal\\\"></ng-template></div><ng-content select=\\\"mat-action-row\\\"></ng-content></div>\",\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      inputs: ['disabled', 'expanded'],\n      outputs: ['opened', 'closed', 'expandedChange'],\n      animations: [matExpansionAnimations.bodyExpansion],\n      providers: [// Provide MatAccordion as undefined to prevent nested expansion panels from registering\n      // to the same accordion.\n      {\n        provide: MAT_ACCORDION,\n        useValue: ɵ0\n      }],\n      host: {\n        'class': 'mat-expansion-panel',\n        '[class.mat-expanded]': 'expanded',\n        '[class._mat-animation-noopable]': '_animationMode === \"NoopAnimations\"',\n        '[class.mat-expansion-panel-spacing]': '_hasSpacing()'\n      },\n      styles: [\".mat-expansion-panel{box-sizing:content-box;display:block;margin:0;border-radius:4px;overflow:hidden;transition:margin 225ms cubic-bezier(.4,0,.2,1),box-shadow 280ms cubic-bezier(.4,0,.2,1)}.mat-accordion .mat-expansion-panel:not(.mat-expanded),.mat-accordion .mat-expansion-panel:not(.mat-expansion-panel-spacing){border-radius:0}.mat-accordion .mat-expansion-panel:first-of-type{border-top-right-radius:4px;border-top-left-radius:4px}.mat-accordion .mat-expansion-panel:last-of-type{border-bottom-right-radius:4px;border-bottom-left-radius:4px}@media (-ms-high-contrast:active){.mat-expansion-panel{outline:solid 1px}}.mat-expansion-panel._mat-animation-noopable,.mat-expansion-panel.ng-animate-disabled,.ng-animate-disabled .mat-expansion-panel{transition:none}.mat-expansion-panel-content{display:flex;flex-direction:column;overflow:visible}.mat-expansion-panel-body{padding:0 24px 16px}.mat-expansion-panel-spacing{margin:16px 0}.mat-accordion>.mat-expansion-panel-spacing:first-child,.mat-accordion>:first-child:not(.mat-expansion-panel) .mat-expansion-panel-spacing{margin-top:0}.mat-accordion>.mat-expansion-panel-spacing:last-child,.mat-accordion>:last-child:not(.mat-expansion-panel) .mat-expansion-panel-spacing{margin-bottom:0}.mat-action-row{border-top-style:solid;border-top-width:1px;display:flex;flex-direction:row;justify-content:flex-end;padding:16px 8px 16px 24px}.mat-action-row button.mat-button{margin-left:8px}[dir=rtl] .mat-action-row button.mat-button{margin-left:0;margin-right:8px}\"]\n    }]\n  }], function () {\n    return [{\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: SkipSelf\n      }, {\n        type: Inject,\n        args: [MAT_ACCORDION]\n      }]\n    }, {\n      type: ɵngcc0.ChangeDetectorRef\n    }, {\n      type: ɵngcc1.UniqueSelectionDispatcher\n    }, {\n      type: ɵngcc0.ViewContainerRef\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [DOCUMENT]\n      }]\n    }, {\n      type: String,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [ANIMATION_MODULE_TYPE]\n      }]\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [MAT_EXPANSION_PANEL_DEFAULT_OPTIONS]\n      }, {\n        type: Optional\n      }]\n    }];\n  }, {\n    afterExpand: [{\n      type: Output\n    }],\n    afterCollapse: [{\n      type: Output\n    }],\n    hideToggle: [{\n      type: Input\n    }],\n    _lazyContent: [{\n      type: ContentChild,\n      args: [MatExpansionPanelContent]\n    }],\n    _body: [{\n      type: ViewChild,\n      args: ['body']\n    }]\n  });\n})();\n\nclass MatExpansionPanelActionRow {}\n\nMatExpansionPanelActionRow.ɵfac = function MatExpansionPanelActionRow_Factory(t) {\n  return new (t || MatExpansionPanelActionRow)();\n};\n\nMatExpansionPanelActionRow.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n  type: MatExpansionPanelActionRow,\n  selectors: [[\"mat-action-row\"]],\n  hostAttrs: [1, \"mat-action-row\"]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatExpansionPanelActionRow, [{\n    type: Directive,\n    args: [{\n      selector: 'mat-action-row',\n      host: {\n        class: 'mat-action-row'\n      }\n    }]\n  }], null, null);\n})();\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * `<mat-expansion-panel-header>`\n *\n * This component corresponds to the header element of an `<mat-expansion-panel>`.\n */\n\n\nclass MatExpansionPanelHeader {\n  /**\n   * @param {?} panel\n   * @param {?} _element\n   * @param {?} _focusMonitor\n   * @param {?} _changeDetectorRef\n   * @param {?=} defaultOptions\n   */\n  constructor(panel, _element, _focusMonitor, _changeDetectorRef, defaultOptions) {\n    this.panel = panel;\n    this._element = _element;\n    this._focusMonitor = _focusMonitor;\n    this._changeDetectorRef = _changeDetectorRef;\n    this._parentChangeSubscription = Subscription.EMPTY;\n    /** @type {?} */\n\n    const accordionHideToggleChange = panel.accordion ? panel.accordion._stateChanges.pipe(filter(changes => !!changes['hideToggle'])) : EMPTY; // Since the toggle state depends on an @Input on the panel, we\n    // need to subscribe and trigger change detection manually.\n\n    this._parentChangeSubscription = merge(panel.opened, panel.closed, accordionHideToggleChange, panel._inputChanges.pipe(filter(changes => !!(changes['hideToggle'] || changes['disabled'])))).subscribe(() => this._changeDetectorRef.markForCheck()); // Avoids focus being lost if the panel contained the focused element and was closed.\n\n    panel.closed.pipe(filter(() => panel._containsFocus())).subscribe(() => _focusMonitor.focusVia(_element, 'program'));\n\n    _focusMonitor.monitor(_element).subscribe(origin => {\n      if (origin && panel.accordion) {\n        panel.accordion._handleHeaderFocus(this);\n      }\n    });\n\n    if (defaultOptions) {\n      this.expandedHeight = defaultOptions.expandedHeight;\n      this.collapsedHeight = defaultOptions.collapsedHeight;\n    }\n  }\n  /**\n   * Whether the associated panel is disabled. Implemented as a part of `FocusableOption`.\n   * \\@docs-private\n   * @return {?}\n   */\n\n\n  get disabled() {\n    return this.panel.disabled;\n  }\n  /**\n   * Toggles the expanded state of the panel.\n   * @return {?}\n   */\n\n\n  _toggle() {\n    this.panel.toggle();\n  }\n  /**\n   * Gets whether the panel is expanded.\n   * @return {?}\n   */\n\n\n  _isExpanded() {\n    return this.panel.expanded;\n  }\n  /**\n   * Gets the expanded state string of the panel.\n   * @return {?}\n   */\n\n\n  _getExpandedState() {\n    return this.panel._getExpandedState();\n  }\n  /**\n   * Gets the panel id.\n   * @return {?}\n   */\n\n\n  _getPanelId() {\n    return this.panel.id;\n  }\n  /**\n   * Gets whether the expand indicator should be shown.\n   * @return {?}\n   */\n\n\n  _showToggle() {\n    return !this.panel.hideToggle && !this.panel.disabled;\n  }\n  /**\n   * Handle keydown event calling to toggle() if appropriate.\n   * @param {?} event\n   * @return {?}\n   */\n\n\n  _keydown(event) {\n    switch (event.keyCode) {\n      // Toggle for space and enter keys.\n      case SPACE:\n      case ENTER:\n        if (!hasModifierKey(event)) {\n          event.preventDefault();\n\n          this._toggle();\n        }\n\n        break;\n\n      default:\n        if (this.panel.accordion) {\n          this.panel.accordion._handleHeaderKeydown(event);\n        }\n\n        return;\n    }\n  }\n  /**\n   * Focuses the panel header. Implemented as a part of `FocusableOption`.\n   * \\@docs-private\n   * @param {?=} origin Origin of the action that triggered the focus.\n   * @return {?}\n   */\n\n\n  focus(origin = 'program') {\n    this._focusMonitor.focusVia(this._element, origin);\n  }\n  /**\n   * @return {?}\n   */\n\n\n  ngOnDestroy() {\n    this._parentChangeSubscription.unsubscribe();\n\n    this._focusMonitor.stopMonitoring(this._element);\n  }\n\n}\n\nMatExpansionPanelHeader.ɵfac = function MatExpansionPanelHeader_Factory(t) {\n  return new (t || MatExpansionPanelHeader)(ɵngcc0.ɵɵdirectiveInject(MatExpansionPanel, 1), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc3.FocusMonitor), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(MAT_EXPANSION_PANEL_DEFAULT_OPTIONS, 8));\n};\n\nMatExpansionPanelHeader.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n  type: MatExpansionPanelHeader,\n  selectors: [[\"mat-expansion-panel-header\"]],\n  hostAttrs: [\"role\", \"button\", 1, \"mat-expansion-panel-header\"],\n  hostVars: 14,\n  hostBindings: function MatExpansionPanelHeader_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵlistener(\"click\", function MatExpansionPanelHeader_click_HostBindingHandler() {\n        return ctx._toggle();\n      })(\"keydown\", function MatExpansionPanelHeader_keydown_HostBindingHandler($event) {\n        return ctx._keydown($event);\n      });\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵattribute(\"id\", ctx.panel._headerId)(\"tabindex\", ctx.disabled ? -1 : 0)(\"aria-controls\", ctx._getPanelId())(\"aria-expanded\", ctx._isExpanded())(\"aria-disabled\", ctx.panel.disabled);\n      ɵngcc0.ɵɵsyntheticHostProperty(\"@expansionHeight\", ɵngcc0.ɵɵpureFunction2(11, _c4, ctx._getExpandedState(), ɵngcc0.ɵɵpureFunction2(8, _c3, ctx.collapsedHeight, ctx.expandedHeight)));\n      ɵngcc0.ɵɵclassProp(\"mat-expanded\", ctx._isExpanded());\n    }\n  },\n  inputs: {\n    expandedHeight: \"expandedHeight\",\n    collapsedHeight: \"collapsedHeight\"\n  },\n  ngContentSelectors: _c6,\n  decls: 5,\n  vars: 1,\n  consts: [[1, \"mat-content\"], [\"class\", \"mat-expansion-indicator\", 4, \"ngIf\"], [1, \"mat-expansion-indicator\"]],\n  template: function MatExpansionPanelHeader_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵprojectionDef(_c5);\n      ɵngcc0.ɵɵelementStart(0, \"span\", 0);\n      ɵngcc0.ɵɵprojection(1);\n      ɵngcc0.ɵɵprojection(2, 1);\n      ɵngcc0.ɵɵprojection(3, 2);\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵtemplate(4, MatExpansionPanelHeader_span_4_Template, 1, 1, \"span\", 1);\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵadvance(4);\n      ɵngcc0.ɵɵproperty(\"ngIf\", ctx._showToggle());\n    }\n  },\n  dependencies: [ɵngcc4.NgIf],\n  styles: [\".mat-expansion-panel-header{display:flex;flex-direction:row;align-items:center;padding:0 24px;border-radius:inherit}.mat-expansion-panel-header:focus,.mat-expansion-panel-header:hover{outline:0}.mat-expansion-panel-header.mat-expanded:focus,.mat-expansion-panel-header.mat-expanded:hover{background:inherit}.mat-expansion-panel-header:not([aria-disabled=true]){cursor:pointer}.mat-content{display:flex;flex:1;flex-direction:row;overflow:hidden}.mat-expansion-panel-header-description,.mat-expansion-panel-header-title{display:flex;flex-grow:1;margin-right:16px}[dir=rtl] .mat-expansion-panel-header-description,[dir=rtl] .mat-expansion-panel-header-title{margin-right:0;margin-left:16px}.mat-expansion-panel-header-description{flex-grow:2}.mat-expansion-indicator::after{border-style:solid;border-width:0 2px 2px 0;content:'';display:inline-block;padding:3px;transform:rotate(45deg);vertical-align:middle}\"],\n  encapsulation: 2,\n  data: {\n    animation: [matExpansionAnimations.indicatorRotate, matExpansionAnimations.expansionHeaderHeight]\n  },\n  changeDetection: 0\n});\n/** @nocollapse */\n\nMatExpansionPanelHeader.ctorParameters = () => [{\n  type: MatExpansionPanel,\n  decorators: [{\n    type: Host\n  }]\n}, {\n  type: ElementRef\n}, {\n  type: FocusMonitor\n}, {\n  type: ChangeDetectorRef\n}, {\n  type: undefined,\n  decorators: [{\n    type: Inject,\n    args: [MAT_EXPANSION_PANEL_DEFAULT_OPTIONS]\n  }, {\n    type: Optional\n  }]\n}];\n\nMatExpansionPanelHeader.propDecorators = {\n  expandedHeight: [{\n    type: Input\n  }],\n  collapsedHeight: [{\n    type: Input\n  }]\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatExpansionPanelHeader, [{\n    type: Component,\n    args: [{\n      selector: 'mat-expansion-panel-header',\n      template: \"<span class=\\\"mat-content\\\"><ng-content select=\\\"mat-panel-title\\\"></ng-content><ng-content select=\\\"mat-panel-description\\\"></ng-content><ng-content></ng-content></span><span [@indicatorRotate]=\\\"_getExpandedState()\\\" *ngIf=\\\"_showToggle()\\\" class=\\\"mat-expansion-indicator\\\"></span>\",\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      animations: [matExpansionAnimations.indicatorRotate, matExpansionAnimations.expansionHeaderHeight],\n      host: {\n        'class': 'mat-expansion-panel-header',\n        'role': 'button',\n        '[attr.id]': 'panel._headerId',\n        '[attr.tabindex]': 'disabled ? -1 : 0',\n        '[attr.aria-controls]': '_getPanelId()',\n        '[attr.aria-expanded]': '_isExpanded()',\n        '[attr.aria-disabled]': 'panel.disabled',\n        '[class.mat-expanded]': '_isExpanded()',\n        '(click)': '_toggle()',\n        '(keydown)': '_keydown($event)',\n        '[@expansionHeight]': `{\n        value: _getExpandedState(),\n        params: {\n          collapsedHeight: collapsedHeight,\n          expandedHeight: expandedHeight\n        }\n    }`\n      },\n      styles: [\".mat-expansion-panel-header{display:flex;flex-direction:row;align-items:center;padding:0 24px;border-radius:inherit}.mat-expansion-panel-header:focus,.mat-expansion-panel-header:hover{outline:0}.mat-expansion-panel-header.mat-expanded:focus,.mat-expansion-panel-header.mat-expanded:hover{background:inherit}.mat-expansion-panel-header:not([aria-disabled=true]){cursor:pointer}.mat-content{display:flex;flex:1;flex-direction:row;overflow:hidden}.mat-expansion-panel-header-description,.mat-expansion-panel-header-title{display:flex;flex-grow:1;margin-right:16px}[dir=rtl] .mat-expansion-panel-header-description,[dir=rtl] .mat-expansion-panel-header-title{margin-right:0;margin-left:16px}.mat-expansion-panel-header-description{flex-grow:2}.mat-expansion-indicator::after{border-style:solid;border-width:0 2px 2px 0;content:'';display:inline-block;padding:3px;transform:rotate(45deg);vertical-align:middle}\"]\n    }]\n  }], function () {\n    return [{\n      type: MatExpansionPanel,\n      decorators: [{\n        type: Host\n      }]\n    }, {\n      type: ɵngcc0.ElementRef\n    }, {\n      type: ɵngcc3.FocusMonitor\n    }, {\n      type: ɵngcc0.ChangeDetectorRef\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [MAT_EXPANSION_PANEL_DEFAULT_OPTIONS]\n      }, {\n        type: Optional\n      }]\n    }];\n  }, {\n    expandedHeight: [{\n      type: Input\n    }],\n    collapsedHeight: [{\n      type: Input\n    }]\n  });\n})();\n/**\n * `<mat-panel-description>`\n *\n * This directive is to be used inside of the MatExpansionPanelHeader component.\n */\n\n\nclass MatExpansionPanelDescription {}\n\nMatExpansionPanelDescription.ɵfac = function MatExpansionPanelDescription_Factory(t) {\n  return new (t || MatExpansionPanelDescription)();\n};\n\nMatExpansionPanelDescription.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n  type: MatExpansionPanelDescription,\n  selectors: [[\"mat-panel-description\"]],\n  hostAttrs: [1, \"mat-expansion-panel-header-description\"]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatExpansionPanelDescription, [{\n    type: Directive,\n    args: [{\n      selector: 'mat-panel-description',\n      host: {\n        class: 'mat-expansion-panel-header-description'\n      }\n    }]\n  }], null, null);\n})();\n/**\n * `<mat-panel-title>`\n *\n * This directive is to be used inside of the MatExpansionPanelHeader component.\n */\n\n\nclass MatExpansionPanelTitle {}\n\nMatExpansionPanelTitle.ɵfac = function MatExpansionPanelTitle_Factory(t) {\n  return new (t || MatExpansionPanelTitle)();\n};\n\nMatExpansionPanelTitle.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n  type: MatExpansionPanelTitle,\n  selectors: [[\"mat-panel-title\"]],\n  hostAttrs: [1, \"mat-expansion-panel-header-title\"]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatExpansionPanelTitle, [{\n    type: Directive,\n    args: [{\n      selector: 'mat-panel-title',\n      host: {\n        class: 'mat-expansion-panel-header-title'\n      }\n    }]\n  }], null, null);\n})();\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Directive for a Material Design Accordion.\n */\n\n\nclass MatAccordion extends CdkAccordion {\n  constructor() {\n    super(...arguments);\n    this._hideToggle = false;\n    /**\n     * Display mode used for all expansion panels in the accordion. Currently two display\n     * modes exist:\n     *  default - a gutter-like spacing is placed around any expanded panel, placing the expanded\n     *     panel at a different elevation from the rest of the accordion.\n     *  flat - no spacing is placed around expanded panels, showing all panels at the same\n     *     elevation.\n     */\n\n    this.displayMode = 'default';\n  }\n  /**\n   * Whether the expansion indicator should be hidden.\n   * @return {?}\n   */\n\n\n  get hideToggle() {\n    return this._hideToggle;\n  }\n  /**\n   * @param {?} show\n   * @return {?}\n   */\n\n\n  set hideToggle(show) {\n    this._hideToggle = coerceBooleanProperty(show);\n  }\n  /**\n   * @return {?}\n   */\n\n\n  ngAfterContentInit() {\n    this._keyManager = new FocusKeyManager(this._headers).withWrap();\n  }\n  /**\n   * Handles keyboard events coming in from the panel headers.\n   * @param {?} event\n   * @return {?}\n   */\n\n\n  _handleHeaderKeydown(event) {\n    const {\n      keyCode\n    } = event;\n    /** @type {?} */\n\n    const manager = this._keyManager;\n\n    if (keyCode === HOME) {\n      manager.setFirstItemActive();\n      event.preventDefault();\n    } else if (keyCode === END) {\n      manager.setLastItemActive();\n      event.preventDefault();\n    } else {\n      this._keyManager.onKeydown(event);\n    }\n  }\n  /**\n   * @param {?} header\n   * @return {?}\n   */\n\n\n  _handleHeaderFocus(header) {\n    this._keyManager.updateActiveItem(header);\n  }\n\n}\n\nMatAccordion.ɵfac = /*@__PURE__*/function () {\n  let ɵMatAccordion_BaseFactory;\n  return function MatAccordion_Factory(t) {\n    return (ɵMatAccordion_BaseFactory || (ɵMatAccordion_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatAccordion)))(t || MatAccordion);\n  };\n}();\n\nMatAccordion.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n  type: MatAccordion,\n  selectors: [[\"mat-accordion\"]],\n  contentQueries: function MatAccordion_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵcontentQuery(dirIndex, MatExpansionPanelHeader, 5);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._headers = _t);\n    }\n  },\n  hostAttrs: [1, \"mat-accordion\"],\n  inputs: {\n    multi: \"multi\",\n    displayMode: \"displayMode\",\n    hideToggle: \"hideToggle\"\n  },\n  exportAs: [\"matAccordion\"],\n  features: [ɵngcc0.ɵɵProvidersFeature([{\n    provide: MAT_ACCORDION,\n    useExisting: MatAccordion\n  }]), ɵngcc0.ɵɵInheritDefinitionFeature]\n});\nMatAccordion.propDecorators = {\n  _headers: [{\n    type: ContentChildren,\n    args: [MatExpansionPanelHeader, {\n      descendants: true\n    }]\n  }],\n  hideToggle: [{\n    type: Input\n  }],\n  displayMode: [{\n    type: Input\n  }]\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatAccordion, [{\n    type: Directive,\n    args: [{\n      selector: 'mat-accordion',\n      exportAs: 'matAccordion',\n      inputs: ['multi'],\n      providers: [{\n        provide: MAT_ACCORDION,\n        useExisting: MatAccordion\n      }],\n      host: {\n        class: 'mat-accordion'\n      }\n    }]\n  }], null, {\n    displayMode: [{\n      type: Input\n    }],\n    hideToggle: [{\n      type: Input\n    }],\n    _headers: [{\n      type: ContentChildren,\n      args: [MatExpansionPanelHeader, {\n        descendants: true\n      }]\n    }]\n  });\n})();\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n\nclass MatExpansionModule {}\n\nMatExpansionModule.ɵfac = function MatExpansionModule_Factory(t) {\n  return new (t || MatExpansionModule)();\n};\n\nMatExpansionModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n  type: MatExpansionModule\n});\nMatExpansionModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n  imports: [CommonModule, CdkAccordionModule, PortalModule]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatExpansionModule, [{\n    type: NgModule,\n    args: [{\n      imports: [CommonModule, CdkAccordionModule, PortalModule],\n      exports: [MatAccordion, MatExpansionPanel, MatExpansionPanelActionRow, MatExpansionPanelHeader, MatExpansionPanelTitle, MatExpansionPanelDescription, MatExpansionPanelContent],\n      declarations: [MatAccordion, MatExpansionPanel, MatExpansionPanelActionRow, MatExpansionPanelHeader, MatExpansionPanelTitle, MatExpansionPanelDescription, MatExpansionPanelContent]\n    }]\n  }], null, null);\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatExpansionModule, {\n    declarations: function () {\n      return [MatAccordion, MatExpansionPanel, MatExpansionPanelActionRow, MatExpansionPanelHeader, MatExpansionPanelTitle, MatExpansionPanelDescription, MatExpansionPanelContent];\n    },\n    imports: function () {\n      return [CommonModule, CdkAccordionModule, PortalModule];\n    },\n    exports: function () {\n      return [MatAccordion, MatExpansionPanel, MatExpansionPanelActionRow, MatExpansionPanelHeader, MatExpansionPanelTitle, MatExpansionPanelDescription, MatExpansionPanelContent];\n    }\n  });\n})();\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n\nexport { MatExpansionModule, MatAccordion, MAT_ACCORDION, MAT_EXPANSION_PANEL_DEFAULT_OPTIONS, MatExpansionPanel, MatExpansionPanelActionRow, MatExpansionPanelHeader, MatExpansionPanelDescription, MatExpansionPanelTitle, MatExpansionPanelContent, EXPANSION_PANEL_ANIMATION_TIMING, matExpansionAnimations };","map":{"version":3,"names":["InjectionToken","Directive","TemplateRef","ChangeDetectionStrategy","ChangeDetectorRef","Component","ContentChild","EventEmitter","ElementRef","Input","Inject","Optional","Output","SkipSelf","ViewContainerRef","ViewEncapsulation","ViewChild","Host","ContentChildren","NgModule","animate","animateChild","group","state","style","transition","trigger","query","CdkAccordionItem","CdkAccordion","CdkAccordionModule","coerceBooleanProperty","UniqueSelectionDispatcher","TemplatePortal","PortalModule","DOCUMENT","CommonModule","ANIMATION_MODULE_TYPE","Subject","merge","Subscription","EMPTY","filter","startWith","take","distinctUntilChanged","FocusMonitor","FocusKeyManager","ENTER","SPACE","hasModifierKey","HOME","END","ɵngcc0","ɵngcc1","ɵngcc2","ɵngcc3","ɵngcc4","_c0","MatExpansionPanel_ng_template_5_Template","rf","ctx","_c1","_c2","_c3","a0","a1","collapsedHeight","expandedHeight","_c4","value","params","MatExpansionPanelHeader_span_4_Template","ɵɵelement","ctx_r0","ɵɵnextContext","ɵɵproperty","_getExpandedState","_c5","_c6","MAT_ACCORDION","EXPANSION_PANEL_ANIMATION_TIMING","matExpansionAnimations","indicatorRotate","transform","expansionHeaderHeight","height","optional","bodyExpansion","visibility","MatExpansionPanelContent","constructor","_template","ɵfac","MatExpansionPanelContent_Factory","t","ɵɵdirectiveInject","ɵdir","ɵɵdefineDirective","type","selectors","ctorParameters","ngDevMode","ɵsetClassMetadata","args","selector","uniqueId","MAT_EXPANSION_PANEL_DEFAULT_OPTIONS","ɵ0","undefined","MatExpansionPanel","accordion","_changeDetectorRef","_uniqueSelectionDispatcher","_viewContainerRef","_document","_animationMode","defaultOptions","_hideToggle","afterExpand","afterCollapse","_inputChanges","_headerId","_bodyAnimationDone","pipe","x","y","fromState","toState","subscribe","event","emit","hideToggle","_hasSpacing","expanded","displayMode","ngAfterContentInit","_lazyContent","opened","_portal","ngOnChanges","changes","next","ngOnDestroy","complete","_containsFocus","_body","focusedElement","activeElement","bodyElement","nativeElement","contains","MatExpansionPanel_Factory","ɵcmp","ɵɵdefineComponent","contentQueries","MatExpansionPanel_ContentQueries","dirIndex","ɵɵcontentQuery","_t","ɵɵqueryRefresh","ɵɵloadQuery","first","viewQuery","MatExpansionPanel_Query","ɵɵviewQuery","hostAttrs","hostVars","hostBindings","MatExpansionPanel_HostBindings","ɵɵclassProp","inputs","disabled","outputs","closed","expandedChange","exportAs","features","ɵɵProvidersFeature","provide","useValue","ɵɵInheritDefinitionFeature","ɵɵNgOnChangesFeature","ngContentSelectors","decls","vars","consts","template","MatExpansionPanel_Template","ɵɵprojectionDef","ɵɵprojection","ɵɵelementStart","ɵɵlistener","MatExpansionPanel_Template_div_animation_bodyExpansion_done_1_listener","$event","ɵɵtemplate","ɵɵelementEnd","ɵɵadvance","id","ɵɵattribute","dependencies","CdkPortalOutlet","styles","encapsulation","data","animation","changeDetection","decorators","String","propDecorators","None","OnPush","animations","providers","host","MatExpansionPanelActionRow","MatExpansionPanelActionRow_Factory","class","MatExpansionPanelHeader","panel","_element","_focusMonitor","_parentChangeSubscription","accordionHideToggleChange","_stateChanges","markForCheck","focusVia","monitor","origin","_handleHeaderFocus","_toggle","toggle","_isExpanded","_getPanelId","_showToggle","_keydown","keyCode","preventDefault","_handleHeaderKeydown","focus","unsubscribe","stopMonitoring","MatExpansionPanelHeader_Factory","MatExpansionPanelHeader_HostBindings","MatExpansionPanelHeader_click_HostBindingHandler","MatExpansionPanelHeader_keydown_HostBindingHandler","ɵɵsyntheticHostProperty","ɵɵpureFunction2","MatExpansionPanelHeader_Template","NgIf","MatExpansionPanelDescription","MatExpansionPanelDescription_Factory","MatExpansionPanelTitle","MatExpansionPanelTitle_Factory","MatAccordion","arguments","show","_keyManager","_headers","withWrap","manager","setFirstItemActive","setLastItemActive","onKeydown","header","updateActiveItem","ɵMatAccordion_BaseFactory","MatAccordion_Factory","ɵɵgetInheritedFactory","MatAccordion_ContentQueries","multi","useExisting","descendants","MatExpansionModule","MatExpansionModule_Factory","ɵmod","ɵɵdefineNgModule","ɵinj","ɵɵdefineInjector","imports","exports","declarations","ngJitMode","ɵɵsetNgModuleScope"],"sources":["/Users/apple/Desktop/zepto/my_project/node_modules/@angular/material/__ivy_ngcc__/esm2015/expansion.js"],"sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { InjectionToken, Directive, TemplateRef, ChangeDetectionStrategy, ChangeDetectorRef, Component, ContentChild, EventEmitter, ElementRef, Input, Inject, Optional, Output, SkipSelf, ViewContainerRef, ViewEncapsulation, ViewChild, Host, ContentChildren, NgModule } from '@angular/core';\nimport { animate, animateChild, group, state, style, transition, trigger, query } from '@angular/animations';\nimport { CdkAccordionItem, CdkAccordion, CdkAccordionModule } from '@angular/cdk/accordion';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { UniqueSelectionDispatcher } from '@angular/cdk/collections';\nimport { TemplatePortal, PortalModule } from '@angular/cdk/portal';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\nimport { Subject, merge, Subscription, EMPTY } from 'rxjs';\nimport { filter, startWith, take, distinctUntilChanged } from 'rxjs/operators';\nimport { FocusMonitor, FocusKeyManager } from '@angular/cdk/a11y';\nimport { ENTER, SPACE, hasModifierKey, HOME, END } from '@angular/cdk/keycodes';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Token used to provide a `MatAccordion` to `MatExpansionPanel`.\n * Used primarily to avoid circular imports between `MatAccordion` and `MatExpansionPanel`.\n * @type {?}\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/collections';\nimport * as ɵngcc2 from '@angular/cdk/portal';\nimport * as ɵngcc3 from '@angular/cdk/a11y';\nimport * as ɵngcc4 from '@angular/common';\n\nconst _c0 = [\"body\"];\nfunction MatExpansionPanel_ng_template_5_Template(rf, ctx) { }\nconst _c1 = [[[\"mat-expansion-panel-header\"]], \"*\", [[\"mat-action-row\"]]];\nconst _c2 = [\"mat-expansion-panel-header\", \"*\", \"mat-action-row\"];\nconst _c3 = function (a0, a1) { return { collapsedHeight: a0, expandedHeight: a1 }; };\nconst _c4 = function (a0, a1) { return { value: a0, params: a1 }; };\nfunction MatExpansionPanelHeader_span_4_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"span\", 2);\n} if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"@indicatorRotate\", ctx_r0._getExpandedState());\n} }\nconst _c5 = [[[\"mat-panel-title\"]], [[\"mat-panel-description\"]], \"*\"];\nconst _c6 = [\"mat-panel-title\", \"mat-panel-description\", \"*\"];\nconst MAT_ACCORDION = new InjectionToken('MAT_ACCORDION');\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Time and timing curve for expansion panel animations.\n * @type {?}\n */\nconst EXPANSION_PANEL_ANIMATION_TIMING = '225ms cubic-bezier(0.4,0.0,0.2,1)';\n/**\n * Animations used by the Material expansion panel.\n *\n * A bug in angular animation's `state` when ViewContainers are moved using ViewContainerRef.move()\n * causes the animation state of moved components to become `void` upon exit, and not update again\n * upon reentry into the DOM.  This can lead a to situation for the expansion panel where the state\n * of the panel is `expanded` or `collapsed` but the animation state is `void`.\n *\n * To correctly handle animating to the next state, we animate between `void` and `collapsed` which\n * are defined to have the same styles. Since angular animates from the current styles to the\n * destination state's style definition, in situations where we are moving from `void`'s styles to\n * `collapsed` this acts a noop since no style values change.\n *\n * In the case where angular's animation state is out of sync with the expansion panel's state, the\n * expansion panel being `expanded` and angular animations being `void`, the animation from the\n * `expanded`'s effective styles (though in a `void` animation state) to the collapsed state will\n * occur as expected.\n *\n * Angular Bug: https://github.com/angular/angular/issues/18847\n *\n * \\@docs-private\n * @type {?}\n */\nconst matExpansionAnimations = {\n    /**\n     * Animation that rotates the indicator arrow.\n     */\n    indicatorRotate: trigger('indicatorRotate', [\n        state('collapsed, void', style({ transform: 'rotate(0deg)' })),\n        state('expanded', style({ transform: 'rotate(180deg)' })),\n        transition('expanded <=> collapsed, void => collapsed', animate(EXPANSION_PANEL_ANIMATION_TIMING)),\n    ]),\n    /**\n     * Animation that expands and collapses the panel header height.\n     */\n    expansionHeaderHeight: trigger('expansionHeight', [\n        state('collapsed, void', style({\n            height: '{{collapsedHeight}}',\n        }), {\n            params: { collapsedHeight: '48px' },\n        }),\n        state('expanded', style({\n            height: '{{expandedHeight}}'\n        }), {\n            params: { expandedHeight: '64px' }\n        }),\n        transition('expanded <=> collapsed, void => collapsed', group([\n            query('@indicatorRotate', animateChild(), { optional: true }),\n            animate(EXPANSION_PANEL_ANIMATION_TIMING),\n        ])),\n    ]),\n    /**\n     * Animation that expands and collapses the panel content.\n     */\n    bodyExpansion: trigger('bodyExpansion', [\n        state('collapsed, void', style({ height: '0px', visibility: 'hidden' })),\n        state('expanded', style({ height: '*', visibility: 'visible' })),\n        transition('expanded <=> collapsed, void => collapsed', animate(EXPANSION_PANEL_ANIMATION_TIMING)),\n    ])\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Expansion panel content that will be rendered lazily\n * after the panel is opened for the first time.\n */\nclass MatExpansionPanelContent {\n    /**\n     * @param {?} _template\n     */\n    constructor(_template) {\n        this._template = _template;\n    }\n}\nMatExpansionPanelContent.ɵfac = function MatExpansionPanelContent_Factory(t) { return new (t || MatExpansionPanelContent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef)); };\nMatExpansionPanelContent.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: MatExpansionPanelContent, selectors: [[\"ng-template\", \"matExpansionPanelContent\", \"\"]] });\n/** @nocollapse */\nMatExpansionPanelContent.ctorParameters = () => [\n    { type: TemplateRef }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatExpansionPanelContent, [{\n        type: Directive,\n        args: [{\n                selector: 'ng-template[matExpansionPanelContent]'\n            }]\n    }], function () { return [{ type: ɵngcc0.TemplateRef }]; }, null); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Counter for generating unique element ids.\n * @type {?}\n */\nlet uniqueId = 0;\n/**\n * Injection token that can be used to configure the defalt\n * options for the expansion panel component.\n * @type {?}\n */\nconst MAT_EXPANSION_PANEL_DEFAULT_OPTIONS = new InjectionToken('MAT_EXPANSION_PANEL_DEFAULT_OPTIONS');\nconst ɵ0 = undefined;\n/**\n * `<mat-expansion-panel>`\n *\n * This component can be used as a single element to show expandable content, or as one of\n * multiple children of an element with the MatAccordion directive attached.\n */\nclass MatExpansionPanel extends CdkAccordionItem {\n    /**\n     * @param {?} accordion\n     * @param {?} _changeDetectorRef\n     * @param {?} _uniqueSelectionDispatcher\n     * @param {?} _viewContainerRef\n     * @param {?=} _document\n     * @param {?=} _animationMode\n     * @param {?=} defaultOptions\n     */\n    constructor(accordion, _changeDetectorRef, _uniqueSelectionDispatcher, _viewContainerRef, \n    // @breaking-change 8.0.0 _document and _animationMode to be made required\n    _document, _animationMode, defaultOptions) {\n        super(accordion, _changeDetectorRef, _uniqueSelectionDispatcher);\n        this._viewContainerRef = _viewContainerRef;\n        this._animationMode = _animationMode;\n        this._hideToggle = false;\n        /**\n         * An event emitted after the body's expansion animation happens.\n         */\n        this.afterExpand = new EventEmitter();\n        /**\n         * An event emitted after the body's collapse animation happens.\n         */\n        this.afterCollapse = new EventEmitter();\n        /**\n         * Stream that emits for changes in `\\@Input` properties.\n         */\n        this._inputChanges = new Subject();\n        /**\n         * ID for the associated header element. Used for a11y labelling.\n         */\n        this._headerId = `mat-expansion-panel-header-${uniqueId++}`;\n        /**\n         * Stream of body animation done events.\n         */\n        this._bodyAnimationDone = new Subject();\n        this.accordion = accordion;\n        this._document = _document;\n        // We need a Subject with distinctUntilChanged, because the `done` event\n        // fires twice on some browsers. See https://github.com/angular/angular/issues/24084\n        this._bodyAnimationDone.pipe(distinctUntilChanged((x, y) => {\n            return x.fromState === y.fromState && x.toState === y.toState;\n        })).subscribe(event => {\n            if (event.fromState !== 'void') {\n                if (event.toState === 'expanded') {\n                    this.afterExpand.emit();\n                }\n                else if (event.toState === 'collapsed') {\n                    this.afterCollapse.emit();\n                }\n            }\n        });\n        if (defaultOptions) {\n            this.hideToggle = defaultOptions.hideToggle;\n        }\n    }\n    /**\n     * Whether the toggle indicator should be hidden.\n     * @return {?}\n     */\n    get hideToggle() {\n        return this._hideToggle || (this.accordion && this.accordion.hideToggle);\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set hideToggle(value) {\n        this._hideToggle = coerceBooleanProperty(value);\n    }\n    /**\n     * Determines whether the expansion panel should have spacing between it and its siblings.\n     * @return {?}\n     */\n    _hasSpacing() {\n        if (this.accordion) {\n            // We don't need to subscribe to the `stateChanges` of the parent accordion because each time\n            // the [displayMode] input changes, the change detection will also cover the host bindings\n            // of this expansion panel.\n            return (this.expanded ? this.accordion.displayMode : this._getExpandedState()) === 'default';\n        }\n        return false;\n    }\n    /**\n     * Gets the expanded state string.\n     * @return {?}\n     */\n    _getExpandedState() {\n        return this.expanded ? 'expanded' : 'collapsed';\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        if (this._lazyContent) {\n            // Render the content as soon as the panel becomes open.\n            this.opened.pipe(startWith((/** @type {?} */ (null))), filter(() => this.expanded && !this._portal), take(1)).subscribe(() => {\n                this._portal = new TemplatePortal(this._lazyContent._template, this._viewContainerRef);\n            });\n        }\n    }\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    ngOnChanges(changes) {\n        this._inputChanges.next(changes);\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        super.ngOnDestroy();\n        this._bodyAnimationDone.complete();\n        this._inputChanges.complete();\n    }\n    /**\n     * Checks whether the expansion panel's content contains the currently-focused element.\n     * @return {?}\n     */\n    _containsFocus() {\n        if (this._body && this._document) {\n            /** @type {?} */\n            const focusedElement = this._document.activeElement;\n            /** @type {?} */\n            const bodyElement = this._body.nativeElement;\n            return focusedElement === bodyElement || bodyElement.contains(focusedElement);\n        }\n        return false;\n    }\n}\nMatExpansionPanel.ɵfac = function MatExpansionPanel_Factory(t) { return new (t || MatExpansionPanel)(ɵngcc0.ɵɵdirectiveInject(MAT_ACCORDION, 12), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.UniqueSelectionDispatcher), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(DOCUMENT), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8), ɵngcc0.ɵɵdirectiveInject(MAT_EXPANSION_PANEL_DEFAULT_OPTIONS, 8)); };\nMatExpansionPanel.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: MatExpansionPanel, selectors: [[\"mat-expansion-panel\"]], contentQueries: function MatExpansionPanel_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatExpansionPanelContent, 5);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._lazyContent = _t.first);\n    } }, viewQuery: function MatExpansionPanel_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(_c0, 5);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._body = _t.first);\n    } }, hostAttrs: [1, \"mat-expansion-panel\"], hostVars: 6, hostBindings: function MatExpansionPanel_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mat-expanded\", ctx.expanded)(\"_mat-animation-noopable\", ctx._animationMode === \"NoopAnimations\")(\"mat-expansion-panel-spacing\", ctx._hasSpacing());\n    } }, inputs: { disabled: \"disabled\", expanded: \"expanded\", hideToggle: \"hideToggle\" }, outputs: { opened: \"opened\", closed: \"closed\", expandedChange: \"expandedChange\", afterExpand: \"afterExpand\", afterCollapse: \"afterCollapse\" }, exportAs: [\"matExpansionPanel\"], features: [ɵngcc0.ɵɵProvidersFeature([\n            // Provide MatAccordion as undefined to prevent nested expansion panels from registering\n            // to the same accordion.\n            { provide: MAT_ACCORDION, useValue: ɵ0 },\n        ]), ɵngcc0.ɵɵInheritDefinitionFeature, ɵngcc0.ɵɵNgOnChangesFeature], ngContentSelectors: _c2, decls: 7, vars: 4, consts: [[\"role\", \"region\", 1, \"mat-expansion-panel-content\", 3, \"id\"], [\"body\", \"\"], [1, \"mat-expansion-panel-body\"], [3, \"cdkPortalOutlet\"]], template: function MatExpansionPanel_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c1);\n        ɵngcc0.ɵɵprojection(0);\n        ɵngcc0.ɵɵelementStart(1, \"div\", 0, 1);\n        ɵngcc0.ɵɵlistener(\"@bodyExpansion.done\", function MatExpansionPanel_Template_div_animation_bodyExpansion_done_1_listener($event) { return ctx._bodyAnimationDone.next($event); });\n        ɵngcc0.ɵɵelementStart(3, \"div\", 2);\n        ɵngcc0.ɵɵprojection(4, 1);\n        ɵngcc0.ɵɵtemplate(5, MatExpansionPanel_ng_template_5_Template, 0, 0, \"ng-template\", 3);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵprojection(6, 2);\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"@bodyExpansion\", ctx._getExpandedState())(\"id\", ctx.id);\n        ɵngcc0.ɵɵattribute(\"aria-labelledby\", ctx._headerId);\n        ɵngcc0.ɵɵadvance(4);\n        ɵngcc0.ɵɵproperty(\"cdkPortalOutlet\", ctx._portal);\n    } }, dependencies: [ɵngcc2.CdkPortalOutlet], styles: [\".mat-expansion-panel{box-sizing:content-box;display:block;margin:0;border-radius:4px;overflow:hidden;transition:margin 225ms cubic-bezier(.4,0,.2,1),box-shadow 280ms cubic-bezier(.4,0,.2,1)}.mat-accordion .mat-expansion-panel:not(.mat-expanded),.mat-accordion .mat-expansion-panel:not(.mat-expansion-panel-spacing){border-radius:0}.mat-accordion .mat-expansion-panel:first-of-type{border-top-right-radius:4px;border-top-left-radius:4px}.mat-accordion .mat-expansion-panel:last-of-type{border-bottom-right-radius:4px;border-bottom-left-radius:4px}@media (-ms-high-contrast:active){.mat-expansion-panel{outline:solid 1px}}.mat-expansion-panel._mat-animation-noopable,.mat-expansion-panel.ng-animate-disabled,.ng-animate-disabled .mat-expansion-panel{transition:none}.mat-expansion-panel-content{display:flex;flex-direction:column;overflow:visible}.mat-expansion-panel-body{padding:0 24px 16px}.mat-expansion-panel-spacing{margin:16px 0}.mat-accordion>.mat-expansion-panel-spacing:first-child,.mat-accordion>:first-child:not(.mat-expansion-panel) .mat-expansion-panel-spacing{margin-top:0}.mat-accordion>.mat-expansion-panel-spacing:last-child,.mat-accordion>:last-child:not(.mat-expansion-panel) .mat-expansion-panel-spacing{margin-bottom:0}.mat-action-row{border-top-style:solid;border-top-width:1px;display:flex;flex-direction:row;justify-content:flex-end;padding:16px 8px 16px 24px}.mat-action-row button.mat-button{margin-left:8px}[dir=rtl] .mat-action-row button.mat-button{margin-left:0;margin-right:8px}\"], encapsulation: 2, data: { animation: [matExpansionAnimations.bodyExpansion] }, changeDetection: 0 });\n/** @nocollapse */\nMatExpansionPanel.ctorParameters = () => [\n    { type: undefined, decorators: [{ type: Optional }, { type: SkipSelf }, { type: Inject, args: [MAT_ACCORDION,] }] },\n    { type: ChangeDetectorRef },\n    { type: UniqueSelectionDispatcher },\n    { type: ViewContainerRef },\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_EXPANSION_PANEL_DEFAULT_OPTIONS,] }, { type: Optional }] }\n];\nMatExpansionPanel.propDecorators = {\n    hideToggle: [{ type: Input }],\n    afterExpand: [{ type: Output }],\n    afterCollapse: [{ type: Output }],\n    _lazyContent: [{ type: ContentChild, args: [MatExpansionPanelContent,] }],\n    _body: [{ type: ViewChild, args: ['body',] }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatExpansionPanel, [{\n        type: Component,\n        args: [{ selector: 'mat-expansion-panel', exportAs: 'matExpansionPanel', template: \"<ng-content select=\\\"mat-expansion-panel-header\\\"></ng-content><div class=\\\"mat-expansion-panel-content\\\" role=\\\"region\\\" [@bodyExpansion]=\\\"_getExpandedState()\\\" (@bodyExpansion.done)=\\\"_bodyAnimationDone.next($event)\\\" [attr.aria-labelledby]=\\\"_headerId\\\" [id]=\\\"id\\\" #body><div class=\\\"mat-expansion-panel-body\\\"><ng-content></ng-content><ng-template [cdkPortalOutlet]=\\\"_portal\\\"></ng-template></div><ng-content select=\\\"mat-action-row\\\"></ng-content></div>\", encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, inputs: ['disabled', 'expanded'], outputs: ['opened', 'closed', 'expandedChange'], animations: [matExpansionAnimations.bodyExpansion], providers: [\n                    // Provide MatAccordion as undefined to prevent nested expansion panels from registering\n                    // to the same accordion.\n                    { provide: MAT_ACCORDION, useValue: ɵ0 },\n                ], host: {\n                    'class': 'mat-expansion-panel',\n                    '[class.mat-expanded]': 'expanded',\n                    '[class._mat-animation-noopable]': '_animationMode === \"NoopAnimations\"',\n                    '[class.mat-expansion-panel-spacing]': '_hasSpacing()'\n                }, styles: [\".mat-expansion-panel{box-sizing:content-box;display:block;margin:0;border-radius:4px;overflow:hidden;transition:margin 225ms cubic-bezier(.4,0,.2,1),box-shadow 280ms cubic-bezier(.4,0,.2,1)}.mat-accordion .mat-expansion-panel:not(.mat-expanded),.mat-accordion .mat-expansion-panel:not(.mat-expansion-panel-spacing){border-radius:0}.mat-accordion .mat-expansion-panel:first-of-type{border-top-right-radius:4px;border-top-left-radius:4px}.mat-accordion .mat-expansion-panel:last-of-type{border-bottom-right-radius:4px;border-bottom-left-radius:4px}@media (-ms-high-contrast:active){.mat-expansion-panel{outline:solid 1px}}.mat-expansion-panel._mat-animation-noopable,.mat-expansion-panel.ng-animate-disabled,.ng-animate-disabled .mat-expansion-panel{transition:none}.mat-expansion-panel-content{display:flex;flex-direction:column;overflow:visible}.mat-expansion-panel-body{padding:0 24px 16px}.mat-expansion-panel-spacing{margin:16px 0}.mat-accordion>.mat-expansion-panel-spacing:first-child,.mat-accordion>:first-child:not(.mat-expansion-panel) .mat-expansion-panel-spacing{margin-top:0}.mat-accordion>.mat-expansion-panel-spacing:last-child,.mat-accordion>:last-child:not(.mat-expansion-panel) .mat-expansion-panel-spacing{margin-bottom:0}.mat-action-row{border-top-style:solid;border-top-width:1px;display:flex;flex-direction:row;justify-content:flex-end;padding:16px 8px 16px 24px}.mat-action-row button.mat-button{margin-left:8px}[dir=rtl] .mat-action-row button.mat-button{margin-left:0;margin-right:8px}\"] }]\n    }], function () { return [{ type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: SkipSelf\n            }, {\n                type: Inject,\n                args: [MAT_ACCORDION]\n            }] }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc1.UniqueSelectionDispatcher }, { type: ɵngcc0.ViewContainerRef }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_EXPANSION_PANEL_DEFAULT_OPTIONS]\n            }, {\n                type: Optional\n            }] }]; }, { afterExpand: [{\n            type: Output\n        }], afterCollapse: [{\n            type: Output\n        }], hideToggle: [{\n            type: Input\n        }], _lazyContent: [{\n            type: ContentChild,\n            args: [MatExpansionPanelContent]\n        }], _body: [{\n            type: ViewChild,\n            args: ['body']\n        }] }); })();\nclass MatExpansionPanelActionRow {\n}\nMatExpansionPanelActionRow.ɵfac = function MatExpansionPanelActionRow_Factory(t) { return new (t || MatExpansionPanelActionRow)(); };\nMatExpansionPanelActionRow.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: MatExpansionPanelActionRow, selectors: [[\"mat-action-row\"]], hostAttrs: [1, \"mat-action-row\"] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatExpansionPanelActionRow, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-action-row',\n                host: {\n                    class: 'mat-action-row'\n                }\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * `<mat-expansion-panel-header>`\n *\n * This component corresponds to the header element of an `<mat-expansion-panel>`.\n */\nclass MatExpansionPanelHeader {\n    /**\n     * @param {?} panel\n     * @param {?} _element\n     * @param {?} _focusMonitor\n     * @param {?} _changeDetectorRef\n     * @param {?=} defaultOptions\n     */\n    constructor(panel, _element, _focusMonitor, _changeDetectorRef, defaultOptions) {\n        this.panel = panel;\n        this._element = _element;\n        this._focusMonitor = _focusMonitor;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._parentChangeSubscription = Subscription.EMPTY;\n        /** @type {?} */\n        const accordionHideToggleChange = panel.accordion ?\n            panel.accordion._stateChanges.pipe(filter(changes => !!changes['hideToggle'])) :\n            EMPTY;\n        // Since the toggle state depends on an @Input on the panel, we\n        // need to subscribe and trigger change detection manually.\n        this._parentChangeSubscription =\n            merge(panel.opened, panel.closed, accordionHideToggleChange, panel._inputChanges.pipe(filter(changes => !!(changes['hideToggle'] || changes['disabled']))))\n                .subscribe(() => this._changeDetectorRef.markForCheck());\n        // Avoids focus being lost if the panel contained the focused element and was closed.\n        panel.closed\n            .pipe(filter(() => panel._containsFocus()))\n            .subscribe(() => _focusMonitor.focusVia(_element, 'program'));\n        _focusMonitor.monitor(_element).subscribe(origin => {\n            if (origin && panel.accordion) {\n                panel.accordion._handleHeaderFocus(this);\n            }\n        });\n        if (defaultOptions) {\n            this.expandedHeight = defaultOptions.expandedHeight;\n            this.collapsedHeight = defaultOptions.collapsedHeight;\n        }\n    }\n    /**\n     * Whether the associated panel is disabled. Implemented as a part of `FocusableOption`.\n     * \\@docs-private\n     * @return {?}\n     */\n    get disabled() {\n        return this.panel.disabled;\n    }\n    /**\n     * Toggles the expanded state of the panel.\n     * @return {?}\n     */\n    _toggle() {\n        this.panel.toggle();\n    }\n    /**\n     * Gets whether the panel is expanded.\n     * @return {?}\n     */\n    _isExpanded() {\n        return this.panel.expanded;\n    }\n    /**\n     * Gets the expanded state string of the panel.\n     * @return {?}\n     */\n    _getExpandedState() {\n        return this.panel._getExpandedState();\n    }\n    /**\n     * Gets the panel id.\n     * @return {?}\n     */\n    _getPanelId() {\n        return this.panel.id;\n    }\n    /**\n     * Gets whether the expand indicator should be shown.\n     * @return {?}\n     */\n    _showToggle() {\n        return !this.panel.hideToggle && !this.panel.disabled;\n    }\n    /**\n     * Handle keydown event calling to toggle() if appropriate.\n     * @param {?} event\n     * @return {?}\n     */\n    _keydown(event) {\n        switch (event.keyCode) {\n            // Toggle for space and enter keys.\n            case SPACE:\n            case ENTER:\n                if (!hasModifierKey(event)) {\n                    event.preventDefault();\n                    this._toggle();\n                }\n                break;\n            default:\n                if (this.panel.accordion) {\n                    this.panel.accordion._handleHeaderKeydown(event);\n                }\n                return;\n        }\n    }\n    /**\n     * Focuses the panel header. Implemented as a part of `FocusableOption`.\n     * \\@docs-private\n     * @param {?=} origin Origin of the action that triggered the focus.\n     * @return {?}\n     */\n    focus(origin = 'program') {\n        this._focusMonitor.focusVia(this._element, origin);\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._parentChangeSubscription.unsubscribe();\n        this._focusMonitor.stopMonitoring(this._element);\n    }\n}\nMatExpansionPanelHeader.ɵfac = function MatExpansionPanelHeader_Factory(t) { return new (t || MatExpansionPanelHeader)(ɵngcc0.ɵɵdirectiveInject(MatExpansionPanel, 1), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc3.FocusMonitor), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(MAT_EXPANSION_PANEL_DEFAULT_OPTIONS, 8)); };\nMatExpansionPanelHeader.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: MatExpansionPanelHeader, selectors: [[\"mat-expansion-panel-header\"]], hostAttrs: [\"role\", \"button\", 1, \"mat-expansion-panel-header\"], hostVars: 14, hostBindings: function MatExpansionPanelHeader_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"click\", function MatExpansionPanelHeader_click_HostBindingHandler() { return ctx._toggle(); })(\"keydown\", function MatExpansionPanelHeader_keydown_HostBindingHandler($event) { return ctx._keydown($event); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"id\", ctx.panel._headerId)(\"tabindex\", ctx.disabled ? -1 : 0)(\"aria-controls\", ctx._getPanelId())(\"aria-expanded\", ctx._isExpanded())(\"aria-disabled\", ctx.panel.disabled);\n        ɵngcc0.ɵɵsyntheticHostProperty(\"@expansionHeight\", ɵngcc0.ɵɵpureFunction2(11, _c4, ctx._getExpandedState(), ɵngcc0.ɵɵpureFunction2(8, _c3, ctx.collapsedHeight, ctx.expandedHeight)));\n        ɵngcc0.ɵɵclassProp(\"mat-expanded\", ctx._isExpanded());\n    } }, inputs: { expandedHeight: \"expandedHeight\", collapsedHeight: \"collapsedHeight\" }, ngContentSelectors: _c6, decls: 5, vars: 1, consts: [[1, \"mat-content\"], [\"class\", \"mat-expansion-indicator\", 4, \"ngIf\"], [1, \"mat-expansion-indicator\"]], template: function MatExpansionPanelHeader_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c5);\n        ɵngcc0.ɵɵelementStart(0, \"span\", 0);\n        ɵngcc0.ɵɵprojection(1);\n        ɵngcc0.ɵɵprojection(2, 1);\n        ɵngcc0.ɵɵprojection(3, 2);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵtemplate(4, MatExpansionPanelHeader_span_4_Template, 1, 1, \"span\", 1);\n    } if (rf & 2) {\n        ɵngcc0.ɵɵadvance(4);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx._showToggle());\n    } }, dependencies: [ɵngcc4.NgIf], styles: [\".mat-expansion-panel-header{display:flex;flex-direction:row;align-items:center;padding:0 24px;border-radius:inherit}.mat-expansion-panel-header:focus,.mat-expansion-panel-header:hover{outline:0}.mat-expansion-panel-header.mat-expanded:focus,.mat-expansion-panel-header.mat-expanded:hover{background:inherit}.mat-expansion-panel-header:not([aria-disabled=true]){cursor:pointer}.mat-content{display:flex;flex:1;flex-direction:row;overflow:hidden}.mat-expansion-panel-header-description,.mat-expansion-panel-header-title{display:flex;flex-grow:1;margin-right:16px}[dir=rtl] .mat-expansion-panel-header-description,[dir=rtl] .mat-expansion-panel-header-title{margin-right:0;margin-left:16px}.mat-expansion-panel-header-description{flex-grow:2}.mat-expansion-indicator::after{border-style:solid;border-width:0 2px 2px 0;content:'';display:inline-block;padding:3px;transform:rotate(45deg);vertical-align:middle}\"], encapsulation: 2, data: { animation: [\n            matExpansionAnimations.indicatorRotate,\n            matExpansionAnimations.expansionHeaderHeight\n        ] }, changeDetection: 0 });\n/** @nocollapse */\nMatExpansionPanelHeader.ctorParameters = () => [\n    { type: MatExpansionPanel, decorators: [{ type: Host }] },\n    { type: ElementRef },\n    { type: FocusMonitor },\n    { type: ChangeDetectorRef },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_EXPANSION_PANEL_DEFAULT_OPTIONS,] }, { type: Optional }] }\n];\nMatExpansionPanelHeader.propDecorators = {\n    expandedHeight: [{ type: Input }],\n    collapsedHeight: [{ type: Input }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatExpansionPanelHeader, [{\n        type: Component,\n        args: [{ selector: 'mat-expansion-panel-header', template: \"<span class=\\\"mat-content\\\"><ng-content select=\\\"mat-panel-title\\\"></ng-content><ng-content select=\\\"mat-panel-description\\\"></ng-content><ng-content></ng-content></span><span [@indicatorRotate]=\\\"_getExpandedState()\\\" *ngIf=\\\"_showToggle()\\\" class=\\\"mat-expansion-indicator\\\"></span>\", encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, animations: [\n                    matExpansionAnimations.indicatorRotate,\n                    matExpansionAnimations.expansionHeaderHeight\n                ], host: {\n                    'class': 'mat-expansion-panel-header',\n                    'role': 'button',\n                    '[attr.id]': 'panel._headerId',\n                    '[attr.tabindex]': 'disabled ? -1 : 0',\n                    '[attr.aria-controls]': '_getPanelId()',\n                    '[attr.aria-expanded]': '_isExpanded()',\n                    '[attr.aria-disabled]': 'panel.disabled',\n                    '[class.mat-expanded]': '_isExpanded()',\n                    '(click)': '_toggle()',\n                    '(keydown)': '_keydown($event)',\n                    '[@expansionHeight]': `{\n        value: _getExpandedState(),\n        params: {\n          collapsedHeight: collapsedHeight,\n          expandedHeight: expandedHeight\n        }\n    }`\n                }, styles: [\".mat-expansion-panel-header{display:flex;flex-direction:row;align-items:center;padding:0 24px;border-radius:inherit}.mat-expansion-panel-header:focus,.mat-expansion-panel-header:hover{outline:0}.mat-expansion-panel-header.mat-expanded:focus,.mat-expansion-panel-header.mat-expanded:hover{background:inherit}.mat-expansion-panel-header:not([aria-disabled=true]){cursor:pointer}.mat-content{display:flex;flex:1;flex-direction:row;overflow:hidden}.mat-expansion-panel-header-description,.mat-expansion-panel-header-title{display:flex;flex-grow:1;margin-right:16px}[dir=rtl] .mat-expansion-panel-header-description,[dir=rtl] .mat-expansion-panel-header-title{margin-right:0;margin-left:16px}.mat-expansion-panel-header-description{flex-grow:2}.mat-expansion-indicator::after{border-style:solid;border-width:0 2px 2px 0;content:'';display:inline-block;padding:3px;transform:rotate(45deg);vertical-align:middle}\"] }]\n    }], function () { return [{ type: MatExpansionPanel, decorators: [{\n                type: Host\n            }] }, { type: ɵngcc0.ElementRef }, { type: ɵngcc3.FocusMonitor }, { type: ɵngcc0.ChangeDetectorRef }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_EXPANSION_PANEL_DEFAULT_OPTIONS]\n            }, {\n                type: Optional\n            }] }]; }, { expandedHeight: [{\n            type: Input\n        }], collapsedHeight: [{\n            type: Input\n        }] }); })();\n/**\n * `<mat-panel-description>`\n *\n * This directive is to be used inside of the MatExpansionPanelHeader component.\n */\nclass MatExpansionPanelDescription {\n}\nMatExpansionPanelDescription.ɵfac = function MatExpansionPanelDescription_Factory(t) { return new (t || MatExpansionPanelDescription)(); };\nMatExpansionPanelDescription.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: MatExpansionPanelDescription, selectors: [[\"mat-panel-description\"]], hostAttrs: [1, \"mat-expansion-panel-header-description\"] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatExpansionPanelDescription, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-panel-description',\n                host: {\n                    class: 'mat-expansion-panel-header-description'\n                }\n            }]\n    }], null, null); })();\n/**\n * `<mat-panel-title>`\n *\n * This directive is to be used inside of the MatExpansionPanelHeader component.\n */\nclass MatExpansionPanelTitle {\n}\nMatExpansionPanelTitle.ɵfac = function MatExpansionPanelTitle_Factory(t) { return new (t || MatExpansionPanelTitle)(); };\nMatExpansionPanelTitle.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: MatExpansionPanelTitle, selectors: [[\"mat-panel-title\"]], hostAttrs: [1, \"mat-expansion-panel-header-title\"] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatExpansionPanelTitle, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-panel-title',\n                host: {\n                    class: 'mat-expansion-panel-header-title'\n                }\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Directive for a Material Design Accordion.\n */\nclass MatAccordion extends CdkAccordion {\n    constructor() {\n        super(...arguments);\n        this._hideToggle = false;\n        /**\n         * Display mode used for all expansion panels in the accordion. Currently two display\n         * modes exist:\n         *  default - a gutter-like spacing is placed around any expanded panel, placing the expanded\n         *     panel at a different elevation from the rest of the accordion.\n         *  flat - no spacing is placed around expanded panels, showing all panels at the same\n         *     elevation.\n         */\n        this.displayMode = 'default';\n    }\n    /**\n     * Whether the expansion indicator should be hidden.\n     * @return {?}\n     */\n    get hideToggle() { return this._hideToggle; }\n    /**\n     * @param {?} show\n     * @return {?}\n     */\n    set hideToggle(show) { this._hideToggle = coerceBooleanProperty(show); }\n    /**\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        this._keyManager = new FocusKeyManager(this._headers).withWrap();\n    }\n    /**\n     * Handles keyboard events coming in from the panel headers.\n     * @param {?} event\n     * @return {?}\n     */\n    _handleHeaderKeydown(event) {\n        const { keyCode } = event;\n        /** @type {?} */\n        const manager = this._keyManager;\n        if (keyCode === HOME) {\n            manager.setFirstItemActive();\n            event.preventDefault();\n        }\n        else if (keyCode === END) {\n            manager.setLastItemActive();\n            event.preventDefault();\n        }\n        else {\n            this._keyManager.onKeydown(event);\n        }\n    }\n    /**\n     * @param {?} header\n     * @return {?}\n     */\n    _handleHeaderFocus(header) {\n        this._keyManager.updateActiveItem(header);\n    }\n}\nMatAccordion.ɵfac = /*@__PURE__*/ function () { let ɵMatAccordion_BaseFactory; return function MatAccordion_Factory(t) { return (ɵMatAccordion_BaseFactory || (ɵMatAccordion_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatAccordion)))(t || MatAccordion); }; }();\nMatAccordion.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: MatAccordion, selectors: [[\"mat-accordion\"]], contentQueries: function MatAccordion_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatExpansionPanelHeader, 5);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._headers = _t);\n    } }, hostAttrs: [1, \"mat-accordion\"], inputs: { multi: \"multi\", displayMode: \"displayMode\", hideToggle: \"hideToggle\" }, exportAs: [\"matAccordion\"], features: [ɵngcc0.ɵɵProvidersFeature([{\n                provide: MAT_ACCORDION,\n                useExisting: MatAccordion\n            }]), ɵngcc0.ɵɵInheritDefinitionFeature] });\nMatAccordion.propDecorators = {\n    _headers: [{ type: ContentChildren, args: [MatExpansionPanelHeader, { descendants: true },] }],\n    hideToggle: [{ type: Input }],\n    displayMode: [{ type: Input }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatAccordion, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-accordion',\n                exportAs: 'matAccordion',\n                inputs: ['multi'],\n                providers: [{\n                        provide: MAT_ACCORDION,\n                        useExisting: MatAccordion\n                    }],\n                host: {\n                    class: 'mat-accordion'\n                }\n            }]\n    }], null, { displayMode: [{\n            type: Input\n        }], hideToggle: [{\n            type: Input\n        }], _headers: [{\n            type: ContentChildren,\n            args: [MatExpansionPanelHeader, { descendants: true }]\n        }] }); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass MatExpansionModule {\n}\nMatExpansionModule.ɵfac = function MatExpansionModule_Factory(t) { return new (t || MatExpansionModule)(); };\nMatExpansionModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: MatExpansionModule });\nMatExpansionModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ imports: [CommonModule, CdkAccordionModule, PortalModule] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatExpansionModule, [{\n        type: NgModule,\n        args: [{\n                imports: [CommonModule, CdkAccordionModule, PortalModule],\n                exports: [\n                    MatAccordion,\n                    MatExpansionPanel,\n                    MatExpansionPanelActionRow,\n                    MatExpansionPanelHeader,\n                    MatExpansionPanelTitle,\n                    MatExpansionPanelDescription,\n                    MatExpansionPanelContent,\n                ],\n                declarations: [\n                    MatAccordion,\n                    MatExpansionPanel,\n                    MatExpansionPanelActionRow,\n                    MatExpansionPanelHeader,\n                    MatExpansionPanelTitle,\n                    MatExpansionPanelDescription,\n                    MatExpansionPanelContent,\n                ]\n            }]\n    }], null, null); })();\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatExpansionModule, { declarations: function () { return [MatAccordion, MatExpansionPanel, MatExpansionPanelActionRow, MatExpansionPanelHeader, MatExpansionPanelTitle, MatExpansionPanelDescription, MatExpansionPanelContent]; }, imports: function () { return [CommonModule, CdkAccordionModule, PortalModule]; }, exports: function () { return [MatAccordion, MatExpansionPanel, MatExpansionPanelActionRow, MatExpansionPanelHeader, MatExpansionPanelTitle, MatExpansionPanelDescription, MatExpansionPanelContent]; } }); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\nexport { MatExpansionModule, MatAccordion, MAT_ACCORDION, MAT_EXPANSION_PANEL_DEFAULT_OPTIONS, MatExpansionPanel, MatExpansionPanelActionRow, MatExpansionPanelHeader, MatExpansionPanelDescription, MatExpansionPanelTitle, MatExpansionPanelContent, EXPANSION_PANEL_ANIMATION_TIMING, matExpansionAnimations };\n\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,cAAT,EAAyBC,SAAzB,EAAoCC,WAApC,EAAiDC,uBAAjD,EAA0EC,iBAA1E,EAA6FC,SAA7F,EAAwGC,YAAxG,EAAsHC,YAAtH,EAAoIC,UAApI,EAAgJC,KAAhJ,EAAuJC,MAAvJ,EAA+JC,QAA/J,EAAyKC,MAAzK,EAAiLC,QAAjL,EAA2LC,gBAA3L,EAA6MC,iBAA7M,EAAgOC,SAAhO,EAA2OC,IAA3O,EAAiPC,eAAjP,EAAkQC,QAAlQ,QAAkR,eAAlR;AACA,SAASC,OAAT,EAAkBC,YAAlB,EAAgCC,KAAhC,EAAuCC,KAAvC,EAA8CC,KAA9C,EAAqDC,UAArD,EAAiEC,OAAjE,EAA0EC,KAA1E,QAAuF,qBAAvF;AACA,SAASC,gBAAT,EAA2BC,YAA3B,EAAyCC,kBAAzC,QAAmE,wBAAnE;AACA,SAASC,qBAAT,QAAsC,uBAAtC;AACA,SAASC,yBAAT,QAA0C,0BAA1C;AACA,SAASC,cAAT,EAAyBC,YAAzB,QAA6C,qBAA7C;AACA,SAASC,QAAT,EAAmBC,YAAnB,QAAuC,iBAAvC;AACA,SAASC,qBAAT,QAAsC,sCAAtC;AACA,SAASC,OAAT,EAAkBC,KAAlB,EAAyBC,YAAzB,EAAuCC,KAAvC,QAAoD,MAApD;AACA,SAASC,MAAT,EAAiBC,SAAjB,EAA4BC,IAA5B,EAAkCC,oBAAlC,QAA8D,gBAA9D;AACA,SAASC,YAAT,EAAuBC,eAAvB,QAA8C,mBAA9C;AACA,SAASC,KAAT,EAAgBC,KAAhB,EAAuBC,cAAvB,EAAuCC,IAAvC,EAA6CC,GAA7C,QAAwD,uBAAxD;AAEA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,KAAKC,MAAZ,MAAwB,eAAxB;AACA,OAAO,KAAKC,MAAZ,MAAwB,0BAAxB;AACA,OAAO,KAAKC,MAAZ,MAAwB,qBAAxB;AACA,OAAO,KAAKC,MAAZ,MAAwB,mBAAxB;AACA,OAAO,KAAKC,MAAZ,MAAwB,iBAAxB;AAEA,MAAMC,GAAG,GAAG,CAAC,MAAD,CAAZ;;AACA,SAASC,wCAAT,CAAkDC,EAAlD,EAAsDC,GAAtD,EAA2D,CAAG;;AAC9D,MAAMC,GAAG,GAAG,CAAC,CAAC,CAAC,4BAAD,CAAD,CAAD,EAAmC,GAAnC,EAAwC,CAAC,CAAC,gBAAD,CAAD,CAAxC,CAAZ;AACA,MAAMC,GAAG,GAAG,CAAC,4BAAD,EAA+B,GAA/B,EAAoC,gBAApC,CAAZ;;AACA,MAAMC,GAAG,GAAG,UAAUC,EAAV,EAAcC,EAAd,EAAkB;EAAE,OAAO;IAAEC,eAAe,EAAEF,EAAnB;IAAuBG,cAAc,EAAEF;EAAvC,CAAP;AAAqD,CAArF;;AACA,MAAMG,GAAG,GAAG,UAAUJ,EAAV,EAAcC,EAAd,EAAkB;EAAE,OAAO;IAAEI,KAAK,EAAEL,EAAT;IAAaM,MAAM,EAAEL;EAArB,CAAP;AAAmC,CAAnE;;AACA,SAASM,uCAAT,CAAiDZ,EAAjD,EAAqDC,GAArD,EAA0D;EAAE,IAAID,EAAE,GAAG,CAAT,EAAY;IACpEP,MAAM,CAACoB,SAAP,CAAiB,CAAjB,EAAoB,MAApB,EAA4B,CAA5B;EACH;;EAAC,IAAIb,EAAE,GAAG,CAAT,EAAY;IACV,MAAMc,MAAM,GAAGrB,MAAM,CAACsB,aAAP,EAAf;IACAtB,MAAM,CAACuB,UAAP,CAAkB,kBAAlB,EAAsCF,MAAM,CAACG,iBAAP,EAAtC;EACH;AAAE;;AACH,MAAMC,GAAG,GAAG,CAAC,CAAC,CAAC,iBAAD,CAAD,CAAD,EAAwB,CAAC,CAAC,uBAAD,CAAD,CAAxB,EAAqD,GAArD,CAAZ;AACA,MAAMC,GAAG,GAAG,CAAC,iBAAD,EAAoB,uBAApB,EAA6C,GAA7C,CAAZ;AACA,MAAMC,aAAa,GAAG,IAAIhF,cAAJ,CAAmB,eAAnB,CAAtB;AAEA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;;AACA,MAAMiF,gCAAgC,GAAG,mCAAzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,MAAMC,sBAAsB,GAAG;EAC3B;AACJ;AACA;EACIC,eAAe,EAAEzD,OAAO,CAAC,iBAAD,EAAoB,CACxCH,KAAK,CAAC,iBAAD,EAAoBC,KAAK,CAAC;IAAE4D,SAAS,EAAE;EAAb,CAAD,CAAzB,CADmC,EAExC7D,KAAK,CAAC,UAAD,EAAaC,KAAK,CAAC;IAAE4D,SAAS,EAAE;EAAb,CAAD,CAAlB,CAFmC,EAGxC3D,UAAU,CAAC,2CAAD,EAA8CL,OAAO,CAAC6D,gCAAD,CAArD,CAH8B,CAApB,CAJG;;EAS3B;AACJ;AACA;EACII,qBAAqB,EAAE3D,OAAO,CAAC,iBAAD,EAAoB,CAC9CH,KAAK,CAAC,iBAAD,EAAoBC,KAAK,CAAC;IAC3B8D,MAAM,EAAE;EADmB,CAAD,CAAzB,EAED;IACAf,MAAM,EAAE;MAAEJ,eAAe,EAAE;IAAnB;EADR,CAFC,CADyC,EAM9C5C,KAAK,CAAC,UAAD,EAAaC,KAAK,CAAC;IACpB8D,MAAM,EAAE;EADY,CAAD,CAAlB,EAED;IACAf,MAAM,EAAE;MAAEH,cAAc,EAAE;IAAlB;EADR,CAFC,CANyC,EAW9C3C,UAAU,CAAC,2CAAD,EAA8CH,KAAK,CAAC,CAC1DK,KAAK,CAAC,kBAAD,EAAqBN,YAAY,EAAjC,EAAqC;IAAEkE,QAAQ,EAAE;EAAZ,CAArC,CADqD,EAE1DnE,OAAO,CAAC6D,gCAAD,CAFmD,CAAD,CAAnD,CAXoC,CAApB,CAZH;;EA4B3B;AACJ;AACA;EACIO,aAAa,EAAE9D,OAAO,CAAC,eAAD,EAAkB,CACpCH,KAAK,CAAC,iBAAD,EAAoBC,KAAK,CAAC;IAAE8D,MAAM,EAAE,KAAV;IAAiBG,UAAU,EAAE;EAA7B,CAAD,CAAzB,CAD+B,EAEpClE,KAAK,CAAC,UAAD,EAAaC,KAAK,CAAC;IAAE8D,MAAM,EAAE,GAAV;IAAeG,UAAU,EAAE;EAA3B,CAAD,CAAlB,CAF+B,EAGpChE,UAAU,CAAC,2CAAD,EAA8CL,OAAO,CAAC6D,gCAAD,CAArD,CAH0B,CAAlB;AA/BK,CAA/B;AAsCA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;;AACA,MAAMS,wBAAN,CAA+B;EAC3B;AACJ;AACA;EACIC,WAAW,CAACC,SAAD,EAAY;IACnB,KAAKA,SAAL,GAAiBA,SAAjB;EACH;;AAN0B;;AAQ/BF,wBAAwB,CAACG,IAAzB,GAAgC,SAASC,gCAAT,CAA0CC,CAA1C,EAA6C;EAAE,OAAO,KAAKA,CAAC,IAAIL,wBAAV,EAAoCrC,MAAM,CAAC2C,iBAAP,CAAyB3C,MAAM,CAACnD,WAAhC,CAApC,CAAP;AAA2F,CAA1K;;AACAwF,wBAAwB,CAACO,IAAzB,GAAgC,aAAc5C,MAAM,CAAC6C,iBAAP,CAAyB;EAAEC,IAAI,EAAET,wBAAR;EAAkCU,SAAS,EAAE,CAAC,CAAC,aAAD,EAAgB,0BAAhB,EAA4C,EAA5C,CAAD;AAA7C,CAAzB,CAA9C;AACA;;AACAV,wBAAwB,CAACW,cAAzB,GAA0C,MAAM,CAC5C;EAAEF,IAAI,EAAEjG;AAAR,CAD4C,CAAhD;;AAGA,CAAC,YAAY;EAAE,CAAC,OAAOoG,SAAP,KAAqB,WAArB,IAAoCA,SAArC,KAAmDjD,MAAM,CAACkD,iBAAP,CAAyBb,wBAAzB,EAAmD,CAAC;IAC9GS,IAAI,EAAElG,SADwG;IAE9GuG,IAAI,EAAE,CAAC;MACCC,QAAQ,EAAE;IADX,CAAD;EAFwG,CAAD,CAAnD,EAK1D,YAAY;IAAE,OAAO,CAAC;MAAEN,IAAI,EAAE9C,MAAM,CAACnD;IAAf,CAAD,CAAP;EAAwC,CALI,EAKF,IALE,CAAnD;AAKyD,CALxE;AAOA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;;;AACA,IAAIwG,QAAQ,GAAG,CAAf;AACA;AACA;AACA;AACA;AACA;;AACA,MAAMC,mCAAmC,GAAG,IAAI3G,cAAJ,CAAmB,qCAAnB,CAA5C;AACA,MAAM4G,EAAE,GAAGC,SAAX;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,MAAMC,iBAAN,SAAgClF,gBAAhC,CAAiD;EAC7C;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACI+D,WAAW,CAACoB,SAAD,EAAYC,kBAAZ,EAAgCC,0BAAhC,EAA4DC,iBAA5D,EACX;EACAC,SAFW,EAEAC,cAFA,EAEgBC,cAFhB,EAEgC;IACvC,MAAMN,SAAN,EAAiBC,kBAAjB,EAAqCC,0BAArC;IACA,KAAKC,iBAAL,GAAyBA,iBAAzB;IACA,KAAKE,cAAL,GAAsBA,cAAtB;IACA,KAAKE,WAAL,GAAmB,KAAnB;IACA;AACR;AACA;;IACQ,KAAKC,WAAL,GAAmB,IAAIhH,YAAJ,EAAnB;IACA;AACR;AACA;;IACQ,KAAKiH,aAAL,GAAqB,IAAIjH,YAAJ,EAArB;IACA;AACR;AACA;;IACQ,KAAKkH,aAAL,GAAqB,IAAInF,OAAJ,EAArB;IACA;AACR;AACA;;IACQ,KAAKoF,SAAL,GAAkB,8BAA6BhB,QAAQ,EAAG,EAA1D;IACA;AACR;AACA;;IACQ,KAAKiB,kBAAL,GAA0B,IAAIrF,OAAJ,EAA1B;IACA,KAAKyE,SAAL,GAAiBA,SAAjB;IACA,KAAKI,SAAL,GAAiBA,SAAjB,CA1BuC,CA2BvC;IACA;;IACA,KAAKQ,kBAAL,CAAwBC,IAAxB,CAA6B/E,oBAAoB,CAAC,CAACgF,CAAD,EAAIC,CAAJ,KAAU;MACxD,OAAOD,CAAC,CAACE,SAAF,KAAgBD,CAAC,CAACC,SAAlB,IAA+BF,CAAC,CAACG,OAAF,KAAcF,CAAC,CAACE,OAAtD;IACH,CAFgD,CAAjD,EAEIC,SAFJ,CAEcC,KAAK,IAAI;MACnB,IAAIA,KAAK,CAACH,SAAN,KAAoB,MAAxB,EAAgC;QAC5B,IAAIG,KAAK,CAACF,OAAN,KAAkB,UAAtB,EAAkC;UAC9B,KAAKT,WAAL,CAAiBY,IAAjB;QACH,CAFD,MAGK,IAAID,KAAK,CAACF,OAAN,KAAkB,WAAtB,EAAmC;UACpC,KAAKR,aAAL,CAAmBW,IAAnB;QACH;MACJ;IACJ,CAXD;;IAYA,IAAId,cAAJ,EAAoB;MAChB,KAAKe,UAAL,GAAkBf,cAAc,CAACe,UAAjC;IACH;EACJ;EACD;AACJ;AACA;AACA;;;EACkB,IAAVA,UAAU,GAAG;IACb,OAAO,KAAKd,WAAL,IAAqB,KAAKP,SAAL,IAAkB,KAAKA,SAAL,CAAeqB,UAA7D;EACH;EACD;AACJ;AACA;AACA;;;EACkB,IAAVA,UAAU,CAAC9D,KAAD,EAAQ;IAClB,KAAKgD,WAAL,GAAmBvF,qBAAqB,CAACuC,KAAD,CAAxC;EACH;EACD;AACJ;AACA;AACA;;;EACI+D,WAAW,GAAG;IACV,IAAI,KAAKtB,SAAT,EAAoB;MAChB;MACA;MACA;MACA,OAAO,CAAC,KAAKuB,QAAL,GAAgB,KAAKvB,SAAL,CAAewB,WAA/B,GAA6C,KAAK1D,iBAAL,EAA9C,MAA4E,SAAnF;IACH;;IACD,OAAO,KAAP;EACH;EACD;AACJ;AACA;AACA;;;EACIA,iBAAiB,GAAG;IAChB,OAAO,KAAKyD,QAAL,GAAgB,UAAhB,GAA6B,WAApC;EACH;EACD;AACJ;AACA;;;EACIE,kBAAkB,GAAG;IACjB,IAAI,KAAKC,YAAT,EAAuB;MACnB;MACA,KAAKC,MAAL,CAAYd,IAAZ,CAAiBjF,SAAS;MAAE;MAAkB,IAApB,CAA1B,EAAuDD,MAAM,CAAC,MAAM,KAAK4F,QAAL,IAAiB,CAAC,KAAKK,OAA9B,CAA7D,EAAqG/F,IAAI,CAAC,CAAD,CAAzG,EAA8GqF,SAA9G,CAAwH,MAAM;QAC1H,KAAKU,OAAL,GAAe,IAAI1G,cAAJ,CAAmB,KAAKwG,YAAL,CAAkB7C,SAArC,EAAgD,KAAKsB,iBAArD,CAAf;MACH,CAFD;IAGH;EACJ;EACD;AACJ;AACA;AACA;;;EACI0B,WAAW,CAACC,OAAD,EAAU;IACjB,KAAKpB,aAAL,CAAmBqB,IAAnB,CAAwBD,OAAxB;EACH;EACD;AACJ;AACA;;;EACIE,WAAW,GAAG;IACV,MAAMA,WAAN;;IACA,KAAKpB,kBAAL,CAAwBqB,QAAxB;;IACA,KAAKvB,aAAL,CAAmBuB,QAAnB;EACH;EACD;AACJ;AACA;AACA;;;EACIC,cAAc,GAAG;IACb,IAAI,KAAKC,KAAL,IAAc,KAAK/B,SAAvB,EAAkC;MAC9B;MACA,MAAMgC,cAAc,GAAG,KAAKhC,SAAL,CAAeiC,aAAtC;MACA;;MACA,MAAMC,WAAW,GAAG,KAAKH,KAAL,CAAWI,aAA/B;MACA,OAAOH,cAAc,KAAKE,WAAnB,IAAkCA,WAAW,CAACE,QAAZ,CAAqBJ,cAArB,CAAzC;IACH;;IACD,OAAO,KAAP;EACH;;AAlI4C;;AAoIjDrC,iBAAiB,CAACjB,IAAlB,GAAyB,SAAS2D,yBAAT,CAAmCzD,CAAnC,EAAsC;EAAE,OAAO,KAAKA,CAAC,IAAIe,iBAAV,EAA6BzD,MAAM,CAAC2C,iBAAP,CAAyBhB,aAAzB,EAAwC,EAAxC,CAA7B,EAA0E3B,MAAM,CAAC2C,iBAAP,CAAyB3C,MAAM,CAACjD,iBAAhC,CAA1E,EAA8HiD,MAAM,CAAC2C,iBAAP,CAAyB1C,MAAM,CAACtB,yBAAhC,CAA9H,EAA0LqB,MAAM,CAAC2C,iBAAP,CAAyB3C,MAAM,CAACvC,gBAAhC,CAA1L,EAA6OuC,MAAM,CAAC2C,iBAAP,CAAyB7D,QAAzB,CAA7O,EAAiRkB,MAAM,CAAC2C,iBAAP,CAAyB3D,qBAAzB,EAAgD,CAAhD,CAAjR,EAAqUgB,MAAM,CAAC2C,iBAAP,CAAyBW,mCAAzB,EAA8D,CAA9D,CAArU,CAAP;AAAgZ,CAAjd;;AACAG,iBAAiB,CAAC2C,IAAlB,GAAyB,aAAcpG,MAAM,CAACqG,iBAAP,CAAyB;EAAEvD,IAAI,EAAEW,iBAAR;EAA2BV,SAAS,EAAE,CAAC,CAAC,qBAAD,CAAD,CAAtC;EAAiEuD,cAAc,EAAE,SAASC,gCAAT,CAA0ChG,EAA1C,EAA8CC,GAA9C,EAAmDgG,QAAnD,EAA6D;IAAE,IAAIjG,EAAE,GAAG,CAAT,EAAY;MACpNP,MAAM,CAACyG,cAAP,CAAsBD,QAAtB,EAAgCnE,wBAAhC,EAA0D,CAA1D;IACH;;IAAC,IAAI9B,EAAE,GAAG,CAAT,EAAY;MACV,IAAImG,EAAJ;;MACA1G,MAAM,CAAC2G,cAAP,CAAsBD,EAAE,GAAG1G,MAAM,CAAC4G,WAAP,EAA3B,MAAqDpG,GAAG,CAAC4E,YAAJ,GAAmBsB,EAAE,CAACG,KAA3E;IACH;EAAE,CALyD;EAKvDC,SAAS,EAAE,SAASC,uBAAT,CAAiCxG,EAAjC,EAAqCC,GAArC,EAA0C;IAAE,IAAID,EAAE,GAAG,CAAT,EAAY;MACpEP,MAAM,CAACgH,WAAP,CAAmB3G,GAAnB,EAAwB,CAAxB;IACH;;IAAC,IAAIE,EAAE,GAAG,CAAT,EAAY;MACV,IAAImG,EAAJ;;MACA1G,MAAM,CAAC2G,cAAP,CAAsBD,EAAE,GAAG1G,MAAM,CAAC4G,WAAP,EAA3B,MAAqDpG,GAAG,CAACqF,KAAJ,GAAYa,EAAE,CAACG,KAApE;IACH;EAAE,CAVyD;EAUvDI,SAAS,EAAE,CAAC,CAAD,EAAI,qBAAJ,CAV4C;EAUhBC,QAAQ,EAAE,CAVM;EAUHC,YAAY,EAAE,SAASC,8BAAT,CAAwC7G,EAAxC,EAA4CC,GAA5C,EAAiD;IAAE,IAAID,EAAE,GAAG,CAAT,EAAY;MAClIP,MAAM,CAACqH,WAAP,CAAmB,cAAnB,EAAmC7G,GAAG,CAACyE,QAAvC,EAAiD,yBAAjD,EAA4EzE,GAAG,CAACuD,cAAJ,KAAuB,gBAAnG,EAAqH,6BAArH,EAAoJvD,GAAG,CAACwE,WAAJ,EAApJ;IACH;EAAE,CAZyD;EAYvDsC,MAAM,EAAE;IAAEC,QAAQ,EAAE,UAAZ;IAAwBtC,QAAQ,EAAE,UAAlC;IAA8CF,UAAU,EAAE;EAA1D,CAZ+C;EAY2ByC,OAAO,EAAE;IAAEnC,MAAM,EAAE,QAAV;IAAoBoC,MAAM,EAAE,QAA5B;IAAsCC,cAAc,EAAE,gBAAtD;IAAwExD,WAAW,EAAE,aAArF;IAAoGC,aAAa,EAAE;EAAnH,CAZpC;EAY0KwD,QAAQ,EAAE,CAAC,mBAAD,CAZpL;EAY2MC,QAAQ,EAAE,CAAC5H,MAAM,CAAC6H,kBAAP,CAA0B,CACpS;EACA;EACA;IAAEC,OAAO,EAAEnG,aAAX;IAA0BoG,QAAQ,EAAExE;EAApC,CAHoS,CAA1B,CAAD,EAIzQvD,MAAM,CAACgI,0BAJkQ,EAItOhI,MAAM,CAACiI,oBAJ+N,CAZrN;EAgBaC,kBAAkB,EAAExH,GAhBjC;EAgBsCyH,KAAK,EAAE,CAhB7C;EAgBgDC,IAAI,EAAE,CAhBtD;EAgByDC,MAAM,EAAE,CAAC,CAAC,MAAD,EAAS,QAAT,EAAmB,CAAnB,EAAsB,6BAAtB,EAAqD,CAArD,EAAwD,IAAxD,CAAD,EAAgE,CAAC,MAAD,EAAS,EAAT,CAAhE,EAA8E,CAAC,CAAD,EAAI,0BAAJ,CAA9E,EAA+G,CAAC,CAAD,EAAI,iBAAJ,CAA/G,CAhBjE;EAgByMC,QAAQ,EAAE,SAASC,0BAAT,CAAoChI,EAApC,EAAwCC,GAAxC,EAA6C;IAAE,IAAID,EAAE,GAAG,CAAT,EAAY;MACtUP,MAAM,CAACwI,eAAP,CAAuB/H,GAAvB;MACAT,MAAM,CAACyI,YAAP,CAAoB,CAApB;MACAzI,MAAM,CAAC0I,cAAP,CAAsB,CAAtB,EAAyB,KAAzB,EAAgC,CAAhC,EAAmC,CAAnC;MACA1I,MAAM,CAAC2I,UAAP,CAAkB,qBAAlB,EAAyC,SAASC,sEAAT,CAAgFC,MAAhF,EAAwF;QAAE,OAAOrI,GAAG,CAAC8D,kBAAJ,CAAuBmB,IAAvB,CAA4BoD,MAA5B,CAAP;MAA6C,CAAhL;MACA7I,MAAM,CAAC0I,cAAP,CAAsB,CAAtB,EAAyB,KAAzB,EAAgC,CAAhC;MACA1I,MAAM,CAACyI,YAAP,CAAoB,CAApB,EAAuB,CAAvB;MACAzI,MAAM,CAAC8I,UAAP,CAAkB,CAAlB,EAAqBxI,wCAArB,EAA+D,CAA/D,EAAkE,CAAlE,EAAqE,aAArE,EAAoF,CAApF;MACAN,MAAM,CAAC+I,YAAP;MACA/I,MAAM,CAACyI,YAAP,CAAoB,CAApB,EAAuB,CAAvB;MACAzI,MAAM,CAAC+I,YAAP;IACH;;IAAC,IAAIxI,EAAE,GAAG,CAAT,EAAY;MACVP,MAAM,CAACgJ,SAAP,CAAiB,CAAjB;MACAhJ,MAAM,CAACuB,UAAP,CAAkB,gBAAlB,EAAoCf,GAAG,CAACgB,iBAAJ,EAApC,EAA6D,IAA7D,EAAmEhB,GAAG,CAACyI,EAAvE;MACAjJ,MAAM,CAACkJ,WAAP,CAAmB,iBAAnB,EAAsC1I,GAAG,CAAC6D,SAA1C;MACArE,MAAM,CAACgJ,SAAP,CAAiB,CAAjB;MACAhJ,MAAM,CAACuB,UAAP,CAAkB,iBAAlB,EAAqCf,GAAG,CAAC8E,OAAzC;IACH;EAAE,CAjCyD;EAiCvD6D,YAAY,EAAE,CAACjJ,MAAM,CAACkJ,eAAR,CAjCyC;EAiCfC,MAAM,EAAE,CAAC,s+CAAD,CAjCO;EAiCm+CC,aAAa,EAAE,CAjCl/C;EAiCq/CC,IAAI,EAAE;IAAEC,SAAS,EAAE,CAAC3H,sBAAsB,CAACM,aAAxB;EAAb,CAjC3/C;EAiCkjDsH,eAAe,EAAE;AAjCnkD,CAAzB,CAAvC;AAkCA;;AACAhG,iBAAiB,CAACT,cAAlB,GAAmC,MAAM,CACrC;EAAEF,IAAI,EAAEU,SAAR;EAAmBkG,UAAU,EAAE,CAAC;IAAE5G,IAAI,EAAExF;EAAR,CAAD,EAAqB;IAAEwF,IAAI,EAAEtF;EAAR,CAArB,EAAyC;IAAEsF,IAAI,EAAEzF,MAAR;IAAgB8F,IAAI,EAAE,CAACxB,aAAD;EAAtB,CAAzC;AAA/B,CADqC,EAErC;EAAEmB,IAAI,EAAE/F;AAAR,CAFqC,EAGrC;EAAE+F,IAAI,EAAEnE;AAAR,CAHqC,EAIrC;EAAEmE,IAAI,EAAErF;AAAR,CAJqC,EAKrC;EAAEqF,IAAI,EAAEU,SAAR;EAAmBkG,UAAU,EAAE,CAAC;IAAE5G,IAAI,EAAEzF,MAAR;IAAgB8F,IAAI,EAAE,CAACrE,QAAD;EAAtB,CAAD;AAA/B,CALqC,EAMrC;EAAEgE,IAAI,EAAE6G,MAAR;EAAgBD,UAAU,EAAE,CAAC;IAAE5G,IAAI,EAAExF;EAAR,CAAD,EAAqB;IAAEwF,IAAI,EAAEzF,MAAR;IAAgB8F,IAAI,EAAE,CAACnE,qBAAD;EAAtB,CAArB;AAA5B,CANqC,EAOrC;EAAE8D,IAAI,EAAEU,SAAR;EAAmBkG,UAAU,EAAE,CAAC;IAAE5G,IAAI,EAAEzF,MAAR;IAAgB8F,IAAI,EAAE,CAACG,mCAAD;EAAtB,CAAD,EAAiE;IAAER,IAAI,EAAExF;EAAR,CAAjE;AAA/B,CAPqC,CAAzC;;AASAmG,iBAAiB,CAACmG,cAAlB,GAAmC;EAC/B7E,UAAU,EAAE,CAAC;IAAEjC,IAAI,EAAE1F;EAAR,CAAD,CADmB;EAE/B8G,WAAW,EAAE,CAAC;IAAEpB,IAAI,EAAEvF;EAAR,CAAD,CAFkB;EAG/B4G,aAAa,EAAE,CAAC;IAAErB,IAAI,EAAEvF;EAAR,CAAD,CAHgB;EAI/B6H,YAAY,EAAE,CAAC;IAAEtC,IAAI,EAAE7F,YAAR;IAAsBkG,IAAI,EAAE,CAACd,wBAAD;EAA5B,CAAD,CAJiB;EAK/BwD,KAAK,EAAE,CAAC;IAAE/C,IAAI,EAAEnF,SAAR;IAAmBwF,IAAI,EAAE,CAAC,MAAD;EAAzB,CAAD;AALwB,CAAnC;;AAOA,CAAC,YAAY;EAAE,CAAC,OAAOF,SAAP,KAAqB,WAArB,IAAoCA,SAArC,KAAmDjD,MAAM,CAACkD,iBAAP,CAAyBO,iBAAzB,EAA4C,CAAC;IACvGX,IAAI,EAAE9F,SADiG;IAEvGmG,IAAI,EAAE,CAAC;MAAEC,QAAQ,EAAE,qBAAZ;MAAmCuE,QAAQ,EAAE,mBAA7C;MAAkEW,QAAQ,EAAE,+cAA5E;MAA6hBgB,aAAa,EAAE5L,iBAAiB,CAACmM,IAA9jB;MAAokBJ,eAAe,EAAE3M,uBAAuB,CAACgN,MAA7mB;MAAqnBxC,MAAM,EAAE,CAAC,UAAD,EAAa,UAAb,CAA7nB;MAAupBE,OAAO,EAAE,CAAC,QAAD,EAAW,QAAX,EAAqB,gBAArB,CAAhqB;MAAwsBuC,UAAU,EAAE,CAAClI,sBAAsB,CAACM,aAAxB,CAAptB;MAA4vB6H,SAAS,EAAE,CAClwB;MACA;MACA;QAAElC,OAAO,EAAEnG,aAAX;QAA0BoG,QAAQ,EAAExE;MAApC,CAHkwB,CAAvwB;MAII0G,IAAI,EAAE;QACL,SAAS,qBADJ;QAEL,wBAAwB,UAFnB;QAGL,mCAAmC,qCAH9B;QAIL,uCAAuC;MAJlC,CAJV;MASIZ,MAAM,EAAE,CAAC,s+CAAD;IATZ,CAAD;EAFiG,CAAD,CAA5C,EAY1D,YAAY;IAAE,OAAO,CAAC;MAAEvG,IAAI,EAAEU,SAAR;MAAmBkG,UAAU,EAAE,CAAC;QAC9C5G,IAAI,EAAExF;MADwC,CAAD,EAE9C;QACCwF,IAAI,EAAEtF;MADP,CAF8C,EAI9C;QACCsF,IAAI,EAAEzF,MADP;QAEC8F,IAAI,EAAE,CAACxB,aAAD;MAFP,CAJ8C;IAA/B,CAAD,EAOX;MAAEmB,IAAI,EAAE9C,MAAM,CAACjD;IAAf,CAPW,EAOyB;MAAE+F,IAAI,EAAE7C,MAAM,CAACtB;IAAf,CAPzB,EAOqE;MAAEmE,IAAI,EAAE9C,MAAM,CAACvC;IAAf,CAPrE,EAOwG;MAAEqF,IAAI,EAAEU,SAAR;MAAmBkG,UAAU,EAAE,CAAC;QACrJ5G,IAAI,EAAEzF,MAD+I;QAErJ8F,IAAI,EAAE,CAACrE,QAAD;MAF+I,CAAD;IAA/B,CAPxG,EAUX;MAAEgE,IAAI,EAAE6G,MAAR;MAAgBD,UAAU,EAAE,CAAC;QAC/B5G,IAAI,EAAExF;MADyB,CAAD,EAE/B;QACCwF,IAAI,EAAEzF,MADP;QAEC8F,IAAI,EAAE,CAACnE,qBAAD;MAFP,CAF+B;IAA5B,CAVW,EAeX;MAAE8D,IAAI,EAAEU,SAAR;MAAmBkG,UAAU,EAAE,CAAC;QAClC5G,IAAI,EAAEzF,MAD4B;QAElC8F,IAAI,EAAE,CAACG,mCAAD;MAF4B,CAAD,EAGlC;QACCR,IAAI,EAAExF;MADP,CAHkC;IAA/B,CAfW,CAAP;EAoBF,CAhC8C,EAgC5C;IAAE4G,WAAW,EAAE,CAAC;MAC1BpB,IAAI,EAAEvF;IADoB,CAAD,CAAf;IAEV4G,aAAa,EAAE,CAAC;MAChBrB,IAAI,EAAEvF;IADU,CAAD,CAFL;IAIVwH,UAAU,EAAE,CAAC;MACbjC,IAAI,EAAE1F;IADO,CAAD,CAJF;IAMVgI,YAAY,EAAE,CAAC;MACftC,IAAI,EAAE7F,YADS;MAEfkG,IAAI,EAAE,CAACd,wBAAD;IAFS,CAAD,CANJ;IASVwD,KAAK,EAAE,CAAC;MACR/C,IAAI,EAAEnF,SADE;MAERwF,IAAI,EAAE,CAAC,MAAD;IAFE,CAAD;EATG,CAhC4C,CAAnD;AA4CC,CA5ChB;;AA6CA,MAAM+G,0BAAN,CAAiC;;AAEjCA,0BAA0B,CAAC1H,IAA3B,GAAkC,SAAS2H,kCAAT,CAA4CzH,CAA5C,EAA+C;EAAE,OAAO,KAAKA,CAAC,IAAIwH,0BAAV,GAAP;AAAiD,CAApI;;AACAA,0BAA0B,CAACtH,IAA3B,GAAkC,aAAc5C,MAAM,CAAC6C,iBAAP,CAAyB;EAAEC,IAAI,EAAEoH,0BAAR;EAAoCnH,SAAS,EAAE,CAAC,CAAC,gBAAD,CAAD,CAA/C;EAAqEkE,SAAS,EAAE,CAAC,CAAD,EAAI,gBAAJ;AAAhF,CAAzB,CAAhD;;AACA,CAAC,YAAY;EAAE,CAAC,OAAOhE,SAAP,KAAqB,WAArB,IAAoCA,SAArC,KAAmDjD,MAAM,CAACkD,iBAAP,CAAyBgH,0BAAzB,EAAqD,CAAC;IAChHpH,IAAI,EAAElG,SAD0G;IAEhHuG,IAAI,EAAE,CAAC;MACCC,QAAQ,EAAE,gBADX;MAEC6G,IAAI,EAAE;QACFG,KAAK,EAAE;MADL;IAFP,CAAD;EAF0G,CAAD,CAArD,EAQ1D,IAR0D,EAQpD,IARoD,CAAnD;AAQO,CARtB;AAUA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;;;AACA,MAAMC,uBAAN,CAA8B;EAC1B;AACJ;AACA;AACA;AACA;AACA;AACA;EACI/H,WAAW,CAACgI,KAAD,EAAQC,QAAR,EAAkBC,aAAlB,EAAiC7G,kBAAjC,EAAqDK,cAArD,EAAqE;IAC5E,KAAKsG,KAAL,GAAaA,KAAb;IACA,KAAKC,QAAL,GAAgBA,QAAhB;IACA,KAAKC,aAAL,GAAqBA,aAArB;IACA,KAAK7G,kBAAL,GAA0BA,kBAA1B;IACA,KAAK8G,yBAAL,GAAiCtL,YAAY,CAACC,KAA9C;IACA;;IACA,MAAMsL,yBAAyB,GAAGJ,KAAK,CAAC5G,SAAN,GAC9B4G,KAAK,CAAC5G,SAAN,CAAgBiH,aAAhB,CAA8BpG,IAA9B,CAAmClF,MAAM,CAACmG,OAAO,IAAI,CAAC,CAACA,OAAO,CAAC,YAAD,CAArB,CAAzC,CAD8B,GAE9BpG,KAFJ,CAP4E,CAU5E;IACA;;IACA,KAAKqL,yBAAL,GACIvL,KAAK,CAACoL,KAAK,CAACjF,MAAP,EAAeiF,KAAK,CAAC7C,MAArB,EAA6BiD,yBAA7B,EAAwDJ,KAAK,CAAClG,aAAN,CAAoBG,IAApB,CAAyBlF,MAAM,CAACmG,OAAO,IAAI,CAAC,EAAEA,OAAO,CAAC,YAAD,CAAP,IAAyBA,OAAO,CAAC,UAAD,CAAlC,CAAb,CAA/B,CAAxD,CAAL,CACKZ,SADL,CACe,MAAM,KAAKjB,kBAAL,CAAwBiH,YAAxB,EADrB,CADJ,CAZ4E,CAe5E;;IACAN,KAAK,CAAC7C,MAAN,CACKlD,IADL,CACUlF,MAAM,CAAC,MAAMiL,KAAK,CAAC1E,cAAN,EAAP,CADhB,EAEKhB,SAFL,CAEe,MAAM4F,aAAa,CAACK,QAAd,CAAuBN,QAAvB,EAAiC,SAAjC,CAFrB;;IAGAC,aAAa,CAACM,OAAd,CAAsBP,QAAtB,EAAgC3F,SAAhC,CAA0CmG,MAAM,IAAI;MAChD,IAAIA,MAAM,IAAIT,KAAK,CAAC5G,SAApB,EAA+B;QAC3B4G,KAAK,CAAC5G,SAAN,CAAgBsH,kBAAhB,CAAmC,IAAnC;MACH;IACJ,CAJD;;IAKA,IAAIhH,cAAJ,EAAoB;MAChB,KAAKjD,cAAL,GAAsBiD,cAAc,CAACjD,cAArC;MACA,KAAKD,eAAL,GAAuBkD,cAAc,CAAClD,eAAtC;IACH;EACJ;EACD;AACJ;AACA;AACA;AACA;;;EACgB,IAARyG,QAAQ,GAAG;IACX,OAAO,KAAK+C,KAAL,CAAW/C,QAAlB;EACH;EACD;AACJ;AACA;AACA;;;EACI0D,OAAO,GAAG;IACN,KAAKX,KAAL,CAAWY,MAAX;EACH;EACD;AACJ;AACA;AACA;;;EACIC,WAAW,GAAG;IACV,OAAO,KAAKb,KAAL,CAAWrF,QAAlB;EACH;EACD;AACJ;AACA;AACA;;;EACIzD,iBAAiB,GAAG;IAChB,OAAO,KAAK8I,KAAL,CAAW9I,iBAAX,EAAP;EACH;EACD;AACJ;AACA;AACA;;;EACI4J,WAAW,GAAG;IACV,OAAO,KAAKd,KAAL,CAAWrB,EAAlB;EACH;EACD;AACJ;AACA;AACA;;;EACIoC,WAAW,GAAG;IACV,OAAO,CAAC,KAAKf,KAAL,CAAWvF,UAAZ,IAA0B,CAAC,KAAKuF,KAAL,CAAW/C,QAA7C;EACH;EACD;AACJ;AACA;AACA;AACA;;;EACI+D,QAAQ,CAACzG,KAAD,EAAQ;IACZ,QAAQA,KAAK,CAAC0G,OAAd;MACI;MACA,KAAK3L,KAAL;MACA,KAAKD,KAAL;QACI,IAAI,CAACE,cAAc,CAACgF,KAAD,CAAnB,EAA4B;UACxBA,KAAK,CAAC2G,cAAN;;UACA,KAAKP,OAAL;QACH;;QACD;;MACJ;QACI,IAAI,KAAKX,KAAL,CAAW5G,SAAf,EAA0B;UACtB,KAAK4G,KAAL,CAAW5G,SAAX,CAAqB+H,oBAArB,CAA0C5G,KAA1C;QACH;;QACD;IAbR;EAeH;EACD;AACJ;AACA;AACA;AACA;AACA;;;EACI6G,KAAK,CAACX,MAAM,GAAG,SAAV,EAAqB;IACtB,KAAKP,aAAL,CAAmBK,QAAnB,CAA4B,KAAKN,QAAjC,EAA2CQ,MAA3C;EACH;EACD;AACJ;AACA;;;EACIrF,WAAW,GAAG;IACV,KAAK+E,yBAAL,CAA+BkB,WAA/B;;IACA,KAAKnB,aAAL,CAAmBoB,cAAnB,CAAkC,KAAKrB,QAAvC;EACH;;AArHyB;;AAuH9BF,uBAAuB,CAAC7H,IAAxB,GAA+B,SAASqJ,+BAAT,CAAyCnJ,CAAzC,EAA4C;EAAE,OAAO,KAAKA,CAAC,IAAI2H,uBAAV,EAAmCrK,MAAM,CAAC2C,iBAAP,CAAyBc,iBAAzB,EAA4C,CAA5C,CAAnC,EAAmFzD,MAAM,CAAC2C,iBAAP,CAAyB3C,MAAM,CAAC7C,UAAhC,CAAnF,EAAgI6C,MAAM,CAAC2C,iBAAP,CAAyBxC,MAAM,CAACV,YAAhC,CAAhI,EAA+KO,MAAM,CAAC2C,iBAAP,CAAyB3C,MAAM,CAACjD,iBAAhC,CAA/K,EAAmOiD,MAAM,CAAC2C,iBAAP,CAAyBW,mCAAzB,EAA8D,CAA9D,CAAnO,CAAP;AAA8S,CAA3X;;AACA+G,uBAAuB,CAACjE,IAAxB,GAA+B,aAAcpG,MAAM,CAACqG,iBAAP,CAAyB;EAAEvD,IAAI,EAAEuH,uBAAR;EAAiCtH,SAAS,EAAE,CAAC,CAAC,4BAAD,CAAD,CAA5C;EAA8EkE,SAAS,EAAE,CAAC,MAAD,EAAS,QAAT,EAAmB,CAAnB,EAAsB,4BAAtB,CAAzF;EAA8IC,QAAQ,EAAE,EAAxJ;EAA4JC,YAAY,EAAE,SAAS2E,oCAAT,CAA8CvL,EAA9C,EAAkDC,GAAlD,EAAuD;IAAE,IAAID,EAAE,GAAG,CAAT,EAAY;MAC7SP,MAAM,CAAC2I,UAAP,CAAkB,OAAlB,EAA2B,SAASoD,gDAAT,GAA4D;QAAE,OAAOvL,GAAG,CAACyK,OAAJ,EAAP;MAAuB,CAAhH,EAAkH,SAAlH,EAA6H,SAASe,kDAAT,CAA4DnD,MAA5D,EAAoE;QAAE,OAAOrI,GAAG,CAAC8K,QAAJ,CAAazC,MAAb,CAAP;MAA8B,CAAjO;IACH;;IAAC,IAAItI,EAAE,GAAG,CAAT,EAAY;MACVP,MAAM,CAACkJ,WAAP,CAAmB,IAAnB,EAAyB1I,GAAG,CAAC8J,KAAJ,CAAUjG,SAAnC,EAA8C,UAA9C,EAA0D7D,GAAG,CAAC+G,QAAJ,GAAe,CAAC,CAAhB,GAAoB,CAA9E,EAAiF,eAAjF,EAAkG/G,GAAG,CAAC4K,WAAJ,EAAlG,EAAqH,eAArH,EAAsI5K,GAAG,CAAC2K,WAAJ,EAAtI,EAAyJ,eAAzJ,EAA0K3K,GAAG,CAAC8J,KAAJ,CAAU/C,QAApL;MACAvH,MAAM,CAACiM,uBAAP,CAA+B,kBAA/B,EAAmDjM,MAAM,CAACkM,eAAP,CAAuB,EAAvB,EAA2BlL,GAA3B,EAAgCR,GAAG,CAACgB,iBAAJ,EAAhC,EAAyDxB,MAAM,CAACkM,eAAP,CAAuB,CAAvB,EAA0BvL,GAA1B,EAA+BH,GAAG,CAACM,eAAnC,EAAoDN,GAAG,CAACO,cAAxD,CAAzD,CAAnD;MACAf,MAAM,CAACqH,WAAP,CAAmB,cAAnB,EAAmC7G,GAAG,CAAC2K,WAAJ,EAAnC;IACH;EAAE,CAN+D;EAM7D7D,MAAM,EAAE;IAAEvG,cAAc,EAAE,gBAAlB;IAAoCD,eAAe,EAAE;EAArD,CANqD;EAMqBoH,kBAAkB,EAAExG,GANzC;EAM8CyG,KAAK,EAAE,CANrD;EAMwDC,IAAI,EAAE,CAN9D;EAMiEC,MAAM,EAAE,CAAC,CAAC,CAAD,EAAI,aAAJ,CAAD,EAAqB,CAAC,OAAD,EAAU,yBAAV,EAAqC,CAArC,EAAwC,MAAxC,CAArB,EAAsE,CAAC,CAAD,EAAI,yBAAJ,CAAtE,CANzE;EAMgLC,QAAQ,EAAE,SAAS6D,gCAAT,CAA0C5L,EAA1C,EAA8CC,GAA9C,EAAmD;IAAE,IAAID,EAAE,GAAG,CAAT,EAAY;MACzTP,MAAM,CAACwI,eAAP,CAAuB/G,GAAvB;MACAzB,MAAM,CAAC0I,cAAP,CAAsB,CAAtB,EAAyB,MAAzB,EAAiC,CAAjC;MACA1I,MAAM,CAACyI,YAAP,CAAoB,CAApB;MACAzI,MAAM,CAACyI,YAAP,CAAoB,CAApB,EAAuB,CAAvB;MACAzI,MAAM,CAACyI,YAAP,CAAoB,CAApB,EAAuB,CAAvB;MACAzI,MAAM,CAAC+I,YAAP;MACA/I,MAAM,CAAC8I,UAAP,CAAkB,CAAlB,EAAqB3H,uCAArB,EAA8D,CAA9D,EAAiE,CAAjE,EAAoE,MAApE,EAA4E,CAA5E;IACH;;IAAC,IAAIZ,EAAE,GAAG,CAAT,EAAY;MACVP,MAAM,CAACgJ,SAAP,CAAiB,CAAjB;MACAhJ,MAAM,CAACuB,UAAP,CAAkB,MAAlB,EAA0Bf,GAAG,CAAC6K,WAAJ,EAA1B;IACH;EAAE,CAjB+D;EAiB7DlC,YAAY,EAAE,CAAC/I,MAAM,CAACgM,IAAR,CAjB+C;EAiBhC/C,MAAM,EAAE,CAAC,24BAAD,CAjBwB;EAiBu3BC,aAAa,EAAE,CAjBt4B;EAiBy4BC,IAAI,EAAE;IAAEC,SAAS,EAAE,CACt9B3H,sBAAsB,CAACC,eAD+7B,EAEt9BD,sBAAsB,CAACG,qBAF+7B;EAAb,CAjB/4B;EAoBzDyH,eAAe,EAAE;AApBwC,CAAzB,CAA7C;AAqBA;;AACAY,uBAAuB,CAACrH,cAAxB,GAAyC,MAAM,CAC3C;EAAEF,IAAI,EAAEW,iBAAR;EAA2BiG,UAAU,EAAE,CAAC;IAAE5G,IAAI,EAAElF;EAAR,CAAD;AAAvC,CAD2C,EAE3C;EAAEkF,IAAI,EAAE3F;AAAR,CAF2C,EAG3C;EAAE2F,IAAI,EAAErD;AAAR,CAH2C,EAI3C;EAAEqD,IAAI,EAAE/F;AAAR,CAJ2C,EAK3C;EAAE+F,IAAI,EAAEU,SAAR;EAAmBkG,UAAU,EAAE,CAAC;IAAE5G,IAAI,EAAEzF,MAAR;IAAgB8F,IAAI,EAAE,CAACG,mCAAD;EAAtB,CAAD,EAAiE;IAAER,IAAI,EAAExF;EAAR,CAAjE;AAA/B,CAL2C,CAA/C;;AAOA+M,uBAAuB,CAACT,cAAxB,GAAyC;EACrC7I,cAAc,EAAE,CAAC;IAAE+B,IAAI,EAAE1F;EAAR,CAAD,CADqB;EAErC0D,eAAe,EAAE,CAAC;IAAEgC,IAAI,EAAE1F;EAAR,CAAD;AAFoB,CAAzC;;AAIA,CAAC,YAAY;EAAE,CAAC,OAAO6F,SAAP,KAAqB,WAArB,IAAoCA,SAArC,KAAmDjD,MAAM,CAACkD,iBAAP,CAAyBmH,uBAAzB,EAAkD,CAAC;IAC7GvH,IAAI,EAAE9F,SADuG;IAE7GmG,IAAI,EAAE,CAAC;MAAEC,QAAQ,EAAE,4BAAZ;MAA0CkF,QAAQ,EAAE,8RAApD;MAAoVgB,aAAa,EAAE5L,iBAAiB,CAACmM,IAArX;MAA2XJ,eAAe,EAAE3M,uBAAuB,CAACgN,MAApa;MAA4aC,UAAU,EAAE,CACnblI,sBAAsB,CAACC,eAD4Z,EAEnbD,sBAAsB,CAACG,qBAF4Z,CAAxb;MAGIiI,IAAI,EAAE;QACL,SAAS,4BADJ;QAEL,QAAQ,QAFH;QAGL,aAAa,iBAHR;QAIL,mBAAmB,mBAJd;QAKL,wBAAwB,eALnB;QAML,wBAAwB,eANnB;QAOL,wBAAwB,gBAPnB;QAQL,wBAAwB,eARnB;QASL,WAAW,WATN;QAUL,aAAa,kBAVR;QAWL,sBAAuB;AAC3C;AACA;AACA;AACA;AACA;AACA;MAjByB,CAHV;MAqBIZ,MAAM,EAAE,CAAC,24BAAD;IArBZ,CAAD;EAFuG,CAAD,CAAlD,EAwB1D,YAAY;IAAE,OAAO,CAAC;MAAEvG,IAAI,EAAEW,iBAAR;MAA2BiG,UAAU,EAAE,CAAC;QACtD5G,IAAI,EAAElF;MADgD,CAAD;IAAvC,CAAD,EAEX;MAAEkF,IAAI,EAAE9C,MAAM,CAAC7C;IAAf,CAFW,EAEkB;MAAE2F,IAAI,EAAE3C,MAAM,CAACV;IAAf,CAFlB,EAEiD;MAAEqD,IAAI,EAAE9C,MAAM,CAACjD;IAAf,CAFjD,EAEqF;MAAE+F,IAAI,EAAEU,SAAR;MAAmBkG,UAAU,EAAE,CAAC;QAClI5G,IAAI,EAAEzF,MAD4H;QAElI8F,IAAI,EAAE,CAACG,mCAAD;MAF4H,CAAD,EAGlI;QACCR,IAAI,EAAExF;MADP,CAHkI;IAA/B,CAFrF,CAAP;EAOF,CA/B8C,EA+B5C;IAAEyD,cAAc,EAAE,CAAC;MAC7B+B,IAAI,EAAE1F;IADuB,CAAD,CAAlB;IAEV0D,eAAe,EAAE,CAAC;MAClBgC,IAAI,EAAE1F;IADY,CAAD;EAFP,CA/B4C,CAAnD;AAmCC,CAnChB;AAoCA;AACA;AACA;AACA;AACA;;;AACA,MAAMiP,4BAAN,CAAmC;;AAEnCA,4BAA4B,CAAC7J,IAA7B,GAAoC,SAAS8J,oCAAT,CAA8C5J,CAA9C,EAAiD;EAAE,OAAO,KAAKA,CAAC,IAAI2J,4BAAV,GAAP;AAAmD,CAA1I;;AACAA,4BAA4B,CAACzJ,IAA7B,GAAoC,aAAc5C,MAAM,CAAC6C,iBAAP,CAAyB;EAAEC,IAAI,EAAEuJ,4BAAR;EAAsCtJ,SAAS,EAAE,CAAC,CAAC,uBAAD,CAAD,CAAjD;EAA8EkE,SAAS,EAAE,CAAC,CAAD,EAAI,wCAAJ;AAAzF,CAAzB,CAAlD;;AACA,CAAC,YAAY;EAAE,CAAC,OAAOhE,SAAP,KAAqB,WAArB,IAAoCA,SAArC,KAAmDjD,MAAM,CAACkD,iBAAP,CAAyBmJ,4BAAzB,EAAuD,CAAC;IAClHvJ,IAAI,EAAElG,SAD4G;IAElHuG,IAAI,EAAE,CAAC;MACCC,QAAQ,EAAE,uBADX;MAEC6G,IAAI,EAAE;QACFG,KAAK,EAAE;MADL;IAFP,CAAD;EAF4G,CAAD,CAAvD,EAQ1D,IAR0D,EAQpD,IARoD,CAAnD;AAQO,CARtB;AASA;AACA;AACA;AACA;AACA;;;AACA,MAAMmC,sBAAN,CAA6B;;AAE7BA,sBAAsB,CAAC/J,IAAvB,GAA8B,SAASgK,8BAAT,CAAwC9J,CAAxC,EAA2C;EAAE,OAAO,KAAKA,CAAC,IAAI6J,sBAAV,GAAP;AAA6C,CAAxH;;AACAA,sBAAsB,CAAC3J,IAAvB,GAA8B,aAAc5C,MAAM,CAAC6C,iBAAP,CAAyB;EAAEC,IAAI,EAAEyJ,sBAAR;EAAgCxJ,SAAS,EAAE,CAAC,CAAC,iBAAD,CAAD,CAA3C;EAAkEkE,SAAS,EAAE,CAAC,CAAD,EAAI,kCAAJ;AAA7E,CAAzB,CAA5C;;AACA,CAAC,YAAY;EAAE,CAAC,OAAOhE,SAAP,KAAqB,WAArB,IAAoCA,SAArC,KAAmDjD,MAAM,CAACkD,iBAAP,CAAyBqJ,sBAAzB,EAAiD,CAAC;IAC5GzJ,IAAI,EAAElG,SADsG;IAE5GuG,IAAI,EAAE,CAAC;MACCC,QAAQ,EAAE,iBADX;MAEC6G,IAAI,EAAE;QACFG,KAAK,EAAE;MADL;IAFP,CAAD;EAFsG,CAAD,CAAjD,EAQ1D,IAR0D,EAQpD,IARoD,CAAnD;AAQO,CARtB;AAUA;AACA;AACA;AACA;;AACA;AACA;AACA;;;AACA,MAAMqC,YAAN,SAA2BjO,YAA3B,CAAwC;EACpC8D,WAAW,GAAG;IACV,MAAM,GAAGoK,SAAT;IACA,KAAKzI,WAAL,GAAmB,KAAnB;IACA;AACR;AACA;AACA;AACA;AACA;AACA;AACA;;IACQ,KAAKiB,WAAL,GAAmB,SAAnB;EACH;EACD;AACJ;AACA;AACA;;;EACkB,IAAVH,UAAU,GAAG;IAAE,OAAO,KAAKd,WAAZ;EAA0B;EAC7C;AACJ;AACA;AACA;;;EACkB,IAAVc,UAAU,CAAC4H,IAAD,EAAO;IAAE,KAAK1I,WAAL,GAAmBvF,qBAAqB,CAACiO,IAAD,CAAxC;EAAiD;EACxE;AACJ;AACA;;;EACIxH,kBAAkB,GAAG;IACjB,KAAKyH,WAAL,GAAmB,IAAIlN,eAAJ,CAAoB,KAAKmN,QAAzB,EAAmCC,QAAnC,EAAnB;EACH;EACD;AACJ;AACA;AACA;AACA;;;EACIrB,oBAAoB,CAAC5G,KAAD,EAAQ;IACxB,MAAM;MAAE0G;IAAF,IAAc1G,KAApB;IACA;;IACA,MAAMkI,OAAO,GAAG,KAAKH,WAArB;;IACA,IAAIrB,OAAO,KAAKzL,IAAhB,EAAsB;MAClBiN,OAAO,CAACC,kBAAR;MACAnI,KAAK,CAAC2G,cAAN;IACH,CAHD,MAIK,IAAID,OAAO,KAAKxL,GAAhB,EAAqB;MACtBgN,OAAO,CAACE,iBAAR;MACApI,KAAK,CAAC2G,cAAN;IACH,CAHI,MAIA;MACD,KAAKoB,WAAL,CAAiBM,SAAjB,CAA2BrI,KAA3B;IACH;EACJ;EACD;AACJ;AACA;AACA;;;EACImG,kBAAkB,CAACmC,MAAD,EAAS;IACvB,KAAKP,WAAL,CAAiBQ,gBAAjB,CAAkCD,MAAlC;EACH;;AAzDmC;;AA2DxCV,YAAY,CAACjK,IAAb,GAAoB,aAAc,YAAY;EAAE,IAAI6K,yBAAJ;EAA+B,OAAO,SAASC,oBAAT,CAA8B5K,CAA9B,EAAiC;IAAE,OAAO,CAAC2K,yBAAyB,KAAKA,yBAAyB,GAAGrN,MAAM,CAACuN,qBAAP,CAA6Bd,YAA7B,CAAjC,CAA1B,EAAwG/J,CAAC,IAAI+J,YAA7G,CAAP;EAAoI,CAA9K;AAAiL,CAA9N,EAAlC;;AACAA,YAAY,CAAC7J,IAAb,GAAoB,aAAc5C,MAAM,CAAC6C,iBAAP,CAAyB;EAAEC,IAAI,EAAE2J,YAAR;EAAsB1J,SAAS,EAAE,CAAC,CAAC,eAAD,CAAD,CAAjC;EAAsDuD,cAAc,EAAE,SAASkH,2BAAT,CAAqCjN,EAArC,EAAyCC,GAAzC,EAA8CgG,QAA9C,EAAwD;IAAE,IAAIjG,EAAE,GAAG,CAAT,EAAY;MAC/LP,MAAM,CAACyG,cAAP,CAAsBD,QAAtB,EAAgC6D,uBAAhC,EAAyD,CAAzD;IACH;;IAAC,IAAI9J,EAAE,GAAG,CAAT,EAAY;MACV,IAAImG,EAAJ;;MACA1G,MAAM,CAAC2G,cAAP,CAAsBD,EAAE,GAAG1G,MAAM,CAAC4G,WAAP,EAA3B,MAAqDpG,GAAG,CAACqM,QAAJ,GAAenG,EAApE;IACH;EAAE,CALoD;EAKlDO,SAAS,EAAE,CAAC,CAAD,EAAI,eAAJ,CALuC;EAKjBK,MAAM,EAAE;IAAEmG,KAAK,EAAE,OAAT;IAAkBvI,WAAW,EAAE,aAA/B;IAA8CH,UAAU,EAAE;EAA1D,CALS;EAKiE4C,QAAQ,EAAE,CAAC,cAAD,CAL3E;EAK6FC,QAAQ,EAAE,CAAC5H,MAAM,CAAC6H,kBAAP,CAA0B,CAAC;IAC9KC,OAAO,EAAEnG,aADqK;IAE9K+L,WAAW,EAAEjB;EAFiK,CAAD,CAA1B,CAAD,EAGjJzM,MAAM,CAACgI,0BAH0I;AALvG,CAAzB,CAAlC;AASAyE,YAAY,CAAC7C,cAAb,GAA8B;EAC1BiD,QAAQ,EAAE,CAAC;IAAE/J,IAAI,EAAEjF,eAAR;IAAyBsF,IAAI,EAAE,CAACkH,uBAAD,EAA0B;MAAEsD,WAAW,EAAE;IAAf,CAA1B;EAA/B,CAAD,CADgB;EAE1B5I,UAAU,EAAE,CAAC;IAAEjC,IAAI,EAAE1F;EAAR,CAAD,CAFc;EAG1B8H,WAAW,EAAE,CAAC;IAAEpC,IAAI,EAAE1F;EAAR,CAAD;AAHa,CAA9B;;AAKA,CAAC,YAAY;EAAE,CAAC,OAAO6F,SAAP,KAAqB,WAArB,IAAoCA,SAArC,KAAmDjD,MAAM,CAACkD,iBAAP,CAAyBuJ,YAAzB,EAAuC,CAAC;IAClG3J,IAAI,EAAElG,SAD4F;IAElGuG,IAAI,EAAE,CAAC;MACCC,QAAQ,EAAE,eADX;MAECuE,QAAQ,EAAE,cAFX;MAGCL,MAAM,EAAE,CAAC,OAAD,CAHT;MAIC0C,SAAS,EAAE,CAAC;QACJlC,OAAO,EAAEnG,aADL;QAEJ+L,WAAW,EAAEjB;MAFT,CAAD,CAJZ;MAQCxC,IAAI,EAAE;QACFG,KAAK,EAAE;MADL;IARP,CAAD;EAF4F,CAAD,CAAvC,EAc1D,IAd0D,EAcpD;IAAElF,WAAW,EAAE,CAAC;MAClBpC,IAAI,EAAE1F;IADY,CAAD,CAAf;IAEF2H,UAAU,EAAE,CAAC;MACbjC,IAAI,EAAE1F;IADO,CAAD,CAFV;IAIFyP,QAAQ,EAAE,CAAC;MACX/J,IAAI,EAAEjF,eADK;MAEXsF,IAAI,EAAE,CAACkH,uBAAD,EAA0B;QAAEsD,WAAW,EAAE;MAAf,CAA1B;IAFK,CAAD;EAJR,CAdoD,CAAnD;AAqBC,CArBhB;AAuBA;AACA;AACA;AACA;;;AACA,MAAMC,kBAAN,CAAyB;;AAEzBA,kBAAkB,CAACpL,IAAnB,GAA0B,SAASqL,0BAAT,CAAoCnL,CAApC,EAAuC;EAAE,OAAO,KAAKA,CAAC,IAAIkL,kBAAV,GAAP;AAAyC,CAA5G;;AACAA,kBAAkB,CAACE,IAAnB,GAA0B,aAAc9N,MAAM,CAAC+N,gBAAP,CAAwB;EAAEjL,IAAI,EAAE8K;AAAR,CAAxB,CAAxC;AACAA,kBAAkB,CAACI,IAAnB,GAA0B,aAAchO,MAAM,CAACiO,gBAAP,CAAwB;EAAEC,OAAO,EAAE,CAACnP,YAAD,EAAeN,kBAAf,EAAmCI,YAAnC;AAAX,CAAxB,CAAxC;;AACA,CAAC,YAAY;EAAE,CAAC,OAAOoE,SAAP,KAAqB,WAArB,IAAoCA,SAArC,KAAmDjD,MAAM,CAACkD,iBAAP,CAAyB0K,kBAAzB,EAA6C,CAAC;IACxG9K,IAAI,EAAEhF,QADkG;IAExGqF,IAAI,EAAE,CAAC;MACC+K,OAAO,EAAE,CAACnP,YAAD,EAAeN,kBAAf,EAAmCI,YAAnC,CADV;MAECsP,OAAO,EAAE,CACL1B,YADK,EAELhJ,iBAFK,EAGLyG,0BAHK,EAILG,uBAJK,EAKLkC,sBALK,EAMLF,4BANK,EAOLhK,wBAPK,CAFV;MAWC+L,YAAY,EAAE,CACV3B,YADU,EAEVhJ,iBAFU,EAGVyG,0BAHU,EAIVG,uBAJU,EAKVkC,sBALU,EAMVF,4BANU,EAOVhK,wBAPU;IAXf,CAAD;EAFkG,CAAD,CAA7C,EAuB1D,IAvB0D,EAuBpD,IAvBoD,CAAnD;AAuBO,CAvBtB;;AAwBA,CAAC,YAAY;EAAE,CAAC,OAAOgM,SAAP,KAAqB,WAArB,IAAoCA,SAArC,KAAmDrO,MAAM,CAACsO,kBAAP,CAA0BV,kBAA1B,EAA8C;IAAEQ,YAAY,EAAE,YAAY;MAAE,OAAO,CAAC3B,YAAD,EAAehJ,iBAAf,EAAkCyG,0BAAlC,EAA8DG,uBAA9D,EAAuFkC,sBAAvF,EAA+GF,4BAA/G,EAA6IhK,wBAA7I,CAAP;IAAgL,CAA9M;IAAgN6L,OAAO,EAAE,YAAY;MAAE,OAAO,CAACnP,YAAD,EAAeN,kBAAf,EAAmCI,YAAnC,CAAP;IAA0D,CAAjS;IAAmSsP,OAAO,EAAE,YAAY;MAAE,OAAO,CAAC1B,YAAD,EAAehJ,iBAAf,EAAkCyG,0BAAlC,EAA8DG,uBAA9D,EAAuFkC,sBAAvF,EAA+GF,4BAA/G,EAA6IhK,wBAA7I,CAAP;IAAgL;EAA1e,CAA9C,CAAnD;AAAilB,CAAhmB;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;AAEA,SAASuL,kBAAT,EAA6BnB,YAA7B,EAA2C9K,aAA3C,EAA0D2B,mCAA1D,EAA+FG,iBAA/F,EAAkHyG,0BAAlH,EAA8IG,uBAA9I,EAAuKgC,4BAAvK,EAAqME,sBAArM,EAA6NlK,wBAA7N,EAAuPT,gCAAvP,EAAyRC,sBAAzR"},"metadata":{},"sourceType":"module"}